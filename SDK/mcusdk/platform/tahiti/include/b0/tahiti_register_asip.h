/*Generated by reggen.py(v0.61). Please do not edit this file. Synaptics. Inc(2018)*/
/* generated by      : liche*/
/* generated from    : C:\My Project\Tahiti\reggen\Tahiti_register_spec_B0.docx*/
/* generated date    : 2021.11.02-16:19:33*/
/* Reg doc version   : b0_v25*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : hwint*/
/* Register map               : ASIP*/
/* BigEndian                  : false*/
/* LittleEndian               : true*/
/*----------------------------------------------------------------------------------------- */

#ifndef _TAHITI_REGISTER_SPEC_B0_ASIP_H_
#define _TAHITI_REGISTER_SPEC_B0_ASIP_H_

typedef volatile unsigned int  hwint32;
typedef volatile unsigned char hwint8;

#define QSPI_s_BASE_ADDRESS  0x42021400
#define QSPI_CSR_ADDRESS  0x42021400
#define TRANSFER_CTL_PRELOAD_ADDRESS  0x42021404
#define TRANSFER_CTL_PDMA_ADDRESS  0x42021408
#define TRANSFER_CTL_REGXFER_ADDRESS  0x4202140c
#define TRANSFER_CTL_XIP_ADDRESS  0x42021410
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_ADDRESS  0x42021414
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_ADDRESS  0x42021418
#define QSPI_PROGRAMMED_DMA_LEN_ADDRESS  0x4202141c
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_ADDRESS  0x42021420
#define QSPI_PROGRAMMED_DMA_INT_ADDR_ADDRESS  0x42021424
#define QSPI_XIP_XFER_CONFIG_ADDRESS  0x42021428
#define QSPI_XIP_W0_EXT_ADDR_ADDRESS  0x4202142c
#define QSPI_XIP_W0_LEN_ADDRESS  0x42021430
#define QSPI_REG_XFER_CONFIG_ADDRESS  0x42021434
#define QSPI_REG_XFER_LEN_ADDRESS  0x42021438
#define QSPI_REG_XFER_EXT_ADDR_ADDRESS  0x4202143c
#define QSPI_REG_XFER_DATA_ADDRESS  0x42021440
#define QSPI_INT_MSK_ADDRESS  0x42021444
#define CRC_EXT_ADDR_ADDRESS  0x42021448
#define CRC_DATA_LEN_ADDRESS  0x4202144c
#define CRC_CSR_ADDRESS  0x42021450
#define CRC_FEATURE_CODE_ADDRESS  0x42021454
#define UART_s_BASE_ADDRESS  0x42005c00
#define UART_REG_FFBRD_ADDRESS  0x42005c00
#define UART_REG_IEBRD_ADDRESS  0x42005c04
#define UART_REG_FFCTL_ADDRESS  0x42005c08
#define UART_REG_FRCTL_ADDRESS  0x42005c0c
#define UART_REG_STATS_ADDRESS  0x42005c14
#define UART_REG_IRLVL_ADDRESS  0x42005c18
#define UART_REG_IRCTL_ADDRESS  0x42005c20
#define UART_REG_TXSTA_ADDRESS  0x42005c28
#define UART_REG_RXSTA_ADDRESS  0x42005c2c
#define UART_REG_EXBRD_ADDRESS  0x42005c30
#define UART_REG_CTRL_ADDRESS  0x42005c3c
#define AES_s_BASE_ADDRESS  0x42007c00
#define AES_CSR_ADDRESS  0x42007c00
#define AES_IER_ADDRESS  0x42007c10
#define AES_ISR_ADDRESS  0x42007c14
#define AES_IMR_ADDRESS  0x42007c18
#define AES_ISMR_ADDRESS  0x42007c1c
#define AES_DR0_ADDRESS  0x42007c20
#define AES_DR1_ADDRESS  0x42007c24
#define AES_DR2_ADDRESS  0x42007c28
#define AES_DR3_ADDRESS  0x42007c2c
#define AES_KR0_ADDRESS  0x42007c30
#define AES_KR1_ADDRESS  0x42007c34
#define AES_KR2_ADDRESS  0x42007c38
#define AES_KR3_ADDRESS  0x42007c3c
#define AES_IVR0_ADDRESS  0x42007c40
#define AES_IVR1_ADDRESS  0x42007c44
#define AES_IVR2_ADDRESS  0x42007c48
#define AES_IVR3_ADDRESS  0x42007c4c
#define AES_DCR_ADDRESS  0x42007c80
#define GP_MUX_s_BASE_ADDRESS  0x42023400
#define GPIO_INTR_RISE_ENA_ADDRESS  0x42023400
#define GPIO_INTR_FALL_ENA_ADDRESS  0x42023404
#define GPIO_INTR_ENA_ADDRESS  0x42023408
#define GPIO_INTR_CLR_ADDRESS  0x4202340c
#define GPIO_INTR_STATUS_ADDRESS  0x42023410
#define GPIO_IN_SW_ADDRESS  0x42023414
#define TAHITI_MODE_ADDRESS  0x42023418
#define PADCTRL_GPIO0_ADDRESS  0x42023420
#define PADCTRL_GPIO1_ADDRESS  0x42023424
#define PADCTRL_GPIO2_ADDRESS  0x42023428
#define PADCTRL_GPIO3_ADDRESS  0x4202342c
#define PADCTRL_GPIO4_ADDRESS  0x42023430
#define PADCTRL_GPIO5_ADDRESS  0x42023434
#define PADCTRL_GPIO6_ADDRESS  0x42023438
#define PADCTRL_I2S1_BCLK_ADDRESS  0x4202343c
#define PADCTRL_I2S1_TX_DAT_ADDRESS  0x42023440
#define PADCTRL_I2S1_RX_DAT_ADDRESS  0x42023444
#define PADCTRL_I2S1_TX_WS_ADDRESS  0x42023448
#define PADCTRL_I2S1_RX_WS_ADDRESS  0x4202344c
#define PADCTRL_UART_TX_ADDRESS  0x42023450
#define PADCTRL_UART_RX_ADDRESS  0x42023454
#define PADCTRL_I3C_I2C_SCK_ADDRESS  0x42023458
#define PADCTRL_I3C_I2C_SDA_ADDRESS  0x4202345c
#define PADCTRL_I2C0_M_SCK_ADDRESS  0x42023460
#define PADCTRL_I2C0_M_SDA_ADDRESS  0x42023464
#define PADCTRL_I2S0_BCLK_ADDRESS  0x42023470
#define PADCTRL_I2S0_TX_WS_ADDRESS  0x42023474
#define PADCTRL_I2S0_RX_WS_ADDRESS  0x42023478
#define PADCTRL_I2S0_TX_DAT_ADDRESS  0x4202347c
#define PADCTRL_I2S0_RX_DAT_ADDRESS  0x42023480
#define PADCTRL_QSPI_CSN_ADDRESS  0x42023484
#define PADCTRL_QSPI_CLK_ADDRESS  0x42023488
#define PADCTRL_QSPI_D0_ADDRESS  0x4202348c
#define PADCTRL_QSPI_D1_ADDRESS  0x42023490
#define PADCTRL_QSPI_D2_ADDRESS  0x42023494
#define PADCTRL_QSPI_D3_ADDRESS  0x42023498
#define JTAG_CTRL_ADDRESS  0x4202349c
#define PADCTRL_DMIC0_CLK_ADDRESS  0x420234a0
#define PADCTRL_DMIC1_CLK_ADDRESS  0x420234a4
#define PADCTRL_DMIC2_CLK_ADDRESS  0x420234a8
#define PADCTRL_MIC0P_ADDRESS  0x420234ac
#define PADCTRL_MIC0N_ADDRESS  0x420234b0
#define PADCTRL_MIC1P_ADDRESS  0x420234b4
#define PADCTRL_MIC1N_ADDRESS  0x420234b8
#define PADCTRL_TEMP_SNS_ADDRESS  0x420234bc
#define PADCTRL_MB_SNS_ADDRESS  0x420234c0
#define GPTEST_MODE_CTRL_ADDRESS  0x420234c4
#define ADC_s_BASE_ADDRESS  0x42023000
#define ADC_CLK_CTRL_ADDRESS  0x42023000
#define ADC_RST_CTRL_ADDRESS  0x42023004
#define ADC_CTRL_ADDRESS  0x42023008
#define ADC_CH0_CTRL0_ADDRESS  0x4202300c
#define ADC_CH0_CTRL1_ADDRESS  0x42023010
#define ADC_CH1_CTRL0_ADDRESS  0x42023014
#define ADC_CH1_CTRL1_ADDRESS  0x42023018
#define ADC_CH2_CTRL0_ADDRESS  0x4202301c
#define ADC_CH2_CTRL1_ADDRESS  0x42023020
#define ADC_CH3_CTRL0_ADDRESS  0x42023024
#define ADC_CH3_CTRL1_ADDRESS  0x42023028
#define ADC_CH4_CTRL0_ADDRESS  0x4202302c
#define ADC_CH4_CTRL1_ADDRESS  0x42023030
#define ADC_DMIC_CTRL0_ADDRESS  0x42023034
#define ADC_DMIC_CTRL1_ADDRESS  0x42023038
#define SIDETONE_CTRL_ADDRESS  0x4202303c
#define ANC_OUT_CTRL_ADDRESS  0x42023040
#define I2S_PCM_s_BASE_ADDRESS  0x42006000
#define I2S0_PCM_REG1_ADDRESS  0x42006000
#define I2S0_PCM_REG2_ADDRESS  0x42006004
#define I2S0_PCM_REG3_ADDRESS  0x42006008
#define I2S0_PCM_REG4_ADDRESS  0x4200600c
#define I2S0_PCM_REG5_ADDRESS  0x42006010
#define I2S0_PCM_REG6_ADDRESS  0x42006014
#define I2S0_PCM_REG8_ADDRESS  0x4200601c
#define I2S0_PCM_REG9_ADDRESS  0x42006020
#define I2S0_PCM_REG10_ADDRESS  0x42006024
#define I2S0_PCM_REG12_ADDRESS  0x4200602c
#define I2S0_PCM_REG13_ADDRESS  0x42006030
#define I2S0_PCM_REG14_ADDRESS  0x42006034
#define I2S1_PCM_REG1_ADDRESS  0x42006040
#define I2S1_PCM_REG2_ADDRESS  0x42006044
#define I2S1_PCM_REG3_ADDRESS  0x42006048
#define I2S1_PCM_REG4_ADDRESS  0x4200604c
#define I2S1_PCM_REG5_ADDRESS  0x42006050
#define I2S1_PCM_REG6_ADDRESS  0x42006054
#define I2S1_PCM_REG8_ADDRESS  0x4200605c
#define I2S1_PCM_REG9_ADDRESS  0x42006060
#define I2S1_PCM_REG10_ADDRESS  0x42006064
#define I2S1_PCM_REG11_ADDRESS  0x42006068
#define I2S1_PCM_REG12_ADDRESS  0x4200606c
#define I2S1_PCM_REG13_ADDRESS  0x42006070
#define I2S1_PCM_REG14_ADDRESS  0x42006074
#define HIFI3_WRAPPER_s_BASE_ADDRESS  0x42006800
#define HIFI3_WRAPPER_HIFI3_CONTROL_ADDRESS  0x42006800
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ADDRESS  0x42006818
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_ADDRESS  0x4200681c
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_ADDRESS  0x42006820
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_ADDRESS  0x42006824
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_ADDRESS  0x42006828
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_ADDRESS  0x4200682c
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_ADDRESS  0x42006830
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_ADDRESS  0x42006834
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_ADDRESS  0x42006838
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_ADDRESS  0x4200683c
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_ADDRESS  0x42006840
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_ADDRESS  0x42006844
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_ADDRESS  0x42006860
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_ADDRESS  0x42006864
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_ADDRESS  0x42006868
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_ADDRESS  0x4200686c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_ADDRESS  0x42006870
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_ADDRESS  0x42006874
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_ADDRESS  0x42006878
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_ADDRESS  0x4200687c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_ADDRESS  0x42006880
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_ADDRESS  0x42006884
#define TIMER_s_BASE_ADDRESS  0x42007000
#define GPTC0_CONTROL_ADDRESS  0x42007000
#define GPTC0_WD_CONTROL_ADDRESS  0x42007004
#define GPTC0_INT_STAT_ADDRESS  0x42007008
#define GPTC0_TERMINAL_COUNT_ADDRESS  0x4200700c
#define GPTC0_CURRENT_COUNT_ADDRESS  0x42007010
#define WD_OUT_CONTROL_ADDRESS  0x42007014
#define GPTC1_CONTROL_ADDRESS  0x42007020
#define GPTC1_WD_CONTROL_ADDRESS  0x42007024
#define GPTC1_INT_STAT_ADDRESS  0x42007028
#define GPTC1_TERMINAL_COUNT_ADDRESS  0x4200702c
#define GPTC1_CURRENT_COUNT_ADDRESS  0x42007030
#define SPTC0_CONTROL_ADDRESS  0x42007040
#define SPTC0_INT_STAT_ADDRESS  0x42007044
#define SPTC0_TERMINAL_COUNT_ADDRESS  0x42007048
#define SPTC0_CURRENT_COUNT_ADDRESS  0x4200704c
#define SPTC0_MEASUREMENT_COUNT_ADDRESS  0x42007050
#define SPTC0_MEASUREMENT_TARGET_ADDRESS  0x42007054
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADDRESS  0x42007058
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_ADDRESS  0x4200705c
#define PMU_s_BASE_ADDRESS  0x42007400
#define PMU_CURRENT_POWER_STATE_ADDRESS  0x42007400
#define PMU_PWR_SEQ_CONTROL_ADDRESS  0x42007404
#define PMU_PMU_INTERRUPT_ADDRESS  0x42007410
#define PMU_PMU_INTERRUPT_ENABLE_ADDRESS  0x42007414
#define PMU_PORITY_CONTROL_ADDRESS  0x42007418
#define PMU_WAKE_SRC_STATUS_ADDRESS  0x4200741c
#define PMU_RCOSC_CONTROL_ADDRESS  0x42007420
#define EARLINK_TOP_COM_s_BASE_ADDRESS  0x42020000
#define EARLINK_TIMING_CTRL0_ADDRESS  0x42020000
#define EARLINK_TIMING_CTRL1_ADDRESS  0x42020004
#define EARLINK_TIMING_CTRL2_ADDRESS  0x42020008
#define EARLINK_TIMING_CTRL3_ADDRESS  0x4202000c
#define EARLINK_CMD_BUF_CTRL_ADDRESS  0x42020010
#define EARLINK_DEVICE_CTRL_ADDRESS  0x42020014
#define EARLINK_IRQ_TO_SYS_ADDRESS  0x42020018
#define EARLINK_IRQ_TO_SYS_ENABLE_ADDRESS  0x4202001c
#define EARLINK_PORT_IRQ_TO_SYS_ADDRESS  0x42020020
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_ADDRESS  0x42020024
#define EARLINK_COMMAND_CTRL_RX_BUF_ADDRESS  0x42020028
#define EARLINK_COMMAND_RX_DATA_ADDRESS  0x4202002c
#define EARLINK_PORT_CLK_ENABLE_CONTROL_ADDRESS  0x42020030
#define EARLINK_DEVICE_ENABLE_ADDRESS  0x42020034
#define EARLINK_TIMING_UPDATE_SYS_ADDRESS  0x42020038
#define EARLINK_PHY_CONIFG0_ADDRESS  0x4202003c
#define EARLINK_PHY_CONIFG1_ADDRESS  0x42020040
#define EARLINK_PHY_TEST_ADDRESS  0x42020044
#define EARLINK_TEST_BUS_CFG_ADDRESS  0x4202004c
#define EARLINK_TOP_SLV_s_BASE_ADDRESS  0x42020050
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_ADDRESS  0x42020050
#define EARLINK_IRQ_TO_MASTER_ADDRESS  0x42020054
#define EARLINK_IRQ_TO_MASTER_ENABLE_ADDRESS  0x42020058
#define EARLINK_PORT_IRQ_TO_MASTER_ADDRESS  0x4202005c
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_ADDRESS  0x42020060
#define EARLINK_TIMING_UPDATE_MASTER_ADDRESS  0x42020064
#define EARLINK_TOP_MST_s_BASE_ADDRESS  0x42020070
#define EARLINK_COMMAND_CTRL_TX_BUF_ADDRESS  0x42020070
#define EARLINK_COMMAND_TX_DATA_ADDRESS  0x42020074
#define EARLINK_AUDIO_SYNC_DIVIDER_ADDRESS  0x42020078
#define EARLINK_PORT_s_BASE_ADDRESS  0x42020100
#define BANK_SWITCH_REGISTER_PORT0_ADDRESS  0x42020100
#define ROW_COLUMN_CTRL_PORT0_ADDRESS  0x42020104
#define PORT_CTRL_PORT0_ADDRESS  0x42020108
#define PORT_ENABLE_PORT0_ADDRESS  0x4202010c
#define ROW_COLUMN_CTRL_SHADOW_PORT0_ADDRESS  0x42020110
#define PORT_CTRL_SHADOW_PORT0_ADDRESS  0x42020114
#define PORT_ENABLE_SHADOW_PORT0_ADDRESS  0x42020118
#define PORT_FIFO_FLUSH_PORT0_ADDRESS  0x4202011c
#define BULK_CRC_24B_PORT0_ADDRESS  0x42020120
#define PORT_IRQ_TO_MASTER_PORT0_ADDRESS  0x42020124
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_ADDRESS  0x42020128
#define PORT_IRQ_TO_SYS_PORT0_ADDRESS  0x4202012c
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_ADDRESS  0x42020130
#define BANK_SWITCH_REGISTER_PORT1_ADDRESS  0x42020140
#define ROW_COLUMN_CTRL_PORT1_ADDRESS  0x42020144
#define PORT_CTRL_PORT1_ADDRESS  0x42020148
#define PORT_ENABLE_PORT1_ADDRESS  0x4202014c
#define ROW_COLUMN_CTRL_SHADOW_PORT1_ADDRESS  0x42020150
#define PORT_CTRL_SHADOW_PORT1_ADDRESS  0x42020154
#define PORT_ENABLE_SHADOW_PORT1_ADDRESS  0x42020158
#define PORT_FIFO_FLUSH_PORT1_ADDRESS  0x4202015c
#define BULK_CRC_24B_PORT1_ADDRESS  0x42020160
#define PORT_IRQ_TO_MASTER_PORT1_ADDRESS  0x42020164
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_ADDRESS  0x42020168
#define PORT_IRQ_TO_SYS_PORT1_ADDRESS  0x4202016c
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_ADDRESS  0x42020170
#define BANK_SWITCH_REGISTER_PORT2_ADDRESS  0x42020180
#define ROW_COLUMN_CTRL_PORT2_ADDRESS  0x42020184
#define PORT_CTRL_PORT2_ADDRESS  0x42020188
#define PORT_ENABLE_PORT2_ADDRESS  0x4202018c
#define ROW_COLUMN_CTRL_SHADOW_PORT2_ADDRESS  0x42020190
#define PORT_CTRL_SHADOW_PORT2_ADDRESS  0x42020194
#define PORT_ENABLE_SHADOW_PORT2_ADDRESS  0x42020198
#define PORT_FIFO_FLUSH_PORT2_ADDRESS  0x4202019c
#define BULK_CRC_24B_PORT2_ADDRESS  0x420201a0
#define PORT_IRQ_TO_MASTER_PORT2_ADDRESS  0x420201a4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_ADDRESS  0x420201a8
#define PORT_IRQ_TO_SYS_PORT2_ADDRESS  0x420201ac
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_ADDRESS  0x420201b0
#define BANK_SWITCH_REGISTER_PORT3_ADDRESS  0x420201c0
#define ROW_COLUMN_CTRL_PORT3_ADDRESS  0x420201c4
#define PORT_CTRL_PORT3_ADDRESS  0x420201c8
#define PORT_ENABLE_PORT3_ADDRESS  0x420201cc
#define ROW_COLUMN_CTRL_SHADOW_PORT3_ADDRESS  0x420201d0
#define PORT_CTRL_SHADOW_PORT3_ADDRESS  0x420201d4
#define PORT_ENABLE_SHADOW_PORT3_ADDRESS  0x420201d8
#define PORT_FIFO_FLUSH_PORT3_ADDRESS  0x420201dc
#define BULK_CRC_24B_PORT3_ADDRESS  0x420201e0
#define PORT_IRQ_TO_MASTER_PORT3_ADDRESS  0x420201e4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_ADDRESS  0x420201e8
#define PORT_IRQ_TO_SYS_PORT3_ADDRESS  0x420201ec
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_ADDRESS  0x420201f0
#define BANK_SWITCH_REGISTER_PORT4_ADDRESS  0x42020200
#define ROW_COLUMN_CTRL_PORT4_ADDRESS  0x42020204
#define PORT_CTRL_PORT4_ADDRESS  0x42020208
#define PORT_ENABLE_PORT4_ADDRESS  0x4202020c
#define ROW_COLUMN_CTRL_SHADOW_PORT4_ADDRESS  0x42020210
#define PORT_CTRL_SHADOW_PORT4_ADDRESS  0x42020214
#define PORT_ENABLE_SHADOW_PORT4_ADDRESS  0x42020218
#define PORT_FIFO_FLUSH_PORT4_ADDRESS  0x4202021c
#define BULK_CRC_24B_PORT4_ADDRESS  0x42020220
#define PORT_IRQ_TO_MASTER_PORT4_ADDRESS  0x42020224
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_ADDRESS  0x42020228
#define PORT_IRQ_TO_SYS_PORT4_ADDRESS  0x4202022c
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_ADDRESS  0x42020230
#define BANK_SWITCH_REGISTER_PORT5_ADDRESS  0x42020240
#define ROW_COLUMN_CTRL_PORT5_ADDRESS  0x42020244
#define PORT_CTRL_PORT5_ADDRESS  0x42020248
#define PORT_ENABLE_PORT5_ADDRESS  0x4202024c
#define ROW_COLUMN_CTRL_SHADOW_PORT5_ADDRESS  0x42020250
#define PORT_CTRL_SHADOW_PORT5_ADDRESS  0x42020254
#define PORT_ENABLE_SHADOW_PORT5_ADDRESS  0x42020258
#define PORT_FIFO_FLUSH_PORT5_ADDRESS  0x4202025c
#define BULK_CRC_24B_PORT5_ADDRESS  0x42020260
#define PORT_IRQ_TO_MASTER_PORT5_ADDRESS  0x42020264
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_ADDRESS  0x42020268
#define PORT_IRQ_TO_SYS_PORT5_ADDRESS  0x4202026c
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_ADDRESS  0x42020270
#define BANK_SWITCH_REGISTER_PORT6_ADDRESS  0x42020280
#define ROW_COLUMN_CTRL_PORT6_ADDRESS  0x42020284
#define PORT_CTRL_PORT6_ADDRESS  0x42020288
#define PORT_ENABLE_PORT6_ADDRESS  0x4202028c
#define ROW_COLUMN_CTRL_SHADOW_PORT6_ADDRESS  0x42020290
#define PORT_CTRL_SHADOW_PORT6_ADDRESS  0x42020294
#define PORT_ENABLE_SHADOW_PORT6_ADDRESS  0x42020298
#define PORT_FIFO_FLUSH_PORT6_ADDRESS  0x4202029c
#define BULK_CRC_24B_PORT6_ADDRESS  0x420202a0
#define PORT_IRQ_TO_MASTER_PORT6_ADDRESS  0x420202a4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_ADDRESS  0x420202a8
#define PORT_IRQ_TO_SYS_PORT6_ADDRESS  0x420202ac
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_ADDRESS  0x420202b0
#define BANK_SWITCH_REGISTER_PORT7_ADDRESS  0x420202c0
#define ROW_COLUMN_CTRL_PORT7_ADDRESS  0x420202c4
#define PORT_CTRL_PORT7_ADDRESS  0x420202c8
#define PORT_ENABLE_PORT7_ADDRESS  0x420202cc
#define ROW_COLUMN_CTRL_SHADOW_PORT7_ADDRESS  0x420202d0
#define PORT_CTRL_SHADOW_PORT7_ADDRESS  0x420202d4
#define PORT_ENABLE_SHADOW_PORT7_ADDRESS  0x420202d8
#define PORT_FIFO_FLUSH_PORT7_ADDRESS  0x420202dc
#define BULK_CRC_24B_PORT7_ADDRESS  0x420202e0
#define PORT_IRQ_TO_MASTER_PORT7_ADDRESS  0x420202e4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_ADDRESS  0x420202e8
#define PORT_IRQ_TO_SYS_PORT7_ADDRESS  0x420202ec
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_ADDRESS  0x420202f0
#define BANK_SWITCH_REGISTER_PORT8_ADDRESS  0x42020300
#define ROW_COLUMN_CTRL_PORT8_ADDRESS  0x42020304
#define PORT_CTRL_PORT8_ADDRESS  0x42020308
#define PORT_ENABLE_PORT8_ADDRESS  0x4202030c
#define ROW_COLUMN_CTRL_SHADOW_PORT8_ADDRESS  0x42020310
#define PORT_CTRL_SHADOW_PORT8_ADDRESS  0x42020314
#define PORT_ENABLE_SHADOW_PORT8_ADDRESS  0x42020318
#define PORT_FIFO_FLUSH_PORT8_ADDRESS  0x4202031c
#define BULK_CRC_24B_PORT8_ADDRESS  0x42020320
#define PORT_IRQ_TO_MASTER_PORT8_ADDRESS  0x42020324
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_ADDRESS  0x42020328
#define PORT_IRQ_TO_SYS_PORT8_ADDRESS  0x4202032c
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_ADDRESS  0x42020330
#define BANK_SWITCH_REGISTER_PORT9_ADDRESS  0x42020340
#define ROW_COLUMN_CTRL_PORT9_ADDRESS  0x42020344
#define PORT_CTRL_PORT9_ADDRESS  0x42020348
#define PORT_ENABLE_PORT9_ADDRESS  0x4202034c
#define ROW_COLUMN_CTRL_SHADOW_PORT9_ADDRESS  0x42020350
#define PORT_CTRL_SHADOW_PORT9_ADDRESS  0x42020354
#define PORT_ENABLE_SHADOW_PORT9_ADDRESS  0x42020358
#define PORT_FIFO_FLUSH_PORT9_ADDRESS  0x4202035c
#define BULK_CRC_24B_PORT9_ADDRESS  0x42020360
#define PORT_IRQ_TO_MASTER_PORT9_ADDRESS  0x42020364
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_ADDRESS  0x42020368
#define PORT_IRQ_TO_SYS_PORT9_ADDRESS  0x4202036c
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_ADDRESS  0x42020370
#define BANK_SWITCH_REGISTER_PORT10_ADDRESS  0x42020380
#define ROW_COLUMN_CTRL_PORT10_ADDRESS  0x42020384
#define PORT_CTRL_PORT10_ADDRESS  0x42020388
#define PORT_ENABLE_PORT10_ADDRESS  0x4202038c
#define ROW_COLUMN_CTRL_SHADOW_PORT10_ADDRESS  0x42020390
#define PORT_CTRL_SHADOW_PORT10_ADDRESS  0x42020394
#define PORT_ENABLE_SHADOW_PORT10_ADDRESS  0x42020398
#define PORT_FIFO_FLUSH_PORT10_ADDRESS  0x4202039c
#define BULK_CRC_24B_PORT10_ADDRESS  0x420203a0
#define PORT_IRQ_TO_MASTER_PORT10_ADDRESS  0x420203a4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_ADDRESS  0x420203a8
#define PORT_IRQ_TO_SYS_PORT10_ADDRESS  0x420203ac
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_ADDRESS  0x420203b0
#define BANK_SWITCH_REGISTER_PORT11_ADDRESS  0x420203c0
#define ROW_COLUMN_CTRL_PORT11_ADDRESS  0x420203c4
#define PORT_CTRL_PORT11_ADDRESS  0x420203c8
#define PORT_ENABLE_PORT11_ADDRESS  0x420203cc
#define ROW_COLUMN_CTRL_SHADOW_PORT11_ADDRESS  0x420203d0
#define PORT_CTRL_SHADOW_PORT11_ADDRESS  0x420203d4
#define PORT_ENABLE_SHADOW_PORT11_ADDRESS  0x420203d8
#define PORT_FIFO_FLUSH_PORT11_ADDRESS  0x420203dc
#define BULK_CRC_24B_PORT11_ADDRESS  0x420203e0
#define PORT_IRQ_TO_MASTER_PORT11_ADDRESS  0x420203e4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_ADDRESS  0x420203e8
#define PORT_IRQ_TO_SYS_PORT11_ADDRESS  0x420203ec
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_ADDRESS  0x420203f0
#define BANK_SWITCH_REGISTER_PORT12_ADDRESS  0x42020400
#define ROW_COLUMN_CTRL_PORT12_ADDRESS  0x42020404
#define PORT_CTRL_PORT12_ADDRESS  0x42020408
#define PORT_ENABLE_PORT12_ADDRESS  0x4202040c
#define ROW_COLUMN_CTRL_SHADOW_PORT12_ADDRESS  0x42020410
#define PORT_CTRL_SHADOW_PORT12_ADDRESS  0x42020414
#define PORT_ENABLE_SHADOW_PORT12_ADDRESS  0x42020418
#define PORT_FIFO_FLUSH_PORT12_ADDRESS  0x4202041c
#define BULK_CRC_24B_PORT12_ADDRESS  0x42020420
#define PORT_IRQ_TO_MASTER_PORT12_ADDRESS  0x42020424
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_ADDRESS  0x42020428
#define PORT_IRQ_TO_SYS_PORT12_ADDRESS  0x4202042c
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_ADDRESS  0x42020430
#define BANK_SWITCH_REGISTER_PORT13_ADDRESS  0x42020440
#define ROW_COLUMN_CTRL_PORT13_ADDRESS  0x42020444
#define PORT_CTRL_PORT13_ADDRESS  0x42020448
#define PORT_ENABLE_PORT13_ADDRESS  0x4202044c
#define ROW_COLUMN_CTRL_SHADOW_PORT13_ADDRESS  0x42020450
#define PORT_CTRL_SHADOW_PORT13_ADDRESS  0x42020454
#define PORT_ENABLE_SHADOW_PORT13_ADDRESS  0x42020458
#define PORT_FIFO_FLUSH_PORT13_ADDRESS  0x4202045c
#define BULK_CRC_24B_PORT13_ADDRESS  0x42020460
#define PORT_IRQ_TO_MASTER_PORT13_ADDRESS  0x42020464
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_ADDRESS  0x42020468
#define PORT_IRQ_TO_SYS_PORT13_ADDRESS  0x4202046c
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_ADDRESS  0x42020470
#define BANK_SWITCH_REGISTER_PORT14_ADDRESS  0x42020480
#define ROW_COLUMN_CTRL_PORT14_ADDRESS  0x42020484
#define PORT_CTRL_PORT14_ADDRESS  0x42020488
#define PORT_ENABLE_PORT14_ADDRESS  0x4202048c
#define ROW_COLUMN_CTRL_SHADOW_PORT14_ADDRESS  0x42020490
#define PORT_CTRL_SHADOW_PORT14_ADDRESS  0x42020494
#define PORT_ENABLE_SHADOW_PORT14_ADDRESS  0x42020498
#define PORT_FIFO_FLUSH_PORT14_ADDRESS  0x4202049c
#define BULK_CRC_24B_PORT14_ADDRESS  0x420204a0
#define PORT_IRQ_TO_MASTER_PORT14_ADDRESS  0x420204a4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_ADDRESS  0x420204a8
#define PORT_IRQ_TO_SYS_PORT14_ADDRESS  0x420204ac
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_ADDRESS  0x420204b0
#define BANK_SWITCH_REGISTER_PORT15_ADDRESS  0x420204c0
#define ROW_COLUMN_CTRL_PORT15_ADDRESS  0x420204c4
#define PORT_CTRL_PORT15_ADDRESS  0x420204c8
#define PORT_ENABLE_PORT15_ADDRESS  0x420204cc
#define ROW_COLUMN_CTRL_SHADOW_PORT15_ADDRESS  0x420204d0
#define PORT_CTRL_SHADOW_PORT15_ADDRESS  0x420204d4
#define PORT_ENABLE_SHADOW_PORT15_ADDRESS  0x420204d8
#define PORT_FIFO_FLUSH_PORT15_ADDRESS  0x420204dc
#define BULK_CRC_24B_PORT15_ADDRESS  0x420204e0
#define PORT_IRQ_TO_MASTER_PORT15_ADDRESS  0x420204e4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_ADDRESS  0x420204e8
#define PORT_IRQ_TO_SYS_PORT15_ADDRESS  0x420204ec
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_ADDRESS  0x420204f0
#define CLOCK_RESET_PORT_s_BASE_ADDRESS  0x42007808
#define CR_RST_SFT_0_ADDRESS  0x42007808
#define CR_RST_SFT_1_ADDRESS  0x4200780c
#define CR_RST_SFT_2_ADDRESS  0x42007810
#define CR_RST_CON_0_ADDRESS  0x42007814
#define CR_CLK_MAIN_ADDRESS  0x42007818
#define CR_CLK_PMU_ADDRESS  0x4200781c
#define CR_CLK_ARM_32K_ADDRESS  0x42007820
#define CR_CLK_EARLINK_ADDRESS  0x42007824
#define CR_CLK_I2S0_ADDRESS  0x42007828
#define CR_CLK_I2S1_ADDRESS  0x4200782c
#define CR_CLK_I2S_MST_IO_ADDRESS  0x42007830
#define CR_CLK_ADC_ADDRESS  0x42007834
#define CR_CLK_DAC_ADDRESS  0x42007838
#define CR_CLK_DMIC_ADDRESS  0x4200783c
#define CR_CLK_DSP_0_ADDRESS  0x42007840
#define CR_CLK_HIFI3_ADDRESS  0x42007844
#define CR_CLK_SSE200_ADDRESS  0x4200784c
#define CR_CLK_AHB_APB_ADDRESS  0x42007850
#define CR_CLK_DMA_ADDRESS  0x42007854
#define CR_CLK_AES_ADDRESS  0x42007858
#define CR_CLK_SPI_ADDRESS  0x4200785c
#define CR_CLK_QSPI_ADDRESS  0x42007860
#define CR_CLK_TIMER0_ADDRESS  0x42007864
#define CR_CLK_TIMER1_ADDRESS  0x42007868
#define CR_CLK_TIMER2_ADDRESS  0x4200786c
#define CR_CLK_PWM_ADDRESS  0x42007870
#define CR_CLK_I2C_ADDRESS  0x42007874
#define CR_CLK_MAIL_BOX_ADDRESS  0x42007878
#define CR_CLK_I3C_ADDRESS  0x4200787c
#define CR_CLK_UART_ADDRESS  0x42007880
#define CR_CLK_ACL_ADDRESS  0x42007884
#define CR_CLK_ADC_ANA_ADDRESS  0x42007888
#define CR_CLK_DSP_1_ADDRESS  0x4200788c
#define CR_DET_I2S_ON_INT_ADDRESS  0x42007890
#define CR_DET_I2S_OFF_INT_ADDRESS  0x42007894
#define CR_DET_I2S_ON_CFG_ADDRESS  0x42007898
#define CR_DET_I2S_OFF_CFG_ADDRESS  0x4200789c
#define CR_DET_I2S_CFG_ADDRESS  0x420078a0
#define CR_CLK_MADC_ADDRESS  0x420078a4
#define CR_FAST_BOOT_ADDRESS  0x420078a8
#define CR_PSIST_MES_ARM_ADDRESS  0x420078ac
#define CR_PSIST_MES_ARM_1_ADDRESS  0x420078b0
#define CR_SOFTBACKDOOR_ADDRESS  0x420078b4
#define CR_RX_LPOSC_ADDRESS  0x420078b8
#define CR_CLK_TEST_OBSV_ADDRESS  0x420078bc
#define CR_RST_ELINK_ADDRESS  0x420078c0
#define CR_CLK_DIVIDER_EN_ADDRESS  0x420078c4
#define CR_CLK_ISP_ADDRESS  0x420078c8
#define DAC_s_BASE_ADDRESS  0x42022c00
#define DAC_CFG_REG0_ADDRESS  0x42022c00
#define DAC_CFG_REG1_ADDRESS  0x42022c04
#define DAC_CFG_REG2_ADDRESS  0x42022c08
#define DAC_CFG_REG3_ADDRESS  0x42022c0c
#define DAC_CFG_REG4_ADDRESS  0x42022c10
#define DAC_CFG_REG5_ADDRESS  0x42022c14
#define DAC_CFG_REG6_ADDRESS  0x42022c18
#define DAC_CFG_REG7_ADDRESS  0x42022c1c
#define DAC_CFG_REG8_ADDRESS  0x42022c20
#define DAC_CFG_REG9_ADDRESS  0x42022c24
#define DAC_CFG_REG10_ADDRESS  0x42022c28
#define DAC_CFG_REG11_ADDRESS  0x42022c2c
#define DAC_CFG_REG12_ADDRESS  0x42022c30
#define DAC_CFG_REG13_ADDRESS  0x42022c34
#define DAC_CFG_REG14_ADDRESS  0x42022c38
#define DAC_CFG_REG15_ADDRESS  0x42022c3c
#define ACL_s_BASE_ADDRESS  0x42008000
#define ACL_REG0_ADDRESS  0x42008000
#define ACL_REG1_ADDRESS  0x42008004
#define ACL_REG2_ADDRESS  0x42008008
#define ACL_REG3_ADDRESS  0x4200800c
#define TX_TSTCTRL_1_CORE_ADDRESS  0x42008010
#define TX_TSTCTRL_2_CORE_ADDRESS  0x42008014
#define TX_TSTCTRL_3_CORE_ADDRESS  0x42008018
#define TX_TSTCTRL_4_CORE_ADDRESS  0x4200801c
#define TX_TSTCTRL_5_CORE_ADDRESS  0x42008020
#define E_LINK_PLL_CTRL0_ADDRESS  0x42008040
#define E_LINK_PLL_CTRL1_ADDRESS  0x42008044
#define SYS_PLL_CTRL0_ADDRESS  0x42008060
#define SYS_PLL_CTRL1_ADDRESS  0x42008064
#define BGREF_TSTCTRL_1_CORE_ADDRESS  0x42008080
#define BGREF_TSTCTRL_2_CORE_ADDRESS  0x42008084
#define POWERTOP_TSTCTRL_1_CORE_ADDRESS  0x4200808c
#define POWERTOP_TSTCTRL_2_CORE_ADDRESS  0x42008090
#define POWERTOP_TSTCTRL_3_CORE_ADDRESS  0x42008094
#define MADC_TSTCTRL_1_CORE_ADDRESS  0x42008098
#define MADC_TSTCTRL_2_CORE_ADDRESS  0x4200809c
#define TX_RCCAL_OUT_CORE_ADDRESS  0x420080a0
#define LPRCOSC_FSEL_CORE_ADDRESS  0x420080a4
#define RX_MIC_RC_TUNING_ADDRESS  0x420080c0
#define RX_MICBIAS_SET_ADDRESS  0x420080c4
#define RX_MICBIAS_PDB_HP_CTRL_ADDRESS  0x420080c8
#define RX_MIC0_TSTCTRL_1_CORE_ADDRESS  0x420080cc
#define RX_MIC1_TSTCTRL_1_CORE_ADDRESS  0x420080d0
#define RX_MIC2_TSTCTRL_1_CORE_ADDRESS  0x420080d4
#define RX_MIC3_TSTCTRL_1_CORE_ADDRESS  0x420080d8
#define RX_MIC4_TSTCTRL_1_CORE_ADDRESS  0x420080dc
#define RX_MIC0_TSTCTRL_2_CORE_ADDRESS  0x420080e0
#define RX_MIC1_TSTCTRL_2_CORE_ADDRESS  0x420080e4
#define RX_MIC2_TSTCTRL_2_CORE_ADDRESS  0x420080e8
#define RX_MIC3_TSTCTRL_2_CORE_ADDRESS  0x420080ec
#define RX_MIC4_TSTCTRL_2_CORE_ADDRESS  0x420080f0
#define RX_TSTCTRL_1_CORE_ADDRESS  0x420080f4
#define RX_TSTCTRL_2_CORE_ADDRESS  0x420080f8
#define RX_TSTCTRL_3_CORE_ADDRESS  0x420080fc
#define RX_MIC4_SAMPLE_FREQ_SET_ADDRESS  0x42008100
#define RX_GAIN_MIC_CORE_ADDRESS  0x42008104
#define RX_UNMUTE_MIC_CORE_ADDRESS  0x42008108
#define RX_TEST_CORE_R_ADDRESS  0x4200810c
#define STDRCOSC_CAL_CTRL_ADDRESS  0x42008110
#define STDRCOSC_CAL_FORCE_ADDRESS  0x42008114
#define STDRCOSC_CAL_VAL_ADDRESS  0x42008118
#define PGOOD_STATE_ADDRESS  0x4200811c
#define POWER_MADC_CTL_ADDRESS  0x42008120
#define POWER_MADC_B_STS0_ADDRESS  0x42008124
#define POWER_MADC_B_STS1_ADDRESS  0x42008140
#define POWER_MADC_B_STS2_ADDRESS  0x42008144
#define POWER_MADC_B_STS3_ADDRESS  0x42008148
#define POWER_LPRCOSC_TRIM_SW_CTL_ADDRESS  0x4200814c
#define DSP_GLB_s_BASE_ADDRESS  0x400000
#define DSP_CORE_GCK_CTL_ADDRESS  0x400000
#define MEM_BANK_CLK_CTRL_ADDRESS  0x400004
#define DSP_RST_CTRL_ADDRESS  0x400008
#define LLR_CONGESTION_ST_ADDRESS  0x40000c
#define DSP_ILLEGAL_ACCESS_ADDRESS  0x400010
#define ARM_LOCK_ADDRESS  0x400014
#define HIFI3_LOCK_ADDRESS  0x400018
#define CAPE_A_LOCK_ADDRESS  0x40001c
#define CAPE_B_LOCK_ADDRESS  0x400020
#define LLE_A_LOCK_ADDRESS  0x400024
#define LLE_B_LOCK_ADDRESS  0x400028
#define GLOBAL_LOCK_INTR_ENABLE_ADDRESS  0x40005c
#define GLOBAL_LOCK_INTR_STS_ADDRESS  0x400060
#define GLOBAL_LOCK_INTR_CLR_ADDRESS  0x400064
#define GLOBAL_LOCK_CFG_ADDRESS  0x400068
#define LLEA_SLEEP_TYPE_OUT_ADDRESS  0x40006c
#define LLEB_SLEEP_TYPE_OUT_ADDRESS  0x400070
#define CAPA_SLEEP_TYPE_OUT_ADDRESS  0x400074
#define CAPB_SLEEP_TYPE_OUT_ADDRESS  0x400078
#define CAPEA_RAM0_MISC_CTRL_ADDRESS  0x400080
#define CAPEA_RAM5_MISC_CTRL_ADDRESS  0x400084
#define CAPEB_RAM0_MISC_CTRL_ADDRESS  0x400088
#define CAPEB_RAM6_MISC_CTRL_ADDRESS  0x400090
#define LLEA_RAM0_MISC_CTRL_ADDRESS  0x400094
#define LLEB_RAM0_MISC_CTRL_ADDRESS  0x40009c
#define LLEB_RAM4_MISC_CTRL_ADDRESS  0x4000a4
#define VECT_RAM0_MISC_CTRL_ADDRESS  0x4000a8
#define ASIP_CORE_ID_ADDRESS  0x4000b0
#define LLR_ANC_LTCY_CFG1_ADDRESS  0x4003c0
#define LLR_ANC_LTCY_CFG2_ADDRESS  0x4003c4
#define LLR_ANC_MIS_SMP_CHAN0_ADDRESS  0x4003c8
#define LLR_ANC_MIS_SMP_CHAN1_ADDRESS  0x4003cc
#define LLR_ANC_PLYBCK_SYNC_CTL_ADDRESS  0x4003d0
#define LLR_ANC_SMP_MIS_INT_ADDRESS  0x4003d8
#define LLR_LL_DECIM_INT_ADDRESS  0x4003e0
#define LLR_ELK_IN_INT_ADDRESS  0x4003e8
#define LLR_ANC_BYPASS_CTRL_ADDRESS  0x4003f0
#define DSP_LOCK_CTRL_s_BASE_ADDRESS  0x4200002c
#define GLOBAL_LOCK_SET_AHB_ADDRESS  0x4200002c
#define GLOBAL_LOCK_SET_HIFI3_ADDRESS  0x42000030
#define GLOBAL_LOCK_SET_CAPEA_ADDRESS  0x42000034
#define GLOBAL_LOCK_SET_CAPEB_ADDRESS  0x42000038
#define GLOBAL_LOCK_SET_LLEA_ADDRESS  0x4200003c
#define GLOBAL_LOCK_SET_LLEB_ADDRESS  0x42000040
#define GLOBAL_LOCK_CLR_AHB_ADDRESS  0x42000044
#define GLOBAL_LOCK_CLR_HIFI3_ADDRESS  0x42000048
#define GLOBAL_LOCK_CLR_CAPEA_ADDRESS  0x4200004c
#define GLOBAL_LOCK_CLR_CAPEB_ADDRESS  0x42000050
#define GLOBAL_LOCK_CLR_LLEA_ADDRESS  0x42000054
#define GLOBAL_LOCK_CLR_LLEB_ADDRESS  0x42000058
#define DSP_INT_GLBCTRL_s_BASE_ADDRESS  0x400100
#define INT_DIS_REG_L_ADDRESS  0x400100
#define INT_DIS_REG_H_ADDRESS  0x400104
#define DSP_INT_CORECTRL_AHBVIEW_s_BASE_ADDRESS  0x42000110
#define INT_ASSIGN_ASIP_L_LLEA_ADDRESS  0x42000110
#define INT_ASSIGN_ASIP_H_LLEA_ADDRESS  0x42000114
#define INT_STS_ASIP_L_R_LLEA_ADDRESS  0x42000118
#define INT_STS_ASIP_H_R_LLEA_ADDRESS  0x4200011c
#define INT_EN0_ASIP_L_LLEA_ADDRESS  0x42000120
#define INT_EN0_ASIP_H_LLEA_ADDRESS  0x42000124
#define INT_EN1_ASIP_L_LLEA_ADDRESS  0x42000128
#define INT_EN1_ASIP_H_LLEA_ADDRESS  0x4200012c
#define INT_EN2_ASIP_L_LLEA_ADDRESS  0x42000130
#define INT_EN2_ASIP_H_LLEA_ADDRESS  0x42000134
#define INT_EN3_ASIP_L_LLEA_ADDRESS  0x42000138
#define INT_EN3_ASIP_H_LLEA_ADDRESS  0x4200013c
#define SW_WAKEUP_LLEA_ADDRESS  0x42000140
#define SW_WAKE_MODE_LLEA_ADDRESS  0x42000148
#define DSP_CORE_SFT_INT_LLEA_ADDRESS  0x42000150
#define INT_ASSIGN_ASIP_L_LLEB_ADDRESS  0x42000190
#define INT_ASSIGN_ASIP_H_LLEB_ADDRESS  0x42000194
#define INT_STS_ASIP_L_R_LLEB_ADDRESS  0x42000198
#define INT_STS_ASIP_H_R_LLEB_ADDRESS  0x4200019c
#define INT_EN0_ASIP_L_LLEB_ADDRESS  0x420001a0
#define INT_EN0_ASIP_H_LLEB_ADDRESS  0x420001a4
#define INT_EN1_ASIP_L_LLEB_ADDRESS  0x420001a8
#define INT_EN1_ASIP_H_LLEB_ADDRESS  0x420001ac
#define INT_EN2_ASIP_L_LLEB_ADDRESS  0x420001b0
#define INT_EN2_ASIP_H_LLEB_ADDRESS  0x420001b4
#define INT_EN3_ASIP_L_LLEB_ADDRESS  0x420001b8
#define INT_EN3_ASIP_H_LLEB_ADDRESS  0x420001bc
#define SW_WAKEUP_LLEB_ADDRESS  0x420001c0
#define SW_WAKE_MODE_LLEB_ADDRESS  0x420001c8
#define DSP_CORE_SFT_INT_LLEB_ADDRESS  0x420001d0
#define INT_ASSIGN_ASIP_L_CAPEA_ADDRESS  0x42000210
#define INT_ASSIGN_ASIP_H_CAPEA_ADDRESS  0x42000214
#define INT_STS_ASIP_L_R_CAPEA_ADDRESS  0x42000218
#define INT_STS_ASIP_H_R_CAPEA_ADDRESS  0x4200021c
#define INT_EN0_ASIP_L_CAPEA_ADDRESS  0x42000220
#define INT_EN0_ASIP_H_CAPEA_ADDRESS  0x42000224
#define INT_EN1_ASIP_L_CAPEA_ADDRESS  0x42000228
#define INT_EN1_ASIP_H_CAPEA_ADDRESS  0x4200022c
#define INT_EN2_ASIP_L_CAPEA_ADDRESS  0x42000230
#define INT_EN2_ASIP_H_CAPEA_ADDRESS  0x42000234
#define INT_EN3_ASIP_L_CAPEA_ADDRESS  0x42000238
#define INT_EN3_ASIP_H_CAPEA_ADDRESS  0x4200023c
#define SW_WAKEUP_CAPEA_ADDRESS  0x42000240
#define SW_WAKE_MODE_CAPEA_ADDRESS  0x42000248
#define DSP_CORE_SFT_INT_CAPEA_ADDRESS  0x42000250
#define INT_ASSIGN_ASIP_L_CAPEB_ADDRESS  0x42000290
#define INT_ASSIGN_ASIP_H_CAPEB_ADDRESS  0x42000294
#define INT_STS_ASIP_L_R_CAPEB_ADDRESS  0x42000298
#define INT_STS_ASIP_H_R_CAPEB_ADDRESS  0x4200029c
#define INT_EN0_ASIP_L_CAPEB_ADDRESS  0x420002a0
#define INT_EN0_ASIP_H_CAPEB_ADDRESS  0x420002a4
#define INT_EN1_ASIP_L_CAPEB_ADDRESS  0x420002a8
#define INT_EN1_ASIP_H_CAPEB_ADDRESS  0x420002ac
#define INT_EN2_ASIP_L_CAPEB_ADDRESS  0x420002b0
#define INT_EN2_ASIP_H_CAPEB_ADDRESS  0x420002b4
#define INT_EN3_ASIP_L_CAPEB_ADDRESS  0x420002b8
#define INT_EN3_ASIP_H_CAPEB_ADDRESS  0x420002bc
#define SW_WAKEUP_CAPEB_ADDRESS  0x420002c0
#define SW_WAKE_MODE_CAPEB_ADDRESS  0x420002c8
#define DSP_CORE_SFT_INT_CAPEB_ADDRESS  0x420002d0
#define DSP_INT_CORECTRL_ASIPVIEW_s_BASE_ADDRESS  0x400110
#define INT_ASSIGN_ASIP_L_ADDRESS  0x400110
#define INT_ASSIGN_ASIP_H_ADDRESS  0x400114
#define INT_STS_ASIP_L_R_ADDRESS  0x400118
#define INT_STS_ASIP_H_R_ADDRESS  0x40011c
#define INT_EN0_ASIP_L_ADDRESS  0x400120
#define INT_EN0_ASIP_H_ADDRESS  0x400124
#define INT_EN1_ASIP_L_ADDRESS  0x400128
#define INT_EN1_ASIP_H_ADDRESS  0x40012c
#define INT_EN2_ASIP_L_ADDRESS  0x400130
#define INT_EN2_ASIP_H_ADDRESS  0x400134
#define INT_EN3_ASIP_L_ADDRESS  0x400138
#define INT_EN3_ASIP_H_ADDRESS  0x40013c
#define SW_WAKEUP_ADDRESS  0x400140
#define SW_WAKE_MODE_ADDRESS  0x400148
#define DSP_CORE_SFT_INT_ADDRESS  0x400150
#define DSP_TIMER_s_BASE_ADDRESS  0x400300
#define TIMER_CLK_CTL_ADDRESS  0x400300
#define TIMER_CTL_ADDRESS  0x400308
#define WTD0_CTL_ADDRESS  0x400310
#define WTD1_CTL_ADDRESS  0x400318
#define WTD2_CTL_ADDRESS  0x400320
#define WTD3_CTL_ADDRESS  0x400328
#define TIMER_CNT0_ADDRESS  0x400330
#define TIMER_LIMT0_ADDRESS  0x400338
#define TIMER_CNT1_ADDRESS  0x400340
#define TIMER_LIMT1_ADDRESS  0x400348
#define TIMER_CNT2_ADDRESS  0x400350
#define TIMER_LIMT2_ADDRESS  0x400358
#define TIMER_CNT3_ADDRESS  0x400360
#define TIMER_LIMT3_ADDRESS  0x400368
#define TIMER_CNT4_ADDRESS  0x400370
#define TIMER_LIMT4_ADDRESS  0x400378
#define TIMER_CNT5_ADDRESS  0x400380
#define TIMER_LIMT5_ADDRESS  0x400388
#define TIMER_CNT6_ADDRESS  0x400390
#define TIMER_LIMT6_ADDRESS  0x400398
#define TIMER_CNT7_ADDRESS  0x4003a0
#define TIMER_LIMT7_ADDRESS  0x4003a8
#define TIMER_INTERRUPT_ADDRESS  0x4003b0
#define DSP_LLR_IO_s_BASE_ADDRESS  0x300000
#define ANC_OUT_CH0_ADDRESS  0x300000
#define ANC_OUT_CH1_ADDRESS  0x300004
#define LL_DECIM_IN_CH0_ADDRESS  0x300030
#define LL_DECIM_IN_CH1_ADDRESS  0x300031
#define LL_DECIM_IN_CH2_ADDRESS  0x300032
#define LL_DECIM_IN_CH3_ADDRESS  0x300033
#define LL_INTERPO_IN_CH0_ADDRESS  0x300060
#define LL_INTERPO_IN_CH1_ADDRESS  0x300061
#define LL_ELINK_IN_CH0_ADDRESS  0x300090
#define LL_ELINK_IN_CH1_ADDRESS  0x300091
#define SSE200_MISC_s_BASE_ADDRESS  0x42033000
#define ARM_MEM_MISC_CTRL0_ADDRESS  0x42033000
#define ARM_MEM_MISC_CTRL8_ADDRESS  0x42033004
#define QSPI_MISC_OPTION_ADDRESS  0x42033008
#define SSE200_PCLK_GATE_ADDRESS  0x4203300c
#define RRAM_s_BASE_ADDRESS  0x42021810
#define RRAM_CFG_DATA_L_ADDRESS  0x42021810
#define RRAM_CFG_DATA_H_ADDRESS  0x42021814
#define I2C_SLAVE_s_BASE_ADDRESS  0x42001400
#define I2C_SLAVE_BASE_ADDR_ADDRESS  0x42001400
#define I2C_SLAVE_LIMIT_ADDR_ADDRESS  0x42001404
#define I2C_SLAVE_ZERO_ADDR_ADDRESS  0x42001408
#define I2C_SLAVE_LIMIT_INTERRUPT_ADDRESS  0x4200140c
#define I2C_SLAVE_ADDR_ADDRESS  0x42001410
#define I2C_SLAVE_OFFSET_SIZE_ADDRESS  0x42001414
#define I2C_MASTER_s_BASE_ADDRESS  0x42001800
#define RA_I2CM_CTL_ADDRESS  0x42001800
#define RA_I2CM_STAT_ADDRESS  0x42001804
#define RA_I2CM_NAK_FFLVL_ADDRESS  0x42001808
#define RA_I2CM_XFER_ADDRESS  0x4200180c
#define RA_I2CM_XCNT_ADDRESS  0x42001810
#define RA_I2CM_CTL_2_ADDRESS  0x42001814
#define FLEXI_DMA0_s_BASE_ADDRESS  0x42000800
#define FLEXI_DMA0_ENABLE_ADDRESS  0x42000800
#define FLEXI_DMA0_SRC_ADDR_CH0_ADDRESS  0x42000810
#define FLEXI_DMA0_DST_ADDR_CH0_ADDRESS  0x42000814
#define FLEXI_DMA0_CTRL_CH0_ADDRESS  0x42000818
#define FLEXI_DMA0_SRC_ADDR_CH1_ADDRESS  0x42000820
#define FLEXI_DMA0_DST_ADDR_CH1_ADDRESS  0x42000824
#define FLEXI_DMA0_CTRL_CH1_ADDRESS  0x42000828
#define FLEXI_DMA0_SRC_ADDR_CH2_ADDRESS  0x42000830
#define FLEXI_DMA0_DST_ADDR_CH2_ADDRESS  0x42000834
#define FLEXI_DMA0_CTRL_CH2_ADDRESS  0x42000838
#define FLEXI_DMA0_SRC_ADDR_CH3_ADDRESS  0x42000840
#define FLEXI_DMA0_DST_ADDR_CH3_ADDRESS  0x42000844
#define FLEXI_DMA0_CTRL_CH3_ADDRESS  0x42000848
#define FLEXI_DMA0_SRC_ADDR_CH4_ADDRESS  0x42000850
#define FLEXI_DMA0_DST_ADDR_CH4_ADDRESS  0x42000854
#define FLEXI_DMA0_CTRL_CH4_ADDRESS  0x42000858
#define FLEXI_DMA0_SRC_ADDR_CH5_ADDRESS  0x42000860
#define FLEXI_DMA0_DST_ADDR_CH5_ADDRESS  0x42000864
#define FLEXI_DMA0_CTRL_CH5_ADDRESS  0x42000868
#define FLEXI_DMA0_SRC_ADDR_CH6_ADDRESS  0x42000870
#define FLEXI_DMA0_DST_ADDR_CH6_ADDRESS  0x42000874
#define FLEXI_DMA0_CTRL_CH6_ADDRESS  0x42000878
#define FLEXI_DMA0_SRC_ADDR_CH7_ADDRESS  0x42000880
#define FLEXI_DMA0_DST_ADDR_CH7_ADDRESS  0x42000884
#define FLEXI_DMA0_CTRL_CH7_ADDRESS  0x42000888
#define FLEXI_DMA0_PARIS_SRST_ADDRESS  0x42000890
#define FLEXI_DMA0_FIFO_STATUS_ADDRESS  0x42000894
#define FLEXI_DMA0_FIFO_s_BASE_ADDRESS  0x42040400
#define I2CM_RX_FIFO_ADDRESS  0x42040400
#define UART_FIFO_ADDRESS  0x42040800
#define I2CM_FIFO_ADDRESS  0x42040c00
#define I3CM_FIFO_ADDRESS  0x42043000
#define FLEXI_DMA1_s_BASE_ADDRESS  0x42000c00
#define FLEXI_DMA1_ENABLE_ADDRESS  0x42000c00
#define FLEXI_DMA1_SRC_ADDR_CH0_ADDRESS  0x42000c10
#define FLEXI_DMA1_DST_ADDR_CH0_ADDRESS  0x42000c14
#define FLEXI_DMA1_CTRL_CH0_ADDRESS  0x42000c18
#define FLEXI_DMA1_SRC_ADDR_CH1_ADDRESS  0x42000c20
#define FLEXI_DMA1_DST_ADDR_CH1_ADDRESS  0x42000c24
#define FLEXI_DMA1_CTRL_CH1_ADDRESS  0x42000c28
#define FLEXI_DMA1_SRC_ADDR_CH2_ADDRESS  0x42000c30
#define FLEXI_DMA1_DST_ADDR_CH2_ADDRESS  0x42000c34
#define FLEXI_DMA1_CTRL_CH2_ADDRESS  0x42000c38
#define FLEXI_DMA1_SRC_ADDR_CH3_ADDRESS  0x42000c40
#define FLEXI_DMA1_DST_ADDR_CH3_ADDRESS  0x42000c44
#define FLEXI_DMA1_CTRL_CH3_ADDRESS  0x42000c48
#define FLEXI_DMA1_SRC_ADDR_CH4_ADDRESS  0x42000c50
#define FLEXI_DMA1_DST_ADDR_CH4_ADDRESS  0x42000c54
#define FLEXI_DMA1_CTRL_CH4_ADDRESS  0x42000c58
#define FLEXI_DMA1_SRC_ADDR_CH5_ADDRESS  0x42000c60
#define FLEXI_DMA1_DST_ADDR_CH5_ADDRESS  0x42000c64
#define FLEXI_DMA1_CTRL_CH5_ADDRESS  0x42000c68
#define FLEXI_DMA1_SRC_ADDR_CH6_ADDRESS  0x42000c70
#define FLEXI_DMA1_DST_ADDR_CH6_ADDRESS  0x42000c74
#define FLEXI_DMA1_CTRL_CH6_ADDRESS  0x42000c78
#define FLEXI_DMA1_SRC_ADDR_CH7_ADDRESS  0x42000c80
#define FLEXI_DMA1_DST_ADDR_CH7_ADDRESS  0x42000c84
#define FLEXI_DMA1_CTRL_CH7_ADDRESS  0x42000c88
#define FLEXI_DMA1_PARIS_SRST_ADDRESS  0x42000c90
#define FLEXI_DMA1_FIFO_STATUS_ADDRESS  0x42000c94
#define FLEXI_DMA1_FIFO_s_BASE_ADDRESS  0x42040000
#define SPIM_TX_FIFO_ADDRESS  0x42040000
#define SPIM_RX_FIFO_ADDRESS  0x42040400
#define AES_FIFO_ADDRESS  0x42041000
#define SPI_MASTER_s_BASE_ADDRESS  0x42005800
#define RA_SPIM_CTL_ADDRESS  0x42005800
#define RA_SPIM_STAT_ADDRESS  0x42005804
#define RA_SPIM_FFLVL_ADDRESS  0x42005808
#define RA_SPIM_XFER_ADDRESS  0x4200580c
#define RA_SPIM_XCNT_ADDRESS  0x42005810
#define RA_SPIM_CTRL_2_ADDRESS  0x42005814
#define TOP_INTERRUPT_CTRL_s_BASE_ADDRESS  0x42035000
#define INT_EN0_ADDRESS  0x42035000
#define INT_MASK0_ADDRESS  0x42035004
#define INT_BYP0_ADDRESS  0x42035008
#define INT_ST0_ADDRESS  0x4203500c
#define INT_EN1_ADDRESS  0x42035010
#define INT_MASK1_ADDRESS  0x42035014
#define INT_BYP1_ADDRESS  0x42035018
#define INT_ST1_ADDRESS  0x4203501c
#define INT_MERGE_EN_ADDRESS  0x42035020
#define INT_MERGE_MASK_ADDRESS  0x42035024
#define INT_MERGE_BYP_ADDRESS  0x42035028
#define INT_MERGE_ST_ADDRESS  0x4203502c
#define INT_SOFTSET0_ADDRESS  0x42035030
#define INT_SOFTSET1_ADDRESS  0x42035034
#define INT_NMI_MASK0_ADDRESS  0x42035038
#define INT_NMI_MASK1_ADDRESS  0x4203503c
#define INT_EXT_EN_ADDRESS  0x42035100
#define INT_EXT_CLR_ADDRESS  0x42035104
#define AUDIO_DMA_s_BASE_ADDRESS  0x42001000
#define DMA0_CHANNEL_ENABLE_ADDRESS  0x42001000
#define DMA0_INTERRUPT_STATUS_ADDRESS  0x42001004
#define DMA0_START_ADDRESS_CH0_ADDRESS  0x42001008
#define DMA0_CONTROL_CH0_ADDRESS  0x4200100c
#define DMA0_START_ADDRESS_CH1_ADDRESS  0x42001010
#define DMA0_CONTROL_CH1_ADDRESS  0x42001014
#define DMA0_START_ADDRESS_CH2_ADDRESS  0x42001018
#define DMA0_CONTROL_CH2_ADDRESS  0x4200101c
#define DMA0_START_ADDRESS_CH3_ADDRESS  0x42001020
#define DMA0_CONTROL_CH3_ADDRESS  0x42001024
#define DMA0_START_ADDRESS_CH5_ADDRESS  0x42001030
#define DMA0_CONTROL_CH5_ADDRESS  0x42001034
#define DMA0_START_ADDRESS_CH7_ADDRESS  0x42001040
#define DMA0_CONTROL_CH7_ADDRESS  0x42001044
#define DMA0_START_ADDRESS_CH9_ADDRESS  0x42001050
#define DMA0_CONTROL_CH9_ADDRESS  0x42001054
#define DMA0_START_ADDRESS_CH11_ADDRESS  0x42001060
#define DMA0_CONTROL_CH11_ADDRESS  0x42001064
#define DMA0_START_ADDRESS_CH13_ADDRESS  0x42001070
#define DMA0_CONTROL_CH13_ADDRESS  0x42001074
#define DMA0_START_ADDRESS_CH15_ADDRESS  0x42001080
#define DMA0_CONTROL_CH15_ADDRESS  0x42001084
#define DMA0_INTERRUPT_ENABLE_ADDRESS  0x42001088
#define DMA0_INTERRUPT_PARING_ADDRESS  0x4200108c
#define DMA0_INTERRUPPT_GROUPING01_ADDRESS  0x42001090
#define DMA0_INTERRUPPT_GROUPING23_ADDRESS  0x42001094
#define DMA0_INTERRUPPT_GROUPING45_ADDRESS  0x42001098
#define DMA0_INTERRUPPT_GROUPING67_ADDRESS  0x4200109c
#define DMA0_CHANNEL_ASSIGNMENTS02_ADDRESS  0x420010a4
#define DMA0_CHANNEL_ASSIGNMENT_1357911_ADDRESS  0x420010a8
#define DMA0_CHANNEL_ASSIGNMENT_1315_ADDRESS  0x420010ac
#define DMA0_CONTROL_EXT_CH0_ADDRESS  0x420010b0
#define DMA0_CONTROL_EXT_CH1_ADDRESS  0x420010b4
#define DMA0_CONTROL_EXT_CH2_ADDRESS  0x420010b8
#define DMA0_CONTROL_EXT_CH3_ADDRESS  0x420010bc
#define DMA0_CONTROL_EXT_CH5_ADDRESS  0x420010c0
#define DMA0_CONTROL_EXT_CH7_ADDRESS  0x420010c4
#define DMA0_CONTROL_EXT_CH9_ADDRESS  0x420010c8
#define DMA0_CONTROL_EXT_CH11_ADDRESS  0x420010cc
#define DMA0_CONTROL_EXT_CH13_ADDRESS  0x420010d0
#define DMA0_CONTROL_EXT_CH15_ADDRESS  0x420010d4
#define DMA3_CHANNEL_ENABLE_ADDRESS  0x420011c0
#define DMA3_INTERRUPT_STATUS_ADDRESS  0x420011c4
#define DMA3_START_ADDRESS_CH0_ADDRESS  0x420011c8
#define DMA3_CONTROL_CH0_ADDRESS  0x420011cc
#define DMA3_START_ADDRESS_CH1_ADDRESS  0x420011d0
#define DMA3_CONTROL_CH1_ADDRESS  0x420011d4
#define DMA3_START_ADDRESS_CH2_ADDRESS  0x420011d8
#define DMA3_CONTROL_CH2_ADDRESS  0x420011dc
#define DMA3_START_ADDRESS_CH3_ADDRESS  0x420011e0
#define DMA3_CONTROL_CH3_ADDRESS  0x420011e4
#define DMA3_START_ADDRESS_CH4_ADDRESS  0x420011e8
#define DMA3_CONTROL_CH4_ADDRESS  0x420011ec
#define DMA3_START_ADDRESS_CH5_ADDRESS  0x420011f0
#define DMA3_CONTROL_CH5_ADDRESS  0x420011f4
#define DMA3_START_ADDRESS_CH6_ADDRESS  0x420011f8
#define DMA3_CONTROL_CH6_ADDRESS  0x420011fc
#define DMA3_START_ADDRESS_CH7_ADDRESS  0x42001200
#define DMA3_CONTROL_CH7_ADDRESS  0x42001204
#define DMA3_START_ADDRESS_CH8_ADDRESS  0x42001208
#define DMA3_CONTROL_CH8_ADDRESS  0x4200120c
#define DMA3_START_ADDRESS_CH9_ADDRESS  0x42001210
#define DMA3_CONTROL_CH9_ADDRESS  0x42001214
#define DMA3_START_ADDRESS_CH10_ADDRESS  0x42001218
#define DMA3_CONTROL_CH10_ADDRESS  0x4200121c
#define DMA3_START_ADDRESS_CH11_ADDRESS  0x42001220
#define DMA3_CONTROL_CH11_ADDRESS  0x42001224
#define DMA3_START_ADDRESS_CH12_ADDRESS  0x42001228
#define DMA3_CONTROL_CH12_ADDRESS  0x4200122c
#define DMA3_START_ADDRESS_CH13_ADDRESS  0x42001230
#define DMA3_CONTROL_CH13_ADDRESS  0x42001234
#define DMA3_START_ADDRESS_CH14_ADDRESS  0x42001238
#define DMA3_CONTROL_CH14_ADDRESS  0x4200123c
#define DMA3_START_ADDRESS_CH15_ADDRESS  0x42001240
#define DMA3_CONTROL_CH15_ADDRESS  0x42001244
#define DMA3_START_ADDRESS_CH16_ADDRESS  0x42001248
#define DMA3_CONTROL_CH16_ADDRESS  0x4200124c
#define DMA3_START_ADDRESS_CH17_ADDRESS  0x42001250
#define DMA3_CONTROL_CH17_ADDRESS  0x42001254
#define DMA3_START_ADDRESS_CH18_ADDRESS  0x42001258
#define DMA3_CONTROL_CH18_ADDRESS  0x4200125c
#define DMA3_START_ADDRESS_CH19_ADDRESS  0x42001260
#define DMA3_CONTROL_CH19_ADDRESS  0x42001264
#define DMA3_INTERRUPT_ENABLE_ADDRESS  0x42001268
#define DMA3_INTERRUPT_PARING_ADDRESS  0x4200126c
#define DMA3_INTERRUPPT_GROUPING01_ADDRESS  0x42001270
#define DMA3_INTERRUPPT_GROUPING23_ADDRESS  0x42001274
#define DMA3_INTERRUPPT_GROUPING45_ADDRESS  0x42001278
#define DMA3_INTERRUPPT_GROUPING67_ADDRESS  0x4200127c
#define DMA3_INTERRUPPT_GROUPING89_ADDRESS  0x42001280
#define DMA3_CHANNEL_ASSIGNMENTS0246810_ADDRESS  0x42001284
#define DMA3_CHANNEL_ASSIGNMENTS12141618_ADDRESS  0x42001288
#define DMA3_CHANNEL_ASSIGNMENT_1357911_ADDRESS  0x4200128c
#define DMA3_CHANNEL_ASSIGNMENT_13151719_ADDRESS  0x42001290
#define DMA3_CONTROL_EXT_CH0_ADDRESS  0x42001294
#define DMA3_CONTROL_EXT_CH1_ADDRESS  0x42001298
#define DMA3_CONTROL_EXT_CH2_ADDRESS  0x4200129c
#define DMA3_CONTROL_EXT_CH3_ADDRESS  0x420012a0
#define DMA3_CONTROL_EXT_CH4_ADDRESS  0x420012a4
#define DMA3_CONTROL_EXT_CH5_ADDRESS  0x420012a8
#define DMA3_CONTROL_EXT_CH6_ADDRESS  0x420012ac
#define DMA3_CONTROL_EXT_CH7_ADDRESS  0x420012b0
#define DMA3_CONTROL_EXT_CH8_ADDRESS  0x420012b4
#define DMA3_CONTROL_EXT_CH9_ADDRESS  0x420012b8
#define DMA3_CONTROL_EXT_CH10_ADDRESS  0x420012bc
#define DMA3_CONTROL_EXT_CH11_ADDRESS  0x420012c0
#define DMA3_CONTROL_EXT_CH12_ADDRESS  0x420012c4
#define DMA3_CONTROL_EXT_CH13_ADDRESS  0x420012c8
#define DMA3_CONTROL_EXT_CH14_ADDRESS  0x420012cc
#define DMA3_CONTROL_EXT_CH15_ADDRESS  0x420012d0
#define DMA3_CONTROL_EXT_CH16_ADDRESS  0x420012d4
#define DMA3_CONTROL_EXT_CH17_ADDRESS  0x420012d8
#define DMA3_CONTROL_EXT_CH18_ADDRESS  0x420012dc
#define DMA3_CONTROL_EXT_CH19_ADDRESS  0x420012e0
#define DMA_ADDR_STATUS_SELECT_ADDRESS  0x420013c0
#define DMA_ADDRESS_UPDT_STA_ADDRESS  0x420013c4
#define DMA0_ADDRESS_STATUS_ADDRESS  0x420013c8
#define DMA3_ADDRESS_STATUS_ADDRESS  0x420013cc
#define DMA0_FIFO_STATUS_ADDRESS  0x420013d0
#define DMA3_FIFO_STATUS_ADDRESS  0x420013d4
#define OTP_s_BASE_ADDRESS  0x42023800
#define OTP_FUSE0_CTRL_STA_ADDRESS  0x42023800
#define OTP_FUSE0_STATUS_SET_ADDRESS  0x42023804
#define OTP_FUSE0_STATUS_CLR_ADDRESS  0x42023808
#define OTP_FUSE0_SERAL_DATA_OUTPUT_ADDRESS  0x4202380c
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_ADDRESS  0x42023810
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_ADDRESS  0x42023814
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_ADDRESS  0x42023818
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_ADDRESS  0x4202381c
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_ADDRESS  0x42023820
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_ADDRESS  0x42023824
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_ADDRESS  0x42023828
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_ADDRESS  0x4202382c
#define AHB_FLASH_CACHE_s_BASE_ADDRESS  0x42024020
#define CACHE_DATA_RAM0_CFG_ADDRESS  0x42024020
#define CACHE_DATA_RAM1_CFG_ADDRESS  0x42024024
#define CACHE_USER_CFG_ADDRESS  0x42024028
#define PWM_s_BASE_ADDRESS  0x42006500
#define RA_PWM_CTRL_1_ADDRESS  0x42006500
#define RA_PWM_CTRL_2_ADDRESS  0x42006504
#define MAILBOX_s_BASE_ADDRESS  0x42005000
#define MAILBOX_CFG_FIFO0_ADDRESS  0x42005000
#define MAILBOX_STATUS_FIFO0_ADDRESS  0x42005004
#define MAILBOX_DBG_MSG_FIFO0_ADDRESS  0x42005008
#define MAILBOX_FIFO_XFER_FIFO0_ADDRESS  0x4200500c
#define MAILBOX_CFG_FIFO1_ADDRESS  0x42005010
#define MAILBOX_STATUS_FIFO1_ADDRESS  0x42005014
#define MAILBOX_DBG_MSG_FIFO1_ADDRESS  0x42005018
#define MAILBOX_FIFO_XFER_FIFO1_ADDRESS  0x4200501c
#define MAILBOX_CFG_FIFO2_ADDRESS  0x42005020
#define MAILBOX_STATUS_FIFO2_ADDRESS  0x42005024
#define MAILBOX_DBG_MSG_FIFO2_ADDRESS  0x42005028
#define MAILBOX_FIFO_XFER_FIFO2_ADDRESS  0x4200502c
#define MAILBOX_CFG_FIFO3_ADDRESS  0x42005030
#define MAILBOX_STATUS_FIFO3_ADDRESS  0x42005034
#define MAILBOX_DBG_MSG_FIFO3_ADDRESS  0x42005038
#define MAILBOX_FIFO_XFER_FIFO3_ADDRESS  0x4200503c
#define MAILBOX_CFG_FIFO4_ADDRESS  0x42005040
#define MAILBOX_STATUS_FIFO4_ADDRESS  0x42005044
#define MAILBOX_DBG_MSG_FIFO4_ADDRESS  0x42005048
#define MAILBOX_FIFO_XFER_FIFO4_ADDRESS  0x4200504c
#define MAILBOX_CFG_FIFO5_ADDRESS  0x42005050
#define MAILBOX_STATUS_FIFO5_ADDRESS  0x42005054
#define MAILBOX_DBG_MSG_FIFO5_ADDRESS  0x42005058
#define MAILBOX_FIFO_XFER_FIFO5_ADDRESS  0x4200505c
#define FLASH_MPC_s_BASE_ADDRESS  0x42030000
#define FLASHMPC_CTRL_ADDRESS  0x42030000
#define FLASHMPC_BLK_MAX_ADDRESS  0x42030010
#define FLASHMPC_BLK_CFG_ADDRESS  0x42030014
#define FLASHMPC_BLK_IDX_ADDRESS  0x42030018
#define FLASHMPC_BLK_LUT_ADDRESS  0x4203001c
#define FLASHMPC_INT_STAT_ADDRESS  0x42030020
#define FLASHMPC_INT_CLEAR_ADDRESS  0x42030024
#define FLASHMPC_INT_EN_ADDRESS  0x42030028
#define FLASHMPC_INT_INFO1_ADDRESS  0x4203002c
#define FLASHMPC_INT_INFO2_ADDRESS  0x42030030
#define FLASHMPC_INT_SET_ADDRESS  0x42030034
#define FLASHMPC_PID4_ADDRESS  0x42030fd0
#define FLASHMPC_PID5_ADDRESS  0x42030fd4
#define FLASHMPC_PID6_ADDRESS  0x42030fd8
#define FLASHMPC_PID7_ADDRESS  0x42030fdc
#define FLASHMPC_PID0_ADDRESS  0x42030fe0
#define FLASHMPC_PID1_ADDRESS  0x42030fe4
#define FLASHMPC_PID2_ADDRESS  0x42030fe8
#define FLASHMPC_PID3_ADDRESS  0x42030fec
#define FLASHMPC_CID0_ADDRESS  0x42030ff0
#define FLASHMPC_CID1_ADDRESS  0x42030ff4
#define FLASHMPC_CID2_ADDRESS  0x42030ff8
#define FLASHMPC_CID3_ADDRESS  0x42030ffc
#define ROM_MPC_s_BASE_ADDRESS  0x42031000
#define ROMMPC_CTRL_ADDRESS  0x42031000
#define ROMMPC_BLK_MAX_ADDRESS  0x42031010
#define ROMMPC_BLK_CFG_ADDRESS  0x42031014
#define ROMMPC_BLK_IDX_ADDRESS  0x42031018
#define ROMMPC_BLK_LUT_ADDRESS  0x4203101c
#define ROMMPC_INT_STAT_ADDRESS  0x42031020
#define ROMMPC_INT_CLEAR_ADDRESS  0x42031024
#define ROMMPC_INT_EN_ADDRESS  0x42031028
#define ROMMPC_INT_INFO1_ADDRESS  0x4203102c
#define ROMMPC_INT_INFO2_ADDRESS  0x42031030
#define ROMMPC_INT_SET_ADDRESS  0x42031034
#define ROMMPC_PID4_ADDRESS  0x42031fd0
#define ROMMPC_PID5_ADDRESS  0x42031fd4
#define ROMMPC_PID6_ADDRESS  0x42031fd8
#define ROMMPC_PID7_ADDRESS  0x42031fdc
#define ROMMPC_PID0_ADDRESS  0x42031fe0
#define ROMMPC_PID1_ADDRESS  0x42031fe4
#define ROMMPC_PID2_ADDRESS  0x42031fe8
#define ROMMPC_PID3_ADDRESS  0x42031fec
#define ROMMPC_CID0_ADDRESS  0x42031ff0
#define ROMMPC_CID1_ADDRESS  0x42031ff4
#define ROMMPC_CID2_ADDRESS  0x42031ff8
#define ROMMPC_CID3_ADDRESS  0x42031ffc
#define DSP_MEM_MPC_s_BASE_ADDRESS  0x42032000
#define DSPMPC_CTRL_ADDRESS  0x42032000
#define DSPMPC_BLK_MAX_ADDRESS  0x42032010
#define DSPMPC_BLK_CFG_ADDRESS  0x42032014
#define DSPMPC_BLK_IDX_ADDRESS  0x42032018
#define DSPMPC_BLK_LUT_ADDRESS  0x4203201c
#define DSPMPC_INT_STAT_ADDRESS  0x42032020
#define DSPMPC_INT_CLEAR_ADDRESS  0x42032024
#define DSPMPC_INT_EN_ADDRESS  0x42032028
#define DSPMPC_INT_INFO1_ADDRESS  0x4203202c
#define DSPMPC_INT_INFO2_ADDRESS  0x42032030
#define DSPMPC_INT_SET_ADDRESS  0x42032034
#define DSPMPC_PID4_ADDRESS  0x42032fd0
#define DSPMPC_PID5_ADDRESS  0x42032fd4
#define DSPMPC_PID6_ADDRESS  0x42032fd8
#define DSPMPC_PID7_ADDRESS  0x42032fdc
#define DSPMPC_PID0_ADDRESS  0x42032fe0
#define DSPMPC_PID1_ADDRESS  0x42032fe4
#define DSPMPC_PID2_ADDRESS  0x42032fe8
#define DSPMPC_PID3_ADDRESS  0x42032fec
#define DSPMPC_CID0_ADDRESS  0x42032ff0
#define DSPMPC_CID1_ADDRESS  0x42032ff4
#define DSPMPC_CID2_ADDRESS  0x42032ff8
#define DSPMPC_CID3_ADDRESS  0x42032ffc
#define TRUSTZONE_CTRL_s_BASE_ADDRESS  0x42034000
#define DSP_REGION0_ADDRESS  0x42034000
#define DSP_REGION1_ADDRESS  0x42034004
#define DSP_REGION2_ADDRESS  0x42034008
#define DSP_REGION3_ADDRESS  0x4203400c
#define DSP_REGION4_ADDRESS  0x42034010
#define DSP_REGION5_ADDRESS  0x42034014
#define DSP_REGION6_ADDRESS  0x42034018
#define DSP_REGION7_ADDRESS  0x4203401c
#define HIFI3M_REGION0_ADDRESS  0x42034020
#define HIFI3M_REGION1_ADDRESS  0x42034024
#define HIFI3M_REGION2_ADDRESS  0x42034028
#define HIFI3M_REGION3_ADDRESS  0x4203402c
#define I2CS_REGION0_ADDRESS  0x42034040
#define I2CS_REGION1_ADDRESS  0x42034044
#define I2CS_REGION2_ADDRESS  0x42034048
#define I2CS_REGION3_ADDRESS  0x4203404c
#define EARLINK_REGION0_ADDRESS  0x42034060
#define EARLINK_REGION1_ADDRESS  0x42034064
#define EARLINK_REGION2_ADDRESS  0x42034068
#define EARLINK_REGION3_ADDRESS  0x4203406c
#define FDMA0_REGION0_ADDRESS  0x42034080
#define FDMA0_REGION1_ADDRESS  0x42034084
#define FDMA0_REGION2_ADDRESS  0x42034088
#define FDMA0_REGION3_ADDRESS  0x4203408c
#define FDMA1_REGION0_ADDRESS  0x420340a0
#define FDMA1_REGION1_ADDRESS  0x420340a4
#define FDMA1_REGION2_ADDRESS  0x420340a8
#define FDMA1_REGION3_ADDRESS  0x420340ac
#define ADMA0_REGION0_ADDRESS  0x420340c0
#define ADMA0_REGION1_ADDRESS  0x420340c4
#define ADMA0_REGION2_ADDRESS  0x420340c8
#define ADMA0_REGION3_ADDRESS  0x420340cc
#define ADMA1_REGION0_ADDRESS  0x420340e0
#define ADMA1_REGION1_ADDRESS  0x420340e4
#define ADMA1_REGION2_ADDRESS  0x420340e8
#define ADMA1_REGION3_ADDRESS  0x420340ec
#define QSPI_REGION0_ADDRESS  0x42034100
#define QSPI_REGION1_ADDRESS  0x42034104
#define QSPI_REGION2_ADDRESS  0x42034108
#define QSPI_REGION3_ADDRESS  0x4203410c
#define CFG_SEC_RESP_ADDRESS  0x42034180
#define SEC_WRREG_CTRL0_ADDRESS  0x42034200
#define SEC_WRREG_CTRL1_ADDRESS  0x42034204
#define SEC_WRREG_CTRL2_ADDRESS  0x42034208
#define SEC_WRREG_CTRL3_ADDRESS  0x4203420c
#define AHB_BUS_PROFILING_s_BASE_ADDRESS  0x42006c00
#define AHB_BUS_PROFILING_CTRL_ADDRESS  0x42006c00
#define AHB_BUS_TOTAL_CYC_CNT_ADDRESS  0x42006c04
#define AHB_BUS_RREQ_CNT_ADDRESS  0x42006c08
#define AHB_BUS_WREQ_CNT_ADDRESS  0x42006c0c
#define AHB_BUS_RSTL_CYC_CNT_ADDRESS  0x42006c10
#define AHB_BUS_WSTL_CYC_CNT_ADDRESS  0x42006c14
#define AHB_BUS_RTR_CNT_ADDRESS  0x42006c18
#define AHB_BUS_WTR_CNT_ADDRESS  0x42006c1c
#define AHB_BUS_RDAT_BYTES_CNT_ADDRESS  0x42006c20
#define AHB_BUS_WDAT_BYTES_CNT_ADDRESS  0x42006c24
#define AHB_BUS_BREQ_CYC_CNT_ADDRESS  0x42006c28
#define AHB_BUS_BGRA_CYC_CNT_ADDRESS  0x42006c2c
#define SSE200_PROFILING_s_BASE_ADDRESS  0x42033040
#define SSE200_M0_PROFILING_CTRL_ADDRESS  0x42033040
#define SSE200_M0_TOTAL_CYC_CNT_ADDRESS  0x42033044
#define SSE200_M0_RREQ_CNT_ADDRESS  0x42033048
#define SSE200_M0_WREQ_CNT_ADDRESS  0x4203304c
#define SSE200_M0_RSTL_CYC_CNT_ADDRESS  0x42033050
#define SSE200_M0_WSTL_CYC_CNT_ADDRESS  0x42033054
#define SSE200_M0_RTR_CNT_ADDRESS  0x42033058
#define SSE200_M0_WTR_CNT_ADDRESS  0x4203305c
#define SSE200_M0_RDAT_BYTES_CNT_ADDRESS  0x42033060
#define SSE200_M0_WDAT_BYTES_CNT_ADDRESS  0x42033064
#define SSE200_S0_PROFILING_CTRL_ADDRESS  0x42033070
#define SSE200_S0_TOTAL_CYC_CNT_ADDRESS  0x42033074
#define SSE200_S0_RREQ_CNT_ADDRESS  0x42033078
#define SSE200_S0_WREQ_CNT_ADDRESS  0x4203307c
#define SSE200_S0_RSTL_CYC_CNT_ADDRESS  0x42033080
#define SSE200_S0_WSTL_CYC_CNT_ADDRESS  0x42033084
#define SSE200_S0_RTR_CNT_ADDRESS  0x42033088
#define SSE200_S0_WTR_CNT_ADDRESS  0x4203308c
#define SSE200_S0_RDAT_BYTES_CNT_ADDRESS  0x42033090
#define SSE200_S0_WDAT_BYTES_CNT_ADDRESS  0x42033094
#define ASIP_PROFILING_s_BASE_ADDRESS  0x4000b8
#define ASIP_PROFILING_CTR_ADDRESS  0x4000b8
#define ASIP_MST_TOTAL_CYC_CNT_ADDRESS  0x4000bc
#define ASIP_MST_WREQ_CNT_ADDRESS  0x4000c0
#define ASIP_MST_RREQ_CNT_ADDRESS  0x4000c4
#define ASIP_MST_WSTL_CYC_CNT_ADDRESS  0x4000c8
#define ASIP_MST_RSTL_CYC_CNT_ADDRESS  0x4000cc
#define CAPE_A_SLP_CNT_ADDRESS  0x4000d0
#define CAPE_B_SLP_CNT_ADDRESS  0x4000d4
#define LLE_A_SLP_CNT_ADDRESS  0x4000d8
#define LLE_B_SLP_CNT_ADDRESS  0x4000dc
#define ASIP_SLV_TOTAL_CYC_CNT_ADDRESS  0x4000e0
#define ASIP_SLV_WREQ_CNT_ADDRESS  0x4000e4
#define ASIP_SLV_RREQ_CNT_ADDRESS  0x4000e8
#define ASIP_SLV_WBLK_CYC_CNT_ADDRESS  0x4000ec
#define ASIP_SLV_RBLK_CYC_CNT_ADDRESS  0x4000f0
#define SHARE_MEM_PROFILING_s_BASE_ADDRESS  0x420004a0
#define SHARE_MEM_PROFILER_CTR_ADDRESS  0x420004a0
#define SHARE_MEM_TOTAL_CYC_CNT_ADDRESS  0x420004a4
#define SHARE_MEM_RREQ_CNT_ADDRESS  0x420004a8
#define SHARE_MEM_WREQ_CNT_ADDRESS  0x420004ac
#define SHARE_MEM_RBLK_CYC_CNT_ADDRESS  0x420004b0
#define SHARE_MEM_WBLK_CYC_CNT_ADDRESS  0x420004b4
#define SMB_s_BASE_ADDRESS  0x42000400
#define SM_ARB_CTRL_ADDRESS  0x42000400
#define SM_BBRD_ARB_PRI_ADDRESS  0x42000410
#define SM_BBWR_ARB_PRI_ADDRESS  0x42000414
#define SM_SRAM_ARB_PRI_SRAM0_ADDRESS  0x42000440
#define SM_SRAM_ARB_PRI_SRAM1_ADDRESS  0x42000444
#define SM_SRAM_ARB_PRI_SRAM2_ADDRESS  0x42000448
#define SM_SRAM_ARB_PRI_SRAM3_ADDRESS  0x4200044c
#define SM_SRAM_ARB_PRI_SRAM4_ADDRESS  0x42000450
#define SM_SRAM_ARB_PRI_SRAM5_ADDRESS  0x42000454
#define SM_SRAM_ARB_PRI_SRAM6_ADDRESS  0x42000458
#define SM_SRAM_ARB_PRI_SRAM7_ADDRESS  0x4200045c
#define SM_SRAM_ARB_PRI_SRAM8_ADDRESS  0x42000460
#define SM_SRAM_ARB_PRI_SRAM9_ADDRESS  0x42000464
#define SM_SRAM_ARB_PRI_SRAM10_ADDRESS  0x42000468
#define SM_SRAM_ARB_PRI_SRAM11_ADDRESS  0x4200046c
#define SM_SRAM_ARB_PRI_SRAM12_ADDRESS  0x42000470
#define SM_SRAM_ARB_PRI_SRAM13_ADDRESS  0x42000474
#define SM_SRAM_ARB_PRI_SRAM14_ADDRESS  0x42000478
#define SM_SRAM_ARB_PRI_SRAM15_ADDRESS  0x4200047c
#define SM_CLKG_CTRL_ADDRESS  0x42000480
#define SM_SRST_CTRL_ADDRESS  0x42000484
#define SM_DBG0_ADDRESS  0x42000500
#define SM_SRAM_TIM_CTRL_ADDRESS  0x42000700
#define MISC_s_BASE_ADDRESS  0x42006400
#define WRREG_CTRL0_ADDRESS  0x42006400
#define WRREG_CTRL1_ADDRESS  0x42006404
#define WRREG_CTRL2_ADDRESS  0x42006408
#define WRREG_CTRL3_ADDRESS  0x4200640c
#define WRREG_CTRL4_ADDRESS  0x42006410
#define WRREG_CTRL5_ADDRESS  0x42006414
#define WRREG_CTRL6_ADDRESS  0x42006418
#define WRREG_CTRL7_ADDRESS  0x4200641c
#define I3C_CTRL_ADDRESS  0x42006508
#define DMACH_CTRL_ADDRESS  0x4200650c
#define I3C_SRAM_TIM_CTRL_ADDRESS  0x42006510
#define I3C_DBGL_ADDRESS  0x42006590
#define I3C_DBGH_ADDRESS  0x42006594
#define APB_ST_ADDRESS  0x420065a0
#define RO_REG00_ADDRESS  0x420065a4
#define RO_REG01_ADDRESS  0x420065a8
#define RO_REG02_ADDRESS  0x420065ac
#define RO_REG03_ADDRESS  0x420065b0
#define RO_REG10_ADDRESS  0x420065b4
#define RO_REG11_ADDRESS  0x420065b8
#define RO_REG12_ADDRESS  0x420065bc
#define RO_REG13_ADDRESS  0x420065c0
#define ISP_CTRL0_ADDRESS  0x42006600
#define ISP_CTRL1_ADDRESS  0x42006610
#define ISP_CTRL2_ADDRESS  0x42006620
#define ISP_STATE_ADDRESS  0x42006630
#define SYNC_s_BASE_ADDRESS  0x42005400
#define SYNC_CMD_ADDRESS  0x42005400
#define SYNC_DATA_ADDRESS  0x42005404
#define SYNC_FREE_CNT_SNAPSHOOT_ADDRESS  0x42005408
#define SYNC_DLY_ADDRESS  0x4200540c
#define SYNC_FORCE_EVENT_SET_ADDRESS  0x42005410
#define SYNC_EVENT_PULSE_ADDRESS  0x42005414
#define SYNC_EVENT_CDC_ADDRESS  0x42005418
#define SYNC_CMP_MASK_ADDRESS  0x4200541c
#define SYNC_CMP_0_ADDRESS  0x42005420
#define SYNC_CMP_1_ADDRESS  0x42005424
#define SYNC_CMP_2_ADDRESS  0x42005428
#define SYNC_CMP_3_ADDRESS  0x4200542c
#define SYNC_CMP_4_ADDRESS  0x42005430
#define SYNC_CMP_5_ADDRESS  0x42005434
#define SYNC_EVENT_EN_0_ADDRESS  0x42005440
#define SYNC_EVENT_EN_1_ADDRESS  0x42005444
#define SYNC_EVENT_EN_2_ADDRESS  0x42005448
#define SYNC_EVENT_EN_3_ADDRESS  0x4200544c
#define SYNC_EVENT_EN_4_ADDRESS  0x42005450
#define SYNC_EVENT_EN_5_ADDRESS  0x42005454
#define SYNC_CMP_MATCH_FLG_ADDRESS  0x42005460
#define SYNC_CLR_EVENT_FLG_ADDRESS  0x42005464
#define SYNC_EVENT_FLG_ADDRESS  0x42005468
#define SYNC_CNT_ADDRESS  0x4200546c



/*block :  QSPI */
typedef union {
	struct {
		hwint32 spi_mode : 2;	/* 0:1 sw=RW hw=RO 0x3  */
		hwint32 addr_len : 2;	/* 2:3 sw=RW hw=RO 0x3  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_CSR_s;


typedef union {
	struct {
		hwint32 pre_load_restart : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TRANSFER_CTL_PRELOAD_s;


typedef union {
	struct {
		hwint32 program_dma_start : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 program_dma_complete : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TRANSFER_CTL_PDMA_s;


typedef union {
	struct {
		hwint32 register_xfer_start : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 register_xfer_complete : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TRANSFER_CTL_REGXFER_s;


typedef union {
	struct {
		hwint32 enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TRANSFER_CTL_XIP_s;


typedef union {
	struct {
		hwint32 instruction : 8;	/* 0:7 sw=RW hw=RO 0x3  */
		hwint32 dummy_cycles : 6;	/* 8:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 18;	/* 14:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_PRE_LOAD_DMA_XFER_CONFIG_s;


typedef union {
	struct {
		hwint32 instruction : 8;	/* 0:7 sw=RW hw=RO 0x3  */
		hwint32 dummy_cycles : 6;	/* 8:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 2;	/* 14:15 sw=RO hw=RO 0x0  */
		hwint32 direction : 1;	/* 16:16 sw=RW hw=RO 0x1  */
		hwint32 reserved17 : 3;	/* 17:19 sw=RO hw=RO 0x0  */
		hwint32 num_addr_lines : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 reserved22 : 6;	/* 22:27 sw=RO hw=RO 0x0  */
		hwint32 num_data_lines : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_PROGRAMMED_DMA_XFER_CONFIG_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 length : 22;	/* 2:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_PROGRAMMED_DMA_LEN_s;


typedef union {
	struct {
		hwint32 addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_PROGRAMMED_DMA_EXT_ADDR_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 addr : 30;	/* 2:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_PROGRAMMED_DMA_INT_ADDR_s;


typedef union {
	struct {
		hwint32 instruction : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 dummy_cycles : 6;	/* 8:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 16;	/* 14:29 sw=RO hw=RO 0x0  */
		hwint32 skip_command : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_XIP_XFER_CONFIG_s;


typedef union {
	struct {
		hwint32 reserved0 : 10;	/* 0:9 sw=RO hw=RO 0x0  */
		hwint32 addr : 22;	/* 10:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_XIP_W0_EXT_ADDR_s;


typedef union {
	struct {
		hwint32 reserved0 : 10;	/* 0:9 sw=RO hw=RO 0x0  */
		hwint32 addr : 13;	/* 10:22 sw=RW hw=RO 0x0  */
		hwint32 reserved23 : 9;	/* 23:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_XIP_W0_LEN_s;


typedef union {
	struct {
		hwint32 instruction : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 addr_len : 3;	/* 8:10 sw=RW hw=RO 0x3  */
		hwint32 reserved11 : 5;	/* 11:15 sw=RO hw=RO 0x0  */
		hwint32 dummy_cycles : 6;	/* 16:21 sw=RW hw=RO 0x0  */
		hwint32 reserved22 : 1;	/* 22:22 sw=RO hw=RO 0x0  */
		hwint32 set_xip_terminate : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 direction : 1;	/* 24:24 sw=RW hw=RO 0x1  */
		hwint32 reserved25 : 1;	/* 25:25 sw=RO hw=RO 0x0  */
		hwint32 num_addr_lines : 2;	/* 26:27 sw=RW hw=RO 0x0  */
		hwint32 num_data_lines : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REG_XFER_CONFIG_s;


typedef union {
	struct {
		hwint32 length : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REG_XFER_LEN_s;


typedef union {
	struct {
		hwint32 addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REG_XFER_EXT_ADDR_s;


typedef union {
	struct {
		hwint32 data : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REG_XFER_DATA_s;


typedef union {
	struct {
		hwint32 program_dma_done_int_msk : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reg_xfer_done_int_msk : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 crc_check_done_int_msk : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_INT_MSK_s;


typedef union {
	struct {
		hwint32 crc_ext_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CRC_EXT_ADDR_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 crc_data_len : 22;	/* 2:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CRC_DATA_LEN_s;


typedef union {
	struct {
		hwint32 crc_start : 1;	/* 0:0 sw=RW hw=RW 0x0  */
		hwint32 crc_complete : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CRC_CSR_s;


typedef union {
	struct {
		hwint32 crc_code : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} CRC_FEATURE_CODE_s;


typedef struct {
	QSPI_CSR_s  qspi_csr;
	TRANSFER_CTL_PRELOAD_s  transfer_ctl_preload;
	TRANSFER_CTL_PDMA_s  transfer_ctl_pdma;
	TRANSFER_CTL_REGXFER_s  transfer_ctl_regxfer;
	TRANSFER_CTL_XIP_s  transfer_ctl_xip;
	QSPI_PRE_LOAD_DMA_XFER_CONFIG_s  qspi_pre_load_dma_xfer_config;
	QSPI_PROGRAMMED_DMA_XFER_CONFIG_s  qspi_programmed_dma_xfer_config;
	QSPI_PROGRAMMED_DMA_LEN_s  qspi_programmed_dma_len;
	QSPI_PROGRAMMED_DMA_EXT_ADDR_s  qspi_programmed_dma_ext_addr;
	QSPI_PROGRAMMED_DMA_INT_ADDR_s  qspi_programmed_dma_int_addr;
	QSPI_XIP_XFER_CONFIG_s  qspi_xip_xfer_config;
	QSPI_XIP_W0_EXT_ADDR_s  qspi_xip_w0_ext_addr;
	QSPI_XIP_W0_LEN_s  qspi_xip_w0_len;
	QSPI_REG_XFER_CONFIG_s  qspi_reg_xfer_config;
	QSPI_REG_XFER_LEN_s  qspi_reg_xfer_len;
	QSPI_REG_XFER_EXT_ADDR_s  qspi_reg_xfer_ext_addr;
	QSPI_REG_XFER_DATA_s  qspi_reg_xfer_data;
	QSPI_INT_MSK_s  qspi_int_msk;
	CRC_EXT_ADDR_s  crc_ext_addr;
	CRC_DATA_LEN_s  crc_data_len;
	CRC_CSR_s  crc_csr;
	CRC_FEATURE_CODE_s  crc_feature_code;

} QSPI_s;

#define QSPI_CSR_READMASK  0xffffffff
#define QSPI_CSR_WRITEMASK  0xf
#define QSPI_CSR_VOLATILEMASK  0x0
#define QSPI_CSR_RESETMASK  0xf
#define QSPI_CSR_DEFAULT  0xf

#define TRANSFER_CTL_PRELOAD_READMASK  0xffffffff
#define TRANSFER_CTL_PRELOAD_WRITEMASK  0x1
#define TRANSFER_CTL_PRELOAD_VOLATILEMASK  0x0
#define TRANSFER_CTL_PRELOAD_RESETMASK  0x1
#define TRANSFER_CTL_PRELOAD_DEFAULT  0x0

#define TRANSFER_CTL_PDMA_READMASK  0xfffffffc
#define TRANSFER_CTL_PDMA_WRITEMASK  0x3
#define TRANSFER_CTL_PDMA_VOLATILEMASK  0x2
#define TRANSFER_CTL_PDMA_RESETMASK  0x3
#define TRANSFER_CTL_PDMA_DEFAULT  0x0

#define TRANSFER_CTL_REGXFER_READMASK  0xfffffffd
#define TRANSFER_CTL_REGXFER_WRITEMASK  0x3
#define TRANSFER_CTL_REGXFER_VOLATILEMASK  0x2
#define TRANSFER_CTL_REGXFER_RESETMASK  0x3
#define TRANSFER_CTL_REGXFER_DEFAULT  0x0

#define TRANSFER_CTL_XIP_READMASK  0xffffffff
#define TRANSFER_CTL_XIP_WRITEMASK  0x1
#define TRANSFER_CTL_XIP_VOLATILEMASK  0x0
#define TRANSFER_CTL_XIP_RESETMASK  0x1
#define TRANSFER_CTL_XIP_DEFAULT  0x0

#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_READMASK  0xffffffff
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_WRITEMASK  0x3fff
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_VOLATILEMASK  0x0
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_RESETMASK  0x3fff
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_DEFAULT  0x3

#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_READMASK  0xffffffff
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_WRITEMASK  0x30313fff
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_VOLATILEMASK  0x0
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_RESETMASK  0x30313fff
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_DEFAULT  0x10003

#define QSPI_PROGRAMMED_DMA_LEN_READMASK  0xffffffff
#define QSPI_PROGRAMMED_DMA_LEN_WRITEMASK  0xfffffc
#define QSPI_PROGRAMMED_DMA_LEN_VOLATILEMASK  0x0
#define QSPI_PROGRAMMED_DMA_LEN_RESETMASK  0xfffffc
#define QSPI_PROGRAMMED_DMA_LEN_DEFAULT  0x0

#define QSPI_PROGRAMMED_DMA_EXT_ADDR_READMASK  0xffffffff
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_WRITEMASK  0xffffffff
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_VOLATILEMASK  0x0
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_RESETMASK  0xffffffff
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_DEFAULT  0x0

#define QSPI_PROGRAMMED_DMA_INT_ADDR_READMASK  0xffffffff
#define QSPI_PROGRAMMED_DMA_INT_ADDR_WRITEMASK  0xfffffffc
#define QSPI_PROGRAMMED_DMA_INT_ADDR_VOLATILEMASK  0x0
#define QSPI_PROGRAMMED_DMA_INT_ADDR_RESETMASK  0xfffffffc
#define QSPI_PROGRAMMED_DMA_INT_ADDR_DEFAULT  0x0

#define QSPI_XIP_XFER_CONFIG_READMASK  0xffffffff
#define QSPI_XIP_XFER_CONFIG_WRITEMASK  0x40003fff
#define QSPI_XIP_XFER_CONFIG_VOLATILEMASK  0x0
#define QSPI_XIP_XFER_CONFIG_RESETMASK  0x40003fff
#define QSPI_XIP_XFER_CONFIG_DEFAULT  0x0

#define QSPI_XIP_W0_EXT_ADDR_READMASK  0xffffffff
#define QSPI_XIP_W0_EXT_ADDR_WRITEMASK  0xfffffc00
#define QSPI_XIP_W0_EXT_ADDR_VOLATILEMASK  0x0
#define QSPI_XIP_W0_EXT_ADDR_RESETMASK  0xfffffc00
#define QSPI_XIP_W0_EXT_ADDR_DEFAULT  0x0

#define QSPI_XIP_W0_LEN_READMASK  0xffffffff
#define QSPI_XIP_W0_LEN_WRITEMASK  0x7ffc00
#define QSPI_XIP_W0_LEN_VOLATILEMASK  0x0
#define QSPI_XIP_W0_LEN_RESETMASK  0x7ffc00
#define QSPI_XIP_W0_LEN_DEFAULT  0x0

#define QSPI_REG_XFER_CONFIG_READMASK  0xffffffff
#define QSPI_REG_XFER_CONFIG_WRITEMASK  0x3dbf07ff
#define QSPI_REG_XFER_CONFIG_VOLATILEMASK  0x0
#define QSPI_REG_XFER_CONFIG_RESETMASK  0x3dbf07ff
#define QSPI_REG_XFER_CONFIG_DEFAULT  0x1000300

#define QSPI_REG_XFER_LEN_READMASK  0xffffffff
#define QSPI_REG_XFER_LEN_WRITEMASK  0x7
#define QSPI_REG_XFER_LEN_VOLATILEMASK  0x0
#define QSPI_REG_XFER_LEN_RESETMASK  0x7
#define QSPI_REG_XFER_LEN_DEFAULT  0x0

#define QSPI_REG_XFER_EXT_ADDR_READMASK  0xffffffff
#define QSPI_REG_XFER_EXT_ADDR_WRITEMASK  0xffffffff
#define QSPI_REG_XFER_EXT_ADDR_VOLATILEMASK  0x0
#define QSPI_REG_XFER_EXT_ADDR_RESETMASK  0xffffffff
#define QSPI_REG_XFER_EXT_ADDR_DEFAULT  0x0

#define QSPI_REG_XFER_DATA_READMASK  0xffffffff
#define QSPI_REG_XFER_DATA_WRITEMASK  0xffffffff
#define QSPI_REG_XFER_DATA_VOLATILEMASK  0xffffffff
#define QSPI_REG_XFER_DATA_RESETMASK  0xffffffff
#define QSPI_REG_XFER_DATA_DEFAULT  0x0

#define QSPI_INT_MSK_READMASK  0xffffffff
#define QSPI_INT_MSK_WRITEMASK  0x7
#define QSPI_INT_MSK_VOLATILEMASK  0x0
#define QSPI_INT_MSK_RESETMASK  0x7
#define QSPI_INT_MSK_DEFAULT  0x0

#define CRC_EXT_ADDR_READMASK  0xffffffff
#define CRC_EXT_ADDR_WRITEMASK  0xffffffff
#define CRC_EXT_ADDR_VOLATILEMASK  0x0
#define CRC_EXT_ADDR_RESETMASK  0xffffffff
#define CRC_EXT_ADDR_DEFAULT  0x0

#define CRC_DATA_LEN_READMASK  0xffffffff
#define CRC_DATA_LEN_WRITEMASK  0xfffffc
#define CRC_DATA_LEN_VOLATILEMASK  0x0
#define CRC_DATA_LEN_RESETMASK  0xfffffc
#define CRC_DATA_LEN_DEFAULT  0x0

#define CRC_CSR_READMASK  0xfffffffd
#define CRC_CSR_WRITEMASK  0x3
#define CRC_CSR_VOLATILEMASK  0x3
#define CRC_CSR_RESETMASK  0x3
#define CRC_CSR_DEFAULT  0x0

#define CRC_FEATURE_CODE_READMASK  0xffffffff
#define CRC_FEATURE_CODE_WRITEMASK  0x0
#define CRC_FEATURE_CODE_VOLATILEMASK  0xffffffff
#define CRC_FEATURE_CODE_RESETMASK  0xffffffff
#define CRC_FEATURE_CODE_DEFAULT  0x0




/*block :  UART */
typedef union {
	struct {
		hwint32 fcuart_fifo_brdl : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_FFBRD_s;


typedef union {
	struct {
		hwint32 rsre : 1;	/* 0:0 sw=RW hw=RW 0x0  */
		hwint32 rfoe : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 paee : 1;	/* 2:2 sw=RW hw=RW 0x0  */
		hwint32 free : 1;	/* 3:3 sw=RW hw=RW 0x0  */
		hwint32 rbke : 1;	/* 4:4 sw=RW hw=RW 0x0  */
		hwint32 tsre : 1;	/* 5:5 sw=RW hw=RW 0x0  */
		hwint32 tide : 1;	/* 6:6 sw=RW hw=RW 0x0  */
		hwint32 erfe : 1;	/* 7:7 sw=RW hw=RW 0x0  */
		hwint32 rtoe : 1;	/* 8:8 sw=RW hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_IEBRD_s;


typedef union {
	struct {
		hwint32 tft : 3;	/* 0:2 sw=RW hw=RW 0x7  */
		hwint32 tfc : 1;	/* 3:3 sw=RW hw=RW 0x0  */
		hwint32 rft : 3;	/* 4:6 sw=RW hw=RW 0x7  */
		hwint32 rfc : 1;	/* 7:7 sw=RW hw=RW 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_FFCTL_s;


typedef union {
	struct {
		hwint32 frs : 1;	/* 0:0 sw=RW hw=RW 0x1  */
		hwint32 lbm : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 sbs : 1;	/* 2:2 sw=RW hw=RW 0x0  */
		hwint32 pen : 1;	/* 3:3 sw=RW hw=RW 0x0  */
		hwint32 eop : 1;	/* 4:4 sw=RW hw=RW 0x0  */
		hwint32 por : 1;	/* 5:5 sw=RW hw=RW 0x0  */
		hwint32 tbk : 1;	/* 6:6 sw=RW hw=RW 0x0  */
		hwint32 bds : 1;	/* 7:7 sw=RW hw=RW 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_FRCTL_s;


typedef union {
	struct {
		hwint32 rsr : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 rfo : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 pae0 : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 fre0 : 1;	/* 3:3 sw=RO hw=RW 0x0  */
		hwint32 rbk0 : 1;	/* 4:4 sw=RO hw=RW 0x0  */
		hwint32 tsr : 1;	/* 5:5 sw=RO hw=RW 0x1  */
		hwint32 tid : 1;	/* 6:6 sw=RO hw=RW 0x1  */
		hwint32 erf : 1;	/* 7:7 sw=RO hw=RW 0x0  */
		hwint32 rto : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 3;	/* 9:11 sw=RO hw=RO 0x0  */
		hwint32 pae1 : 1;	/* 12:12 sw=RO hw=RW 0x0  */
		hwint32 fre1 : 1;	/* 13:13 sw=RO hw=RW 0x0  */
		hwint32 rbk1 : 1;	/* 14:14 sw=RO hw=RW 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 pae2 : 1;	/* 16:16 sw=RO hw=RW 0x0  */
		hwint32 fre2 : 1;	/* 17:17 sw=RO hw=RW 0x0  */
		hwint32 rbk2 : 1;	/* 18:18 sw=RO hw=RW 0x0  */
		hwint32 reserved19 : 1;	/* 19:19 sw=RO hw=RO 0x0  */
		hwint32 pae3 : 1;	/* 20:20 sw=RO hw=RW 0x0  */
		hwint32 fre3 : 1;	/* 21:21 sw=RO hw=RW 0x0  */
		hwint32 rbk3 : 1;	/* 22:22 sw=RO hw=RW 0x0  */
		hwint32 reserved23 : 9;	/* 23:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_STATS_s;


typedef union {
	struct {
		hwint32 irl : 4;	/* 0:3 sw=RO hw=RW 0x1  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_IRLVL_s;


typedef union {
	struct {
		hwint32 irda : 1;	/* 0:0 sw=RW hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_IRCTL_s;


typedef union {
	struct {
		hwint32 txsta : 6;	/* 0:5 sw=RO hw=RW 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_TXSTA_s;


typedef union {
	struct {
		hwint32 rfd : 6;	/* 0:5 sw=RO hw=RW 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_RXSTA_s;


typedef union {
	struct {
		hwint32 brfd : 6;	/* 0:5 sw=RW hw=RW 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_REG_EXBRD_s;


typedef union {
	struct {
		hwint32 rxfc : 3;	/* 0:2 sw=RW hw=RW 0x7  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 rts : 1;	/* 4:4 sw=RW hw=RW 0x1  */
		hwint32 reserved5 : 2;	/* 5:6 sw=RO hw=RO 0x0  */
		hwint32 fcen : 1;	/* 7:7 sw=RW hw=RW 0x0  */
		hwint32 trov : 3;	/* 8:10 sw=RW hw=RW 0x0  */
		hwint32 reserved11 : 5;	/* 11:15 sw=RO hw=RO 0x0  */
		hwint32 dmarx : 1;	/* 16:16 sw=RW hw=RW 0x0  */
		hwint32 dmatx : 1;	/* 17:17 sw=RW hw=RW 0x0  */
		hwint32 dmatrxtr : 1;	/* 18:18 sw=RW hw=RW 0x0  */
		hwint32 reserved19 : 1;	/* 19:19 sw=RO hw=RO 0x0  */
		hwint32 rxrst : 1;	/* 20:20 sw=RW hw=RW 0x0  */
		hwint32 reserved21 : 3;	/* 21:23 sw=RO hw=RO 0x0  */
		hwint32 tfpm : 2;	/* 24:25 sw=RW hw=RW 0x3  */
		hwint32 reserved26 : 1;	/* 26:26 sw=RO hw=RO 0x0  */
		hwint32 rfpm : 1;	/* 27:27 sw=RW hw=RW 0x0  */
		hwint32 osp : 1;	/* 28:28 sw=RW hw=RW 0x0  */
		hwint32 reserved29 : 1;	/* 29:29 sw=RO hw=RO 0x0  */
		hwint32 hwdo : 1;	/* 30:30 sw=RW hw=RW 0x1  */
		hwint32 mode : 1;	/* 31:31 sw=RW hw=RW 0x1  */
	} bf;
	hwint32 dw;
} UART_REG_CTRL_s;


typedef struct {
	UART_REG_FFBRD_s  uart_reg_ffbrd;
	UART_REG_IEBRD_s  uart_reg_iebrd;
	UART_REG_FFCTL_s  uart_reg_ffctl;
	UART_REG_FRCTL_s  uart_reg_frctl;
	hwint8 filler0[0x4];
	UART_REG_STATS_s  uart_reg_stats;
	UART_REG_IRLVL_s  uart_reg_irlvl;
	hwint8 filler1[0x4];
	UART_REG_IRCTL_s  uart_reg_irctl;
	hwint8 filler2[0x4];
	UART_REG_TXSTA_s  uart_reg_txsta;
	UART_REG_RXSTA_s  uart_reg_rxsta;
	UART_REG_EXBRD_s  uart_reg_exbrd;
	hwint8 filler3[0x8];
	UART_REG_CTRL_s  uart_reg_ctrl;

} UART_s;

#define UART_REG_FFBRD_READMASK  0xffffffff
#define UART_REG_FFBRD_WRITEMASK  0xffffffff
#define UART_REG_FFBRD_VOLATILEMASK  0xffffffff
#define UART_REG_FFBRD_RESETMASK  0xffffffff
#define UART_REG_FFBRD_DEFAULT  0x0

#define UART_REG_IEBRD_READMASK  0xffffffff
#define UART_REG_IEBRD_WRITEMASK  0x1ff
#define UART_REG_IEBRD_VOLATILEMASK  0x1ff
#define UART_REG_IEBRD_RESETMASK  0x1ff
#define UART_REG_IEBRD_DEFAULT  0x0

#define UART_REG_FFCTL_READMASK  0xffffffff
#define UART_REG_FFCTL_WRITEMASK  0xff
#define UART_REG_FFCTL_VOLATILEMASK  0xff
#define UART_REG_FFCTL_RESETMASK  0xff
#define UART_REG_FFCTL_DEFAULT  0x77

#define UART_REG_FRCTL_READMASK  0xffffffff
#define UART_REG_FRCTL_WRITEMASK  0xff
#define UART_REG_FRCTL_VOLATILEMASK  0xff
#define UART_REG_FRCTL_RESETMASK  0xff
#define UART_REG_FRCTL_DEFAULT  0x1

#define UART_REG_STATS_READMASK  0xffffffff
#define UART_REG_STATS_WRITEMASK  0x0
#define UART_REG_STATS_VOLATILEMASK  0x7771ff
#define UART_REG_STATS_RESETMASK  0x7771ff
#define UART_REG_STATS_DEFAULT  0x60

#define UART_REG_IRLVL_READMASK  0xffffffff
#define UART_REG_IRLVL_WRITEMASK  0x0
#define UART_REG_IRLVL_VOLATILEMASK  0xf
#define UART_REG_IRLVL_RESETMASK  0xf
#define UART_REG_IRLVL_DEFAULT  0x1

#define UART_REG_IRCTL_READMASK  0xffffffff
#define UART_REG_IRCTL_WRITEMASK  0x1
#define UART_REG_IRCTL_VOLATILEMASK  0x1
#define UART_REG_IRCTL_RESETMASK  0x1
#define UART_REG_IRCTL_DEFAULT  0x0

#define UART_REG_TXSTA_READMASK  0xffffffff
#define UART_REG_TXSTA_WRITEMASK  0x0
#define UART_REG_TXSTA_VOLATILEMASK  0x3f
#define UART_REG_TXSTA_RESETMASK  0x3f
#define UART_REG_TXSTA_DEFAULT  0x0

#define UART_REG_RXSTA_READMASK  0xffffffff
#define UART_REG_RXSTA_WRITEMASK  0x0
#define UART_REG_RXSTA_VOLATILEMASK  0x3f
#define UART_REG_RXSTA_RESETMASK  0x3f
#define UART_REG_RXSTA_DEFAULT  0x0

#define UART_REG_EXBRD_READMASK  0xffffffff
#define UART_REG_EXBRD_WRITEMASK  0x3f
#define UART_REG_EXBRD_VOLATILEMASK  0x3f
#define UART_REG_EXBRD_RESETMASK  0x3f
#define UART_REG_EXBRD_DEFAULT  0x0

#define UART_REG_CTRL_READMASK  0xffffffff
#define UART_REG_CTRL_WRITEMASK  0xdb170797
#define UART_REG_CTRL_VOLATILEMASK  0xdb170797
#define UART_REG_CTRL_RESETMASK  0xdb170797
#define UART_REG_CTRL_DEFAULT  0xc3000017




/*block :  AES */
typedef union {
	struct {
		hwint32 enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 apb_last_block : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 aes_setikey : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 aes_enc_mode : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 aes_mode : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 2;	/* 6:7 sw=RO hw=RO 0x0  */
		hwint32 key_select : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 kloop_mode : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 aes_stat : 6;	/* 16:21 sw=RO hw=RW 0x0  */
		hwint32 q_hr_full : 1;	/* 22:22 sw=RO hw=RW 0x0  */
		hwint32 reserved23 : 9;	/* 23:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_CSR_s;


typedef union {
	struct {
		hwint32 int_enab_reg : 7;	/* 0:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_IER_s;


typedef union {
	struct {
		hwint32 int_stat_reg : 7;	/* 0:6 sw=W1C hw=RO 0x0  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_ISR_s;


typedef union {
	struct {
		hwint32 int_mask_reg : 7;	/* 0:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_IMR_s;


typedef union {
	struct {
		hwint32 int_smask_reg : 7;	/* 0:6 sw=RO hw=RO 0x0  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_ISMR_s;


typedef union {
	struct {
		hwint32 aes_q0 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_DR0_s;


typedef union {
	struct {
		hwint32 aes_q1 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_DR1_s;


typedef union {
	struct {
		hwint32 aes_q2 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_DR2_s;


typedef union {
	struct {
		hwint32 aes_q3 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_DR3_s;


typedef union {
	struct {
		hwint32 aes_kr0 : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_KR0_s;


typedef union {
	struct {
		hwint32 aes_kr1 : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_KR1_s;


typedef union {
	struct {
		hwint32 aes_kr2 : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_KR2_s;


typedef union {
	struct {
		hwint32 aes_kr3 : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_KR3_s;


typedef union {
	struct {
		hwint32 aes_ivr0 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_IVR0_s;


typedef union {
	struct {
		hwint32 aes_ivr1 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_IVR1_s;


typedef union {
	struct {
		hwint32 aes_ivr2 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_IVR2_s;


typedef union {
	struct {
		hwint32 aes_ivr3 : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AES_IVR3_s;


typedef union {
	struct {
		hwint32 dmac_ctrl_reg : 16;	/* 0:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_DCR_s;


typedef struct {
	AES_CSR_s  aes_csr;
	hwint8 filler0[0xc];
	AES_IER_s  aes_ier;
	AES_ISR_s  aes_isr;
	AES_IMR_s  aes_imr;
	AES_ISMR_s  aes_ismr;
	AES_DR0_s  aes_dr0;
	AES_DR1_s  aes_dr1;
	AES_DR2_s  aes_dr2;
	AES_DR3_s  aes_dr3;
	AES_KR0_s  aes_kr0;
	AES_KR1_s  aes_kr1;
	AES_KR2_s  aes_kr2;
	AES_KR3_s  aes_kr3;
	AES_IVR0_s  aes_ivr0;
	AES_IVR1_s  aes_ivr1;
	AES_IVR2_s  aes_ivr2;
	AES_IVR3_s  aes_ivr3;
	hwint8 filler1[0x30];
	AES_DCR_s  aes_dcr;

} AES_s;

#define AES_CSR_READMASK  0xffffffff
#define AES_CSR_WRITEMASK  0x1f3f
#define AES_CSR_VOLATILEMASK  0x7f0000
#define AES_CSR_RESETMASK  0x7f1f3f
#define AES_CSR_DEFAULT  0x0

#define AES_IER_READMASK  0xffffffff
#define AES_IER_WRITEMASK  0x7f
#define AES_IER_VOLATILEMASK  0x0
#define AES_IER_RESETMASK  0x7f
#define AES_IER_DEFAULT  0x0

#define AES_ISR_READMASK  0xffffff80
#define AES_ISR_WRITEMASK  0x7f
#define AES_ISR_VOLATILEMASK  0x0
#define AES_ISR_RESETMASK  0x7f
#define AES_ISR_DEFAULT  0x0

#define AES_IMR_READMASK  0xffffffff
#define AES_IMR_WRITEMASK  0x7f
#define AES_IMR_VOLATILEMASK  0x0
#define AES_IMR_RESETMASK  0x7f
#define AES_IMR_DEFAULT  0x0

#define AES_ISMR_READMASK  0xffffffff
#define AES_ISMR_WRITEMASK  0x0
#define AES_ISMR_VOLATILEMASK  0x0
#define AES_ISMR_RESETMASK  0x7f
#define AES_ISMR_DEFAULT  0x0

#define AES_DR0_READMASK  0xffffffff
#define AES_DR0_WRITEMASK  0xffffffff
#define AES_DR0_VOLATILEMASK  0xffffffff
#define AES_DR0_RESETMASK  0xffffffff
#define AES_DR0_DEFAULT  0x0

#define AES_DR1_READMASK  0xffffffff
#define AES_DR1_WRITEMASK  0xffffffff
#define AES_DR1_VOLATILEMASK  0xffffffff
#define AES_DR1_RESETMASK  0xffffffff
#define AES_DR1_DEFAULT  0x0

#define AES_DR2_READMASK  0xffffffff
#define AES_DR2_WRITEMASK  0xffffffff
#define AES_DR2_VOLATILEMASK  0xffffffff
#define AES_DR2_RESETMASK  0xffffffff
#define AES_DR2_DEFAULT  0x0

#define AES_DR3_READMASK  0xffffffff
#define AES_DR3_WRITEMASK  0xffffffff
#define AES_DR3_VOLATILEMASK  0xffffffff
#define AES_DR3_RESETMASK  0xffffffff
#define AES_DR3_DEFAULT  0x0

#define AES_KR0_READMASK  0x0
#define AES_KR0_WRITEMASK  0xffffffff
#define AES_KR0_VOLATILEMASK  0x0
#define AES_KR0_RESETMASK  0xffffffff
#define AES_KR0_DEFAULT  0x0

#define AES_KR1_READMASK  0x0
#define AES_KR1_WRITEMASK  0xffffffff
#define AES_KR1_VOLATILEMASK  0x0
#define AES_KR1_RESETMASK  0xffffffff
#define AES_KR1_DEFAULT  0x0

#define AES_KR2_READMASK  0x0
#define AES_KR2_WRITEMASK  0xffffffff
#define AES_KR2_VOLATILEMASK  0x0
#define AES_KR2_RESETMASK  0xffffffff
#define AES_KR2_DEFAULT  0x0

#define AES_KR3_READMASK  0x0
#define AES_KR3_WRITEMASK  0xffffffff
#define AES_KR3_VOLATILEMASK  0x0
#define AES_KR3_RESETMASK  0xffffffff
#define AES_KR3_DEFAULT  0x0

#define AES_IVR0_READMASK  0xffffffff
#define AES_IVR0_WRITEMASK  0xffffffff
#define AES_IVR0_VOLATILEMASK  0xffffffff
#define AES_IVR0_RESETMASK  0xffffffff
#define AES_IVR0_DEFAULT  0x0

#define AES_IVR1_READMASK  0xffffffff
#define AES_IVR1_WRITEMASK  0xffffffff
#define AES_IVR1_VOLATILEMASK  0xffffffff
#define AES_IVR1_RESETMASK  0xffffffff
#define AES_IVR1_DEFAULT  0x0

#define AES_IVR2_READMASK  0xffffffff
#define AES_IVR2_WRITEMASK  0xffffffff
#define AES_IVR2_VOLATILEMASK  0xffffffff
#define AES_IVR2_RESETMASK  0xffffffff
#define AES_IVR2_DEFAULT  0x0

#define AES_IVR3_READMASK  0xffffffff
#define AES_IVR3_WRITEMASK  0xffffffff
#define AES_IVR3_VOLATILEMASK  0xffffffff
#define AES_IVR3_RESETMASK  0xffffffff
#define AES_IVR3_DEFAULT  0x0

#define AES_DCR_READMASK  0xffffffff
#define AES_DCR_WRITEMASK  0xffff
#define AES_DCR_VOLATILEMASK  0x0
#define AES_DCR_RESETMASK  0xffff
#define AES_DCR_DEFAULT  0x0




/*block :  GP_MUX */
typedef union {
	struct {
		hwint32 gpio_intr_rise_ena : 27;	/* 0:26 sw=RW hw=RO 0x0  */
		hwint32 reserved27 : 5;	/* 27:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPIO_INTR_RISE_ENA_s;


typedef union {
	struct {
		hwint32 gpio_intr_fall_ena : 27;	/* 0:26 sw=RW hw=RO 0x0  */
		hwint32 reserved27 : 5;	/* 27:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPIO_INTR_FALL_ENA_s;


typedef union {
	struct {
		hwint32 gpio_intr_ena : 27;	/* 0:26 sw=RW hw=RO 0x0  */
		hwint32 reserved27 : 5;	/* 27:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPIO_INTR_ENA_s;


typedef union {
	struct {
		hwint32 gpio_intr_clr : 27;	/* 0:26 sw=W1C hw=RW 0x0  */
		hwint32 reserved27 : 5;	/* 27:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPIO_INTR_CLR_s;


typedef union {
	struct {
		hwint32 gpio_intr_status : 27;	/* 0:26 sw=RO hw=RW 0x0  */
		hwint32 reserved27 : 5;	/* 27:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPIO_INTR_STATUS_s;


typedef union {
	struct {
		hwint32 gpio_in_sw : 27;	/* 0:26 sw=RO hw=RW 0x0  */
		hwint32 reserved27 : 5;	/* 27:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPIO_IN_SW_s;


typedef union {
	struct {
		hwint32 tahiti_mode : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TAHITI_MODE_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_GPIO0_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_GPIO1_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_GPIO2_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_GPIO3_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_GPIO4_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_GPIO5_s;


typedef union {
	struct {
		hwint32 std_rcosc_out_en : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_GPIO6_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S1_BCLK_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x2  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S1_TX_DAT_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S1_RX_DAT_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S1_TX_WS_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S1_RX_WS_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_UART_TX_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_UART_RX_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 3;	/* 4:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 i2c : 1;	/* 15:15 sw=RW hw=RO 0x1  */
		hwint32 pullup_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 hkeep : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I3C_I2C_SCK_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 3;	/* 4:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 i2c : 1;	/* 15:15 sw=RW hw=RO 0x1  */
		hwint32 pullup_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 hkeep : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I3C_I2C_SDA_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ds : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 mode : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x1  */
		hwint32 reserved11 : 3;	/* 11:13 sw=RO hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2C0_M_SCK_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ds : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 mode : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel : 2;	/* 9:10 sw=RW hw=RO 0x1  */
		hwint32 reserved11 : 3;	/* 11:13 sw=RO hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2C0_M_SDA_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S0_BCLK_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S0_TX_WS_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S0_RX_WS_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S0_TX_DAT_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_I2S0_RX_DAT_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_QSPI_CSN_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_QSPI_CLK_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_QSPI_D0_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_QSPI_D1_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_QSPI_D2_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 2;	/* 9:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_QSPI_D3_s;


typedef union {
	struct {
		hwint32 jtag_ctrl : 3;	/* 0:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} JTAG_CTRL_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_DMIC0_CLK_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_DMIC1_CLK_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_DMIC2_CLK_s;


typedef union {
	struct {
		hwint32 reserved0 : 3;	/* 0:2 sw=RO hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 2;	/* 9:10 sw=RW hw=RO 0x1  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_MIC0P_s;


typedef union {
	struct {
		hwint32 reserved0 : 3;	/* 0:2 sw=RO hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 2;	/* 9:10 sw=RW hw=RO 0x1  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_MIC0N_s;


typedef union {
	struct {
		hwint32 reserved0 : 3;	/* 0:2 sw=RO hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 2;	/* 9:10 sw=RW hw=RO 0x1  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_MIC1P_s;


typedef union {
	struct {
		hwint32 reserved0 : 3;	/* 0:2 sw=RO hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_MIC1N_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_TEMP_SNS_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 oe : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ie : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 is : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 pe : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ps : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 iomuxsel : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 sr : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ds0 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 ds1 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 manual_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 io_mux_sel1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PADCTRL_MB_SNS_s;


typedef union {
	struct {
		hwint32 adc_observe_sel : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 adc_observe_mode : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 testbus_sel : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 testbus_mode : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dac_inject_l_mode : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dac_inject_r_mode : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 lp_rcosc_mode : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 std_rcosc_mode : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 rcosc_cal_mode : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 elink_top_mode : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 elink_tx_mode : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 rx_top_mode : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 power_top_mode : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 tx_top_mode : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 clk_observe_mode : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 elink_rx_mode : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTEST_MODE_CTRL_s;


typedef struct {
	GPIO_INTR_RISE_ENA_s  gpio_intr_rise_ena;
	GPIO_INTR_FALL_ENA_s  gpio_intr_fall_ena;
	GPIO_INTR_ENA_s  gpio_intr_ena;
	GPIO_INTR_CLR_s  gpio_intr_clr;
	GPIO_INTR_STATUS_s  gpio_intr_status;
	GPIO_IN_SW_s  gpio_in_sw;
	TAHITI_MODE_s  tahiti_mode;
	hwint8 filler0[0x4];
	PADCTRL_GPIO0_s  padctrl_gpio0;
	PADCTRL_GPIO1_s  padctrl_gpio1;
	PADCTRL_GPIO2_s  padctrl_gpio2;
	PADCTRL_GPIO3_s  padctrl_gpio3;
	PADCTRL_GPIO4_s  padctrl_gpio4;
	PADCTRL_GPIO5_s  padctrl_gpio5;
	PADCTRL_GPIO6_s  padctrl_gpio6;
	PADCTRL_I2S1_BCLK_s  padctrl_i2s1_bclk;
	PADCTRL_I2S1_TX_DAT_s  padctrl_i2s1_tx_dat;
	PADCTRL_I2S1_RX_DAT_s  padctrl_i2s1_rx_dat;
	PADCTRL_I2S1_TX_WS_s  padctrl_i2s1_tx_ws;
	PADCTRL_I2S1_RX_WS_s  padctrl_i2s1_rx_ws;
	PADCTRL_UART_TX_s  padctrl_uart_tx;
	PADCTRL_UART_RX_s  padctrl_uart_rx;
	PADCTRL_I3C_I2C_SCK_s  padctrl_i3c_i2c_sck;
	PADCTRL_I3C_I2C_SDA_s  padctrl_i3c_i2c_sda;
	PADCTRL_I2C0_M_SCK_s  padctrl_i2c0_m_sck;
	PADCTRL_I2C0_M_SDA_s  padctrl_i2c0_m_sda;
	hwint8 filler1[0x8];
	PADCTRL_I2S0_BCLK_s  padctrl_i2s0_bclk;
	PADCTRL_I2S0_TX_WS_s  padctrl_i2s0_tx_ws;
	PADCTRL_I2S0_RX_WS_s  padctrl_i2s0_rx_ws;
	PADCTRL_I2S0_TX_DAT_s  padctrl_i2s0_tx_dat;
	PADCTRL_I2S0_RX_DAT_s  padctrl_i2s0_rx_dat;
	PADCTRL_QSPI_CSN_s  padctrl_qspi_csn;
	PADCTRL_QSPI_CLK_s  padctrl_qspi_clk;
	PADCTRL_QSPI_D0_s  padctrl_qspi_d0;
	PADCTRL_QSPI_D1_s  padctrl_qspi_d1;
	PADCTRL_QSPI_D2_s  padctrl_qspi_d2;
	PADCTRL_QSPI_D3_s  padctrl_qspi_d3;
	JTAG_CTRL_s  jtag_ctrl;
	PADCTRL_DMIC0_CLK_s  padctrl_dmic0_clk;
	PADCTRL_DMIC1_CLK_s  padctrl_dmic1_clk;
	PADCTRL_DMIC2_CLK_s  padctrl_dmic2_clk;
	PADCTRL_MIC0P_s  padctrl_mic0p;
	PADCTRL_MIC0N_s  padctrl_mic0n;
	PADCTRL_MIC1P_s  padctrl_mic1p;
	PADCTRL_MIC1N_s  padctrl_mic1n;
	PADCTRL_TEMP_SNS_s  padctrl_temp_sns;
	PADCTRL_MB_SNS_s  padctrl_mb_sns;
	GPTEST_MODE_CTRL_s  gptest_mode_ctrl;

} GP_MUX_s;

#define GPIO_INTR_RISE_ENA_READMASK  0xffffffff
#define GPIO_INTR_RISE_ENA_WRITEMASK  0x7ffffff
#define GPIO_INTR_RISE_ENA_VOLATILEMASK  0x0
#define GPIO_INTR_RISE_ENA_RESETMASK  0x7ffffff
#define GPIO_INTR_RISE_ENA_DEFAULT  0x0

#define GPIO_INTR_FALL_ENA_READMASK  0xffffffff
#define GPIO_INTR_FALL_ENA_WRITEMASK  0x7ffffff
#define GPIO_INTR_FALL_ENA_VOLATILEMASK  0x0
#define GPIO_INTR_FALL_ENA_RESETMASK  0x7ffffff
#define GPIO_INTR_FALL_ENA_DEFAULT  0x0

#define GPIO_INTR_ENA_READMASK  0xffffffff
#define GPIO_INTR_ENA_WRITEMASK  0x7ffffff
#define GPIO_INTR_ENA_VOLATILEMASK  0x0
#define GPIO_INTR_ENA_RESETMASK  0x7ffffff
#define GPIO_INTR_ENA_DEFAULT  0x0

#define GPIO_INTR_CLR_READMASK  0xf8000000
#define GPIO_INTR_CLR_WRITEMASK  0x7ffffff
#define GPIO_INTR_CLR_VOLATILEMASK  0x7ffffff
#define GPIO_INTR_CLR_RESETMASK  0x7ffffff
#define GPIO_INTR_CLR_DEFAULT  0x0

#define GPIO_INTR_STATUS_READMASK  0xffffffff
#define GPIO_INTR_STATUS_WRITEMASK  0x0
#define GPIO_INTR_STATUS_VOLATILEMASK  0x7ffffff
#define GPIO_INTR_STATUS_RESETMASK  0x7ffffff
#define GPIO_INTR_STATUS_DEFAULT  0x0

#define GPIO_IN_SW_READMASK  0xffffffff
#define GPIO_IN_SW_WRITEMASK  0x0
#define GPIO_IN_SW_VOLATILEMASK  0x7ffffff
#define GPIO_IN_SW_RESETMASK  0x7ffffff
#define GPIO_IN_SW_DEFAULT  0x0

#define TAHITI_MODE_READMASK  0xffffffff
#define TAHITI_MODE_WRITEMASK  0x0
#define TAHITI_MODE_VOLATILEMASK  0x1
#define TAHITI_MODE_RESETMASK  0x1
#define TAHITI_MODE_DEFAULT  0x0

#define PADCTRL_GPIO0_READMASK  0xffffffff
#define PADCTRL_GPIO0_WRITEMASK  0xfbae
#define PADCTRL_GPIO0_VOLATILEMASK  0x0
#define PADCTRL_GPIO0_RESETMASK  0xfbae
#define PADCTRL_GPIO0_DEFAULT  0x0

#define PADCTRL_GPIO1_READMASK  0xffffffff
#define PADCTRL_GPIO1_WRITEMASK  0x1fbae
#define PADCTRL_GPIO1_VOLATILEMASK  0x0
#define PADCTRL_GPIO1_RESETMASK  0x1fbae
#define PADCTRL_GPIO1_DEFAULT  0x0

#define PADCTRL_GPIO2_READMASK  0xffffffff
#define PADCTRL_GPIO2_WRITEMASK  0xffae
#define PADCTRL_GPIO2_VOLATILEMASK  0x0
#define PADCTRL_GPIO2_RESETMASK  0xffae
#define PADCTRL_GPIO2_DEFAULT  0x0

#define PADCTRL_GPIO3_READMASK  0xffffffff
#define PADCTRL_GPIO3_WRITEMASK  0x1fbae
#define PADCTRL_GPIO3_VOLATILEMASK  0x0
#define PADCTRL_GPIO3_RESETMASK  0x1fbae
#define PADCTRL_GPIO3_DEFAULT  0x0

#define PADCTRL_GPIO4_READMASK  0xffffffff
#define PADCTRL_GPIO4_WRITEMASK  0xfbae
#define PADCTRL_GPIO4_VOLATILEMASK  0x0
#define PADCTRL_GPIO4_RESETMASK  0xfbae
#define PADCTRL_GPIO4_DEFAULT  0x0

#define PADCTRL_GPIO5_READMASK  0xffffffff
#define PADCTRL_GPIO5_WRITEMASK  0x7bae
#define PADCTRL_GPIO5_VOLATILEMASK  0x0
#define PADCTRL_GPIO5_RESETMASK  0x7bae
#define PADCTRL_GPIO5_DEFAULT  0x8

#define PADCTRL_GPIO6_READMASK  0xffffffff
#define PADCTRL_GPIO6_WRITEMASK  0x7faf
#define PADCTRL_GPIO6_VOLATILEMASK  0x0
#define PADCTRL_GPIO6_RESETMASK  0x7faf
#define PADCTRL_GPIO6_DEFAULT  0x1

#define PADCTRL_I2S1_BCLK_READMASK  0xffffffff
#define PADCTRL_I2S1_BCLK_WRITEMASK  0xffae
#define PADCTRL_I2S1_BCLK_VOLATILEMASK  0x0
#define PADCTRL_I2S1_BCLK_RESETMASK  0xffae
#define PADCTRL_I2S1_BCLK_DEFAULT  0x180

#define PADCTRL_I2S1_TX_DAT_READMASK  0xffffffff
#define PADCTRL_I2S1_TX_DAT_WRITEMASK  0xffae
#define PADCTRL_I2S1_TX_DAT_VOLATILEMASK  0x0
#define PADCTRL_I2S1_TX_DAT_RESETMASK  0xffae
#define PADCTRL_I2S1_TX_DAT_DEFAULT  0x508

#define PADCTRL_I2S1_RX_DAT_READMASK  0xffffffff
#define PADCTRL_I2S1_RX_DAT_WRITEMASK  0xffae
#define PADCTRL_I2S1_RX_DAT_VOLATILEMASK  0x0
#define PADCTRL_I2S1_RX_DAT_RESETMASK  0xffae
#define PADCTRL_I2S1_RX_DAT_DEFAULT  0x188

#define PADCTRL_I2S1_TX_WS_READMASK  0xffffffff
#define PADCTRL_I2S1_TX_WS_WRITEMASK  0xffae
#define PADCTRL_I2S1_TX_WS_VOLATILEMASK  0x0
#define PADCTRL_I2S1_TX_WS_RESETMASK  0xffae
#define PADCTRL_I2S1_TX_WS_DEFAULT  0x180

#define PADCTRL_I2S1_RX_WS_READMASK  0xffffffff
#define PADCTRL_I2S1_RX_WS_WRITEMASK  0xffae
#define PADCTRL_I2S1_RX_WS_VOLATILEMASK  0x0
#define PADCTRL_I2S1_RX_WS_RESETMASK  0xffae
#define PADCTRL_I2S1_RX_WS_DEFAULT  0x180

#define PADCTRL_UART_TX_READMASK  0xffffffff
#define PADCTRL_UART_TX_WRITEMASK  0x7fae
#define PADCTRL_UART_TX_VOLATILEMASK  0x0
#define PADCTRL_UART_TX_RESETMASK  0x7fae
#define PADCTRL_UART_TX_DEFAULT  0x0

#define PADCTRL_UART_RX_READMASK  0xffffffff
#define PADCTRL_UART_RX_WRITEMASK  0x7fae
#define PADCTRL_UART_RX_VOLATILEMASK  0x0
#define PADCTRL_UART_RX_RESETMASK  0x7fae
#define PADCTRL_UART_RX_DEFAULT  0x0

#define PADCTRL_I3C_I2C_SCK_READMASK  0xffffffff
#define PADCTRL_I3C_I2C_SCK_WRITEMASK  0x3f38e
#define PADCTRL_I3C_I2C_SCK_VOLATILEMASK  0x0
#define PADCTRL_I3C_I2C_SCK_RESETMASK  0x3f38e
#define PADCTRL_I3C_I2C_SCK_DEFAULT  0x8000

#define PADCTRL_I3C_I2C_SDA_READMASK  0xffffffff
#define PADCTRL_I3C_I2C_SDA_WRITEMASK  0x3f38e
#define PADCTRL_I3C_I2C_SDA_VOLATILEMASK  0x0
#define PADCTRL_I3C_I2C_SDA_RESETMASK  0x3f38e
#define PADCTRL_I3C_I2C_SDA_DEFAULT  0x8000

#define PADCTRL_I2C0_M_SCK_READMASK  0xffffffff
#define PADCTRL_I2C0_M_SCK_WRITEMASK  0x47fe
#define PADCTRL_I2C0_M_SCK_VOLATILEMASK  0x0
#define PADCTRL_I2C0_M_SCK_RESETMASK  0x47fe
#define PADCTRL_I2C0_M_SCK_DEFAULT  0x240

#define PADCTRL_I2C0_M_SDA_READMASK  0xffffffff
#define PADCTRL_I2C0_M_SDA_WRITEMASK  0x47fe
#define PADCTRL_I2C0_M_SDA_VOLATILEMASK  0x0
#define PADCTRL_I2C0_M_SDA_RESETMASK  0x47fe
#define PADCTRL_I2C0_M_SDA_DEFAULT  0x240

#define PADCTRL_I2S0_BCLK_READMASK  0xffffffff
#define PADCTRL_I2S0_BCLK_WRITEMASK  0x79ae
#define PADCTRL_I2S0_BCLK_VOLATILEMASK  0x0
#define PADCTRL_I2S0_BCLK_RESETMASK  0x79ae
#define PADCTRL_I2S0_BCLK_DEFAULT  0x180

#define PADCTRL_I2S0_TX_WS_READMASK  0xffffffff
#define PADCTRL_I2S0_TX_WS_WRITEMASK  0x79ae
#define PADCTRL_I2S0_TX_WS_VOLATILEMASK  0x0
#define PADCTRL_I2S0_TX_WS_RESETMASK  0x79ae
#define PADCTRL_I2S0_TX_WS_DEFAULT  0x180

#define PADCTRL_I2S0_RX_WS_READMASK  0xffffffff
#define PADCTRL_I2S0_RX_WS_WRITEMASK  0x79ae
#define PADCTRL_I2S0_RX_WS_VOLATILEMASK  0x0
#define PADCTRL_I2S0_RX_WS_RESETMASK  0x79ae
#define PADCTRL_I2S0_RX_WS_DEFAULT  0x180

#define PADCTRL_I2S0_TX_DAT_READMASK  0xffffffff
#define PADCTRL_I2S0_TX_DAT_WRITEMASK  0x79ae
#define PADCTRL_I2S0_TX_DAT_VOLATILEMASK  0x0
#define PADCTRL_I2S0_TX_DAT_RESETMASK  0x79ae
#define PADCTRL_I2S0_TX_DAT_DEFAULT  0x188

#define PADCTRL_I2S0_RX_DAT_READMASK  0xffffffff
#define PADCTRL_I2S0_RX_DAT_WRITEMASK  0x79ae
#define PADCTRL_I2S0_RX_DAT_VOLATILEMASK  0x0
#define PADCTRL_I2S0_RX_DAT_RESETMASK  0x79ae
#define PADCTRL_I2S0_RX_DAT_DEFAULT  0x188

#define PADCTRL_QSPI_CSN_READMASK  0xffffffff
#define PADCTRL_QSPI_CSN_WRITEMASK  0x79ae
#define PADCTRL_QSPI_CSN_VOLATILEMASK  0x0
#define PADCTRL_QSPI_CSN_RESETMASK  0x79ae
#define PADCTRL_QSPI_CSN_DEFAULT  0x1000

#define PADCTRL_QSPI_CLK_READMASK  0xffffffff
#define PADCTRL_QSPI_CLK_WRITEMASK  0x79ae
#define PADCTRL_QSPI_CLK_VOLATILEMASK  0x0
#define PADCTRL_QSPI_CLK_RESETMASK  0x79ae
#define PADCTRL_QSPI_CLK_DEFAULT  0x1000

#define PADCTRL_QSPI_D0_READMASK  0xffffffff
#define PADCTRL_QSPI_D0_WRITEMASK  0x79ae
#define PADCTRL_QSPI_D0_VOLATILEMASK  0x0
#define PADCTRL_QSPI_D0_RESETMASK  0x79ae
#define PADCTRL_QSPI_D0_DEFAULT  0x1000

#define PADCTRL_QSPI_D1_READMASK  0xffffffff
#define PADCTRL_QSPI_D1_WRITEMASK  0x79ae
#define PADCTRL_QSPI_D1_VOLATILEMASK  0x0
#define PADCTRL_QSPI_D1_RESETMASK  0x79ae
#define PADCTRL_QSPI_D1_DEFAULT  0x1000

#define PADCTRL_QSPI_D2_READMASK  0xffffffff
#define PADCTRL_QSPI_D2_WRITEMASK  0x79ae
#define PADCTRL_QSPI_D2_VOLATILEMASK  0x0
#define PADCTRL_QSPI_D2_RESETMASK  0x79ae
#define PADCTRL_QSPI_D2_DEFAULT  0x1000

#define PADCTRL_QSPI_D3_READMASK  0xffffffff
#define PADCTRL_QSPI_D3_WRITEMASK  0x79ae
#define PADCTRL_QSPI_D3_VOLATILEMASK  0x0
#define PADCTRL_QSPI_D3_RESETMASK  0x79ae
#define PADCTRL_QSPI_D3_DEFAULT  0x1000

#define JTAG_CTRL_READMASK  0xffffffff
#define JTAG_CTRL_WRITEMASK  0x7
#define JTAG_CTRL_VOLATILEMASK  0x0
#define JTAG_CTRL_RESETMASK  0x7
#define JTAG_CTRL_DEFAULT  0x1

#define PADCTRL_DMIC0_CLK_READMASK  0xffffffff
#define PADCTRL_DMIC0_CLK_WRITEMASK  0x7bae
#define PADCTRL_DMIC0_CLK_VOLATILEMASK  0x0
#define PADCTRL_DMIC0_CLK_RESETMASK  0x7bae
#define PADCTRL_DMIC0_CLK_DEFAULT  0x208

#define PADCTRL_DMIC1_CLK_READMASK  0xffffffff
#define PADCTRL_DMIC1_CLK_WRITEMASK  0x7bae
#define PADCTRL_DMIC1_CLK_VOLATILEMASK  0x0
#define PADCTRL_DMIC1_CLK_RESETMASK  0x7bae
#define PADCTRL_DMIC1_CLK_DEFAULT  0x208

#define PADCTRL_DMIC2_CLK_READMASK  0xffffffff
#define PADCTRL_DMIC2_CLK_WRITEMASK  0xfbae
#define PADCTRL_DMIC2_CLK_VOLATILEMASK  0x0
#define PADCTRL_DMIC2_CLK_RESETMASK  0xfbae
#define PADCTRL_DMIC2_CLK_DEFAULT  0x208

#define PADCTRL_MIC0P_READMASK  0xffffffff
#define PADCTRL_MIC0P_WRITEMASK  0x7a8
#define PADCTRL_MIC0P_VOLATILEMASK  0x0
#define PADCTRL_MIC0P_RESETMASK  0x7a8
#define PADCTRL_MIC0P_DEFAULT  0x200

#define PADCTRL_MIC0N_READMASK  0xffffffff
#define PADCTRL_MIC0N_WRITEMASK  0x7a8
#define PADCTRL_MIC0N_VOLATILEMASK  0x0
#define PADCTRL_MIC0N_RESETMASK  0x7a8
#define PADCTRL_MIC0N_DEFAULT  0x200

#define PADCTRL_MIC1P_READMASK  0xffffffff
#define PADCTRL_MIC1P_WRITEMASK  0x7a8
#define PADCTRL_MIC1P_VOLATILEMASK  0x0
#define PADCTRL_MIC1P_RESETMASK  0x7a8
#define PADCTRL_MIC1P_DEFAULT  0x200

#define PADCTRL_MIC1N_READMASK  0xffffffff
#define PADCTRL_MIC1N_WRITEMASK  0x7a8
#define PADCTRL_MIC1N_VOLATILEMASK  0x0
#define PADCTRL_MIC1N_RESETMASK  0x7a8
#define PADCTRL_MIC1N_DEFAULT  0x0

#define PADCTRL_TEMP_SNS_READMASK  0xffffffff
#define PADCTRL_TEMP_SNS_WRITEMASK  0x7bae
#define PADCTRL_TEMP_SNS_VOLATILEMASK  0x0
#define PADCTRL_TEMP_SNS_RESETMASK  0x7bae
#define PADCTRL_TEMP_SNS_DEFAULT  0x0

#define PADCTRL_MB_SNS_READMASK  0xffffffff
#define PADCTRL_MB_SNS_WRITEMASK  0xfbae
#define PADCTRL_MB_SNS_VOLATILEMASK  0x0
#define PADCTRL_MB_SNS_RESETMASK  0xfbae
#define PADCTRL_MB_SNS_DEFAULT  0x0

#define GPTEST_MODE_CTRL_READMASK  0xffffffff
#define GPTEST_MODE_CTRL_WRITEMASK  0xfffff
#define GPTEST_MODE_CTRL_VOLATILEMASK  0x0
#define GPTEST_MODE_CTRL_RESETMASK  0xfffff
#define GPTEST_MODE_CTRL_DEFAULT  0x0




/*block :  ADC */
typedef union {
	struct {
		hwint32 o_adc_ch0_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch0_clk_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch0_hpf_clk_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch0_hpf_clk_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_clk_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch1_clk_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_hpf_clk_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch1_hpf_clk_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_clk_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch2_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_hpf_clk_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch2_hpf_clk_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_clk_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch3_clk_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_hpf_clk_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch3_hpf_clk_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_clk_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch4_clk_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_hpf_clk_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch4_hpf_clk_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 o_dmic_clk_en : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 reserved23 : 9;	/* 23:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CLK_CTRL_s;


typedef union {
	struct {
		hwint32 o_adc_ch0_soft_rst : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch0_soft_rst : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch0_hpf_soft_rst : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch0_hpf_soft_rst : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_soft_rst : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch1_soft_rst : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_hpf_soft_rst : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch1_hpf_soft_rst : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_soft_rst : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch2_soft_rst : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_hpf_soft_rst : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch2_hp_soft_rst : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_soft_rst : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch3_soft_rst : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_hpf_soft_rst : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch3_hpf_soft_rst : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_soft_rst : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch4_soft_rst : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_hpf_soft_rst : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch4_hpf_soft_rst : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 o_dmic_soft_rst : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 reserved23 : 9;	/* 23:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_RST_CTRL_s;


typedef union {
	struct {
		hwint32 o_adc_ch0_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch0_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch1_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch2_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch3_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch4_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 o_dmic_en : 5;	/* 12:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CTRL_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 o_anc_ch0_sample_rate : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch0_down_sample_ratio : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch0_hpf_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch0_hpf_bypass : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 3;	/* 8:10 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch0_hpf_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch0_hpf_sel_k1 : 5;	/* 12:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 3;	/* 17:19 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch0_hpf_sel_k2 : 5;	/* 20:24 sw=RW hw=RO 0x12  */
		hwint32 o_tst_ch0_hpf_spole : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch0_hpf_bypass : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch0_hp_lp_sel : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH0_CTRL0_s;


typedef union {
	struct {
		hwint32 o_ch0_volume_ctrl : 8;	/* 0:7 sw=RW hw=RO 0x95  */
		hwint32 o_ch0_mic_gain_ctrl : 4;	/* 8:11 sw=RW hw=RO 0x6  */
		hwint32 o_adc_ch0_boost : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH0_CTRL1_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 o_anc_ch1_sample_rate : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_down_sample_ratio : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch1_hpf_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch1_hpf_bypass : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 3;	/* 8:10 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch1_hpf_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_hpf_sel_k1 : 5;	/* 12:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 3;	/* 17:19 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch1_hpf_sel_k2 : 5;	/* 20:24 sw=RW hw=RO 0x12  */
		hwint32 o_tst_ch1_hpf_spole : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_hpf_bypass : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch1_hp_lp_sel : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH1_CTRL0_s;


typedef union {
	struct {
		hwint32 o_ch1_volume_ctrl : 8;	/* 0:7 sw=RW hw=RO 0x95  */
		hwint32 o_ch1_mic_gain_ctrl : 4;	/* 8:11 sw=RW hw=RO 0x6  */
		hwint32 o_adc_ch1_boost : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH1_CTRL1_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 o_anc_ch2_sample_rate : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_down_sample_ratio : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch2_hpf_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch2_hpf_bypass : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 3;	/* 8:10 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch2_hpf_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_hpf_sel_k1 : 5;	/* 12:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 3;	/* 17:19 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch2_hpf_sel_k2 : 5;	/* 20:24 sw=RW hw=RO 0x12  */
		hwint32 o_tst_ch2_hpf_spole : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_hpf_bypass : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch2_hp_lp_sel : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH2_CTRL0_s;


typedef union {
	struct {
		hwint32 o_ch2_volume_ctrl : 8;	/* 0:7 sw=RW hw=RO 0x95  */
		hwint32 o_ch2_mic_gain_ctrl : 4;	/* 8:11 sw=RW hw=RO 0x6  */
		hwint32 o_adc_ch2_boost : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH2_CTRL1_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 o_anc_ch3_sample_rate : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_down_sample_ratio : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch3_hpf_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch3_hpf_bypass : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 3;	/* 8:10 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch3_hpf_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_hpf_sel_k1 : 5;	/* 12:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 3;	/* 17:19 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch3_hpf_sel_k2 : 5;	/* 20:24 sw=RW hw=RO 0x12  */
		hwint32 o_tst_ch3_hpf_spole : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_hpf_bypass : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch3_hp_lp_sel : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH3_CTRL0_s;


typedef union {
	struct {
		hwint32 o_ch3_volume_ctrl : 8;	/* 0:7 sw=RW hw=RO 0x95  */
		hwint32 o_ch3_mic_gain_ctrl : 4;	/* 8:11 sw=RW hw=RO 0x6  */
		hwint32 o_adc_ch3_boost : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH3_CTRL1_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 o_anc_ch4_sample_rate : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_down_sample_ratio : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch4_hpf_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_anc_ch4_hpf_bypass : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 3;	/* 8:10 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch4_hpf_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_hpf_sel_k1 : 5;	/* 12:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 3;	/* 17:19 sw=RO hw=RO 0x0  */
		hwint32 o_adc_ch4_hpf_sel_k2 : 5;	/* 20:24 sw=RW hw=RO 0x12  */
		hwint32 o_tst_ch4_hpf_spole : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_hpf_bypass : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 o_adc_ch4_hp_lp_sel : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH4_CTRL0_s;


typedef union {
	struct {
		hwint32 o_ch4_volume_ctrl : 8;	/* 0:7 sw=RW hw=RO 0x95  */
		hwint32 o_ch4_mic_gain_ctrl : 4;	/* 8:11 sw=RW hw=RO 0x6  */
		hwint32 o_adc_ch4_boost : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_CH4_CTRL1_s;


typedef union {
	struct {
		hwint32 o_dmic_clk_div : 12;	/* 0:11 sw=RW hw=RO 0x111  */
		hwint32 o_dmic_clk_chg_en : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_DMIC_CTRL0_s;


typedef union {
	struct {
		hwint32 o_dmic_if_out_pol_revs : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 o_dmic_if_out_chl_revs : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 o_dmic_in_phase : 3;	/* 8:10 sw=RW hw=RO 0x0  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADC_DMIC_CTRL1_s;


typedef union {
	struct {
		hwint32 o_sidetone_ch0_sel : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 o_sidetone_ch1_sel : 3;	/* 4:6 sw=RW hw=RO 0x1  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SIDETONE_CTRL_s;


typedef union {
	struct {
		hwint32 o_anc_out_ch0_sel : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 o_anc_out_ch1_sel : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 o_anc_out_ch2_sel : 3;	/* 8:10 sw=RW hw=RO 0x0  */
		hwint32 reserved11 : 1;	/* 11:11 sw=RO hw=RO 0x0  */
		hwint32 o_anc_out_ch3_sel : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ANC_OUT_CTRL_s;


typedef struct {
	ADC_CLK_CTRL_s  adc_clk_ctrl;
	ADC_RST_CTRL_s  adc_rst_ctrl;
	ADC_CTRL_s  adc_ctrl;
	ADC_CH0_CTRL0_s  adc_ch0_ctrl0;
	ADC_CH0_CTRL1_s  adc_ch0_ctrl1;
	ADC_CH1_CTRL0_s  adc_ch1_ctrl0;
	ADC_CH1_CTRL1_s  adc_ch1_ctrl1;
	ADC_CH2_CTRL0_s  adc_ch2_ctrl0;
	ADC_CH2_CTRL1_s  adc_ch2_ctrl1;
	ADC_CH3_CTRL0_s  adc_ch3_ctrl0;
	ADC_CH3_CTRL1_s  adc_ch3_ctrl1;
	ADC_CH4_CTRL0_s  adc_ch4_ctrl0;
	ADC_CH4_CTRL1_s  adc_ch4_ctrl1;
	ADC_DMIC_CTRL0_s  adc_dmic_ctrl0;
	ADC_DMIC_CTRL1_s  adc_dmic_ctrl1;
	SIDETONE_CTRL_s  sidetone_ctrl;
	ANC_OUT_CTRL_s  anc_out_ctrl;

} ADC_s;

#define ADC_CLK_CTRL_READMASK  0xffffffff
#define ADC_CLK_CTRL_WRITEMASK  0x7fffff
#define ADC_CLK_CTRL_VOLATILEMASK  0x0
#define ADC_CLK_CTRL_RESETMASK  0x7fffff
#define ADC_CLK_CTRL_DEFAULT  0x0

#define ADC_RST_CTRL_READMASK  0xffffffff
#define ADC_RST_CTRL_WRITEMASK  0x7fffff
#define ADC_RST_CTRL_VOLATILEMASK  0x0
#define ADC_RST_CTRL_RESETMASK  0x7fffff
#define ADC_RST_CTRL_DEFAULT  0x0

#define ADC_CTRL_READMASK  0xffffffff
#define ADC_CTRL_WRITEMASK  0x1f3ff
#define ADC_CTRL_VOLATILEMASK  0x0
#define ADC_CTRL_RESETMASK  0x1f3ff
#define ADC_CTRL_DEFAULT  0x0

#define ADC_CH0_CTRL0_READMASK  0xffffffff
#define ADC_CH0_CTRL0_WRITEMASK  0xff1f8fc
#define ADC_CH0_CTRL0_VOLATILEMASK  0x0
#define ADC_CH0_CTRL0_RESETMASK  0xff1f8fc
#define ADC_CH0_CTRL0_DEFAULT  0x1200000

#define ADC_CH0_CTRL1_READMASK  0xffffffff
#define ADC_CH0_CTRL1_WRITEMASK  0x7fff
#define ADC_CH0_CTRL1_VOLATILEMASK  0x0
#define ADC_CH0_CTRL1_RESETMASK  0x7fff
#define ADC_CH0_CTRL1_DEFAULT  0x695

#define ADC_CH1_CTRL0_READMASK  0xffffffff
#define ADC_CH1_CTRL0_WRITEMASK  0xff1f8fc
#define ADC_CH1_CTRL0_VOLATILEMASK  0x0
#define ADC_CH1_CTRL0_RESETMASK  0xff1f8fc
#define ADC_CH1_CTRL0_DEFAULT  0x1200000

#define ADC_CH1_CTRL1_READMASK  0xffffffff
#define ADC_CH1_CTRL1_WRITEMASK  0x7fff
#define ADC_CH1_CTRL1_VOLATILEMASK  0x0
#define ADC_CH1_CTRL1_RESETMASK  0x7fff
#define ADC_CH1_CTRL1_DEFAULT  0x695

#define ADC_CH2_CTRL0_READMASK  0xffffffff
#define ADC_CH2_CTRL0_WRITEMASK  0xff1f8fc
#define ADC_CH2_CTRL0_VOLATILEMASK  0x0
#define ADC_CH2_CTRL0_RESETMASK  0xff1f8fc
#define ADC_CH2_CTRL0_DEFAULT  0x1200000

#define ADC_CH2_CTRL1_READMASK  0xffffffff
#define ADC_CH2_CTRL1_WRITEMASK  0x7fff
#define ADC_CH2_CTRL1_VOLATILEMASK  0x0
#define ADC_CH2_CTRL1_RESETMASK  0x7fff
#define ADC_CH2_CTRL1_DEFAULT  0x695

#define ADC_CH3_CTRL0_READMASK  0xffffffff
#define ADC_CH3_CTRL0_WRITEMASK  0xff1f8fc
#define ADC_CH3_CTRL0_VOLATILEMASK  0x0
#define ADC_CH3_CTRL0_RESETMASK  0xff1f8fc
#define ADC_CH3_CTRL0_DEFAULT  0x1200000

#define ADC_CH3_CTRL1_READMASK  0xffffffff
#define ADC_CH3_CTRL1_WRITEMASK  0x7fff
#define ADC_CH3_CTRL1_VOLATILEMASK  0x0
#define ADC_CH3_CTRL1_RESETMASK  0x7fff
#define ADC_CH3_CTRL1_DEFAULT  0x695

#define ADC_CH4_CTRL0_READMASK  0xffffffff
#define ADC_CH4_CTRL0_WRITEMASK  0xff1f8fc
#define ADC_CH4_CTRL0_VOLATILEMASK  0x0
#define ADC_CH4_CTRL0_RESETMASK  0xff1f8fc
#define ADC_CH4_CTRL0_DEFAULT  0x1200000

#define ADC_CH4_CTRL1_READMASK  0xffffffff
#define ADC_CH4_CTRL1_WRITEMASK  0x7fff
#define ADC_CH4_CTRL1_VOLATILEMASK  0x0
#define ADC_CH4_CTRL1_RESETMASK  0x7fff
#define ADC_CH4_CTRL1_DEFAULT  0x695

#define ADC_DMIC_CTRL0_READMASK  0xffffffff
#define ADC_DMIC_CTRL0_WRITEMASK  0x7fff
#define ADC_DMIC_CTRL0_VOLATILEMASK  0x0
#define ADC_DMIC_CTRL0_RESETMASK  0x7fff
#define ADC_DMIC_CTRL0_DEFAULT  0x111

#define ADC_DMIC_CTRL1_READMASK  0xffffffff
#define ADC_DMIC_CTRL1_WRITEMASK  0x777
#define ADC_DMIC_CTRL1_VOLATILEMASK  0x0
#define ADC_DMIC_CTRL1_RESETMASK  0x777
#define ADC_DMIC_CTRL1_DEFAULT  0x0

#define SIDETONE_CTRL_READMASK  0xffffffff
#define SIDETONE_CTRL_WRITEMASK  0x77
#define SIDETONE_CTRL_VOLATILEMASK  0x0
#define SIDETONE_CTRL_RESETMASK  0x77
#define SIDETONE_CTRL_DEFAULT  0x10

#define ANC_OUT_CTRL_READMASK  0xffffffff
#define ANC_OUT_CTRL_WRITEMASK  0x7777
#define ANC_OUT_CTRL_VOLATILEMASK  0x0
#define ANC_OUT_CTRL_RESETMASK  0x7777
#define ANC_OUT_CTRL_DEFAULT  0x0




/*block :  I2S_PCM */
typedef union {
	struct {
		hwint32 rx_clk_frames : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 rx_sync_lng : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 rx_lrck_low_first : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 rx_lrck_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG1_s;


typedef union {
	struct {
		hwint32 tx_clk_frames : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 tx_sync_lng : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 tx_lrck_low_first : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 tx_lrck_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG2_s;


typedef union {
	struct {
		hwint32 clk_share_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 clk_share_with_rx : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 lrck_share_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 lrck_share_with_rx : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG3_s;


typedef union {
	struct {
		hwint32 rx_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rx_master : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 rx_dstart_dly : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 rx_dshift_sel : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 rx_order : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 rx_lrck_pol : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 rx_sa_wdt : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG4_s;


typedef union {
	struct {
		hwint32 rx_sd_sel : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG5_s;


typedef union {
	struct {
		hwint32 rx_slot : 16;	/* 0:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG6_s;


typedef union {
	struct {
		hwint32 rx_en : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 rx_mute : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG8_s;


typedef union {
	struct {
		hwint32 tx_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 tx_master : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 tx_dstart_dly : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 tx_dshift_sel : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 tx_order : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 tx_lrck_pol : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 tx_out_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 tdm_bi : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 tx_sa_wdt : 5;	/* 9:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 18;	/* 14:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG9_s;


typedef union {
	struct {
		hwint32 tx_slot : 16;	/* 0:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG10_s;


typedef union {
	struct {
		hwint32 tx_sd_sel : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG12_s;


typedef union {
	struct {
		hwint32 tx_en : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 tx_mute : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 tx_disorder : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG13_s;


typedef union {
	struct {
		hwint32 ws_gen_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_enable : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_polarity : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_reset : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_data_sel : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S0_PCM_REG14_s;


typedef union {
	struct {
		hwint32 rx_clk_frames : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 rx_sync_lng : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 rx_lrck_low_first : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 rx_lrck_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG1_s;


typedef union {
	struct {
		hwint32 tx_clk_frames : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 tx_sync_lng : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 tx_lrck_low_first : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 tx_lrck_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG2_s;


typedef union {
	struct {
		hwint32 clk_share_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 clk_share_with_rx : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 lrck_share_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 lrck_share_with_rx : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG3_s;


typedef union {
	struct {
		hwint32 rx_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rx_master : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 rx_dstart_dly : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 rx_dshift_sel : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 rx_order : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 rx_lrck_pol : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 rx_sa_wdt : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG4_s;


typedef union {
	struct {
		hwint32 rx_sd_sel : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG5_s;


typedef union {
	struct {
		hwint32 rx_slot : 16;	/* 0:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG6_s;


typedef union {
	struct {
		hwint32 rx_en : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 rx_mute : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG8_s;


typedef union {
	struct {
		hwint32 tx_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 tx_master : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 tx_dstart_dly : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 tx_dshift_sel : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 tx_order : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 tx_lrck_pol : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 tx_out_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 tdm_bi : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 tx_sa_wdt : 5;	/* 9:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 18;	/* 14:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG9_s;


typedef union {
	struct {
		hwint32 tx_slot : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG10_s;


typedef union {
	struct {
		hwint32 tx_slot_ex : 16;	/* 0:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG11_s;


typedef union {
	struct {
		hwint32 tx_sd_sel : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG12_s;


typedef union {
	struct {
		hwint32 tx_en : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 tx_mute : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 tx_disorder : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG13_s;


typedef union {
	struct {
		hwint32 ws_gen_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_enable : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_polarity : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_reset : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ws_gen_data_sel : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2S1_PCM_REG14_s;


typedef struct {
	I2S0_PCM_REG1_s  i2s0_pcm_reg1;
	I2S0_PCM_REG2_s  i2s0_pcm_reg2;
	I2S0_PCM_REG3_s  i2s0_pcm_reg3;
	I2S0_PCM_REG4_s  i2s0_pcm_reg4;
	I2S0_PCM_REG5_s  i2s0_pcm_reg5;
	I2S0_PCM_REG6_s  i2s0_pcm_reg6;
	hwint8 filler0[0x4];
	I2S0_PCM_REG8_s  i2s0_pcm_reg8;
	I2S0_PCM_REG9_s  i2s0_pcm_reg9;
	I2S0_PCM_REG10_s  i2s0_pcm_reg10;
	hwint8 filler1[0x4];
	I2S0_PCM_REG12_s  i2s0_pcm_reg12;
	I2S0_PCM_REG13_s  i2s0_pcm_reg13;
	I2S0_PCM_REG14_s  i2s0_pcm_reg14;
	hwint8 filler2[0x8];
	I2S1_PCM_REG1_s  i2s1_pcm_reg1;
	I2S1_PCM_REG2_s  i2s1_pcm_reg2;
	I2S1_PCM_REG3_s  i2s1_pcm_reg3;
	I2S1_PCM_REG4_s  i2s1_pcm_reg4;
	I2S1_PCM_REG5_s  i2s1_pcm_reg5;
	I2S1_PCM_REG6_s  i2s1_pcm_reg6;
	hwint8 filler3[0x4];
	I2S1_PCM_REG8_s  i2s1_pcm_reg8;
	I2S1_PCM_REG9_s  i2s1_pcm_reg9;
	I2S1_PCM_REG10_s  i2s1_pcm_reg10;
	I2S1_PCM_REG11_s  i2s1_pcm_reg11;
	I2S1_PCM_REG12_s  i2s1_pcm_reg12;
	I2S1_PCM_REG13_s  i2s1_pcm_reg13;
	I2S1_PCM_REG14_s  i2s1_pcm_reg14;

} I2S_PCM_s;

#define I2S0_PCM_REG1_READMASK  0xffffffff
#define I2S0_PCM_REG1_WRITEMASK  0x3ffff
#define I2S0_PCM_REG1_VOLATILEMASK  0x0
#define I2S0_PCM_REG1_RESETMASK  0x3ffff
#define I2S0_PCM_REG1_DEFAULT  0x0

#define I2S0_PCM_REG2_READMASK  0xffffffff
#define I2S0_PCM_REG2_WRITEMASK  0x3ffff
#define I2S0_PCM_REG2_VOLATILEMASK  0x0
#define I2S0_PCM_REG2_RESETMASK  0x3ffff
#define I2S0_PCM_REG2_DEFAULT  0x0

#define I2S0_PCM_REG3_READMASK  0xffffffff
#define I2S0_PCM_REG3_WRITEMASK  0xf
#define I2S0_PCM_REG3_VOLATILEMASK  0x0
#define I2S0_PCM_REG3_RESETMASK  0xf
#define I2S0_PCM_REG3_DEFAULT  0x0

#define I2S0_PCM_REG4_READMASK  0xffffffff
#define I2S0_PCM_REG4_WRITEMASK  0xfdf
#define I2S0_PCM_REG4_VOLATILEMASK  0x0
#define I2S0_PCM_REG4_RESETMASK  0xfdf
#define I2S0_PCM_REG4_DEFAULT  0x0

#define I2S0_PCM_REG5_READMASK  0xffffffff
#define I2S0_PCM_REG5_WRITEMASK  0x3
#define I2S0_PCM_REG5_VOLATILEMASK  0x0
#define I2S0_PCM_REG5_RESETMASK  0x3
#define I2S0_PCM_REG5_DEFAULT  0x0

#define I2S0_PCM_REG6_READMASK  0xffffffff
#define I2S0_PCM_REG6_WRITEMASK  0xffff
#define I2S0_PCM_REG6_VOLATILEMASK  0x0
#define I2S0_PCM_REG6_RESETMASK  0xffff
#define I2S0_PCM_REG6_DEFAULT  0x0

#define I2S0_PCM_REG8_READMASK  0xffffffff
#define I2S0_PCM_REG8_WRITEMASK  0x7
#define I2S0_PCM_REG8_VOLATILEMASK  0x0
#define I2S0_PCM_REG8_RESETMASK  0x7
#define I2S0_PCM_REG8_DEFAULT  0x0

#define I2S0_PCM_REG9_READMASK  0xffffffff
#define I2S0_PCM_REG9_WRITEMASK  0x3fdf
#define I2S0_PCM_REG9_VOLATILEMASK  0x0
#define I2S0_PCM_REG9_RESETMASK  0x3fdf
#define I2S0_PCM_REG9_DEFAULT  0x0

#define I2S0_PCM_REG10_READMASK  0xffffffff
#define I2S0_PCM_REG10_WRITEMASK  0xffff
#define I2S0_PCM_REG10_VOLATILEMASK  0x0
#define I2S0_PCM_REG10_RESETMASK  0xffff
#define I2S0_PCM_REG10_DEFAULT  0x0

#define I2S0_PCM_REG12_READMASK  0xffffffff
#define I2S0_PCM_REG12_WRITEMASK  0x3
#define I2S0_PCM_REG12_VOLATILEMASK  0x0
#define I2S0_PCM_REG12_RESETMASK  0x3
#define I2S0_PCM_REG12_DEFAULT  0x0

#define I2S0_PCM_REG13_READMASK  0xffffffff
#define I2S0_PCM_REG13_WRITEMASK  0xf
#define I2S0_PCM_REG13_VOLATILEMASK  0x0
#define I2S0_PCM_REG13_RESETMASK  0xf
#define I2S0_PCM_REG13_DEFAULT  0x0

#define I2S0_PCM_REG14_READMASK  0xffffffff
#define I2S0_PCM_REG14_WRITEMASK  0x7f
#define I2S0_PCM_REG14_VOLATILEMASK  0x0
#define I2S0_PCM_REG14_RESETMASK  0x7f
#define I2S0_PCM_REG14_DEFAULT  0x0

#define I2S1_PCM_REG1_READMASK  0xffffffff
#define I2S1_PCM_REG1_WRITEMASK  0x3ffff
#define I2S1_PCM_REG1_VOLATILEMASK  0x0
#define I2S1_PCM_REG1_RESETMASK  0x3ffff
#define I2S1_PCM_REG1_DEFAULT  0x0

#define I2S1_PCM_REG2_READMASK  0xffffffff
#define I2S1_PCM_REG2_WRITEMASK  0x3ffff
#define I2S1_PCM_REG2_VOLATILEMASK  0x0
#define I2S1_PCM_REG2_RESETMASK  0x3ffff
#define I2S1_PCM_REG2_DEFAULT  0x0

#define I2S1_PCM_REG3_READMASK  0xffffffff
#define I2S1_PCM_REG3_WRITEMASK  0xf
#define I2S1_PCM_REG3_VOLATILEMASK  0x0
#define I2S1_PCM_REG3_RESETMASK  0xf
#define I2S1_PCM_REG3_DEFAULT  0x0

#define I2S1_PCM_REG4_READMASK  0xffffffff
#define I2S1_PCM_REG4_WRITEMASK  0xfdf
#define I2S1_PCM_REG4_VOLATILEMASK  0x0
#define I2S1_PCM_REG4_RESETMASK  0xfdf
#define I2S1_PCM_REG4_DEFAULT  0x0

#define I2S1_PCM_REG5_READMASK  0xffffffff
#define I2S1_PCM_REG5_WRITEMASK  0x3
#define I2S1_PCM_REG5_VOLATILEMASK  0x0
#define I2S1_PCM_REG5_RESETMASK  0x3
#define I2S1_PCM_REG5_DEFAULT  0x0

#define I2S1_PCM_REG6_READMASK  0xffffffff
#define I2S1_PCM_REG6_WRITEMASK  0xffff
#define I2S1_PCM_REG6_VOLATILEMASK  0x0
#define I2S1_PCM_REG6_RESETMASK  0xffff
#define I2S1_PCM_REG6_DEFAULT  0x0

#define I2S1_PCM_REG8_READMASK  0xffffffff
#define I2S1_PCM_REG8_WRITEMASK  0x7
#define I2S1_PCM_REG8_VOLATILEMASK  0x0
#define I2S1_PCM_REG8_RESETMASK  0x7
#define I2S1_PCM_REG8_DEFAULT  0x0

#define I2S1_PCM_REG9_READMASK  0xffffffff
#define I2S1_PCM_REG9_WRITEMASK  0x3fdf
#define I2S1_PCM_REG9_VOLATILEMASK  0x0
#define I2S1_PCM_REG9_RESETMASK  0x3fdf
#define I2S1_PCM_REG9_DEFAULT  0x0

#define I2S1_PCM_REG10_READMASK  0xffffffff
#define I2S1_PCM_REG10_WRITEMASK  0xffffffff
#define I2S1_PCM_REG10_VOLATILEMASK  0x0
#define I2S1_PCM_REG10_RESETMASK  0xffffffff
#define I2S1_PCM_REG10_DEFAULT  0x0

#define I2S1_PCM_REG11_READMASK  0xffffffff
#define I2S1_PCM_REG11_WRITEMASK  0xffff
#define I2S1_PCM_REG11_VOLATILEMASK  0x0
#define I2S1_PCM_REG11_RESETMASK  0xffff
#define I2S1_PCM_REG11_DEFAULT  0x0

#define I2S1_PCM_REG12_READMASK  0xffffffff
#define I2S1_PCM_REG12_WRITEMASK  0x3f
#define I2S1_PCM_REG12_VOLATILEMASK  0x0
#define I2S1_PCM_REG12_RESETMASK  0x3f
#define I2S1_PCM_REG12_DEFAULT  0x0

#define I2S1_PCM_REG13_READMASK  0xffffffff
#define I2S1_PCM_REG13_WRITEMASK  0xff
#define I2S1_PCM_REG13_VOLATILEMASK  0x0
#define I2S1_PCM_REG13_RESETMASK  0xff
#define I2S1_PCM_REG13_DEFAULT  0x0

#define I2S1_PCM_REG14_READMASK  0xffffffff
#define I2S1_PCM_REG14_WRITEMASK  0x7f
#define I2S1_PCM_REG14_VOLATILEMASK  0x0
#define I2S1_PCM_REG14_RESETMASK  0x7f
#define I2S1_PCM_REG14_DEFAULT  0x0




/*block :  HIFI3_WRAPPER */
typedef union {
	struct {
		hwint32 hifi3_wrapper_pbclken : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_runstall : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_statvectorsel : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ocdhaltonreset : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_pwaitmode : 1;	/* 4:4 sw=RO hw=RW 0x0  */
		hwint32 hifi3_wrapper_pfataerror : 1;	/* 5:5 sw=RO hw=RW 0x0  */
		hwint32 hifi3_wrapper_xocdmode : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 hifi3_wrapper_debugmode : 1;	/* 7:7 sw=RO hw=RW 0x0  */
		hwint32 hifi3_wrapper_dreset : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_breset : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_jtrst : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_atresetn : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_presetn : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_prid : 16;	/* 16:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_CONTROL_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_pwaitmode_change : 1;	/* 0:0 sw=W1C hw=RO 0x0  */
		hwint32 hifi3_wrapper_doubleexceptionerror : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 hifi3_wrapper_pfataerror_change : 1;	/* 2:2 sw=W1C hw=RO 0x0  */
		hwint32 hifi3_wrapper_pfaultinfo_change : 1;	/* 3:3 sw=W1C hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_WRAPPER_INT_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_pwaitmode_change_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_doubleexceptionerror_enable : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_pfataerror_change_enable : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_pfaultinfo_change_enable : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_pfaultinfo : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_PFAULTINFO_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_irq_all_enable_0 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_irq_all_enable_1 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_irq_0_enable_0 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_irq_0_enable_1 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_irq_1_enable_0 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_irq_1_enable_1 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_input_irq_status0 : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_input_irq_status0 : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_alt_reset_vector : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_ALT_RESET_VECTOR_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_icache_way_a : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_icache_way_a : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_icache_way_a : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_icache_way_a : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_icache_way_a : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_icache_way_a : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_icache_way_a : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_icache_way_b : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_icache_way_b : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_icache_way_b : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_icache_way_b : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_icache_way_b : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_icache_way_b : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_icache_way_b : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_dcache_way_a_bk0 : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dcache_way_a_bk0 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dcache_way_a_bk0 : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dcache_way_a_bk0 : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dcache_way_a_bk0 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dcache_way_a_bk0 : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dcache_way_a_bk0 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_dcache_way_a_bk1 : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dcache_way_a_bk1 : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dcache_way_a_bk1 : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dcache_way_a_bk1 : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dcache_way_a_bk1 : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dcache_way_a_bk1 : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dcache_way_a_bk1 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_dcache_way_b_bk0 : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dcache_way_b_bk0 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dcache_way_b_bk0 : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dcache_way_b_bk0 : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dcache_way_b_bk0 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dcache_way_b_bk0 : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dcache_way_b_bk0 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_dcache_way_b_bk1 : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dcache_way_b_bk1 : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dcache_way_b_bk1 : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dcache_way_b_bk1 : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dcache_way_b_bk1 : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dcache_way_b_bk1 : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dcache_way_b_bk1 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_dram0_bk0 : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dram0_bk0 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dram0_bk0 : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dram0_bk0 : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dram0_bk0 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dram0_bk0 : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dram0_bk0 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_dram0_bk1 : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dram0_bk1 : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dram0_bk1 : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dram0_bk1 : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dram0_bk1 : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dram0_bk1 : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dram0_bk1 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_dram1_bk0 : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dram1_bk0 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dram1_bk0 : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dram1_bk0 : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dram1_bk0 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dram1_bk0 : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dram1_bk0 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_dram1_bk1 : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dram1_bk1 : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dram1_bk1 : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dram1_bk1 : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dram1_bk1 : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dram1_bk1 : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dram1_bk1 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_dtag0_way_a : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dtag0_way_a : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dtag0_way_a : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dtag0_way_a : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dtag0_way_a : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dtag0_way_a : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dtag0_way_a : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_dtag0_way_b : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dtag0_way_b : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dtag0_way_b : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dtag0_way_b : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dtag0_way_b : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dtag0_way_b : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dtag0_way_b : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_iram_0 : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_iram_0 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_iram_0 : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_iram_0 : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_iram_0 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_iram_0 : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_iram_0 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_itag_way_a : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_itag_way_a : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_itag_way_a : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_itag_way_a : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_itag_way_a : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_itag_way_a : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_itag_way_a : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_itag_way_b : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_itag_way_b : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_itag_way_b : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_itag_way_b : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_itag_way_b : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_itag_way_b : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_itag_way_b : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_pretech : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_pretech : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_pretech : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_pretech : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_pretech : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_pretech : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_pretech : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_tracemem : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_tracemem : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_tracemem : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_tracemem : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_tracemem : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_tracemem : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_tracemem : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_s;


typedef union {
	struct {
		hwint32 hifi3_wrapper_rm_dtag1_way_a : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dtag1_way_a : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dtag1_way_a : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dtag1_way_a : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dtag1_way_a : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dtag1_way_a : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dtag1_way_a : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 hifi3_wrapper_rm_dtag1_way_b : 4;	/* 16:19 sw=RW hw=RO 0x3  */
		hwint32 hifi3_wrapper_rme_dtag1_way_b : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 hifi3_wrapper_wpulse_dtag1_way_b : 3;	/* 21:23 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_wa_dtag1_way_b : 3;	/* 24:26 sw=RW hw=RO 0x4  */
		hwint32 hifi3_wrapper_ls_dtag1_way_b : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_ra_dtag1_way_b : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hifi3_wrapper_test1_dtag1_way_b : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_s;


typedef struct {
	HIFI3_WRAPPER_HIFI3_CONTROL_s  hifi3_wrapper_hifi3_control;
	hwint8 filler0[0x14];
	HIFI3_WRAPPER_HIFI3_WRAPPER_INT_s  hifi3_wrapper_hifi3_wrapper_int;
	HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_s  hifi3_wrapper_hifi3_wrapper_int_enable;
	HIFI3_WRAPPER_HIFI3_PFAULTINFO_s  hifi3_wrapper_hifi3_pfaultinfo;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_s  hifi3_wrapper_hifi3_in_irq_all_enable0;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_s  hifi3_wrapper_hifi3_in_irq_all_enable1;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_s  hifi3_wrapper_hifi3_in_irq_0_enable0;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_s  hifi3_wrapper_hifi3_in_irq_0_enable1;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_s  hifi3_wrapper_hifi3_in_irq_1_enable0;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_s  hifi3_wrapper_hifi3_in_irq_1_enable1;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_s  hifi3_wrapper_hifi3_in_irq_status0;
	HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_s  hifi3_wrapper_hifi3_in_irq_status1;
	HIFI3_WRAPPER_ALT_RESET_VECTOR_s  hifi3_wrapper_alt_reset_vector;
	hwint8 filler1[0x18];
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_s  hifi3_wrapper_hifi3_memory_ctrl0;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_s  hifi3_wrapper_hifi3_memory_ctrl1;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_s  hifi3_wrapper_hifi3_memory_ctrl2;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_s  hifi3_wrapper_hifi3_memory_ctrl3;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_s  hifi3_wrapper_hifi3_memory_ctrl4;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_s  hifi3_wrapper_hifi3_memory_ctrl5;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_s  hifi3_wrapper_hifi3_memory_ctrl6;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_s  hifi3_wrapper_hifi3_memory_ctrl7;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_s  hifi3_wrapper_hifi3_memory_ctrl8;
	HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_s  hifi3_wrapper_hifi3_memory_ctrl9;

} HIFI3_WRAPPER_s;

#define HIFI3_WRAPPER_HIFI3_CONTROL_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_CONTROL_WRITEMASK  0xffff1f0f
#define HIFI3_WRAPPER_HIFI3_CONTROL_VOLATILEMASK  0xf0
#define HIFI3_WRAPPER_HIFI3_CONTROL_RESETMASK  0xffff1fff
#define HIFI3_WRAPPER_HIFI3_CONTROL_DEFAULT  0x400

#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_READMASK  0xfffffff0
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_WRITEMASK  0xf
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_RESETMASK  0xf
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_WRITEMASK  0xf
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_RESETMASK  0xf
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_WRITEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_VOLATILEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_WRITEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_WRITEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_WRITEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_WRITEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_WRITEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_WRITEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_WRITEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_VOLATILEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_WRITEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_VOLATILEMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_DEFAULT  0x0

#define HIFI3_WRAPPER_ALT_RESET_VECTOR_READMASK  0xffffffff
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_WRITEMASK  0xffffffff
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_RESETMASK  0xffffffff
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_DEFAULT  0x0

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_DEFAULT  0x4130413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_WRITEMASK  0x7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_RESETMASK  0x7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_DEFAULT  0x413

#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_READMASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_WRITEMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_VOLATILEMASK  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_RESETMASK  0x7fff7fff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_DEFAULT  0x4130413




/*block :  TIMER */
typedef union {
	struct {
		hwint32 enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 run : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 mode : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 continuous : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 int_enable : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 int_status : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 event_polarity : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 event_select : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 event_pre_divide : 8;	/* 16:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 3;	/* 24:26 sw=RO hw=RO 0x0  */
		hwint32 watchdog_mode : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC0_CONTROL_s;


typedef union {
	struct {
		hwint32 wd_control : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC0_WD_CONTROL_s;


typedef union {
	struct {
		hwint32 int_status : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC0_INT_STAT_s;


typedef union {
	struct {
		hwint32 terminal_count : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC0_TERMINAL_COUNT_s;


typedef union {
	struct {
		hwint32 current_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} GPTC0_CURRENT_COUNT_s;


typedef union {
	struct {
		hwint32 wd_out_control : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WD_OUT_CONTROL_s;


typedef union {
	struct {
		hwint32 enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 run : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 mode : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 continuous : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 int_enable : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 int_status : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 event_polarity : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 event_select : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 event_pre_divide : 8;	/* 16:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 3;	/* 24:26 sw=RO hw=RO 0x0  */
		hwint32 watchdog_mode : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC1_CONTROL_s;


typedef union {
	struct {
		hwint32 wd_control : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC1_WD_CONTROL_s;


typedef union {
	struct {
		hwint32 int_status : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC1_INT_STAT_s;


typedef union {
	struct {
		hwint32 terminal_count : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GPTC1_TERMINAL_COUNT_s;


typedef union {
	struct {
		hwint32 current_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} GPTC1_CURRENT_COUNT_s;


typedef union {
	struct {
		hwint32 enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 run : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 mode : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 continuous : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 int_enable : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 1;	/* 6:6 sw=RO hw=RO 0x0  */
		hwint32 event_polarity : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 event_select : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 event_pre_divide : 8;	/* 16:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_CONTROL_s;


typedef union {
	struct {
		hwint32 int_status : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_INT_STAT_s;


typedef union {
	struct {
		hwint32 terminal_count : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_TERMINAL_COUNT_s;


typedef union {
	struct {
		hwint32 current_count : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_CURRENT_COUNT_s;


typedef union {
	struct {
		hwint32 measurement_count : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_MEASUREMENT_COUNT_s;


typedef union {
	struct {
		hwint32 measurement_target : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_MEASUREMENT_TARGET_s;


typedef union {
	struct {
		hwint32 measurement_accum_error : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_MEASUREMENT_ACCUM_ERROR_s;


typedef union {
	struct {
		hwint32 measurement_accum_error_adjust : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_s;


typedef struct {
	GPTC0_CONTROL_s  gptc0_control;
	GPTC0_WD_CONTROL_s  gptc0_wd_control;
	GPTC0_INT_STAT_s  gptc0_int_stat;
	GPTC0_TERMINAL_COUNT_s  gptc0_terminal_count;
	GPTC0_CURRENT_COUNT_s  gptc0_current_count;
	WD_OUT_CONTROL_s  wd_out_control;
	hwint8 filler0[0x8];
	GPTC1_CONTROL_s  gptc1_control;
	GPTC1_WD_CONTROL_s  gptc1_wd_control;
	GPTC1_INT_STAT_s  gptc1_int_stat;
	GPTC1_TERMINAL_COUNT_s  gptc1_terminal_count;
	GPTC1_CURRENT_COUNT_s  gptc1_current_count;
	hwint8 filler1[0xc];
	SPTC0_CONTROL_s  sptc0_control;
	SPTC0_INT_STAT_s  sptc0_int_stat;
	SPTC0_TERMINAL_COUNT_s  sptc0_terminal_count;
	SPTC0_CURRENT_COUNT_s  sptc0_current_count;
	SPTC0_MEASUREMENT_COUNT_s  sptc0_measurement_count;
	SPTC0_MEASUREMENT_TARGET_s  sptc0_measurement_target;
	SPTC0_MEASUREMENT_ACCUM_ERROR_s  sptc0_measurement_accum_error;
	SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_s  sptc0_measurement_accum_error_adjust;

} TIMER_s;

#define GPTC0_CONTROL_READMASK  0xffffffff
#define GPTC0_CONTROL_WRITEMASK  0x8ffffbf
#define GPTC0_CONTROL_VOLATILEMASK  0x42
#define GPTC0_CONTROL_RESETMASK  0x8ffffff
#define GPTC0_CONTROL_DEFAULT  0x0

#define GPTC0_WD_CONTROL_READMASK  0xffffffff
#define GPTC0_WD_CONTROL_WRITEMASK  0xffffffff
#define GPTC0_WD_CONTROL_VOLATILEMASK  0x0
#define GPTC0_WD_CONTROL_RESETMASK  0xffffffff
#define GPTC0_WD_CONTROL_DEFAULT  0x0

#define GPTC0_INT_STAT_READMASK  0xfffffffe
#define GPTC0_INT_STAT_WRITEMASK  0x1
#define GPTC0_INT_STAT_VOLATILEMASK  0x1
#define GPTC0_INT_STAT_RESETMASK  0x1
#define GPTC0_INT_STAT_DEFAULT  0x0

#define GPTC0_TERMINAL_COUNT_READMASK  0xffffffff
#define GPTC0_TERMINAL_COUNT_WRITEMASK  0xffffffff
#define GPTC0_TERMINAL_COUNT_VOLATILEMASK  0x0
#define GPTC0_TERMINAL_COUNT_RESETMASK  0xffffffff
#define GPTC0_TERMINAL_COUNT_DEFAULT  0x0

#define GPTC0_CURRENT_COUNT_READMASK  0xffffffff
#define GPTC0_CURRENT_COUNT_WRITEMASK  0xffffffff
#define GPTC0_CURRENT_COUNT_VOLATILEMASK  0xffffffff
#define GPTC0_CURRENT_COUNT_RESETMASK  0xffffffff
#define GPTC0_CURRENT_COUNT_DEFAULT  0x0

#define WD_OUT_CONTROL_READMASK  0xffffffff
#define WD_OUT_CONTROL_WRITEMASK  0x1
#define WD_OUT_CONTROL_VOLATILEMASK  0x0
#define WD_OUT_CONTROL_RESETMASK  0x1
#define WD_OUT_CONTROL_DEFAULT  0x0

#define GPTC1_CONTROL_READMASK  0xffffffff
#define GPTC1_CONTROL_WRITEMASK  0x8ffffbf
#define GPTC1_CONTROL_VOLATILEMASK  0x42
#define GPTC1_CONTROL_RESETMASK  0x8ffffff
#define GPTC1_CONTROL_DEFAULT  0x0

#define GPTC1_WD_CONTROL_READMASK  0xffffffff
#define GPTC1_WD_CONTROL_WRITEMASK  0xffffffff
#define GPTC1_WD_CONTROL_VOLATILEMASK  0x0
#define GPTC1_WD_CONTROL_RESETMASK  0xffffffff
#define GPTC1_WD_CONTROL_DEFAULT  0x0

#define GPTC1_INT_STAT_READMASK  0xfffffffe
#define GPTC1_INT_STAT_WRITEMASK  0x1
#define GPTC1_INT_STAT_VOLATILEMASK  0x1
#define GPTC1_INT_STAT_RESETMASK  0x1
#define GPTC1_INT_STAT_DEFAULT  0x0

#define GPTC1_TERMINAL_COUNT_READMASK  0xffffffff
#define GPTC1_TERMINAL_COUNT_WRITEMASK  0xffffffff
#define GPTC1_TERMINAL_COUNT_VOLATILEMASK  0x0
#define GPTC1_TERMINAL_COUNT_RESETMASK  0xffffffff
#define GPTC1_TERMINAL_COUNT_DEFAULT  0x0

#define GPTC1_CURRENT_COUNT_READMASK  0xffffffff
#define GPTC1_CURRENT_COUNT_WRITEMASK  0xffffffff
#define GPTC1_CURRENT_COUNT_VOLATILEMASK  0xffffffff
#define GPTC1_CURRENT_COUNT_RESETMASK  0xffffffff
#define GPTC1_CURRENT_COUNT_DEFAULT  0x0

#define SPTC0_CONTROL_READMASK  0xffffffff
#define SPTC0_CONTROL_WRITEMASK  0xffffbf
#define SPTC0_CONTROL_VOLATILEMASK  0x2
#define SPTC0_CONTROL_RESETMASK  0xffffbf
#define SPTC0_CONTROL_DEFAULT  0x0

#define SPTC0_INT_STAT_READMASK  0xfffffffe
#define SPTC0_INT_STAT_WRITEMASK  0x1
#define SPTC0_INT_STAT_VOLATILEMASK  0x1
#define SPTC0_INT_STAT_RESETMASK  0x1
#define SPTC0_INT_STAT_DEFAULT  0x0

#define SPTC0_TERMINAL_COUNT_READMASK  0xffffffff
#define SPTC0_TERMINAL_COUNT_WRITEMASK  0xffffffff
#define SPTC0_TERMINAL_COUNT_VOLATILEMASK  0x0
#define SPTC0_TERMINAL_COUNT_RESETMASK  0xffffffff
#define SPTC0_TERMINAL_COUNT_DEFAULT  0x0

#define SPTC0_CURRENT_COUNT_READMASK  0xffffffff
#define SPTC0_CURRENT_COUNT_WRITEMASK  0xffffffff
#define SPTC0_CURRENT_COUNT_VOLATILEMASK  0x0
#define SPTC0_CURRENT_COUNT_RESETMASK  0xffffffff
#define SPTC0_CURRENT_COUNT_DEFAULT  0x0

#define SPTC0_MEASUREMENT_COUNT_READMASK  0xffffffff
#define SPTC0_MEASUREMENT_COUNT_WRITEMASK  0x0
#define SPTC0_MEASUREMENT_COUNT_VOLATILEMASK  0xffffffff
#define SPTC0_MEASUREMENT_COUNT_RESETMASK  0xffffffff
#define SPTC0_MEASUREMENT_COUNT_DEFAULT  0x0

#define SPTC0_MEASUREMENT_TARGET_READMASK  0xffffffff
#define SPTC0_MEASUREMENT_TARGET_WRITEMASK  0xffffffff
#define SPTC0_MEASUREMENT_TARGET_VOLATILEMASK  0x0
#define SPTC0_MEASUREMENT_TARGET_RESETMASK  0xffffffff
#define SPTC0_MEASUREMENT_TARGET_DEFAULT  0x0

#define SPTC0_MEASUREMENT_ACCUM_ERROR_READMASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_WRITEMASK  0x0
#define SPTC0_MEASUREMENT_ACCUM_ERROR_VOLATILEMASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_RESETMASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_DEFAULT  0x0

#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_READMASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_WRITEMASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_VOLATILEMASK  0x0
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_RESETMASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_DEFAULT  0x0




/*block :  PMU */
typedef union {
	struct {
		hwint32 pmu_current_power_state : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PMU_CURRENT_POWER_STATE_s;


typedef union {
	struct {
		hwint32 pmu_sse_pwr_on : 1;	/* 0:0 sw=RW hw=RW 0x0  */
		hwint32 pmu_dsp_pwr_on : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 pmu_sharemem_pwr_on : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 pmu_hifi3_pwr_on : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 pmu_sse_rst_n : 1;	/* 4:4 sw=RW hw=RW 0x0  */
		hwint32 pmu_dsp_rst_n : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 pmu_sharemem_rst_n : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 pmu_hifi3_rst_n : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 pmu_sse_isolatn : 1;	/* 8:8 sw=RW hw=RW 0x0  */
		hwint32 pmu_dsp_isolatn : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 pmu_sharemem_isolatn : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 pmu_hifi3_isolatn : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 pmu_sse_clk_en : 1;	/* 12:12 sw=RW hw=RW 0x0  */
		hwint32 pmu_dsp_clk_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 pmu_sharemem_clk_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 pmu_hifi3_clk_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 12;	/* 16:27 sw=RO hw=RO 0x0  */
		hwint32 pmu_sse_pwr_ack : 1;	/* 28:28 sw=RO hw=RO 0x0  */
		hwint32 pmu_dsp_pwr_ack : 1;	/* 29:29 sw=RO hw=RO 0x0  */
		hwint32 pmu_sharemem_pwr_ack : 1;	/* 30:30 sw=RO hw=RO 0x0  */
		hwint32 pmu_hifi3_pwr_ack : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PMU_PWR_SEQ_CONTROL_s;


typedef union {
	struct {
		hwint32 pmu_vad_wake : 1;	/* 0:0 sw=W1C hw=RO 0x0  */
		hwint32 pmu_bat_wake : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 pmu_elk_wake : 1;	/* 2:2 sw=W1C hw=RO 0x0  */
		hwint32 pmu_button_press_wake : 1;	/* 3:3 sw=W1C hw=RO 0x0  */
		hwint32 pmu_gp_wake : 27;	/* 4:30 sw=W1C hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PMU_PMU_INTERRUPT_s;


typedef union {
	struct {
		hwint32 pmu_vad_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 pmu_bat_enable : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 pmu_elk_wake_enable : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 pmu_button_press_wake_enable : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 pmu_gp_enable : 27;	/* 4:30 sw=RW hw=RO 0x0  */
		hwint32 reg_pmu_async_wake_en : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PMU_PMU_INTERRUPT_ENABLE_s;


typedef union {
	struct {
		hwint32 pmu_vad_polarity : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 pmu_bat_polarity : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 pmu_elk_polarity : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 pmu_button_polarity : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 pmu_gpio_polarity : 27;	/* 4:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PMU_PORITY_CONTROL_s;


typedef union {
	struct {
		hwint32 pmu_vad_det : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 pmu_bat_is_low : 1;	/* 1:1 sw=RO hw=RO 0x0  */
		hwint32 pmu_elk_wake_src : 1;	/* 2:2 sw=RO hw=RO 0x0  */
		hwint32 pmu_button_press_status : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PMU_WAKE_SRC_STATUS_s;


typedef union {
	struct {
		hwint32 reg_pmu_rcosc_dis : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PMU_RCOSC_CONTROL_s;


typedef struct {
	PMU_CURRENT_POWER_STATE_s  pmu_current_power_state;
	PMU_PWR_SEQ_CONTROL_s  pmu_pwr_seq_control;
	hwint8 filler0[0x8];
	PMU_PMU_INTERRUPT_s  pmu_pmu_interrupt;
	PMU_PMU_INTERRUPT_ENABLE_s  pmu_pmu_interrupt_enable;
	PMU_PORITY_CONTROL_s  pmu_pority_control;
	PMU_WAKE_SRC_STATUS_s  pmu_wake_src_status;
	PMU_RCOSC_CONTROL_s  pmu_rcosc_control;

} PMU_s;

#define PMU_CURRENT_POWER_STATE_READMASK  0xffffffff
#define PMU_CURRENT_POWER_STATE_WRITEMASK  0xffffffff
#define PMU_CURRENT_POWER_STATE_VOLATILEMASK  0x0
#define PMU_CURRENT_POWER_STATE_RESETMASK  0xffffffff
#define PMU_CURRENT_POWER_STATE_DEFAULT  0x0

#define PMU_PWR_SEQ_CONTROL_READMASK  0xffffffff
#define PMU_PWR_SEQ_CONTROL_WRITEMASK  0xffff
#define PMU_PWR_SEQ_CONTROL_VOLATILEMASK  0x1111
#define PMU_PWR_SEQ_CONTROL_RESETMASK  0xf000ffff
#define PMU_PWR_SEQ_CONTROL_DEFAULT  0x0

#define PMU_PMU_INTERRUPT_READMASK  0x80000000
#define PMU_PMU_INTERRUPT_WRITEMASK  0x7fffffff
#define PMU_PMU_INTERRUPT_VOLATILEMASK  0x0
#define PMU_PMU_INTERRUPT_RESETMASK  0x7fffffff
#define PMU_PMU_INTERRUPT_DEFAULT  0x0

#define PMU_PMU_INTERRUPT_ENABLE_READMASK  0xffffffff
#define PMU_PMU_INTERRUPT_ENABLE_WRITEMASK  0xffffffff
#define PMU_PMU_INTERRUPT_ENABLE_VOLATILEMASK  0x0
#define PMU_PMU_INTERRUPT_ENABLE_RESETMASK  0xffffffff
#define PMU_PMU_INTERRUPT_ENABLE_DEFAULT  0x0

#define PMU_PORITY_CONTROL_READMASK  0xffffffff
#define PMU_PORITY_CONTROL_WRITEMASK  0x7fffffff
#define PMU_PORITY_CONTROL_VOLATILEMASK  0x0
#define PMU_PORITY_CONTROL_RESETMASK  0x7fffffff
#define PMU_PORITY_CONTROL_DEFAULT  0x4

#define PMU_WAKE_SRC_STATUS_READMASK  0xffffffff
#define PMU_WAKE_SRC_STATUS_WRITEMASK  0x0
#define PMU_WAKE_SRC_STATUS_VOLATILEMASK  0x0
#define PMU_WAKE_SRC_STATUS_RESETMASK  0xf
#define PMU_WAKE_SRC_STATUS_DEFAULT  0x0

#define PMU_RCOSC_CONTROL_READMASK  0xffffffff
#define PMU_RCOSC_CONTROL_WRITEMASK  0x1
#define PMU_RCOSC_CONTROL_VOLATILEMASK  0x0
#define PMU_RCOSC_CONTROL_RESETMASK  0x1
#define PMU_RCOSC_CONTROL_DEFAULT  0x0




/*block :  EARLINK_TOP_COM */
typedef union {
	struct {
		hwint32 earlink_tx_delay : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 earlink_rx_delay : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_multiplier : 8;	/* 16:23 sw=RO hw=RO 0x50  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_TIMING_CTRL0_s;


typedef union {
	struct {
		hwint32 earlink_zero_marker_start : 8;	/* 0:7 sw=RW hw=RO 0x94  */
		hwint32 earlink_one_marker_start : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 earlink_frame_sync_trun_around_1_start : 8;	/* 16:23 sw=RW hw=RO 0xc  */
		hwint32 earlink_command_reply_start : 8;	/* 24:31 sw=RW hw=RO 0x18  */
	} bf;
	hwint32 dw;
} EARLINK_TIMING_CTRL1_s;


typedef union {
	struct {
		hwint32 earlink_forward_data_start : 8;	/* 0:7 sw=RW hw=RO 0x24  */
		hwint32 earlink_forward_data_bit_width : 8;	/* 8:15 sw=RW hw=RO 0xc  */
		hwint32 reserved16 : 8;	/* 16:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_trun_around_2_start : 8;	/* 24:31 sw=RW hw=RO 0x54  */
	} bf;
	hwint32 dw;
} EARLINK_TIMING_CTRL2_s;


typedef union {
	struct {
		hwint32 earlink_backward_wave_start : 8;	/* 0:7 sw=RW hw=RO 0x60  */
		hwint32 earlink_backward_data_bit_width : 8;	/* 8:15 sw=RW hw=RO 0xc  */
		hwint32 reserved16 : 8;	/* 16:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_void_start : 8;	/* 24:31 sw=RW hw=RO 0x90  */
	} bf;
	hwint32 dw;
} EARLINK_TIMING_CTRL3_s;


typedef union {
	struct {
		hwint32 earlink_cmd_tx_buf_full : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 earlink_cmd_tx_buf_empty : 1;	/* 1:1 sw=RO hw=RW 0x1  */
		hwint32 earlink_cmd_tx_buf_almost_full : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 earlink_cmd_tx_buf_almost_empty : 1;	/* 3:3 sw=RO hw=RW 0x1  */
		hwint32 earlink_cmd_rx_buf_full : 1;	/* 4:4 sw=RO hw=RW 0x0  */
		hwint32 earlink_cmd_rx_buf_empty : 1;	/* 5:5 sw=RO hw=RW 0x1  */
		hwint32 earlink_cmd_rx_buf_almost_full : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 earlink_cmd_rx_buf_almost_empty : 1;	/* 7:7 sw=RO hw=RW 0x1  */
		hwint32 reserved8 : 8;	/* 8:15 sw=RO hw=RO 0x0  */
		hwint32 earlink_cmd_tx_buf_aempty_level : 4;	/* 16:19 sw=RW hw=RO 0x2  */
		hwint32 earlink_cmd_tx_buf_afull_level : 4;	/* 20:23 sw=RW hw=RO 0x6  */
		hwint32 earlink_cmd_rx_buf_aempty_level : 4;	/* 24:27 sw=RW hw=RO 0x2  */
		hwint32 earlink_cmd_rx_buf_afull_level : 4;	/* 28:31 sw=RW hw=RO 0x6  */
	} bf;
	hwint32 dw;
} EARLINK_CMD_BUF_CTRL_s;


typedef union {
	struct {
		hwint32 earlink_slv_or_mst : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 reserved1 : 3;	/* 1:3 sw=RO hw=RO 0x0  */
		hwint32 earlink_tx_data_chg_share_enable : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 reserved5 : 3;	/* 5:7 sw=RO hw=RO 0x0  */
		hwint32 earlink_chg_share_width : 5;	/* 8:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 19;	/* 13:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_DEVICE_CTRL_s;


typedef union {
	struct {
		hwint32 earlink_tx_buf_full : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 earlink_tx_buf_empty : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 earlink_tx_buf_almost_full : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 earlink_tx_buf_almost_empty : 1;	/* 3:3 sw=W1C hw=RW 0x0  */
		hwint32 earlink_rx_buf_full : 1;	/* 4:4 sw=W1C hw=RW 0x0  */
		hwint32 earlink_rx_buf_empty : 1;	/* 5:5 sw=W1C hw=RW 0x0  */
		hwint32 earlink_rx_buf_almost_full : 1;	/* 6:6 sw=W1C hw=RW 0x0  */
		hwint32 earlink_rx_buf_almost_empty : 1;	/* 7:7 sw=W1C hw=RW 0x0  */
		hwint32 reserved8 : 14;	/* 8:21 sw=RO hw=RO 0x0  */
		hwint32 earlink_crc_wrong : 1;	/* 22:22 sw=W1C hw=RW 0x0  */
		hwint32 reserved23 : 1;	/* 23:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_bulk_tx_done_sys : 1;	/* 24:24 sw=W1C hw=RW 0x0  */
		hwint32 earlink_bulk_rx_done_sys : 1;	/* 25:25 sw=W1C hw=RW 0x0  */
		hwint32 earlink_command_done : 1;	/* 26:26 sw=W1C hw=RW 0x0  */
		hwint32 earlink_command_started : 1;	/* 27:27 sw=W1C hw=RW 0x0  */
		hwint32 earlink_at : 1;	/* 28:28 sw=W1C hw=RW 0x0  */
		hwint32 earlink_bulk_auto_stop_err : 1;	/* 29:29 sw=W1C hw=RW 0x0  */
		hwint32 earlink_invalid_command_sys : 1;	/* 30:30 sw=W1C hw=RW 0x0  */
		hwint32 earlink_attached_sys_update : 1;	/* 31:31 sw=W1C hw=RW 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_IRQ_TO_SYS_s;


typedef union {
	struct {
		hwint32 earlink_tx_buf_full_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 earlink_tx_buf_empty_enable : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 earlink_tx_buf_afull_enable : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 earlink_tx_buf_aempty_enable : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 earlink_rx_buf_full_enable : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 earlink_rx_buf_empty_enable : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 earlink_rx_buf_afull_enable : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 earlink_rx_buf_aempty_enable : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 14;	/* 8:21 sw=RO hw=RO 0x0  */
		hwint32 earlink_crc_wrong_enable : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 reserved23 : 1;	/* 23:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_bulk_tx_done_sys_enable : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 earlink_bulk_rx_done_sys_enable : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 earlink_command_done_enable : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 earlink_command_started_enable : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 earlink_at_enable : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 earlink_bulk_auto_stop_err_enable : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 earlink_invalid_command_sys_enable : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 earlink_attached_update_sys_enable : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_IRQ_TO_SYS_ENABLE_s;


typedef union {
	struct {
		hwint32 earlink_portx_irq_sys : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_PORT_IRQ_TO_SYS_s;


typedef union {
	struct {
		hwint32 earlink_port_irq_sys_enable : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_PORT_IRQ_TO_SYS_ENABLE_s;


typedef union {
	struct {
		hwint32 earlink_command_rx : 3;	/* 0:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 earlink_dest_dev_id_rx : 3;	/* 4:6 sw=RO hw=RW 0x0  */
		hwint32 reserved7 : 2;	/* 7:8 sw=RO hw=RO 0x0  */
		hwint32 earlink_crc_err : 1;	/* 9:9 sw=RO hw=RW 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_COMMAND_CTRL_RX_BUF_s;


typedef union {
	struct {
		hwint32 earlink_command_data_rx : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_COMMAND_RX_DATA_s;


typedef union {
	struct {
		hwint32 earlink_port_clk_gate : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} EARLINK_PORT_CLK_ENABLE_CONTROL_s;


typedef union {
	struct {
		hwint32 earlink_device_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_DEVICE_ENABLE_s;


typedef union {
	struct {
		hwint32 earlink_update_lock_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_TIMING_UPDATE_SYS_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 earlink_tx_out_level_vcore : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 earlink_pull_up_en_vcore : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 earlink_pull_down_en_vcore : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 earlink_rx_en_vcore : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 earlink_wakeup_dtct_en_vcore : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 earlink_rx_hyst_ctrl_vcore : 2;	/* 8:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 earlink_phy_tx_rterm_trim_vcore : 4;	/* 12:15 sw=RW hw=RO 0x8  */
		hwint32 earlink_phy_rx_rterm_trim_vcore : 4;	/* 16:19 sw=RW hw=RO 0x8  */
		hwint32 earlink_phy_rterm_value_vcore : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 reserved22 : 2;	/* 22:23 sw=RO hw=RO 0x0  */
		hwint32 earlinkphy_cp_en_vcore : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 reserved25 : 3;	/* 25:27 sw=RO hw=RO 0x0  */
		hwint32 earlinkphy_cp_drv_slew_vcore : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 reserved30 : 1;	/* 30:30 sw=RO hw=RO 0x0  */
		hwint32 earlinkphy_cp_out_ok_vcore : 1;	/* 31:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_PHY_CONIFG0_s;


typedef union {
	struct {
		hwint32 earlink_tx_out_slew_vcore : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_PHY_CONIFG1_s;


typedef union {
	struct {
		hwint32 test_probe_strobe_mux_en_vcore : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 3;	/* 1:3 sw=RO hw=RO 0x0  */
		hwint32 test_aprobe_sel_vcore : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 test_dprobe_sel0_vcore : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 test_dprobe_sel1_vcore : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_post_div : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_lrf_mode : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 elink_pll_post_div : 2;	/* 19:20 sw=RW hw=RO 0x0  */
		hwint32 elink_pll_lrf_mode : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_vco_branch2_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 elink_pll_vco_branch2_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 earlinkphy_rx_diffterm_en_vcore : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 reserved25 : 5;	/* 25:29 sw=RO hw=RO 0x0  */
		hwint32 test_dprobe_out : 2;	/* 30:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_PHY_TEST_s;


typedef union {
	struct {
		hwint32 tmod_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 tmod_sel : 3;	/* 1:3 sw=RW hw=RO 0x7  */
		hwint32 ext_cyc_rx_smpl : 3;	/* 4:6 sw=RW hw=RO 0x4  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 width_per_bit_rx_data : 3;	/* 8:10 sw=RW hw=RO 0x5  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_TEST_BUS_CFG_s;


typedef struct {
	EARLINK_TIMING_CTRL0_s  earlink_timing_ctrl0;
	EARLINK_TIMING_CTRL1_s  earlink_timing_ctrl1;
	EARLINK_TIMING_CTRL2_s  earlink_timing_ctrl2;
	EARLINK_TIMING_CTRL3_s  earlink_timing_ctrl3;
	EARLINK_CMD_BUF_CTRL_s  earlink_cmd_buf_ctrl;
	EARLINK_DEVICE_CTRL_s  earlink_device_ctrl;
	EARLINK_IRQ_TO_SYS_s  earlink_irq_to_sys;
	EARLINK_IRQ_TO_SYS_ENABLE_s  earlink_irq_to_sys_enable;
	EARLINK_PORT_IRQ_TO_SYS_s  earlink_port_irq_to_sys;
	EARLINK_PORT_IRQ_TO_SYS_ENABLE_s  earlink_port_irq_to_sys_enable;
	EARLINK_COMMAND_CTRL_RX_BUF_s  earlink_command_ctrl_rx_buf;
	EARLINK_COMMAND_RX_DATA_s  earlink_command_rx_data;
	EARLINK_PORT_CLK_ENABLE_CONTROL_s  earlink_port_clk_enable_control;
	EARLINK_DEVICE_ENABLE_s  earlink_device_enable;
	EARLINK_TIMING_UPDATE_SYS_s  earlink_timing_update_sys;
	EARLINK_PHY_CONIFG0_s  earlink_phy_conifg0;
	EARLINK_PHY_CONIFG1_s  earlink_phy_conifg1;
	EARLINK_PHY_TEST_s  earlink_phy_test;
	hwint8 filler0[0x4];
	EARLINK_TEST_BUS_CFG_s  earlink_test_bus_cfg;

} EARLINK_TOP_COM_s;

#define EARLINK_TIMING_CTRL0_READMASK  0xffffffff
#define EARLINK_TIMING_CTRL0_WRITEMASK  0xffff
#define EARLINK_TIMING_CTRL0_VOLATILEMASK  0x0
#define EARLINK_TIMING_CTRL0_RESETMASK  0xffffff
#define EARLINK_TIMING_CTRL0_DEFAULT  0x500000

#define EARLINK_TIMING_CTRL1_READMASK  0xffffffff
#define EARLINK_TIMING_CTRL1_WRITEMASK  0xffffffff
#define EARLINK_TIMING_CTRL1_VOLATILEMASK  0x0
#define EARLINK_TIMING_CTRL1_RESETMASK  0xffffffff
#define EARLINK_TIMING_CTRL1_DEFAULT  0x180c0094

#define EARLINK_TIMING_CTRL2_READMASK  0xffffffff
#define EARLINK_TIMING_CTRL2_WRITEMASK  0xff00ffff
#define EARLINK_TIMING_CTRL2_VOLATILEMASK  0x0
#define EARLINK_TIMING_CTRL2_RESETMASK  0xff00ffff
#define EARLINK_TIMING_CTRL2_DEFAULT  0x54000c24

#define EARLINK_TIMING_CTRL3_READMASK  0xffffffff
#define EARLINK_TIMING_CTRL3_WRITEMASK  0xff00ffff
#define EARLINK_TIMING_CTRL3_VOLATILEMASK  0x0
#define EARLINK_TIMING_CTRL3_RESETMASK  0xff00ffff
#define EARLINK_TIMING_CTRL3_DEFAULT  0x90000c60

#define EARLINK_CMD_BUF_CTRL_READMASK  0xffffffff
#define EARLINK_CMD_BUF_CTRL_WRITEMASK  0xffff0000
#define EARLINK_CMD_BUF_CTRL_VOLATILEMASK  0xff
#define EARLINK_CMD_BUF_CTRL_RESETMASK  0xffff00ff
#define EARLINK_CMD_BUF_CTRL_DEFAULT  0x626200aa

#define EARLINK_DEVICE_CTRL_READMASK  0xffffffff
#define EARLINK_DEVICE_CTRL_WRITEMASK  0x1f11
#define EARLINK_DEVICE_CTRL_VOLATILEMASK  0x0
#define EARLINK_DEVICE_CTRL_RESETMASK  0x1f11
#define EARLINK_DEVICE_CTRL_DEFAULT  0x11

#define EARLINK_IRQ_TO_SYS_READMASK  0xbfff00
#define EARLINK_IRQ_TO_SYS_WRITEMASK  0xff4000ff
#define EARLINK_IRQ_TO_SYS_VOLATILEMASK  0xff4000ff
#define EARLINK_IRQ_TO_SYS_RESETMASK  0xff4000ff
#define EARLINK_IRQ_TO_SYS_DEFAULT  0x0

#define EARLINK_IRQ_TO_SYS_ENABLE_READMASK  0xffffffff
#define EARLINK_IRQ_TO_SYS_ENABLE_WRITEMASK  0xff4000ff
#define EARLINK_IRQ_TO_SYS_ENABLE_VOLATILEMASK  0x0
#define EARLINK_IRQ_TO_SYS_ENABLE_RESETMASK  0xff4000ff
#define EARLINK_IRQ_TO_SYS_ENABLE_DEFAULT  0x0

#define EARLINK_PORT_IRQ_TO_SYS_READMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_WRITEMASK  0x0
#define EARLINK_PORT_IRQ_TO_SYS_VOLATILEMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_RESETMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_DEFAULT  0x0

#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_READMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_WRITEMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_VOLATILEMASK  0x0
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_RESETMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_DEFAULT  0x0

#define EARLINK_COMMAND_CTRL_RX_BUF_READMASK  0xffffffff
#define EARLINK_COMMAND_CTRL_RX_BUF_WRITEMASK  0x0
#define EARLINK_COMMAND_CTRL_RX_BUF_VOLATILEMASK  0x277
#define EARLINK_COMMAND_CTRL_RX_BUF_RESETMASK  0x277
#define EARLINK_COMMAND_CTRL_RX_BUF_DEFAULT  0x0

#define EARLINK_COMMAND_RX_DATA_READMASK  0xffffffff
#define EARLINK_COMMAND_RX_DATA_WRITEMASK  0x0
#define EARLINK_COMMAND_RX_DATA_VOLATILEMASK  0xffffffff
#define EARLINK_COMMAND_RX_DATA_RESETMASK  0xffffffff
#define EARLINK_COMMAND_RX_DATA_DEFAULT  0x0

#define EARLINK_PORT_CLK_ENABLE_CONTROL_READMASK  0xffffffff
#define EARLINK_PORT_CLK_ENABLE_CONTROL_WRITEMASK  0xffffffff
#define EARLINK_PORT_CLK_ENABLE_CONTROL_VOLATILEMASK  0x0
#define EARLINK_PORT_CLK_ENABLE_CONTROL_RESETMASK  0xffffffff
#define EARLINK_PORT_CLK_ENABLE_CONTROL_DEFAULT  0xffffffff

#define EARLINK_DEVICE_ENABLE_READMASK  0xffffffff
#define EARLINK_DEVICE_ENABLE_WRITEMASK  0x1
#define EARLINK_DEVICE_ENABLE_VOLATILEMASK  0x0
#define EARLINK_DEVICE_ENABLE_RESETMASK  0x1
#define EARLINK_DEVICE_ENABLE_DEFAULT  0x0

#define EARLINK_TIMING_UPDATE_SYS_READMASK  0xffffffff
#define EARLINK_TIMING_UPDATE_SYS_WRITEMASK  0x1
#define EARLINK_TIMING_UPDATE_SYS_VOLATILEMASK  0x0
#define EARLINK_TIMING_UPDATE_SYS_RESETMASK  0x1
#define EARLINK_TIMING_UPDATE_SYS_DEFAULT  0x0

#define EARLINK_PHY_CONIFG0_READMASK  0xffffffff
#define EARLINK_PHY_CONIFG0_WRITEMASK  0x313ff3fc
#define EARLINK_PHY_CONIFG0_VOLATILEMASK  0x80000000
#define EARLINK_PHY_CONIFG0_RESETMASK  0xb13ff3fc
#define EARLINK_PHY_CONIFG0_DEFAULT  0x88000

#define EARLINK_PHY_CONIFG1_READMASK  0xffffffff
#define EARLINK_PHY_CONIFG1_WRITEMASK  0xf
#define EARLINK_PHY_CONIFG1_VOLATILEMASK  0x0
#define EARLINK_PHY_CONIFG1_RESETMASK  0xf
#define EARLINK_PHY_CONIFG1_DEFAULT  0x3

#define EARLINK_PHY_TEST_READMASK  0xffffffff
#define EARLINK_PHY_TEST_WRITEMASK  0x1fffff1
#define EARLINK_PHY_TEST_VOLATILEMASK  0xc0000000
#define EARLINK_PHY_TEST_RESETMASK  0xc1fffff1
#define EARLINK_PHY_TEST_DEFAULT  0x0

#define EARLINK_TEST_BUS_CFG_READMASK  0xffffffff
#define EARLINK_TEST_BUS_CFG_WRITEMASK  0x77f
#define EARLINK_TEST_BUS_CFG_VOLATILEMASK  0x0
#define EARLINK_TEST_BUS_CFG_RESETMASK  0x77f
#define EARLINK_TEST_BUS_CFG_DEFAULT  0x54e




/*block :  EARLINK_TOP_SLV */
typedef union {
	struct {
		hwint32 earlink_device_id : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 earlink_attached : 1;	/* 4:4 sw=RO hw=RO 0x0  */
		hwint32 reserved5 : 3;	/* 5:7 sw=RO hw=RO 0x0  */
		hwint32 earlink_slave_system_addr_format : 2;	/* 8:9 sw=RW hw=RO 0x3  */
		hwint32 reserved10 : 14;	/* 10:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_pll_time_gate_width : 8;	/* 24:31 sw=RW hw=RO 0x33  */
	} bf;
	hwint32 dw;
} EARLINK_DEVICE_CTRL_SLAVE_ONLY_s;


typedef union {
	struct {
		hwint32 reserved0 : 21;	/* 0:20 sw=RO hw=RO 0x0  */
		hwint32 earlink_soft_irq_master : 1;	/* 21:21 sw=RW hw=RW 0x0  */
		hwint32 earlink_crc_wrong_master : 1;	/* 22:22 sw=RO hw=RW 0x0  */
		hwint32 reserved23 : 1;	/* 23:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_bulk_tx_done_master : 1;	/* 24:24 sw=RO hw=RW 0x0  */
		hwint32 earlink_bulk_rx_done_master : 1;	/* 25:25 sw=RO hw=RW 0x0  */
		hwint32 reserved26 : 4;	/* 26:29 sw=RO hw=RO 0x0  */
		hwint32 earlink_invaild_command_master : 1;	/* 30:30 sw=RO hw=RW 0x0  */
		hwint32 earlink_attached_master_update : 1;	/* 31:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_IRQ_TO_MASTER_s;


typedef union {
	struct {
		hwint32 reserved0 : 21;	/* 0:20 sw=RO hw=RO 0x0  */
		hwint32 earlink_soft_irq_master_enable : 1;	/* 21:21 sw=RW hw=RO 0x1  */
		hwint32 earlink_wrong_master_enable : 1;	/* 22:22 sw=RW hw=RO 0x1  */
		hwint32 reserved23 : 1;	/* 23:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_bulk_tx_done_master_enable : 1;	/* 24:24 sw=RW hw=RO 0x1  */
		hwint32 earlink_bulk_rx_done_master_enable : 1;	/* 25:25 sw=RW hw=RO 0x1  */
		hwint32 reserved26 : 4;	/* 26:29 sw=RO hw=RO 0x0  */
		hwint32 earlink_invalid_command_master_enable : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 earlink_attached_update_master_enable : 1;	/* 31:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} EARLINK_IRQ_TO_MASTER_ENABLE_s;


typedef union {
	struct {
		hwint32 earlink_portx_irq_master : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_PORT_IRQ_TO_MASTER_s;


typedef union {
	struct {
		hwint32 earlink_portx_irq_master_enable : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} EARLINK_PORT_IRQ_TO_MASTER_ENABLE_s;


typedef union {
	struct {
		hwint32 earlink_update_lock_master : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_TIMING_UPDATE_MASTER_s;


typedef struct {
	EARLINK_DEVICE_CTRL_SLAVE_ONLY_s  earlink_device_ctrl_slave_only;
	EARLINK_IRQ_TO_MASTER_s  earlink_irq_to_master;
	EARLINK_IRQ_TO_MASTER_ENABLE_s  earlink_irq_to_master_enable;
	EARLINK_PORT_IRQ_TO_MASTER_s  earlink_port_irq_to_master;
	EARLINK_PORT_IRQ_TO_MASTER_ENABLE_s  earlink_port_irq_to_master_enable;
	EARLINK_TIMING_UPDATE_MASTER_s  earlink_timing_update_master;

} EARLINK_TOP_SLV_s;

#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_READMASK  0xffffffff
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_WRITEMASK  0xff000307
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_VOLATILEMASK  0x0
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_RESETMASK  0xff000317
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_DEFAULT  0x33000300

#define EARLINK_IRQ_TO_MASTER_READMASK  0xffffffff
#define EARLINK_IRQ_TO_MASTER_WRITEMASK  0x200000
#define EARLINK_IRQ_TO_MASTER_VOLATILEMASK  0xc3600000
#define EARLINK_IRQ_TO_MASTER_RESETMASK  0xc3600000
#define EARLINK_IRQ_TO_MASTER_DEFAULT  0x0

#define EARLINK_IRQ_TO_MASTER_ENABLE_READMASK  0xffffffff
#define EARLINK_IRQ_TO_MASTER_ENABLE_WRITEMASK  0xc3600000
#define EARLINK_IRQ_TO_MASTER_ENABLE_VOLATILEMASK  0x0
#define EARLINK_IRQ_TO_MASTER_ENABLE_RESETMASK  0xc3600000
#define EARLINK_IRQ_TO_MASTER_ENABLE_DEFAULT  0xc3600000

#define EARLINK_PORT_IRQ_TO_MASTER_READMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_WRITEMASK  0x0
#define EARLINK_PORT_IRQ_TO_MASTER_VOLATILEMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_RESETMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_DEFAULT  0x0

#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_READMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_WRITEMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_VOLATILEMASK  0x0
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_RESETMASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_DEFAULT  0xffffffff

#define EARLINK_TIMING_UPDATE_MASTER_READMASK  0xffffffff
#define EARLINK_TIMING_UPDATE_MASTER_WRITEMASK  0x1
#define EARLINK_TIMING_UPDATE_MASTER_VOLATILEMASK  0x0
#define EARLINK_TIMING_UPDATE_MASTER_RESETMASK  0x1
#define EARLINK_TIMING_UPDATE_MASTER_DEFAULT  0x0




/*block :  EARLINK_TOP_MST */
typedef union {
	struct {
		hwint32 earlink_command : 3;	/* 0:2 sw=WO hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 earlink_dest_dev_id : 3;	/* 4:6 sw=WO hw=RO 0x0  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 earlink_command_store : 1;	/* 8:8 sw=WO hw=RO 0x0  */
		hwint32 reserved9 : 7;	/* 9:15 sw=RO hw=RO 0x0  */
		hwint32 earlink_bulk_frame_num : 8;	/* 16:23 sw=WO hw=RO 0x1  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_COMMAND_CTRL_TX_BUF_s;


typedef union {
	struct {
		hwint32 earlink_command_data : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_COMMAND_TX_DATA_s;


typedef union {
	struct {
		hwint32 earlink_fa_divide : 12;	/* 0:11 sw=RW hw=RO 0x60  */
		hwint32 deviceidforsynccmd : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 earlink_sa_divide : 16;	/* 16:31 sw=RW hw=RO 0x780  */
	} bf;
	hwint32 dw;
} EARLINK_AUDIO_SYNC_DIVIDER_s;


typedef struct {
	EARLINK_COMMAND_CTRL_TX_BUF_s  earlink_command_ctrl_tx_buf;
	EARLINK_COMMAND_TX_DATA_s  earlink_command_tx_data;
	EARLINK_AUDIO_SYNC_DIVIDER_s  earlink_audio_sync_divider;

} EARLINK_TOP_MST_s;

#define EARLINK_COMMAND_CTRL_TX_BUF_READMASK  0xff00fe88
#define EARLINK_COMMAND_CTRL_TX_BUF_WRITEMASK  0xff0177
#define EARLINK_COMMAND_CTRL_TX_BUF_VOLATILEMASK  0x0
#define EARLINK_COMMAND_CTRL_TX_BUF_RESETMASK  0xff0177
#define EARLINK_COMMAND_CTRL_TX_BUF_DEFAULT  0x10000

#define EARLINK_COMMAND_TX_DATA_READMASK  0xffffffff
#define EARLINK_COMMAND_TX_DATA_WRITEMASK  0xffffffff
#define EARLINK_COMMAND_TX_DATA_VOLATILEMASK  0x0
#define EARLINK_COMMAND_TX_DATA_RESETMASK  0xffffffff
#define EARLINK_COMMAND_TX_DATA_DEFAULT  0x0

#define EARLINK_AUDIO_SYNC_DIVIDER_READMASK  0xffffffff
#define EARLINK_AUDIO_SYNC_DIVIDER_WRITEMASK  0xffff7fff
#define EARLINK_AUDIO_SYNC_DIVIDER_VOLATILEMASK  0x0
#define EARLINK_AUDIO_SYNC_DIVIDER_RESETMASK  0xffff7fff
#define EARLINK_AUDIO_SYNC_DIVIDER_DEFAULT  0x7800060




/*block :  EARLINK_PORT */
typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT0_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT0_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT0_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT0_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT0_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT0_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT0_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT0_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT0_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT0_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT0_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT0_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT0_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT1_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT1_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT1_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT1_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT1_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT1_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT1_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT1_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT1_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT1_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT1_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT1_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT1_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT2_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT2_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT2_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT2_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT2_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT2_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT2_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT2_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT2_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT2_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT2_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT2_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT2_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT3_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT3_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT3_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT3_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT3_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT3_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT3_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT3_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT3_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT3_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT3_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT3_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT3_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT4_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT4_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT4_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT4_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT4_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT4_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT4_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT4_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT4_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT4_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT4_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT4_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT4_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT5_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT5_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT5_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT5_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT5_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT5_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT5_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT5_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT5_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT5_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT5_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT5_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT5_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT6_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT6_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT6_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT6_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT6_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT6_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT6_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT6_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT6_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT6_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT6_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT6_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT6_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT7_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT7_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT7_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT7_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT7_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT7_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT7_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT7_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT7_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT7_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT7_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT7_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT7_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT8_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT8_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT8_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT8_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT8_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT8_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT8_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT8_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT8_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT8_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT8_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT8_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT8_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT9_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT9_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT9_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT9_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT9_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT9_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT9_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT9_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT9_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT9_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT9_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT9_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT9_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT10_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT10_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT10_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT10_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT10_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT10_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT10_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT10_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT10_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT10_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT10_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT10_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT10_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT11_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT11_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT11_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT11_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT11_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT11_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT11_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT11_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT11_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT11_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT11_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT11_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT11_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT12_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT12_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT12_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT12_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT12_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT12_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT12_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT12_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT12_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT12_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT12_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT12_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT12_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT13_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT13_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT13_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT13_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT13_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT13_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT13_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT13_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT13_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT13_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT13_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT13_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT13_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT14_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT14_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT14_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT14_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT14_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT14_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT14_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT14_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT14_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT14_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT14_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT14_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT14_s;


typedef union {
	struct {
		hwint32 bank_switch : 8;	/* 0:7 sw=RW hw=RW 0x53  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BANK_SWITCH_REGISTER_PORT15_s;


typedef union {
	struct {
		hwint32 first_row : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_PORT15_s;


typedef union {
	struct {
		hwint32 data_type : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_PORT15_s;


typedef union {
	struct {
		hwint32 port_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_PORT15_s;


typedef union {
	struct {
		hwint32 first_row_shadow : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 first_row_multiplier_shadow : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 row_increment_shadow : 6;	/* 8:13 sw=RW hw=RO 0x1  */
		hwint32 increment_multiplier_shadow : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 first_column_shadow : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 last_column_shadow : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 length_shadow : 5;	/* 24:28 sw=RW hw=RO 0x1  */
		hwint32 fast_slow_audio_sync_shadow : 2;	/* 29:30 sw=RW hw=RO 0x1  */
		hwint32 wave_shadow : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROW_COLUMN_CTRL_SHADOW_PORT15_s;


typedef union {
	struct {
		hwint32 data_type_shadow : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 bulk_shadow : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 port_state_shadow : 3;	/* 5:7 sw=RO hw=RW 0x0  */
		hwint32 valid_shadow : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_CTRL_SHADOW_PORT15_s;


typedef union {
	struct {
		hwint32 port_enable_shadow : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_ENABLE_SHADOW_PORT15_s;


typedef union {
	struct {
		hwint32 fifo_flush : 1;	/* 0:0 sw=WO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_FIFO_FLUSH_PORT15_s;


typedef union {
	struct {
		hwint32 bulk_crc_24b : 24;	/* 0:23 sw=RO hw=RW 0xffffff  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BULK_CRC_24B_PORT15_s;


typedef union {
	struct {
		hwint32 ovf_master : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 udf_master : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 data_err_master : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_PORT15_s;


typedef union {
	struct {
		hwint32 ovf_en_master : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 udf_en_master : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 data_err_en_master : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_MASTER_ENABLE_PORT15_s;


typedef union {
	struct {
		hwint32 ovf_sys : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 udf_sys : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 data_err_sys : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_PORT15_s;


typedef union {
	struct {
		hwint32 ovf_en_sys : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 udf_en_sys : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 data_err_en_sys : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PORT_IRQ_TO_SYS_ENABLE_PORT15_s;


typedef struct {
	BANK_SWITCH_REGISTER_PORT0_s  bank_switch_register_port0;
	ROW_COLUMN_CTRL_PORT0_s  row_column_ctrl_port0;
	PORT_CTRL_PORT0_s  port_ctrl_port0;
	PORT_ENABLE_PORT0_s  port_enable_port0;
	ROW_COLUMN_CTRL_SHADOW_PORT0_s  row_column_ctrl_shadow_port0;
	PORT_CTRL_SHADOW_PORT0_s  port_ctrl_shadow_port0;
	PORT_ENABLE_SHADOW_PORT0_s  port_enable_shadow_port0;
	PORT_FIFO_FLUSH_PORT0_s  port_fifo_flush_port0;
	BULK_CRC_24B_PORT0_s  bulk_crc_24b_port0;
	PORT_IRQ_TO_MASTER_PORT0_s  port_irq_to_master_port0;
	PORT_IRQ_TO_MASTER_ENABLE_PORT0_s  port_irq_to_master_enable_port0;
	PORT_IRQ_TO_SYS_PORT0_s  port_irq_to_sys_port0;
	PORT_IRQ_TO_SYS_ENABLE_PORT0_s  port_irq_to_sys_enable_port0;
	hwint8 filler0[0xc];
	BANK_SWITCH_REGISTER_PORT1_s  bank_switch_register_port1;
	ROW_COLUMN_CTRL_PORT1_s  row_column_ctrl_port1;
	PORT_CTRL_PORT1_s  port_ctrl_port1;
	PORT_ENABLE_PORT1_s  port_enable_port1;
	ROW_COLUMN_CTRL_SHADOW_PORT1_s  row_column_ctrl_shadow_port1;
	PORT_CTRL_SHADOW_PORT1_s  port_ctrl_shadow_port1;
	PORT_ENABLE_SHADOW_PORT1_s  port_enable_shadow_port1;
	PORT_FIFO_FLUSH_PORT1_s  port_fifo_flush_port1;
	BULK_CRC_24B_PORT1_s  bulk_crc_24b_port1;
	PORT_IRQ_TO_MASTER_PORT1_s  port_irq_to_master_port1;
	PORT_IRQ_TO_MASTER_ENABLE_PORT1_s  port_irq_to_master_enable_port1;
	PORT_IRQ_TO_SYS_PORT1_s  port_irq_to_sys_port1;
	PORT_IRQ_TO_SYS_ENABLE_PORT1_s  port_irq_to_sys_enable_port1;
	hwint8 filler1[0xc];
	BANK_SWITCH_REGISTER_PORT2_s  bank_switch_register_port2;
	ROW_COLUMN_CTRL_PORT2_s  row_column_ctrl_port2;
	PORT_CTRL_PORT2_s  port_ctrl_port2;
	PORT_ENABLE_PORT2_s  port_enable_port2;
	ROW_COLUMN_CTRL_SHADOW_PORT2_s  row_column_ctrl_shadow_port2;
	PORT_CTRL_SHADOW_PORT2_s  port_ctrl_shadow_port2;
	PORT_ENABLE_SHADOW_PORT2_s  port_enable_shadow_port2;
	PORT_FIFO_FLUSH_PORT2_s  port_fifo_flush_port2;
	BULK_CRC_24B_PORT2_s  bulk_crc_24b_port2;
	PORT_IRQ_TO_MASTER_PORT2_s  port_irq_to_master_port2;
	PORT_IRQ_TO_MASTER_ENABLE_PORT2_s  port_irq_to_master_enable_port2;
	PORT_IRQ_TO_SYS_PORT2_s  port_irq_to_sys_port2;
	PORT_IRQ_TO_SYS_ENABLE_PORT2_s  port_irq_to_sys_enable_port2;
	hwint8 filler2[0xc];
	BANK_SWITCH_REGISTER_PORT3_s  bank_switch_register_port3;
	ROW_COLUMN_CTRL_PORT3_s  row_column_ctrl_port3;
	PORT_CTRL_PORT3_s  port_ctrl_port3;
	PORT_ENABLE_PORT3_s  port_enable_port3;
	ROW_COLUMN_CTRL_SHADOW_PORT3_s  row_column_ctrl_shadow_port3;
	PORT_CTRL_SHADOW_PORT3_s  port_ctrl_shadow_port3;
	PORT_ENABLE_SHADOW_PORT3_s  port_enable_shadow_port3;
	PORT_FIFO_FLUSH_PORT3_s  port_fifo_flush_port3;
	BULK_CRC_24B_PORT3_s  bulk_crc_24b_port3;
	PORT_IRQ_TO_MASTER_PORT3_s  port_irq_to_master_port3;
	PORT_IRQ_TO_MASTER_ENABLE_PORT3_s  port_irq_to_master_enable_port3;
	PORT_IRQ_TO_SYS_PORT3_s  port_irq_to_sys_port3;
	PORT_IRQ_TO_SYS_ENABLE_PORT3_s  port_irq_to_sys_enable_port3;
	hwint8 filler3[0xc];
	BANK_SWITCH_REGISTER_PORT4_s  bank_switch_register_port4;
	ROW_COLUMN_CTRL_PORT4_s  row_column_ctrl_port4;
	PORT_CTRL_PORT4_s  port_ctrl_port4;
	PORT_ENABLE_PORT4_s  port_enable_port4;
	ROW_COLUMN_CTRL_SHADOW_PORT4_s  row_column_ctrl_shadow_port4;
	PORT_CTRL_SHADOW_PORT4_s  port_ctrl_shadow_port4;
	PORT_ENABLE_SHADOW_PORT4_s  port_enable_shadow_port4;
	PORT_FIFO_FLUSH_PORT4_s  port_fifo_flush_port4;
	BULK_CRC_24B_PORT4_s  bulk_crc_24b_port4;
	PORT_IRQ_TO_MASTER_PORT4_s  port_irq_to_master_port4;
	PORT_IRQ_TO_MASTER_ENABLE_PORT4_s  port_irq_to_master_enable_port4;
	PORT_IRQ_TO_SYS_PORT4_s  port_irq_to_sys_port4;
	PORT_IRQ_TO_SYS_ENABLE_PORT4_s  port_irq_to_sys_enable_port4;
	hwint8 filler4[0xc];
	BANK_SWITCH_REGISTER_PORT5_s  bank_switch_register_port5;
	ROW_COLUMN_CTRL_PORT5_s  row_column_ctrl_port5;
	PORT_CTRL_PORT5_s  port_ctrl_port5;
	PORT_ENABLE_PORT5_s  port_enable_port5;
	ROW_COLUMN_CTRL_SHADOW_PORT5_s  row_column_ctrl_shadow_port5;
	PORT_CTRL_SHADOW_PORT5_s  port_ctrl_shadow_port5;
	PORT_ENABLE_SHADOW_PORT5_s  port_enable_shadow_port5;
	PORT_FIFO_FLUSH_PORT5_s  port_fifo_flush_port5;
	BULK_CRC_24B_PORT5_s  bulk_crc_24b_port5;
	PORT_IRQ_TO_MASTER_PORT5_s  port_irq_to_master_port5;
	PORT_IRQ_TO_MASTER_ENABLE_PORT5_s  port_irq_to_master_enable_port5;
	PORT_IRQ_TO_SYS_PORT5_s  port_irq_to_sys_port5;
	PORT_IRQ_TO_SYS_ENABLE_PORT5_s  port_irq_to_sys_enable_port5;
	hwint8 filler5[0xc];
	BANK_SWITCH_REGISTER_PORT6_s  bank_switch_register_port6;
	ROW_COLUMN_CTRL_PORT6_s  row_column_ctrl_port6;
	PORT_CTRL_PORT6_s  port_ctrl_port6;
	PORT_ENABLE_PORT6_s  port_enable_port6;
	ROW_COLUMN_CTRL_SHADOW_PORT6_s  row_column_ctrl_shadow_port6;
	PORT_CTRL_SHADOW_PORT6_s  port_ctrl_shadow_port6;
	PORT_ENABLE_SHADOW_PORT6_s  port_enable_shadow_port6;
	PORT_FIFO_FLUSH_PORT6_s  port_fifo_flush_port6;
	BULK_CRC_24B_PORT6_s  bulk_crc_24b_port6;
	PORT_IRQ_TO_MASTER_PORT6_s  port_irq_to_master_port6;
	PORT_IRQ_TO_MASTER_ENABLE_PORT6_s  port_irq_to_master_enable_port6;
	PORT_IRQ_TO_SYS_PORT6_s  port_irq_to_sys_port6;
	PORT_IRQ_TO_SYS_ENABLE_PORT6_s  port_irq_to_sys_enable_port6;
	hwint8 filler6[0xc];
	BANK_SWITCH_REGISTER_PORT7_s  bank_switch_register_port7;
	ROW_COLUMN_CTRL_PORT7_s  row_column_ctrl_port7;
	PORT_CTRL_PORT7_s  port_ctrl_port7;
	PORT_ENABLE_PORT7_s  port_enable_port7;
	ROW_COLUMN_CTRL_SHADOW_PORT7_s  row_column_ctrl_shadow_port7;
	PORT_CTRL_SHADOW_PORT7_s  port_ctrl_shadow_port7;
	PORT_ENABLE_SHADOW_PORT7_s  port_enable_shadow_port7;
	PORT_FIFO_FLUSH_PORT7_s  port_fifo_flush_port7;
	BULK_CRC_24B_PORT7_s  bulk_crc_24b_port7;
	PORT_IRQ_TO_MASTER_PORT7_s  port_irq_to_master_port7;
	PORT_IRQ_TO_MASTER_ENABLE_PORT7_s  port_irq_to_master_enable_port7;
	PORT_IRQ_TO_SYS_PORT7_s  port_irq_to_sys_port7;
	PORT_IRQ_TO_SYS_ENABLE_PORT7_s  port_irq_to_sys_enable_port7;
	hwint8 filler7[0xc];
	BANK_SWITCH_REGISTER_PORT8_s  bank_switch_register_port8;
	ROW_COLUMN_CTRL_PORT8_s  row_column_ctrl_port8;
	PORT_CTRL_PORT8_s  port_ctrl_port8;
	PORT_ENABLE_PORT8_s  port_enable_port8;
	ROW_COLUMN_CTRL_SHADOW_PORT8_s  row_column_ctrl_shadow_port8;
	PORT_CTRL_SHADOW_PORT8_s  port_ctrl_shadow_port8;
	PORT_ENABLE_SHADOW_PORT8_s  port_enable_shadow_port8;
	PORT_FIFO_FLUSH_PORT8_s  port_fifo_flush_port8;
	BULK_CRC_24B_PORT8_s  bulk_crc_24b_port8;
	PORT_IRQ_TO_MASTER_PORT8_s  port_irq_to_master_port8;
	PORT_IRQ_TO_MASTER_ENABLE_PORT8_s  port_irq_to_master_enable_port8;
	PORT_IRQ_TO_SYS_PORT8_s  port_irq_to_sys_port8;
	PORT_IRQ_TO_SYS_ENABLE_PORT8_s  port_irq_to_sys_enable_port8;
	hwint8 filler8[0xc];
	BANK_SWITCH_REGISTER_PORT9_s  bank_switch_register_port9;
	ROW_COLUMN_CTRL_PORT9_s  row_column_ctrl_port9;
	PORT_CTRL_PORT9_s  port_ctrl_port9;
	PORT_ENABLE_PORT9_s  port_enable_port9;
	ROW_COLUMN_CTRL_SHADOW_PORT9_s  row_column_ctrl_shadow_port9;
	PORT_CTRL_SHADOW_PORT9_s  port_ctrl_shadow_port9;
	PORT_ENABLE_SHADOW_PORT9_s  port_enable_shadow_port9;
	PORT_FIFO_FLUSH_PORT9_s  port_fifo_flush_port9;
	BULK_CRC_24B_PORT9_s  bulk_crc_24b_port9;
	PORT_IRQ_TO_MASTER_PORT9_s  port_irq_to_master_port9;
	PORT_IRQ_TO_MASTER_ENABLE_PORT9_s  port_irq_to_master_enable_port9;
	PORT_IRQ_TO_SYS_PORT9_s  port_irq_to_sys_port9;
	PORT_IRQ_TO_SYS_ENABLE_PORT9_s  port_irq_to_sys_enable_port9;
	hwint8 filler9[0xc];
	BANK_SWITCH_REGISTER_PORT10_s  bank_switch_register_port10;
	ROW_COLUMN_CTRL_PORT10_s  row_column_ctrl_port10;
	PORT_CTRL_PORT10_s  port_ctrl_port10;
	PORT_ENABLE_PORT10_s  port_enable_port10;
	ROW_COLUMN_CTRL_SHADOW_PORT10_s  row_column_ctrl_shadow_port10;
	PORT_CTRL_SHADOW_PORT10_s  port_ctrl_shadow_port10;
	PORT_ENABLE_SHADOW_PORT10_s  port_enable_shadow_port10;
	PORT_FIFO_FLUSH_PORT10_s  port_fifo_flush_port10;
	BULK_CRC_24B_PORT10_s  bulk_crc_24b_port10;
	PORT_IRQ_TO_MASTER_PORT10_s  port_irq_to_master_port10;
	PORT_IRQ_TO_MASTER_ENABLE_PORT10_s  port_irq_to_master_enable_port10;
	PORT_IRQ_TO_SYS_PORT10_s  port_irq_to_sys_port10;
	PORT_IRQ_TO_SYS_ENABLE_PORT10_s  port_irq_to_sys_enable_port10;
	hwint8 filler10[0xc];
	BANK_SWITCH_REGISTER_PORT11_s  bank_switch_register_port11;
	ROW_COLUMN_CTRL_PORT11_s  row_column_ctrl_port11;
	PORT_CTRL_PORT11_s  port_ctrl_port11;
	PORT_ENABLE_PORT11_s  port_enable_port11;
	ROW_COLUMN_CTRL_SHADOW_PORT11_s  row_column_ctrl_shadow_port11;
	PORT_CTRL_SHADOW_PORT11_s  port_ctrl_shadow_port11;
	PORT_ENABLE_SHADOW_PORT11_s  port_enable_shadow_port11;
	PORT_FIFO_FLUSH_PORT11_s  port_fifo_flush_port11;
	BULK_CRC_24B_PORT11_s  bulk_crc_24b_port11;
	PORT_IRQ_TO_MASTER_PORT11_s  port_irq_to_master_port11;
	PORT_IRQ_TO_MASTER_ENABLE_PORT11_s  port_irq_to_master_enable_port11;
	PORT_IRQ_TO_SYS_PORT11_s  port_irq_to_sys_port11;
	PORT_IRQ_TO_SYS_ENABLE_PORT11_s  port_irq_to_sys_enable_port11;
	hwint8 filler11[0xc];
	BANK_SWITCH_REGISTER_PORT12_s  bank_switch_register_port12;
	ROW_COLUMN_CTRL_PORT12_s  row_column_ctrl_port12;
	PORT_CTRL_PORT12_s  port_ctrl_port12;
	PORT_ENABLE_PORT12_s  port_enable_port12;
	ROW_COLUMN_CTRL_SHADOW_PORT12_s  row_column_ctrl_shadow_port12;
	PORT_CTRL_SHADOW_PORT12_s  port_ctrl_shadow_port12;
	PORT_ENABLE_SHADOW_PORT12_s  port_enable_shadow_port12;
	PORT_FIFO_FLUSH_PORT12_s  port_fifo_flush_port12;
	BULK_CRC_24B_PORT12_s  bulk_crc_24b_port12;
	PORT_IRQ_TO_MASTER_PORT12_s  port_irq_to_master_port12;
	PORT_IRQ_TO_MASTER_ENABLE_PORT12_s  port_irq_to_master_enable_port12;
	PORT_IRQ_TO_SYS_PORT12_s  port_irq_to_sys_port12;
	PORT_IRQ_TO_SYS_ENABLE_PORT12_s  port_irq_to_sys_enable_port12;
	hwint8 filler12[0xc];
	BANK_SWITCH_REGISTER_PORT13_s  bank_switch_register_port13;
	ROW_COLUMN_CTRL_PORT13_s  row_column_ctrl_port13;
	PORT_CTRL_PORT13_s  port_ctrl_port13;
	PORT_ENABLE_PORT13_s  port_enable_port13;
	ROW_COLUMN_CTRL_SHADOW_PORT13_s  row_column_ctrl_shadow_port13;
	PORT_CTRL_SHADOW_PORT13_s  port_ctrl_shadow_port13;
	PORT_ENABLE_SHADOW_PORT13_s  port_enable_shadow_port13;
	PORT_FIFO_FLUSH_PORT13_s  port_fifo_flush_port13;
	BULK_CRC_24B_PORT13_s  bulk_crc_24b_port13;
	PORT_IRQ_TO_MASTER_PORT13_s  port_irq_to_master_port13;
	PORT_IRQ_TO_MASTER_ENABLE_PORT13_s  port_irq_to_master_enable_port13;
	PORT_IRQ_TO_SYS_PORT13_s  port_irq_to_sys_port13;
	PORT_IRQ_TO_SYS_ENABLE_PORT13_s  port_irq_to_sys_enable_port13;
	hwint8 filler13[0xc];
	BANK_SWITCH_REGISTER_PORT14_s  bank_switch_register_port14;
	ROW_COLUMN_CTRL_PORT14_s  row_column_ctrl_port14;
	PORT_CTRL_PORT14_s  port_ctrl_port14;
	PORT_ENABLE_PORT14_s  port_enable_port14;
	ROW_COLUMN_CTRL_SHADOW_PORT14_s  row_column_ctrl_shadow_port14;
	PORT_CTRL_SHADOW_PORT14_s  port_ctrl_shadow_port14;
	PORT_ENABLE_SHADOW_PORT14_s  port_enable_shadow_port14;
	PORT_FIFO_FLUSH_PORT14_s  port_fifo_flush_port14;
	BULK_CRC_24B_PORT14_s  bulk_crc_24b_port14;
	PORT_IRQ_TO_MASTER_PORT14_s  port_irq_to_master_port14;
	PORT_IRQ_TO_MASTER_ENABLE_PORT14_s  port_irq_to_master_enable_port14;
	PORT_IRQ_TO_SYS_PORT14_s  port_irq_to_sys_port14;
	PORT_IRQ_TO_SYS_ENABLE_PORT14_s  port_irq_to_sys_enable_port14;
	hwint8 filler14[0xc];
	BANK_SWITCH_REGISTER_PORT15_s  bank_switch_register_port15;
	ROW_COLUMN_CTRL_PORT15_s  row_column_ctrl_port15;
	PORT_CTRL_PORT15_s  port_ctrl_port15;
	PORT_ENABLE_PORT15_s  port_enable_port15;
	ROW_COLUMN_CTRL_SHADOW_PORT15_s  row_column_ctrl_shadow_port15;
	PORT_CTRL_SHADOW_PORT15_s  port_ctrl_shadow_port15;
	PORT_ENABLE_SHADOW_PORT15_s  port_enable_shadow_port15;
	PORT_FIFO_FLUSH_PORT15_s  port_fifo_flush_port15;
	BULK_CRC_24B_PORT15_s  bulk_crc_24b_port15;
	PORT_IRQ_TO_MASTER_PORT15_s  port_irq_to_master_port15;
	PORT_IRQ_TO_MASTER_ENABLE_PORT15_s  port_irq_to_master_enable_port15;
	PORT_IRQ_TO_SYS_PORT15_s  port_irq_to_sys_port15;
	PORT_IRQ_TO_SYS_ENABLE_PORT15_s  port_irq_to_sys_enable_port15;

} EARLINK_PORT_s;

#define BANK_SWITCH_REGISTER_PORT0_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT0_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT0_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT0_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT0_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT0_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT0_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT0_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT0_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT0_DEFAULT  0x21000100

#define PORT_CTRL_PORT0_READMASK  0xffffffff
#define PORT_CTRL_PORT0_WRITEMASK  0x17
#define PORT_CTRL_PORT0_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT0_RESETMASK  0x1f7
#define PORT_CTRL_PORT0_DEFAULT  0x0

#define PORT_ENABLE_PORT0_READMASK  0xffffffff
#define PORT_ENABLE_PORT0_WRITEMASK  0x1
#define PORT_ENABLE_PORT0_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT0_RESETMASK  0x1
#define PORT_ENABLE_PORT0_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT0_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT0_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT0_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT0_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT0_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT0_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT0_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT0_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT0_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT0_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT0_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT0_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT0_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT0_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT0_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT0_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT0_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT0_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT0_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT0_DEFAULT  0x0

#define BULK_CRC_24B_PORT0_READMASK  0xffffffff
#define BULK_CRC_24B_PORT0_WRITEMASK  0x0
#define BULK_CRC_24B_PORT0_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT0_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT0_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT0_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT0_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT0_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT0_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT0_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT0_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT0_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT0_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT0_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT0_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT0_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT1_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT1_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT1_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT1_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT1_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT1_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT1_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT1_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT1_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT1_DEFAULT  0x21000100

#define PORT_CTRL_PORT1_READMASK  0xffffffff
#define PORT_CTRL_PORT1_WRITEMASK  0x17
#define PORT_CTRL_PORT1_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT1_RESETMASK  0x1f7
#define PORT_CTRL_PORT1_DEFAULT  0x0

#define PORT_ENABLE_PORT1_READMASK  0xffffffff
#define PORT_ENABLE_PORT1_WRITEMASK  0x1
#define PORT_ENABLE_PORT1_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT1_RESETMASK  0x1
#define PORT_ENABLE_PORT1_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT1_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT1_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT1_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT1_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT1_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT1_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT1_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT1_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT1_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT1_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT1_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT1_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT1_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT1_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT1_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT1_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT1_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT1_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT1_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT1_DEFAULT  0x0

#define BULK_CRC_24B_PORT1_READMASK  0xffffffff
#define BULK_CRC_24B_PORT1_WRITEMASK  0x0
#define BULK_CRC_24B_PORT1_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT1_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT1_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT1_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT1_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT1_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT1_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT1_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT1_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT1_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT1_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT1_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT1_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT1_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT2_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT2_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT2_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT2_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT2_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT2_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT2_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT2_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT2_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT2_DEFAULT  0x21000100

#define PORT_CTRL_PORT2_READMASK  0xffffffff
#define PORT_CTRL_PORT2_WRITEMASK  0x17
#define PORT_CTRL_PORT2_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT2_RESETMASK  0x1f7
#define PORT_CTRL_PORT2_DEFAULT  0x0

#define PORT_ENABLE_PORT2_READMASK  0xffffffff
#define PORT_ENABLE_PORT2_WRITEMASK  0x1
#define PORT_ENABLE_PORT2_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT2_RESETMASK  0x1
#define PORT_ENABLE_PORT2_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT2_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT2_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT2_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT2_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT2_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT2_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT2_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT2_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT2_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT2_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT2_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT2_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT2_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT2_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT2_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT2_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT2_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT2_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT2_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT2_DEFAULT  0x0

#define BULK_CRC_24B_PORT2_READMASK  0xffffffff
#define BULK_CRC_24B_PORT2_WRITEMASK  0x0
#define BULK_CRC_24B_PORT2_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT2_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT2_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT2_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT2_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT2_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT2_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT2_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT2_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT2_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT2_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT2_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT2_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT2_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT3_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT3_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT3_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT3_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT3_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT3_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT3_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT3_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT3_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT3_DEFAULT  0x21000100

#define PORT_CTRL_PORT3_READMASK  0xffffffff
#define PORT_CTRL_PORT3_WRITEMASK  0x17
#define PORT_CTRL_PORT3_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT3_RESETMASK  0x1f7
#define PORT_CTRL_PORT3_DEFAULT  0x0

#define PORT_ENABLE_PORT3_READMASK  0xffffffff
#define PORT_ENABLE_PORT3_WRITEMASK  0x1
#define PORT_ENABLE_PORT3_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT3_RESETMASK  0x1
#define PORT_ENABLE_PORT3_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT3_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT3_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT3_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT3_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT3_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT3_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT3_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT3_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT3_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT3_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT3_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT3_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT3_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT3_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT3_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT3_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT3_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT3_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT3_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT3_DEFAULT  0x0

#define BULK_CRC_24B_PORT3_READMASK  0xffffffff
#define BULK_CRC_24B_PORT3_WRITEMASK  0x0
#define BULK_CRC_24B_PORT3_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT3_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT3_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT3_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT3_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT3_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT3_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT3_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT3_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT3_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT3_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT3_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT3_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT3_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT4_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT4_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT4_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT4_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT4_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT4_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT4_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT4_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT4_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT4_DEFAULT  0x21000100

#define PORT_CTRL_PORT4_READMASK  0xffffffff
#define PORT_CTRL_PORT4_WRITEMASK  0x17
#define PORT_CTRL_PORT4_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT4_RESETMASK  0x1f7
#define PORT_CTRL_PORT4_DEFAULT  0x0

#define PORT_ENABLE_PORT4_READMASK  0xffffffff
#define PORT_ENABLE_PORT4_WRITEMASK  0x1
#define PORT_ENABLE_PORT4_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT4_RESETMASK  0x1
#define PORT_ENABLE_PORT4_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT4_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT4_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT4_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT4_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT4_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT4_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT4_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT4_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT4_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT4_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT4_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT4_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT4_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT4_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT4_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT4_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT4_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT4_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT4_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT4_DEFAULT  0x0

#define BULK_CRC_24B_PORT4_READMASK  0xffffffff
#define BULK_CRC_24B_PORT4_WRITEMASK  0x0
#define BULK_CRC_24B_PORT4_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT4_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT4_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT4_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT4_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT4_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT4_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT4_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT4_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT4_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT4_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT4_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT4_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT4_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT5_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT5_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT5_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT5_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT5_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT5_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT5_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT5_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT5_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT5_DEFAULT  0x21000100

#define PORT_CTRL_PORT5_READMASK  0xffffffff
#define PORT_CTRL_PORT5_WRITEMASK  0x17
#define PORT_CTRL_PORT5_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT5_RESETMASK  0x1f7
#define PORT_CTRL_PORT5_DEFAULT  0x0

#define PORT_ENABLE_PORT5_READMASK  0xffffffff
#define PORT_ENABLE_PORT5_WRITEMASK  0x1
#define PORT_ENABLE_PORT5_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT5_RESETMASK  0x1
#define PORT_ENABLE_PORT5_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT5_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT5_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT5_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT5_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT5_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT5_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT5_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT5_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT5_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT5_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT5_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT5_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT5_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT5_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT5_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT5_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT5_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT5_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT5_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT5_DEFAULT  0x0

#define BULK_CRC_24B_PORT5_READMASK  0xffffffff
#define BULK_CRC_24B_PORT5_WRITEMASK  0x0
#define BULK_CRC_24B_PORT5_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT5_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT5_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT5_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT5_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT5_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT5_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT5_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT5_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT5_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT5_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT5_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT5_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT5_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT6_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT6_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT6_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT6_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT6_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT6_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT6_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT6_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT6_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT6_DEFAULT  0x21000100

#define PORT_CTRL_PORT6_READMASK  0xffffffff
#define PORT_CTRL_PORT6_WRITEMASK  0x17
#define PORT_CTRL_PORT6_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT6_RESETMASK  0x1f7
#define PORT_CTRL_PORT6_DEFAULT  0x0

#define PORT_ENABLE_PORT6_READMASK  0xffffffff
#define PORT_ENABLE_PORT6_WRITEMASK  0x1
#define PORT_ENABLE_PORT6_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT6_RESETMASK  0x1
#define PORT_ENABLE_PORT6_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT6_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT6_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT6_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT6_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT6_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT6_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT6_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT6_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT6_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT6_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT6_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT6_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT6_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT6_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT6_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT6_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT6_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT6_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT6_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT6_DEFAULT  0x0

#define BULK_CRC_24B_PORT6_READMASK  0xffffffff
#define BULK_CRC_24B_PORT6_WRITEMASK  0x0
#define BULK_CRC_24B_PORT6_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT6_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT6_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT6_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT6_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT6_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT6_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT6_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT6_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT6_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT6_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT6_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT6_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT6_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT7_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT7_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT7_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT7_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT7_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT7_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT7_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT7_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT7_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT7_DEFAULT  0x21000100

#define PORT_CTRL_PORT7_READMASK  0xffffffff
#define PORT_CTRL_PORT7_WRITEMASK  0x17
#define PORT_CTRL_PORT7_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT7_RESETMASK  0x1f7
#define PORT_CTRL_PORT7_DEFAULT  0x0

#define PORT_ENABLE_PORT7_READMASK  0xffffffff
#define PORT_ENABLE_PORT7_WRITEMASK  0x1
#define PORT_ENABLE_PORT7_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT7_RESETMASK  0x1
#define PORT_ENABLE_PORT7_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT7_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT7_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT7_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT7_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT7_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT7_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT7_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT7_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT7_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT7_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT7_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT7_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT7_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT7_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT7_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT7_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT7_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT7_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT7_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT7_DEFAULT  0x0

#define BULK_CRC_24B_PORT7_READMASK  0xffffffff
#define BULK_CRC_24B_PORT7_WRITEMASK  0x0
#define BULK_CRC_24B_PORT7_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT7_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT7_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT7_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT7_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT7_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT7_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT7_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT7_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT7_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT7_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT7_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT7_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT7_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT8_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT8_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT8_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT8_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT8_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT8_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT8_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT8_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT8_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT8_DEFAULT  0x21000100

#define PORT_CTRL_PORT8_READMASK  0xffffffff
#define PORT_CTRL_PORT8_WRITEMASK  0x17
#define PORT_CTRL_PORT8_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT8_RESETMASK  0x1f7
#define PORT_CTRL_PORT8_DEFAULT  0x0

#define PORT_ENABLE_PORT8_READMASK  0xffffffff
#define PORT_ENABLE_PORT8_WRITEMASK  0x1
#define PORT_ENABLE_PORT8_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT8_RESETMASK  0x1
#define PORT_ENABLE_PORT8_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT8_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT8_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT8_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT8_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT8_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT8_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT8_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT8_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT8_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT8_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT8_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT8_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT8_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT8_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT8_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT8_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT8_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT8_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT8_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT8_DEFAULT  0x0

#define BULK_CRC_24B_PORT8_READMASK  0xffffffff
#define BULK_CRC_24B_PORT8_WRITEMASK  0x0
#define BULK_CRC_24B_PORT8_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT8_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT8_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT8_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT8_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT8_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT8_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT8_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT8_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT8_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT8_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT8_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT8_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT8_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT9_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT9_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT9_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT9_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT9_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT9_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT9_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT9_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT9_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT9_DEFAULT  0x21000100

#define PORT_CTRL_PORT9_READMASK  0xffffffff
#define PORT_CTRL_PORT9_WRITEMASK  0x17
#define PORT_CTRL_PORT9_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT9_RESETMASK  0x1f7
#define PORT_CTRL_PORT9_DEFAULT  0x0

#define PORT_ENABLE_PORT9_READMASK  0xffffffff
#define PORT_ENABLE_PORT9_WRITEMASK  0x1
#define PORT_ENABLE_PORT9_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT9_RESETMASK  0x1
#define PORT_ENABLE_PORT9_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT9_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT9_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT9_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT9_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT9_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT9_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT9_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT9_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT9_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT9_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT9_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT9_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT9_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT9_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT9_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT9_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT9_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT9_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT9_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT9_DEFAULT  0x0

#define BULK_CRC_24B_PORT9_READMASK  0xffffffff
#define BULK_CRC_24B_PORT9_WRITEMASK  0x0
#define BULK_CRC_24B_PORT9_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT9_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT9_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT9_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT9_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT9_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT9_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT9_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT9_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT9_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT9_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT9_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT9_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT9_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT10_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT10_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT10_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT10_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT10_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT10_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT10_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT10_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT10_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT10_DEFAULT  0x21000100

#define PORT_CTRL_PORT10_READMASK  0xffffffff
#define PORT_CTRL_PORT10_WRITEMASK  0x17
#define PORT_CTRL_PORT10_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT10_RESETMASK  0x1f7
#define PORT_CTRL_PORT10_DEFAULT  0x0

#define PORT_ENABLE_PORT10_READMASK  0xffffffff
#define PORT_ENABLE_PORT10_WRITEMASK  0x1
#define PORT_ENABLE_PORT10_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT10_RESETMASK  0x1
#define PORT_ENABLE_PORT10_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT10_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT10_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT10_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT10_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT10_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT10_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT10_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT10_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT10_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT10_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT10_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT10_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT10_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT10_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT10_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT10_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT10_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT10_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT10_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT10_DEFAULT  0x0

#define BULK_CRC_24B_PORT10_READMASK  0xffffffff
#define BULK_CRC_24B_PORT10_WRITEMASK  0x0
#define BULK_CRC_24B_PORT10_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT10_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT10_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT10_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT10_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT10_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT10_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT10_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT10_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT10_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT10_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT10_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT10_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT10_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT11_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT11_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT11_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT11_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT11_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT11_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT11_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT11_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT11_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT11_DEFAULT  0x21000100

#define PORT_CTRL_PORT11_READMASK  0xffffffff
#define PORT_CTRL_PORT11_WRITEMASK  0x17
#define PORT_CTRL_PORT11_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT11_RESETMASK  0x1f7
#define PORT_CTRL_PORT11_DEFAULT  0x0

#define PORT_ENABLE_PORT11_READMASK  0xffffffff
#define PORT_ENABLE_PORT11_WRITEMASK  0x1
#define PORT_ENABLE_PORT11_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT11_RESETMASK  0x1
#define PORT_ENABLE_PORT11_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT11_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT11_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT11_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT11_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT11_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT11_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT11_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT11_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT11_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT11_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT11_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT11_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT11_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT11_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT11_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT11_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT11_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT11_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT11_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT11_DEFAULT  0x0

#define BULK_CRC_24B_PORT11_READMASK  0xffffffff
#define BULK_CRC_24B_PORT11_WRITEMASK  0x0
#define BULK_CRC_24B_PORT11_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT11_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT11_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT11_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT11_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT11_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT11_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT11_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT11_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT11_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT11_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT11_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT11_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT11_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT12_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT12_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT12_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT12_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT12_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT12_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT12_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT12_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT12_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT12_DEFAULT  0x21000100

#define PORT_CTRL_PORT12_READMASK  0xffffffff
#define PORT_CTRL_PORT12_WRITEMASK  0x17
#define PORT_CTRL_PORT12_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT12_RESETMASK  0x1f7
#define PORT_CTRL_PORT12_DEFAULT  0x0

#define PORT_ENABLE_PORT12_READMASK  0xffffffff
#define PORT_ENABLE_PORT12_WRITEMASK  0x1
#define PORT_ENABLE_PORT12_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT12_RESETMASK  0x1
#define PORT_ENABLE_PORT12_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT12_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT12_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT12_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT12_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT12_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT12_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT12_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT12_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT12_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT12_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT12_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT12_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT12_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT12_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT12_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT12_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT12_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT12_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT12_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT12_DEFAULT  0x0

#define BULK_CRC_24B_PORT12_READMASK  0xffffffff
#define BULK_CRC_24B_PORT12_WRITEMASK  0x0
#define BULK_CRC_24B_PORT12_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT12_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT12_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT12_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT12_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT12_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT12_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT12_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT12_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT12_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT12_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT12_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT12_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT12_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT13_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT13_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT13_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT13_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT13_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT13_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT13_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT13_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT13_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT13_DEFAULT  0x21000100

#define PORT_CTRL_PORT13_READMASK  0xffffffff
#define PORT_CTRL_PORT13_WRITEMASK  0x17
#define PORT_CTRL_PORT13_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT13_RESETMASK  0x1f7
#define PORT_CTRL_PORT13_DEFAULT  0x0

#define PORT_ENABLE_PORT13_READMASK  0xffffffff
#define PORT_ENABLE_PORT13_WRITEMASK  0x1
#define PORT_ENABLE_PORT13_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT13_RESETMASK  0x1
#define PORT_ENABLE_PORT13_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT13_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT13_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT13_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT13_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT13_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT13_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT13_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT13_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT13_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT13_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT13_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT13_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT13_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT13_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT13_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT13_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT13_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT13_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT13_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT13_DEFAULT  0x0

#define BULK_CRC_24B_PORT13_READMASK  0xffffffff
#define BULK_CRC_24B_PORT13_WRITEMASK  0x0
#define BULK_CRC_24B_PORT13_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT13_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT13_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT13_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT13_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT13_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT13_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT13_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT13_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT13_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT13_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT13_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT13_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT13_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT14_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT14_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT14_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT14_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT14_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT14_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT14_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT14_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT14_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT14_DEFAULT  0x21000100

#define PORT_CTRL_PORT14_READMASK  0xffffffff
#define PORT_CTRL_PORT14_WRITEMASK  0x17
#define PORT_CTRL_PORT14_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT14_RESETMASK  0x1f7
#define PORT_CTRL_PORT14_DEFAULT  0x0

#define PORT_ENABLE_PORT14_READMASK  0xffffffff
#define PORT_ENABLE_PORT14_WRITEMASK  0x1
#define PORT_ENABLE_PORT14_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT14_RESETMASK  0x1
#define PORT_ENABLE_PORT14_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT14_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT14_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT14_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT14_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT14_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT14_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT14_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT14_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT14_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT14_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT14_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT14_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT14_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT14_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT14_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT14_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT14_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT14_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT14_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT14_DEFAULT  0x0

#define BULK_CRC_24B_PORT14_READMASK  0xffffffff
#define BULK_CRC_24B_PORT14_WRITEMASK  0x0
#define BULK_CRC_24B_PORT14_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT14_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT14_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT14_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT14_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT14_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT14_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT14_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT14_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT14_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT14_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT14_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT14_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT14_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_DEFAULT  0x0

#define BANK_SWITCH_REGISTER_PORT15_READMASK  0xffffffff
#define BANK_SWITCH_REGISTER_PORT15_WRITEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT15_VOLATILEMASK  0xff
#define BANK_SWITCH_REGISTER_PORT15_RESETMASK  0xff
#define BANK_SWITCH_REGISTER_PORT15_DEFAULT  0x53

#define ROW_COLUMN_CTRL_PORT15_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT15_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_PORT15_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_PORT15_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_PORT15_DEFAULT  0x21000100

#define PORT_CTRL_PORT15_READMASK  0xffffffff
#define PORT_CTRL_PORT15_WRITEMASK  0x17
#define PORT_CTRL_PORT15_VOLATILEMASK  0x1e0
#define PORT_CTRL_PORT15_RESETMASK  0x1f7
#define PORT_CTRL_PORT15_DEFAULT  0x0

#define PORT_ENABLE_PORT15_READMASK  0xffffffff
#define PORT_ENABLE_PORT15_WRITEMASK  0x1
#define PORT_ENABLE_PORT15_VOLATILEMASK  0x0
#define PORT_ENABLE_PORT15_RESETMASK  0x1
#define PORT_ENABLE_PORT15_DEFAULT  0x0

#define ROW_COLUMN_CTRL_SHADOW_PORT15_READMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT15_WRITEMASK  0x7fffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT15_VOLATILEMASK  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT15_RESETMASK  0xffffffff
#define ROW_COLUMN_CTRL_SHADOW_PORT15_DEFAULT  0x21000100

#define PORT_CTRL_SHADOW_PORT15_READMASK  0xffffffff
#define PORT_CTRL_SHADOW_PORT15_WRITEMASK  0x17
#define PORT_CTRL_SHADOW_PORT15_VOLATILEMASK  0x1e0
#define PORT_CTRL_SHADOW_PORT15_RESETMASK  0x1f7
#define PORT_CTRL_SHADOW_PORT15_DEFAULT  0x0

#define PORT_ENABLE_SHADOW_PORT15_READMASK  0xffffffff
#define PORT_ENABLE_SHADOW_PORT15_WRITEMASK  0x1
#define PORT_ENABLE_SHADOW_PORT15_VOLATILEMASK  0x0
#define PORT_ENABLE_SHADOW_PORT15_RESETMASK  0x1
#define PORT_ENABLE_SHADOW_PORT15_DEFAULT  0x0

#define PORT_FIFO_FLUSH_PORT15_READMASK  0xfffffffe
#define PORT_FIFO_FLUSH_PORT15_WRITEMASK  0x1
#define PORT_FIFO_FLUSH_PORT15_VOLATILEMASK  0x1
#define PORT_FIFO_FLUSH_PORT15_RESETMASK  0x1
#define PORT_FIFO_FLUSH_PORT15_DEFAULT  0x0

#define BULK_CRC_24B_PORT15_READMASK  0xffffffff
#define BULK_CRC_24B_PORT15_WRITEMASK  0x0
#define BULK_CRC_24B_PORT15_VOLATILEMASK  0xffffff
#define BULK_CRC_24B_PORT15_RESETMASK  0xffffff
#define BULK_CRC_24B_PORT15_DEFAULT  0xffffff

#define PORT_IRQ_TO_MASTER_PORT15_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_PORT15_WRITEMASK  0x0
#define PORT_IRQ_TO_MASTER_PORT15_VOLATILEMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT15_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_PORT15_DEFAULT  0x0

#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_READMASK  0xffffffff
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_WRITEMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_VOLATILEMASK  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_RESETMASK  0x7
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_DEFAULT  0x7

#define PORT_IRQ_TO_SYS_PORT15_READMASK  0xfffffff8
#define PORT_IRQ_TO_SYS_PORT15_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT15_VOLATILEMASK  0x7
#define PORT_IRQ_TO_SYS_PORT15_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_PORT15_DEFAULT  0x0

#define PORT_IRQ_TO_SYS_ENABLE_PORT15_READMASK  0xffffffff
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_WRITEMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_VOLATILEMASK  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_RESETMASK  0x7
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_DEFAULT  0x0




/*block :  CLOCK_RESET_PORT */
typedef union {
	struct {
		hwint32 srst_earlink : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 srst_pmu : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 srst_codec : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s0_rx : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s0_tx : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s1_rx : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s1_tx : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s_all : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 srst_adc_dac : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 srst_adc : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 srst_dmic : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 srst_dac : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 srst_spi_fifo : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 srst_acl : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 srst_isp_rx_ahb : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 srst_isp_rx : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_RST_SFT_0_s;


typedef union {
	struct {
		hwint32 srst_dsp : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 srst_cape_a : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 srst_cape_b : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 srst_lle_a : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 srst_lle_b : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 srst_share_memory : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 srst_hifi3 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 srst_sse200 : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 srst_i3c_core : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 srst_uart : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 srst_audio_dma : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 srst_flexi0_dma : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 srst_flexi1_dma : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 srst_aes : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s0_rx_pclk : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s0_tx_pclk : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s1_rx_pclk : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 srst_i2s1_tx_pclk : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 srst_spi : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 srst_qspi : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 srst_timer0 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 srst_timer1 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 srst_timer2 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 srst_pwm : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 srst_i2c_slv : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 srst_i2c_mst : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 srst_mail_box : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 srst_i3c_dma : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 srst_sse200_self_clear : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_RST_SFT_1_s;


typedef union {
	struct {
		hwint32 srst_dsp_timer0 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 srst_dsp_timer1 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 srst_dsp_timer2 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 srst_dsp_timer3 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 srst_dsp_timer4 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 srst_dsp_timer5 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 srst_dsp_timer6 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 srst_dsp_timer7 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 srst_rcosc_st_cal : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 srst_madc : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 srst_chip_sync : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_RST_SFT_2_s;


typedef union {
	struct {
		hwint32 dis_wdt_reset : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dis_pmu_wdt_reset : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_RST_CON_0_s;


typedef union {
	struct {
		hwint32 src_clk_sel : 3;	/* 0:2 sw=RW hw=RO 0x6  */
		hwint32 earlink_pll_ref_sel : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 codec_src_clk_sel : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 proc_src_clk_sel : 2;	/* 5:6 sw=RW hw=RO 0x0  */
		hwint32 proc_pll_src_clk_sel : 3;	/* 7:9 sw=RW hw=RO 0x6  */
		hwint32 proc_pll_ref_sel : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 elink_pll_out_clk_div : 8;	/* 11:18 sw=RW hw=RO 0x4f  */
		hwint32 elink_pll_out_clk_div_chng : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_MAIN_s;


typedef union {
	struct {
		hwint32 pmu_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 pmu_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 pmu_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_PMU_s;


typedef union {
	struct {
		hwint32 arm_32k_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 arm_32k_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 arm_32k_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_ARM_32K_s;


typedef union {
	struct {
		hwint32 earlink_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 earlink_slow_clk_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 earlink_ahb_clk_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 earlink_apb_clk_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 earlink_slv_clk_sel : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 earlink_fb_clk_sel : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 chip_sync_clk_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 chip_sync_clk_sel : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_EARLINK_s;


typedef union {
	struct {
		hwint32 i2s0_mst_clk_div : 10;	/* 0:9 sw=RW hw=RO 0x13  */
		hwint32 i2s0_mst_clk_div_chng : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 i2s0_rx_clk_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 i2s0_tx_clk_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 i2s0_rx_pol : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 i2s0_tx_pol : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 i2s0_bclk_out_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 i2s0_bclk_out_pol : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 i2s0_rx_pclk_ch0_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 i2s0_rx_pclk_ch1_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 i2s0_tx_pclk_ch0_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 i2s0_tx_pclk_ch1_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 reserved21 : 11;	/* 21:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_I2S0_s;


typedef union {
	struct {
		hwint32 i2s1_mst_clk_div : 10;	/* 0:9 sw=RW hw=RO 0x13  */
		hwint32 i2s1_mst_clk_div_chng : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 i2s1_rx_clk_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_clk_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 i2s1_rx_pol : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_pol : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 i2s1_bclk_out_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 i2s1_bclk_out_pol : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 i2s1_rx_pclk_ch0_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 i2s1_rx_pclk_ch1_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_pclk_ch0_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_pclk_ch1_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_pclk_ch2_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_pclk_ch3_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_pclk_ch4_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 i2s1_tx_pclk_ch5_en : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 reserved25 : 7;	/* 25:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_I2S1_s;


typedef union {
	struct {
		hwint32 i2s_mst_io_clk_div : 10;	/* 0:9 sw=RW hw=RO 0x13  */
		hwint32 i2s_mst_io_clk_div_chng : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 i2s_mst_io_clk_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 i2s_mst_io_clk_pol : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 19;	/* 13:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_I2S_MST_IO_s;


typedef union {
	struct {
		hwint32 adc_clk_0_div : 8;	/* 0:7 sw=RW hw=RO 0x27  */
		hwint32 adc_clk_0_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 adc_clk_0_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 adc_clk_1_div : 8;	/* 10:17 sw=RW hw=RO 0x27  */
		hwint32 adc_clk_1_div_chng : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 adc_clk_1_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 adc_6m_0_clk_sel : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 adc_6m_1_clk_sel : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 adc_6m_2_clk_sel : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 adc_6m_3_clk_sel : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 adc_6m_4_clk_sel : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 adc_dig_3m_0_clk_en : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 adc_dig_3m_1_clk_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 adc_dig_3m_2_clk_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 adc_dig_3m_3_clk_en : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 adc_dig_3m_4_clk_en : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 adc_dig_low_latency_clk_en : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 adc_dig_low_latency_clk_sel : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_ADC_s;


typedef union {
	struct {
		hwint32 dac_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x27  */
		hwint32 dac_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 dac_ana_classd_clk_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 dac_ana_classd_clk_pol : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 dac_ana_classd_clk_div : 8;	/* 14:21 sw=RW hw=RO 0x9f  */
		hwint32 dac_ana_classd_clk_div_chng : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 classd_src_clk_sel : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_DAC_s;


typedef union {
	struct {
		hwint32 dmic_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x27  */
		hwint32 dmic_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dmic_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_DMIC_s;


typedef union {
	struct {
		hwint32 cape_clk_a_div : 8;	/* 0:7 sw=RW hw=RO 0x3  */
		hwint32 dsp_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 lle_clk_div : 8;	/* 9:16 sw=RW hw=RO 0x3  */
		hwint32 reserved17 : 1;	/* 17:17 sw=RO hw=RO 0x0  */
		hwint32 cape_a_clk_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 cape_b_clk_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 lle_a_clk_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 lle_b_clk_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 share_mem_clk_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 share_memory_clk_sel : 2;	/* 23:24 sw=RW hw=RO 0x0  */
		hwint32 reserved25 : 1;	/* 25:25 sw=RO hw=RO 0x0  */
		hwint32 lle_gated_clk_en : 1;	/* 26:26 sw=RW hw=RO 0x1  */
		hwint32 cape_a_smb_clk_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cape_b_smb_clk_en : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 lle_a_smb_clk_en : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 lle_b_smb_clk_en : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_DSP_0_s;


typedef union {
	struct {
		hwint32 hifi3_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x1  */
		hwint32 hifi3_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 hifi3_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_HIFI3_s;


typedef union {
	struct {
		hwint32 sse200_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 sse200_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 sse200_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 sse200_apb_clk_en : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_SSE200_s;


typedef union {
	struct {
		hwint32 ahb_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 ahb_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 apb_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_AHB_APB_s;


typedef union {
	struct {
		hwint32 audio_dma_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 flexi_dma0_clk_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 flexi_dma1_clk_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 i3c_dma_clk_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_DMA_s;


typedef union {
	struct {
		hwint32 aes_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_AES_s;


typedef union {
	struct {
		hwint32 spi_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x1  */
		hwint32 spi_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 spi_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_SPI_s;


typedef union {
	struct {
		hwint32 qspi_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 qspi_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 qspi_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_QSPI_s;


typedef union {
	struct {
		hwint32 timer0_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 timer0_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 timer0_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_TIMER0_s;


typedef union {
	struct {
		hwint32 timer1_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 timer1_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 timer1_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_TIMER1_s;


typedef union {
	struct {
		hwint32 timer2_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 timer2_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 timer2_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_TIMER2_s;


typedef union {
	struct {
		hwint32 pwm_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 pwm_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 pwm_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_PWM_s;


typedef union {
	struct {
		hwint32 i2c_slv_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 i2c_mst_clk_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_I2C_s;


typedef union {
	struct {
		hwint32 mail_box_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_MAIL_BOX_s;


typedef union {
	struct {
		hwint32 i3c_core_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x3  */
		hwint32 i3c_core_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 i3c_core_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_I3C_s;


typedef union {
	struct {
		hwint32 uart_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x3  */
		hwint32 uart_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 uart_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_UART_s;


typedef union {
	struct {
		hwint32 acl_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x4f  */
		hwint32 acl_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 acl_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_ACL_s;


typedef union {
	struct {
		hwint32 adc_ana_0_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_0_clk_pol : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_1_clk_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_1_clk_pol : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_2_clk_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_2_clk_pol : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3_clk_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3_clk_pol : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_4_clk_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_4_clk_pol : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_0_clk_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_0_clk_pol : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_1_clk_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_1_clk_pol : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_2_clk_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_2_clk_pol : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_3_clk_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_3_clk_pol : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_4_clk_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 adc_ana_3m_4_clk_pol : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 adc_5ch_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 anc_5ch_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 reserved22 : 2;	/* 22:23 sw=RO hw=RO 0x0  */
		hwint32 adc_3m_0_clk_src_sel : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 adc_3m_1_clk_src_sel : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 adc_3m_2_clk_src_sel : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 adc_3m_3_clk_src_sel : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 adc_3m_4_clk_src_sel : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 reserved29 : 3;	/* 29:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_ADC_ANA_s;


typedef union {
	struct {
		hwint32 cape_clk_b_div : 8;	/* 0:7 sw=RW hw=RO 0x3  */
		hwint32 reserved8 : 1;	/* 8:8 sw=RO hw=RO 0x0  */
		hwint32 ahb_dsp_bridge_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_DSP_1_s;


typedef union {
	struct {
		hwint32 int_stat_det_i2s_on : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 int_enab_det_i2s_on : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 int_mask_det_i2s_on : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_DET_I2S_ON_INT_s;


typedef union {
	struct {
		hwint32 int_stat_det_i2s_off : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 int_enab_det_i2s_off : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 int_mask_det_i2s_off : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_DET_I2S_OFF_INT_s;


typedef union {
	struct {
		hwint32 det_i2s_on_thrd : 12;	/* 0:11 sw=RW hw=RO 0x40  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_DET_I2S_ON_CFG_s;


typedef union {
	struct {
		hwint32 rcosc_lp_sample_interval : 8;	/* 0:7 sw=RW hw=RO 0x3  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_DET_I2S_OFF_CFG_s;


typedef union {
	struct {
		hwint32 det_i2s_on_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 det_i2s_off_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 start_det_i2s_on_en : 1;	/* 2:2 sw=RW hw=RW 0x0  */
		hwint32 start_det_i2s_off_en : 1;	/* 3:3 sw=RW hw=RW 0x0  */
		hwint32 dis_i2s_off_auto_switch : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 det_src_sel : 2;	/* 5:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 25;	/* 7:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_DET_I2S_CFG_s;


typedef union {
	struct {
		hwint32 madc_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x9  */
		hwint32 madc_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 madc_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_MADC_s;


typedef union {
	struct {
		hwint32 arm_fast_boot : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_FAST_BOOT_s;


typedef union {
	struct {
		hwint32 message : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_PSIST_MES_ARM_s;


typedef union {
	struct {
		hwint32 message1 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_PSIST_MES_ARM_1_s;


typedef union {
	struct {
		hwint32 soft_window_cnt : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_SOFTBACKDOOR_s;


typedef union {
	struct {
		hwint32 rx_lposc_clk_en : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_RX_LPOSC_s;


typedef union {
	struct {
		hwint32 gptest_lp_rcosc_bpass : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 gptest_std_rcosc_bpass : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 st_rcosc_test_obsv_clk_en : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 elink_elink_test_obsv_clk_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 elink_pll_test_obsv_clk_div : 8;	/* 4:11 sw=RW hw=RO 0x27  */
		hwint32 elink_pll_test_obsv_clk_div_chng : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 proc_pll_test_obsv_clk_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 proc_pll_test_obsv_clk_div : 8;	/* 14:21 sw=RW hw=RO 0x27  */
		hwint32 proc_pll_test_obsv_clk_div_chng : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 rcosc_st_cal_clk_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_TEST_OBSV_s;


typedef union {
	struct {
		hwint32 dis_pll_lock : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_RST_ELINK_s;


typedef union {
	struct {
		hwint32 earlink_pll_out_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 i2s0_mst_src_clk_div_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 i2s1_mst_src_clk_div_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 i2s_mst_io_clk_div_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 adc0_clk_div_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 adc1_clk_div_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dmic_clk_div_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_div_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 classd_clk_div_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 acl_clk_div_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 capea_clk_div_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 capeb_clk_div_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 lle_clk_div_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 hif3_clk_div_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 1;	/* 14:14 sw=RO hw=RO 0x0  */
		hwint32 sse200_clk_div_en : 1;	/* 15:15 sw=RW hw=RO 0x1  */
		hwint32 ahb_clk_div_en : 1;	/* 16:16 sw=RW hw=RO 0x1  */
		hwint32 spi_clk_div_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 time0_clk_div_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 time1_clk_div_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 time2_clk_div_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 i3c_clk_div_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 uart_clk_div_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 qspi_clk_div_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 isp_prev_clk_en : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 reserved25 : 7;	/* 25:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_DIVIDER_EN_s;


typedef union {
	struct {
		hwint32 isp_clk_div : 8;	/* 0:7 sw=RW hw=RO 0x9  */
		hwint32 isp_clk_div_chng : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 isp_rx_clk_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 isp_rx_clk_pol : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 isp_mst_clk_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 isp_mst_io_clk_pol : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 isp_rx_ahb_clk_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 18;	/* 14:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CR_CLK_ISP_s;


typedef struct {
	CR_RST_SFT_0_s  cr_rst_sft_0;
	CR_RST_SFT_1_s  cr_rst_sft_1;
	CR_RST_SFT_2_s  cr_rst_sft_2;
	CR_RST_CON_0_s  cr_rst_con_0;
	CR_CLK_MAIN_s  cr_clk_main;
	CR_CLK_PMU_s  cr_clk_pmu;
	CR_CLK_ARM_32K_s  cr_clk_arm_32k;
	CR_CLK_EARLINK_s  cr_clk_earlink;
	CR_CLK_I2S0_s  cr_clk_i2s0;
	CR_CLK_I2S1_s  cr_clk_i2s1;
	CR_CLK_I2S_MST_IO_s  cr_clk_i2s_mst_io;
	CR_CLK_ADC_s  cr_clk_adc;
	CR_CLK_DAC_s  cr_clk_dac;
	CR_CLK_DMIC_s  cr_clk_dmic;
	CR_CLK_DSP_0_s  cr_clk_dsp_0;
	CR_CLK_HIFI3_s  cr_clk_hifi3;
	hwint8 filler0[0x4];
	CR_CLK_SSE200_s  cr_clk_sse200;
	CR_CLK_AHB_APB_s  cr_clk_ahb_apb;
	CR_CLK_DMA_s  cr_clk_dma;
	CR_CLK_AES_s  cr_clk_aes;
	CR_CLK_SPI_s  cr_clk_spi;
	CR_CLK_QSPI_s  cr_clk_qspi;
	CR_CLK_TIMER0_s  cr_clk_timer0;
	CR_CLK_TIMER1_s  cr_clk_timer1;
	CR_CLK_TIMER2_s  cr_clk_timer2;
	CR_CLK_PWM_s  cr_clk_pwm;
	CR_CLK_I2C_s  cr_clk_i2c;
	CR_CLK_MAIL_BOX_s  cr_clk_mail_box;
	CR_CLK_I3C_s  cr_clk_i3c;
	CR_CLK_UART_s  cr_clk_uart;
	CR_CLK_ACL_s  cr_clk_acl;
	CR_CLK_ADC_ANA_s  cr_clk_adc_ana;
	CR_CLK_DSP_1_s  cr_clk_dsp_1;
	CR_DET_I2S_ON_INT_s  cr_det_i2s_on_int;
	CR_DET_I2S_OFF_INT_s  cr_det_i2s_off_int;
	CR_DET_I2S_ON_CFG_s  cr_det_i2s_on_cfg;
	CR_DET_I2S_OFF_CFG_s  cr_det_i2s_off_cfg;
	CR_DET_I2S_CFG_s  cr_det_i2s_cfg;
	CR_CLK_MADC_s  cr_clk_madc;
	CR_FAST_BOOT_s  cr_fast_boot;
	CR_PSIST_MES_ARM_s  cr_psist_mes_arm;
	CR_PSIST_MES_ARM_1_s  cr_psist_mes_arm_1;
	CR_SOFTBACKDOOR_s  cr_softbackdoor;
	CR_RX_LPOSC_s  cr_rx_lposc;
	CR_CLK_TEST_OBSV_s  cr_clk_test_obsv;
	CR_RST_ELINK_s  cr_rst_elink;
	CR_CLK_DIVIDER_EN_s  cr_clk_divider_en;
	CR_CLK_ISP_s  cr_clk_isp;

} CLOCK_RESET_PORT_s;

#define CR_RST_SFT_0_READMASK  0xffffffff
#define CR_RST_SFT_0_WRITEMASK  0xffff
#define CR_RST_SFT_0_VOLATILEMASK  0x0
#define CR_RST_SFT_0_RESETMASK  0xffff
#define CR_RST_SFT_0_DEFAULT  0x0

#define CR_RST_SFT_1_READMASK  0xffffffff
#define CR_RST_SFT_1_WRITEMASK  0x3fffff7f
#define CR_RST_SFT_1_VOLATILEMASK  0x0
#define CR_RST_SFT_1_RESETMASK  0x3fffff7f
#define CR_RST_SFT_1_DEFAULT  0x0

#define CR_RST_SFT_2_READMASK  0xffffffff
#define CR_RST_SFT_2_WRITEMASK  0x7ff
#define CR_RST_SFT_2_VOLATILEMASK  0x0
#define CR_RST_SFT_2_RESETMASK  0x7ff
#define CR_RST_SFT_2_DEFAULT  0x0

#define CR_RST_CON_0_READMASK  0xffffffff
#define CR_RST_CON_0_WRITEMASK  0x3
#define CR_RST_CON_0_VOLATILEMASK  0x0
#define CR_RST_CON_0_RESETMASK  0x3
#define CR_RST_CON_0_DEFAULT  0x0

#define CR_CLK_MAIN_READMASK  0xffffffff
#define CR_CLK_MAIN_WRITEMASK  0xfffff
#define CR_CLK_MAIN_VOLATILEMASK  0x0
#define CR_CLK_MAIN_RESETMASK  0xfffff
#define CR_CLK_MAIN_DEFAULT  0x27b06

#define CR_CLK_PMU_READMASK  0xffffffff
#define CR_CLK_PMU_WRITEMASK  0x3ff
#define CR_CLK_PMU_VOLATILEMASK  0x0
#define CR_CLK_PMU_RESETMASK  0x3ff
#define CR_CLK_PMU_DEFAULT  0x200

#define CR_CLK_ARM_32K_READMASK  0xffffffff
#define CR_CLK_ARM_32K_WRITEMASK  0x3ff
#define CR_CLK_ARM_32K_VOLATILEMASK  0x0
#define CR_CLK_ARM_32K_RESETMASK  0x3ff
#define CR_CLK_ARM_32K_DEFAULT  0x0

#define CR_CLK_EARLINK_READMASK  0xffffffff
#define CR_CLK_EARLINK_WRITEMASK  0xff
#define CR_CLK_EARLINK_VOLATILEMASK  0x0
#define CR_CLK_EARLINK_RESETMASK  0xff
#define CR_CLK_EARLINK_DEFAULT  0x80

#define CR_CLK_I2S0_READMASK  0xffffffff
#define CR_CLK_I2S0_WRITEMASK  0x1fffff
#define CR_CLK_I2S0_VOLATILEMASK  0x0
#define CR_CLK_I2S0_RESETMASK  0x1fffff
#define CR_CLK_I2S0_DEFAULT  0x13

#define CR_CLK_I2S1_READMASK  0xffffffff
#define CR_CLK_I2S1_WRITEMASK  0x1ffffff
#define CR_CLK_I2S1_VOLATILEMASK  0x0
#define CR_CLK_I2S1_RESETMASK  0x1ffffff
#define CR_CLK_I2S1_DEFAULT  0x13

#define CR_CLK_I2S_MST_IO_READMASK  0xffffffff
#define CR_CLK_I2S_MST_IO_WRITEMASK  0x1fff
#define CR_CLK_I2S_MST_IO_VOLATILEMASK  0x0
#define CR_CLK_I2S_MST_IO_RESETMASK  0x1fff
#define CR_CLK_I2S_MST_IO_DEFAULT  0x13

#define CR_CLK_ADC_READMASK  0xffffffff
#define CR_CLK_ADC_WRITEMASK  0xffffffff
#define CR_CLK_ADC_VOLATILEMASK  0x0
#define CR_CLK_ADC_RESETMASK  0xffffffff
#define CR_CLK_ADC_DEFAULT  0x9c27

#define CR_CLK_DAC_READMASK  0xffffffff
#define CR_CLK_DAC_WRITEMASK  0xfff3ff
#define CR_CLK_DAC_VOLATILEMASK  0x0
#define CR_CLK_DAC_RESETMASK  0xfff3ff
#define CR_CLK_DAC_DEFAULT  0x27c027

#define CR_CLK_DMIC_READMASK  0xffffffff
#define CR_CLK_DMIC_WRITEMASK  0x3ff
#define CR_CLK_DMIC_VOLATILEMASK  0x0
#define CR_CLK_DMIC_RESETMASK  0x3ff
#define CR_CLK_DMIC_DEFAULT  0x27

#define CR_CLK_DSP_0_READMASK  0xffffffff
#define CR_CLK_DSP_0_WRITEMASK  0x7dfdffff
#define CR_CLK_DSP_0_VOLATILEMASK  0x0
#define CR_CLK_DSP_0_RESETMASK  0x7dfdffff
#define CR_CLK_DSP_0_DEFAULT  0x4000603

#define CR_CLK_HIFI3_READMASK  0xffffffff
#define CR_CLK_HIFI3_WRITEMASK  0x3ff
#define CR_CLK_HIFI3_VOLATILEMASK  0x0
#define CR_CLK_HIFI3_RESETMASK  0x3ff
#define CR_CLK_HIFI3_DEFAULT  0x1

#define CR_CLK_SSE200_READMASK  0xffffffff
#define CR_CLK_SSE200_WRITEMASK  0x7ff
#define CR_CLK_SSE200_VOLATILEMASK  0x0
#define CR_CLK_SSE200_RESETMASK  0x7ff
#define CR_CLK_SSE200_DEFAULT  0x600

#define CR_CLK_AHB_APB_READMASK  0xffffffff
#define CR_CLK_AHB_APB_WRITEMASK  0x3ff
#define CR_CLK_AHB_APB_VOLATILEMASK  0x0
#define CR_CLK_AHB_APB_RESETMASK  0x3ff
#define CR_CLK_AHB_APB_DEFAULT  0x200

#define CR_CLK_DMA_READMASK  0xffffffff
#define CR_CLK_DMA_WRITEMASK  0xf
#define CR_CLK_DMA_VOLATILEMASK  0x0
#define CR_CLK_DMA_RESETMASK  0xf
#define CR_CLK_DMA_DEFAULT  0x0

#define CR_CLK_AES_READMASK  0xffffffff
#define CR_CLK_AES_WRITEMASK  0x1
#define CR_CLK_AES_VOLATILEMASK  0x0
#define CR_CLK_AES_RESETMASK  0x1
#define CR_CLK_AES_DEFAULT  0x0

#define CR_CLK_SPI_READMASK  0xffffffff
#define CR_CLK_SPI_WRITEMASK  0x3ff
#define CR_CLK_SPI_VOLATILEMASK  0x0
#define CR_CLK_SPI_RESETMASK  0x3ff
#define CR_CLK_SPI_DEFAULT  0x1

#define CR_CLK_QSPI_READMASK  0xffffffff
#define CR_CLK_QSPI_WRITEMASK  0x3ff
#define CR_CLK_QSPI_VOLATILEMASK  0x0
#define CR_CLK_QSPI_RESETMASK  0x3ff
#define CR_CLK_QSPI_DEFAULT  0x0

#define CR_CLK_TIMER0_READMASK  0xffffffff
#define CR_CLK_TIMER0_WRITEMASK  0x3ff
#define CR_CLK_TIMER0_VOLATILEMASK  0x0
#define CR_CLK_TIMER0_RESETMASK  0x3ff
#define CR_CLK_TIMER0_DEFAULT  0x0

#define CR_CLK_TIMER1_READMASK  0xffffffff
#define CR_CLK_TIMER1_WRITEMASK  0x3ff
#define CR_CLK_TIMER1_VOLATILEMASK  0x0
#define CR_CLK_TIMER1_RESETMASK  0x3ff
#define CR_CLK_TIMER1_DEFAULT  0x0

#define CR_CLK_TIMER2_READMASK  0xffffffff
#define CR_CLK_TIMER2_WRITEMASK  0x3ff
#define CR_CLK_TIMER2_VOLATILEMASK  0x0
#define CR_CLK_TIMER2_RESETMASK  0x3ff
#define CR_CLK_TIMER2_DEFAULT  0x0

#define CR_CLK_PWM_READMASK  0xffffffff
#define CR_CLK_PWM_WRITEMASK  0x3ff
#define CR_CLK_PWM_VOLATILEMASK  0x0
#define CR_CLK_PWM_RESETMASK  0x3ff
#define CR_CLK_PWM_DEFAULT  0x0

#define CR_CLK_I2C_READMASK  0xffffffff
#define CR_CLK_I2C_WRITEMASK  0x3
#define CR_CLK_I2C_VOLATILEMASK  0x0
#define CR_CLK_I2C_RESETMASK  0x3
#define CR_CLK_I2C_DEFAULT  0x1

#define CR_CLK_MAIL_BOX_READMASK  0xffffffff
#define CR_CLK_MAIL_BOX_WRITEMASK  0x1
#define CR_CLK_MAIL_BOX_VOLATILEMASK  0x0
#define CR_CLK_MAIL_BOX_RESETMASK  0x1
#define CR_CLK_MAIL_BOX_DEFAULT  0x0

#define CR_CLK_I3C_READMASK  0xffffffff
#define CR_CLK_I3C_WRITEMASK  0x3ff
#define CR_CLK_I3C_VOLATILEMASK  0x0
#define CR_CLK_I3C_RESETMASK  0x3ff
#define CR_CLK_I3C_DEFAULT  0x3

#define CR_CLK_UART_READMASK  0xffffffff
#define CR_CLK_UART_WRITEMASK  0x3ff
#define CR_CLK_UART_VOLATILEMASK  0x0
#define CR_CLK_UART_RESETMASK  0x3ff
#define CR_CLK_UART_DEFAULT  0x3

#define CR_CLK_ACL_READMASK  0xffffffff
#define CR_CLK_ACL_WRITEMASK  0x3ff
#define CR_CLK_ACL_VOLATILEMASK  0x0
#define CR_CLK_ACL_RESETMASK  0x3ff
#define CR_CLK_ACL_DEFAULT  0x4f

#define CR_CLK_ADC_ANA_READMASK  0xffffffff
#define CR_CLK_ADC_ANA_WRITEMASK  0x1f3fffff
#define CR_CLK_ADC_ANA_VOLATILEMASK  0x0
#define CR_CLK_ADC_ANA_RESETMASK  0x1f3fffff
#define CR_CLK_ADC_ANA_DEFAULT  0x0

#define CR_CLK_DSP_1_READMASK  0xffffffff
#define CR_CLK_DSP_1_WRITEMASK  0x2ff
#define CR_CLK_DSP_1_VOLATILEMASK  0x0
#define CR_CLK_DSP_1_RESETMASK  0x2ff
#define CR_CLK_DSP_1_DEFAULT  0x3

#define CR_DET_I2S_ON_INT_READMASK  0xffffffff
#define CR_DET_I2S_ON_INT_WRITEMASK  0x7
#define CR_DET_I2S_ON_INT_VOLATILEMASK  0x0
#define CR_DET_I2S_ON_INT_RESETMASK  0x7
#define CR_DET_I2S_ON_INT_DEFAULT  0x0

#define CR_DET_I2S_OFF_INT_READMASK  0xffffffff
#define CR_DET_I2S_OFF_INT_WRITEMASK  0x7
#define CR_DET_I2S_OFF_INT_VOLATILEMASK  0x0
#define CR_DET_I2S_OFF_INT_RESETMASK  0x7
#define CR_DET_I2S_OFF_INT_DEFAULT  0x0

#define CR_DET_I2S_ON_CFG_READMASK  0xffffffff
#define CR_DET_I2S_ON_CFG_WRITEMASK  0xfff
#define CR_DET_I2S_ON_CFG_VOLATILEMASK  0x0
#define CR_DET_I2S_ON_CFG_RESETMASK  0xfff
#define CR_DET_I2S_ON_CFG_DEFAULT  0x40

#define CR_DET_I2S_OFF_CFG_READMASK  0xffffffff
#define CR_DET_I2S_OFF_CFG_WRITEMASK  0xff
#define CR_DET_I2S_OFF_CFG_VOLATILEMASK  0x0
#define CR_DET_I2S_OFF_CFG_RESETMASK  0xff
#define CR_DET_I2S_OFF_CFG_DEFAULT  0x3

#define CR_DET_I2S_CFG_READMASK  0xffffffff
#define CR_DET_I2S_CFG_WRITEMASK  0x7f
#define CR_DET_I2S_CFG_VOLATILEMASK  0xc
#define CR_DET_I2S_CFG_RESETMASK  0x7f
#define CR_DET_I2S_CFG_DEFAULT  0x10

#define CR_CLK_MADC_READMASK  0xffffffff
#define CR_CLK_MADC_WRITEMASK  0x3ff
#define CR_CLK_MADC_VOLATILEMASK  0x0
#define CR_CLK_MADC_RESETMASK  0x3ff
#define CR_CLK_MADC_DEFAULT  0x9

#define CR_FAST_BOOT_READMASK  0xffffffff
#define CR_FAST_BOOT_WRITEMASK  0xffffffff
#define CR_FAST_BOOT_VOLATILEMASK  0x0
#define CR_FAST_BOOT_RESETMASK  0xffffffff
#define CR_FAST_BOOT_DEFAULT  0x0

#define CR_PSIST_MES_ARM_READMASK  0xffffffff
#define CR_PSIST_MES_ARM_WRITEMASK  0xffffffff
#define CR_PSIST_MES_ARM_VOLATILEMASK  0x0
#define CR_PSIST_MES_ARM_RESETMASK  0xffffffff
#define CR_PSIST_MES_ARM_DEFAULT  0x0

#define CR_PSIST_MES_ARM_1_READMASK  0xffffffff
#define CR_PSIST_MES_ARM_1_WRITEMASK  0xffffffff
#define CR_PSIST_MES_ARM_1_VOLATILEMASK  0x0
#define CR_PSIST_MES_ARM_1_RESETMASK  0xffffffff
#define CR_PSIST_MES_ARM_1_DEFAULT  0x0

#define CR_SOFTBACKDOOR_READMASK  0xffffffff
#define CR_SOFTBACKDOOR_WRITEMASK  0x0
#define CR_SOFTBACKDOOR_VOLATILEMASK  0x0
#define CR_SOFTBACKDOOR_RESETMASK  0x1
#define CR_SOFTBACKDOOR_DEFAULT  0x0

#define CR_RX_LPOSC_READMASK  0xffffffff
#define CR_RX_LPOSC_WRITEMASK  0x0
#define CR_RX_LPOSC_VOLATILEMASK  0x0
#define CR_RX_LPOSC_RESETMASK  0x1
#define CR_RX_LPOSC_DEFAULT  0x0

#define CR_CLK_TEST_OBSV_READMASK  0xffffffff
#define CR_CLK_TEST_OBSV_WRITEMASK  0xffffff
#define CR_CLK_TEST_OBSV_VOLATILEMASK  0x0
#define CR_CLK_TEST_OBSV_RESETMASK  0xffffff
#define CR_CLK_TEST_OBSV_DEFAULT  0x9c274

#define CR_RST_ELINK_READMASK  0xffffffff
#define CR_RST_ELINK_WRITEMASK  0x1
#define CR_RST_ELINK_VOLATILEMASK  0x0
#define CR_RST_ELINK_RESETMASK  0x1
#define CR_RST_ELINK_DEFAULT  0x1

#define CR_CLK_DIVIDER_EN_READMASK  0xffffffff
#define CR_CLK_DIVIDER_EN_WRITEMASK  0x1ffbfff
#define CR_CLK_DIVIDER_EN_VOLATILEMASK  0x0
#define CR_CLK_DIVIDER_EN_RESETMASK  0x1ffbfff
#define CR_CLK_DIVIDER_EN_DEFAULT  0x18000

#define CR_CLK_ISP_READMASK  0xffffffff
#define CR_CLK_ISP_WRITEMASK  0x3fff
#define CR_CLK_ISP_VOLATILEMASK  0x0
#define CR_CLK_ISP_RESETMASK  0x3fff
#define CR_CLK_ISP_DEFAULT  0x9




/*block :  DAC */
typedef union {
	struct {
		hwint32 dac_cfg_i2s_direct_dac : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 1;	/* 1:1 sw=RO hw=RO 0x0  */
		hwint32 anc_only : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dac1_performance : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dac0_performance : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dac_sat_out : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dumplicate_output : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 swap_in : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 1;	/* 8:8 sw=RO hw=RO 0x0  */
		hwint32 dac_ll_test_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 dac1_sampe_rate : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 dac0_sampe_rate : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 dac_cfg_rst : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 auto_ramp_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 clr_mute_ramp_done : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 volume_ramp_up : 1;	/* 19:19 sw=RO hw=RW 0x0  */
		hwint32 mute_ramp_done : 1;	/* 20:20 sw=RO hw=RW 0x0  */
		hwint32 auto_ramp_status : 1;	/* 21:21 sw=RO hw=RW 0x0  */
		hwint32 reserved22 : 2;	/* 22:23 sw=RO hw=RO 0x0  */
		hwint32 sidetone_en : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 reserved25 : 2;	/* 25:26 sw=RO hw=RO 0x0  */
		hwint32 hpf_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 anc_en : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 dac_ch1_en : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 dac_ch0_en : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 dac_en : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG0_s;


typedef union {
	struct {
		hwint32 hpf0_shift : 5;	/* 0:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 2;	/* 5:6 sw=RO hw=RO 0x0  */
		hwint32 hpf0_cutoff : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 hpf0_order : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 hpf0_byp : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 1;	/* 14:14 sw=RO hw=RO 0x0  */
		hwint32 hpf0_soft_rst : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 hpf1_shift : 3;	/* 16:18 sw=RW hw=RO 0x0  */
		hwint32 reserved19 : 4;	/* 19:22 sw=RO hw=RO 0x0  */
		hwint32 hpf1_cutoff : 5;	/* 23:27 sw=RW hw=RO 0x0  */
		hwint32 hpf1_order : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 hpf1_byp : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 reserved30 : 1;	/* 30:30 sw=RO hw=RO 0x0  */
		hwint32 hpf1_soft_rst : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG1_s;


typedef union {
	struct {
		hwint32 dsm_order : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 22;	/* 2:23 sw=RO hw=RO 0x0  */
		hwint32 dsm1_inv : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 dsm0_inv : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 dsm1_obs : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 dsm1_inj : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 dsm0_obs : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 dsm0_inj : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 dsm_fix : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 dsm_sym : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 ch1_mute : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 2;	/* 6:7 sw=RO hw=RO 0x0  */
		hwint32 ch1_volume : 8;	/* 8:15 sw=RW hw=RO 0x94  */
		hwint32 reserved16 : 5;	/* 16:20 sw=RO hw=RO 0x0  */
		hwint32 ch0_mute : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 reserved22 : 2;	/* 22:23 sw=RO hw=RO 0x0  */
		hwint32 ch0_volume : 8;	/* 24:31 sw=RW hw=RO 0x94  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG3_s;


typedef union {
	struct {
		hwint32 reserved0 : 13;	/* 0:12 sw=RO hw=RO 0x0  */
		hwint32 gain_step_rate : 3;	/* 13:15 sw=RW hw=RO 0x0  */
		hwint32 gain_step_size : 16;	/* 16:31 sw=RW hw=RO 0x80  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG4_s;


typedef union {
	struct {
		hwint32 reserved0 : 16;	/* 0:15 sw=RO hw=RO 0x0  */
		hwint32 sidetone_rampsize : 8;	/* 16:23 sw=RW hw=RO 0xff  */
		hwint32 sidetone_gain : 8;	/* 24:31 sw=RW hw=RO 0x80  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG5_s;


typedef union {
	struct {
		hwint32 dem_ed_enable_ch0 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dem_thresh_sel_low_ch0 : 3;	/* 1:3 sw=RW hw=RO 0x0  */
		hwint32 dem_thresh_sel_high_ch0 : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 dem_ed_rls_time_ch0 : 2;	/* 8:9 sw=RW hw=RO 0x0  */
		hwint32 en_dynamic_pd_ch0 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 dem_mute_ch0 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 4;	/* 12:15 sw=RO hw=RO 0x0  */
		hwint32 dem_ed_enable_ch1 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dem_thresh_sel_low_ch1 : 3;	/* 17:19 sw=RW hw=RO 0x0  */
		hwint32 dem_thresh_sel_high_ch1 : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 reserved23 : 1;	/* 23:23 sw=RO hw=RO 0x0  */
		hwint32 dem_ed_rls_time_ch1 : 2;	/* 24:25 sw=RW hw=RO 0x0  */
		hwint32 en_dynamic_pd_ch1 : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 dem_mute_ch1 : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG6_s;


typedef union {
	struct {
		hwint32 o_dac_ed_en : 6;	/* 0:5 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_zcd_en : 6;	/* 6:11 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_zcd_dly_en : 6;	/* 12:17 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch0_enable : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch1_enable : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch1_sel1 : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch1_sel0 : 3;	/* 23:25 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch0_sel1 : 3;	/* 26:28 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch0_sel0 : 3;	/* 29:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG7_s;


typedef union {
	struct {
		hwint32 o_dac_ed0_zcd_dly_time : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed0_rls_time : 6;	/* 2:7 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed0_thresh_sel : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed1_zcd_dly_time : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed1_rls_time : 6;	/* 18:23 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed1_thresh_sel : 8;	/* 24:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG8_s;


typedef union {
	struct {
		hwint32 o_dac_ed2_zcd_dly_time : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed2_rls_time : 6;	/* 2:7 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed2_thresh_sel : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed3_zcd_dly_time : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed3_rls_time : 6;	/* 18:23 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed3_thresh_sel : 8;	/* 24:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG9_s;


typedef union {
	struct {
		hwint32 o_dac_ed4_zcd_dly_time : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed4_rls_time : 6;	/* 2:7 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed4_thresh_sel : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed5_zcd_dly_time : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed5_rls_time : 6;	/* 18:23 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed5_thresh_sel : 8;	/* 24:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG10_s;


typedef union {
	struct {
		hwint32 o_dac_ed_dss_ch0_gain0 : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch0_gain1 : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch1_gain0 : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch1_gain1 : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch0_div0 : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch0_div1 : 2;	/* 18:19 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch1_div0 : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 o_dac_ed_dss_ch1_div1 : 2;	/* 22:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG11_s;


typedef union {
	struct {
		hwint32 o_ed0_force_low : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 o_ed1_force_low : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 o_ed2_force_low : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 o_ed3_force_low : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 o_ed4_force_low : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 o_ed5_force_low : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 o_ed0_force_high : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 o_ed1_force_high : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 o_ed2_force_high : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 o_ed3_force_high : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 o_ed4_force_high : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 o_ed5_force_high : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 o_ed0_sync_zcd : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 o_ed1_sync_zcd : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 o_ed2_sync_zcd : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 o_ed3_sync_zcd : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 o_ed4_sync_zcd : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 o_ed5_sync_zcd : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 5;	/* 18:22 sw=RO hw=RO 0x0  */
		hwint32 ed_dlbuf_sel : 3;	/* 23:25 sw=RW hw=RO 0x0  */
		hwint32 afe_cfg_gain1 : 3;	/* 26:28 sw=RW hw=RO 0x0  */
		hwint32 afe_cfg_gain0 : 3;	/* 29:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG12_s;


typedef union {
	struct {
		hwint32 reserved0 : 1;	/* 0:0 sw=RO hw=RO 0x0  */
		hwint32 ch1_ls : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ch1_wpulse : 3;	/* 2:4 sw=RW hw=RO 0x0  */
		hwint32 ch1_wa : 3;	/* 5:7 sw=RW hw=RO 0x4  */
		hwint32 ch1_ra : 2;	/* 8:9 sw=RW hw=RO 0x0  */
		hwint32 ch1_rm : 4;	/* 10:13 sw=RW hw=RO 0x3  */
		hwint32 ch1_rme : 1;	/* 14:14 sw=RW hw=RO 0x1  */
		hwint32 ch1_test1 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 1;	/* 16:16 sw=RO hw=RO 0x0  */
		hwint32 ch0_ls : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 ch0_wpulse : 3;	/* 18:20 sw=RW hw=RO 0x0  */
		hwint32 ch0_wa : 3;	/* 21:23 sw=RW hw=RO 0x4  */
		hwint32 ch0_ra : 2;	/* 24:25 sw=RW hw=RO 0x0  */
		hwint32 ch0_rm : 4;	/* 26:29 sw=RW hw=RO 0x3  */
		hwint32 ch0_rme : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 ch0_test1 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG13_s;


typedef union {
	struct {
		hwint32 reserved0 : 31;	/* 0:30 sw=RO hw=RO 0x0  */
		hwint32 dac_clkout_inv : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG14_s;


typedef union {
	struct {
		hwint32 dac_clk_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_ana_clk_pol : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_en_anc1_only : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_en_anc0_only : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_en_anc1 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_anc0 : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_sidetone1 : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_sidetone0 : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_hpf1 : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_hpf0 : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_ed2 : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_ed1 : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_ed0 : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_ch1 : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_en_ch0 : 1;	/* 14:14 sw=RW hw=RO 0x1  */
		hwint32 hard_limit_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 hard_limit_coef1 : 3;	/* 16:18 sw=RW hw=RO 0x0  */
		hwint32 hard_limit_coef0 : 3;	/* 19:21 sw=RW hw=RO 0x0  */
		hwint32 anc_pol : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 anc_rate : 2;	/* 23:24 sw=RW hw=RO 0x0  */
		hwint32 preanc_bufsel : 7;	/* 25:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DAC_CFG_REG15_s;


typedef struct {
	DAC_CFG_REG0_s  dac_cfg_reg0;
	DAC_CFG_REG1_s  dac_cfg_reg1;
	DAC_CFG_REG2_s  dac_cfg_reg2;
	DAC_CFG_REG3_s  dac_cfg_reg3;
	DAC_CFG_REG4_s  dac_cfg_reg4;
	DAC_CFG_REG5_s  dac_cfg_reg5;
	DAC_CFG_REG6_s  dac_cfg_reg6;
	DAC_CFG_REG7_s  dac_cfg_reg7;
	DAC_CFG_REG8_s  dac_cfg_reg8;
	DAC_CFG_REG9_s  dac_cfg_reg9;
	DAC_CFG_REG10_s  dac_cfg_reg10;
	DAC_CFG_REG11_s  dac_cfg_reg11;
	DAC_CFG_REG12_s  dac_cfg_reg12;
	DAC_CFG_REG13_s  dac_cfg_reg13;
	DAC_CFG_REG14_s  dac_cfg_reg14;
	DAC_CFG_REG15_s  dac_cfg_reg15;

} DAC_s;

#define DAC_CFG_REG0_READMASK  0xffffffff
#define DAC_CFG_REG0_WRITEMASK  0xf907f2fd
#define DAC_CFG_REG0_VOLATILEMASK  0x380000
#define DAC_CFG_REG0_RESETMASK  0xf93ff2fd
#define DAC_CFG_REG0_DEFAULT  0x0

#define DAC_CFG_REG1_READMASK  0xffffffff
#define DAC_CFG_REG1_WRITEMASK  0xbf87bf9f
#define DAC_CFG_REG1_VOLATILEMASK  0x0
#define DAC_CFG_REG1_RESETMASK  0xbf87bf9f
#define DAC_CFG_REG1_DEFAULT  0x0

#define DAC_CFG_REG2_READMASK  0xffffffff
#define DAC_CFG_REG2_WRITEMASK  0xff000003
#define DAC_CFG_REG2_VOLATILEMASK  0x0
#define DAC_CFG_REG2_RESETMASK  0xff000003
#define DAC_CFG_REG2_DEFAULT  0x0

#define DAC_CFG_REG3_READMASK  0xffffffff
#define DAC_CFG_REG3_WRITEMASK  0xff20ff20
#define DAC_CFG_REG3_VOLATILEMASK  0x0
#define DAC_CFG_REG3_RESETMASK  0xff20ff20
#define DAC_CFG_REG3_DEFAULT  0x94009400

#define DAC_CFG_REG4_READMASK  0xffffffff
#define DAC_CFG_REG4_WRITEMASK  0xffffe000
#define DAC_CFG_REG4_VOLATILEMASK  0x0
#define DAC_CFG_REG4_RESETMASK  0xffffe000
#define DAC_CFG_REG4_DEFAULT  0x800000

#define DAC_CFG_REG5_READMASK  0xffffffff
#define DAC_CFG_REG5_WRITEMASK  0xffff0000
#define DAC_CFG_REG5_VOLATILEMASK  0x0
#define DAC_CFG_REG5_RESETMASK  0xffff0000
#define DAC_CFG_REG5_DEFAULT  0x80ff0000

#define DAC_CFG_REG6_READMASK  0xffffffff
#define DAC_CFG_REG6_WRITEMASK  0xf7f0f7f
#define DAC_CFG_REG6_VOLATILEMASK  0x0
#define DAC_CFG_REG6_RESETMASK  0xf7f0f7f
#define DAC_CFG_REG6_DEFAULT  0x0

#define DAC_CFG_REG7_READMASK  0xffffffff
#define DAC_CFG_REG7_WRITEMASK  0xffffffff
#define DAC_CFG_REG7_VOLATILEMASK  0x0
#define DAC_CFG_REG7_RESETMASK  0xffffffff
#define DAC_CFG_REG7_DEFAULT  0x0

#define DAC_CFG_REG8_READMASK  0xffffffff
#define DAC_CFG_REG8_WRITEMASK  0xffffffff
#define DAC_CFG_REG8_VOLATILEMASK  0x0
#define DAC_CFG_REG8_RESETMASK  0xffffffff
#define DAC_CFG_REG8_DEFAULT  0x0

#define DAC_CFG_REG9_READMASK  0xffffffff
#define DAC_CFG_REG9_WRITEMASK  0xffffffff
#define DAC_CFG_REG9_VOLATILEMASK  0x0
#define DAC_CFG_REG9_RESETMASK  0xffffffff
#define DAC_CFG_REG9_DEFAULT  0x0

#define DAC_CFG_REG10_READMASK  0xffffffff
#define DAC_CFG_REG10_WRITEMASK  0xffffffff
#define DAC_CFG_REG10_VOLATILEMASK  0x0
#define DAC_CFG_REG10_RESETMASK  0xffffffff
#define DAC_CFG_REG10_DEFAULT  0x0

#define DAC_CFG_REG11_READMASK  0xffffffff
#define DAC_CFG_REG11_WRITEMASK  0xffffff
#define DAC_CFG_REG11_VOLATILEMASK  0x0
#define DAC_CFG_REG11_RESETMASK  0xffffff
#define DAC_CFG_REG11_DEFAULT  0x0

#define DAC_CFG_REG12_READMASK  0xffffffff
#define DAC_CFG_REG12_WRITEMASK  0xff83ffff
#define DAC_CFG_REG12_VOLATILEMASK  0x0
#define DAC_CFG_REG12_RESETMASK  0xff83ffff
#define DAC_CFG_REG12_DEFAULT  0x0

#define DAC_CFG_REG13_READMASK  0xffffffff
#define DAC_CFG_REG13_WRITEMASK  0xfffefffe
#define DAC_CFG_REG13_VOLATILEMASK  0x0
#define DAC_CFG_REG13_RESETMASK  0xfffefffe
#define DAC_CFG_REG13_DEFAULT  0x4c804c80

#define DAC_CFG_REG14_READMASK  0xffffffff
#define DAC_CFG_REG14_WRITEMASK  0x80000000
#define DAC_CFG_REG14_VOLATILEMASK  0x0
#define DAC_CFG_REG14_RESETMASK  0x80000000
#define DAC_CFG_REG14_DEFAULT  0x0

#define DAC_CFG_REG15_READMASK  0xffffffff
#define DAC_CFG_REG15_WRITEMASK  0xffffffff
#define DAC_CFG_REG15_VOLATILEMASK  0x0
#define DAC_CFG_REG15_RESETMASK  0xffffffff
#define DAC_CFG_REG15_DEFAULT  0x7ff0




/*block :  ACL */
typedef union {
	struct {
		hwint32 pgood_tx_core_bypass : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 1;	/* 1:1 sw=RO hw=RO 0x0  */
		hwint32 acl_tx_pdb_r_core_force_val : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 acl_tx_pdb_r_core_force : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 acl_tx_pdb_l_core_force_val : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 acl_tx_pdb_l_core_force : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 offcal_force_l : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 offcal_force_val_l : 8;	/* 7:14 sw=RW hw=RO 0x0  */
		hwint32 offcal_out_l : 8;	/* 15:22 sw=RO hw=RW 0x0  */
		hwint32 offcal_done_lat_l : 1;	/* 23:23 sw=RW hw=RW 0x0  */
		hwint32 offcal_reg_l : 8;	/* 24:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ACL_REG0_s;


typedef union {
	struct {
		hwint32 reserved0 : 2;	/* 0:1 sw=RO hw=RO 0x0  */
		hwint32 acl_tx_mute_r_core_force_val : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 acl_tx_mute_r_core_force : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 acl_tx_mute_l_core_force_val : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 acl_tx_mute_l_core_force : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 offcal_force_r : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 offcal_force_val_r : 8;	/* 7:14 sw=RW hw=RO 0x0  */
		hwint32 offcal_out_r : 8;	/* 15:22 sw=RO hw=RW 0x0  */
		hwint32 offcal_done_lat_r : 1;	/* 23:23 sw=RW hw=RW 0x0  */
		hwint32 offcal_reg_r : 8;	/* 24:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ACL_REG1_s;


typedef union {
	struct {
		hwint32 acl_port_ctrl_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 acl_offcal_manul_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 1;	/* 2:2 sw=RO hw=RO 0x0  */
		hwint32 offcal_initial_cnt_r : 7;	/* 3:9 sw=RW hw=RO 0x0  */
		hwint32 current_state_r : 4;	/* 10:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 2;	/* 14:15 sw=RO hw=RO 0x0  */
		hwint32 offcal_bypass_r : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 1;	/* 17:17 sw=RO hw=RO 0x0  */
		hwint32 offcal_initial_cnt_l : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 current_state_l : 4;	/* 25:28 sw=RW hw=RO 0x0  */
		hwint32 reserved29 : 2;	/* 29:30 sw=RO hw=RO 0x0  */
		hwint32 offcal_bypass_l : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ACL_REG2_s;


typedef union {
	struct {
		hwint32 offcal_rate : 2;	/* 0:1 sw=RW hw=RO 0x1  */
		hwint32 offcal_chng : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 soft_rst : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 4;	/* 4:7 sw=RO hw=RO 0x0  */
		hwint32 acl_ctrl_clock_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 1;	/* 9:9 sw=RO hw=RO 0x0  */
		hwint32 acl_portx_15ms_cnt_r : 3;	/* 10:12 sw=RW hw=RO 0x0  */
		hwint32 acl_portx_15ms_cnt_l : 3;	/* 13:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 12;	/* 16:27 sw=RO hw=RO 0x0  */
		hwint32 afe_dbg_out_core : 4;	/* 28:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} ACL_REG3_s;


typedef union {
	struct {
		hwint32 pwmn_hs_oc_mask_11 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 pwmn_ls_oc_mask_11 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 pwmp_hs_oc_mask_11 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 pwmp_ls_oc_mask_11 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 hs_ioc_adj_11 : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 ls_ioc_adj_11 : 3;	/* 7:9 sw=RW hw=RO 0x0  */
		hwint32 bypass_clk_detect_11 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 rccal_dbg_11 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reg_force_hiz_l_11 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 reg_force_hiz_r_11 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 reg_force_low_11 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reg_force_high_11 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reg_fdrv_async_ena_11 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 reg_force_trigoc_11 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reg_forcelow_async_nodly_11 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 spare : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 falpul_bypass_25 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 loop_ibadj_25 : 2;	/* 21:22 sw=RW hw=RO 0x0  */
		hwint32 ldo11_obuf_gmib_inc1u_25 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dglitch_bypass_25 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 int1_cmc_25 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 int2_cmc_25 : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 int3_cmc_25 : 3;	/* 27:29 sw=RW hw=RO 0x0  */
		hwint32 reg_ckphdif_lr_11 : 2;	/* 30:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TX_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 slew_rate_p : 8;	/* 0:7 sw=RW hw=RO 0x0  */
		hwint32 d_ota1_ota2_tune : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 carrierclk_dlyctrl_r : 3;	/* 16:18 sw=RW hw=RO 0x0  */
		hwint32 carrierclk_dlyctrl_l : 3;	/* 19:21 sw=RW hw=RO 0x0  */
		hwint32 dcoc_mode : 2;	/* 22:23 sw=RW hw=RO 0x0  */
		hwint32 dont_short_pwmout : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 ofc_vcmbuf_ibadj : 2;	/* 25:26 sw=RW hw=RO 0x0  */
		hwint32 spare : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 d_ota3_tune : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TX_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 reg_rccal_force_code : 5;	/* 0:4 sw=RW hw=RO 0x0  */
		hwint32 reg_rccal_force : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reg_selfrc_disable : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 reg_selfrc_interval : 3;	/* 7:9 sw=RW hw=RO 0x0  */
		hwint32 reg_selfrc_times : 2;	/* 10:11 sw=RW hw=RO 0x0  */
		hwint32 reg_ocpsm_disable : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 o_dbg_pwmdrv_ena : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 reg_tx_dbg_out_sel : 4;	/* 14:17 sw=RW hw=RO 0x0  */
		hwint32 reg_softrst_classd : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 reg_offcal_wi_cmp_op : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 reg_manual_startup_ena : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 reg_manual_pdbbias : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 reg_manual_rccalstart : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 reg_manual_pdbldoclklf : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reg_manual_pdbldo_obuf : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 reg_manual_rcc : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 reg_manual_hzb : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 reg_startup_sm_timer : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 reg_forcelow_dlytime : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 reg_bypass_forcelow_dly : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reg_disable_ldoautomono : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TX_TSTCTRL_3_CORE_s;


typedef union {
	struct {
		hwint32 csdac_left_channel_tranz_amp_input_current_control : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 csdac_left_channel_tranz_amp_output_quiescent_current_control : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 csdac_left_channel_master_bias_control : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 csdac_left_channel_hold_pulse_control : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 left_channel_csdac_hiz : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 csdac_enable_isi_free : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 gain_ff_bypass : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 csdac_dynamic_current_switching_force_enable : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 csdac_tranz_amp_comp_cap_programming : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 csdac_dyn_ccurrent_logic_force_disable : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 csdac_left_channel_force_mute : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 csdac_right_channel_force_mute : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 csdac_right_channel_tranz_amp_input_current_control : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 tranz_amp_output_quiescent_current_control : 2;	/* 18:19 sw=RW hw=RO 0x0  */
		hwint32 csdac_right_channel_tranz_master_bias_control : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 csdac_right_channel_holdpulse_control : 2;	/* 22:23 sw=RW hw=RO 0x0  */
		hwint32 right_channel_csdac_hiz : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 force_csdac_left_channel : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 force_csdac_right_channel : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 csdac_global_bias_current_ctl : 3;	/* 27:29 sw=RW hw=RO 0x0  */
		hwint32 dyncurrent_switching_mux : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 force_mute : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TX_TSTCTRL_4_CORE_s;


typedef union {
	struct {
		hwint32 rst_int1 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rst_int2 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 rst_int3 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ldo_mode : 3;	/* 3:5 sw=RW hw=RO 0x0  */
		hwint32 offcalmode : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 ldo11_vbgsel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 ldo25_vfbsel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 set_classd_gain0db : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 short_classd_input : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 spare : 2;	/* 18:19 sw=RW hw=RO 0x0  */
		hwint32 slew_rate_n : 8;	/* 20:27 sw=RW hw=RO 0x0  */
		hwint32 oc_detect_win : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 ldo11_ith_ocp : 2;	/* 30:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TX_TSTCTRL_5_CORE_s;


typedef union {
	struct {
		hwint32 earlink_pll_en_vcore : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_reset_n_vcore : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_int_div_mode_vcore : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 earlink_pll_dsm_dither_en_vcore : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_rc3_enable_vcore : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 earlink_pll_clk_detect_bypass_vcore : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_capmult_en_vcore : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_ctrl_vcore : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_pre_div_vcore : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_cp_curr_sel_vcore : 4;	/* 16:19 sw=RW hw=RO 0x7  */
		hwint32 earlink_pll_pfd_del_ctl_vcore : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 reserved22 : 2;	/* 22:23 sw=RO hw=RO 0x0  */
		hwint32 earlink_pll_lpf_rc3_ctl_vcore : 3;	/* 24:26 sw=RW hw=RO 0x1  */
		hwint32 reserved27 : 1;	/* 27:27 sw=RO hw=RO 0x0  */
		hwint32 earlink_pll_lpf_bw_res_ctl_vcore : 3;	/* 28:30 sw=RW hw=RO 0x1  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} E_LINK_PLL_CTRL0_s;


typedef union {
	struct {
		hwint32 earlink_pll_frac_div_vcore : 20;	/* 0:19 sw=RW hw=RO 0x0  */
		hwint32 earlink_pll_int_div_vcore : 9;	/* 20:28 sw=RW hw=RO 0x4f  */
		hwint32 reserved29 : 1;	/* 29:29 sw=RO hw=RO 0x0  */
		hwint32 earlink_pll_clkdetect_vcore_sync : 1;	/* 30:30 sw=RO hw=RO 0x0  */
		hwint32 earlink_pll_lock_sync : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} E_LINK_PLL_CTRL1_s;


typedef union {
	struct {
		hwint32 sys_pll_en_vcore : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_reset_n_vcore : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_int_div_mode_vcore : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 sys_pll_rc3_enable_vcore : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_clk_detect_bypass_vcore : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_capmult_en_vcore : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 2;	/* 6:7 sw=RO hw=RO 0x0  */
		hwint32 sys_pll_lpf_rc3_ctl_vcore : 3;	/* 8:10 sw=RW hw=RO 0x1  */
		hwint32 reserved11 : 1;	/* 11:11 sw=RO hw=RO 0x0  */
		hwint32 sys_pll_lpf_bw_res_ctl_vcore : 3;	/* 12:14 sw=RW hw=RO 0x1  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 sys_pll_pre_div_vcore : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_iptat_trim_vcore : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_pfd_del_ctl_vcore : 2;	/* 24:25 sw=RW hw=RO 0x0  */
		hwint32 reserved26 : 2;	/* 26:27 sw=RO hw=RO 0x0  */
		hwint32 sys_pll_cp_curr_sel_vcore : 4;	/* 28:31 sw=RW hw=RO 0x7  */
	} bf;
	hwint32 dw;
} SYS_PLL_CTRL0_s;


typedef union {
	struct {
		hwint32 elink_pll_lockdet_dly_ctrl_msb : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_lockdet_dly_ctrl_msb : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 spare_in_vcore : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 sys_pll_int_div_vcore : 9;	/* 8:16 sw=RW hw=RO 0x4f  */
		hwint32 sys_pll_lock_vcore_sync : 1;	/* 17:17 sw=RO hw=RO 0x0  */
		hwint32 sys_pll_clkdetect_vcore_sync : 1;	/* 18:18 sw=RO hw=RO 0x0  */
		hwint32 reserved19 : 13;	/* 19:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYS_PLL_CTRL1_s;


typedef union {
	struct {
		hwint32 en_tx_buffer : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 en_el_buffer : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 en_txnrx_ref_buffer : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ldocoreref : 5;	/* 3:7 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ldo11ref : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ldo18ref : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ldo25ref : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 ctrl_pgoodcoreref : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 ctrl_pgood11ref : 2;	/* 22:23 sw=RW hw=RO 0x0  */
		hwint32 ctrl_tx_vbg_ref : 2;	/* 24:25 sw=RW hw=RO 0x0  */
		hwint32 reserved26 : 2;	/* 26:27 sw=RO hw=RO 0x0  */
		hwint32 ctrl_elref : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ibg_dis_core : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BGREF_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 ctrl_vbatbrwnoutref : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 en_vb1p23_buffer : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ctrl_vbgtrim : 6;	/* 4:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 1;	/* 10:10 sw=RO hw=RO 0x0  */
		hwint32 ibg_calid_tst_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ibgtrim : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} BGREF_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 ldocore_mode : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 ldo18_mode : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 ldo11_mode : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 ldo25_mode : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 avs_enable : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 avs_mux_ctrl : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 powertop_tstctrl_1_core_26to10 : 17;	/* 10:26 sw=RW hw=RO 0x0  */
		hwint32 hfrcosc_mode3 : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 hfrcosc_mode2 : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 hfrcosc_mode1 : 2;	/* 30:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWERTOP_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 dis_pgood_pvdd11 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dis_pgood_pvdd25 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 en_brwnout_comp : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 en_wakeup_comp : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 force_pgood_pvdd25 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 force_pgood_pvdd11 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 force_pgood_pvdd18 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 force_pgood_dvddio : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 force_brnwnout_compout : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 force_wake_buttonpress : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 powertop_tstctrl_2_core_11to10 : 2;	/* 10:11 sw=RW hw=RO 0x0  */
		hwint32 pvdd25_hyst_ctrl : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 pvdd11_hyst_ctrl : 2;	/* 14:15 sw=RW hw=RO 0x0  */
		hwint32 brwnoutcomp_hyst_ctrl : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 powertop_tstctrl_2_core_19to18 : 2;	/* 18:19 sw=RW hw=RO 0x0  */
		hwint32 enldo11_dly_ctrl : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 pgood_testmux_ctrl : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 powertop_tstctrl_2_core_31to23 : 9;	/* 23:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWERTOP_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 ldocore_tstcrtl : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 ldo11_tstctrl : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 ldo18_testctrl : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 ldo25_tstctrl : 8;	/* 16:23 sw=RW hw=RO 0x0  */
		hwint32 powertop_dig_testmux : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 powertop_ana_testmux : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 reserved : 2;	/* 28:29 sw=RW hw=RO 0x0  */
		hwint32 sel_mb : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 sel_tmp : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWERTOP_TSTCTRL_3_CORE_s;


typedef union {
	struct {
		hwint32 madc_in_sel : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 madc_reference_sel_override : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 rtherm_value_sel : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 en_vtherm_dac : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 rtherm_restrim_dac : 7;	/* 8:14 sw=RW hw=RO 0x0  */
		hwint32 reserved : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 anatest_muxctrl : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 comparator_half_delay : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 comparator_polarity_flip : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 digitaltestmux : 2;	/* 20:21 sw=RW hw=RO 0x0  */
		hwint32 reserved22 : 10;	/* 22:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MADC_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 madc_tstctrl_2_core : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MADC_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 tx_rccal_out_core : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 tx_rccal_out_valid_core : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TX_RCCAL_OUT_CORE_s;


typedef union {
	struct {
		hwint32 lprcosc_fsel_core : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LPRCOSC_FSEL_CORE_s;


typedef union {
	struct {
		hwint32 rx_mic0_rc_tuning_core : 5;	/* 0:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 3;	/* 5:7 sw=RO hw=RO 0x0  */
		hwint32 rx_mic1_rc_tuning_core : 5;	/* 8:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 rx_mic2_rc_tuning_core : 5;	/* 16:20 sw=RW hw=RO 0x0  */
		hwint32 reserved21 : 3;	/* 21:23 sw=RO hw=RO 0x0  */
		hwint32 rx_mic3_rc_tuning_core : 5;	/* 24:28 sw=RW hw=RO 0x0  */
		hwint32 reserved29 : 3;	/* 29:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC_RC_TUNING_s;


typedef union {
	struct {
		hwint32 rx_micbias0_set_core : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 rx_micbias1_set_core : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 rx_micbias2_set_core : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 rx_mic4_rc_tuning_core : 5;	/* 12:16 sw=RW hw=RO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MICBIAS_SET_s;


typedef union {
	struct {
		hwint32 rx_pdb_ref_core : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_vad_core : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_mic4_core : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_mic3_core : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_mic2_core : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_mic1_core : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_mic0_core : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 rx_en_hp_mode_mic4_core : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 rx_en_hp_mode_mic3_core : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 rx_en_hp_mode_mic2_core : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 rx_en_hp_mode_mic1_core : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 rx_en_hp_mode_mic0_core : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_micbias2_core : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_micbias1_core : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 rx_pdb_micbias0_core : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 rx_micbias2_outsw_en_core : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 rx_micbias1_outsw_en_core : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 rx_micbias0_outsw_en_core : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MICBIAS_PDB_HP_CTRL_s;


typedef union {
	struct {
		hwint32 iadj_mic : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 iqui_mic : 3;	/* 3:5 sw=RW hw=RO 0x0  */
		hwint32 pga_cc : 3;	/* 6:8 sw=RW hw=RO 0x0  */
		hwint32 pga_rc : 3;	/* 9:11 sw=RW hw=RO 0x0  */
		hwint32 tst_fstp_25 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avss_25 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avdd_25 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_cmp_bias : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int1_bias : 2;	/* 17:18 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int2_bias : 2;	/* 19:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int3_bias : 2;	/* 21:22 sw=RW hw=RO 0x0  */
		hwint32 ctrl_zero_op_bias : 2;	/* 23:24 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op1 : 2;	/* 25:26 sw=RW hw=RO 0x0  */
		hwint32 ctrl_idac_dclkwidth : 2;	/* 27:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_zero_oa : 2;	/* 29:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_op1_2stage_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC0_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 iadj_mic : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 iqui_mic : 3;	/* 3:5 sw=RW hw=RO 0x0  */
		hwint32 pga_cc : 3;	/* 6:8 sw=RW hw=RO 0x0  */
		hwint32 pga_rc : 3;	/* 9:11 sw=RW hw=RO 0x0  */
		hwint32 tst_fstp_25 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avss_25 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avdd_25 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_cmp_bias : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int1_bias : 2;	/* 17:18 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int2_bias : 2;	/* 19:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int3_bias : 2;	/* 21:22 sw=RW hw=RO 0x0  */
		hwint32 ctrl_zero_op_bias : 2;	/* 23:24 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op1 : 2;	/* 25:26 sw=RW hw=RO 0x0  */
		hwint32 ctrl_idac_dclkwidth : 2;	/* 27:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_zero_oa : 2;	/* 29:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_op1_2stage_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC1_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 iadj_mic : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 iqui_mic : 3;	/* 3:5 sw=RW hw=RO 0x0  */
		hwint32 pga_cc : 3;	/* 6:8 sw=RW hw=RO 0x0  */
		hwint32 pga_rc : 3;	/* 9:11 sw=RW hw=RO 0x0  */
		hwint32 tst_fstp_25 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avss_25 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avdd_25 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_cmp_bias : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int1_bias : 2;	/* 17:18 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int2_bias : 2;	/* 19:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int3_bias : 2;	/* 21:22 sw=RW hw=RO 0x0  */
		hwint32 ctrl_zero_op_bias : 2;	/* 23:24 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op1 : 2;	/* 25:26 sw=RW hw=RO 0x0  */
		hwint32 ctrl_idac_dclkwidth : 2;	/* 27:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_zero_oa : 2;	/* 29:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_op1_2stage_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC2_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 iadj_mic : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 iqui_mic : 3;	/* 3:5 sw=RW hw=RO 0x0  */
		hwint32 pga_cc : 3;	/* 6:8 sw=RW hw=RO 0x0  */
		hwint32 pga_rc : 3;	/* 9:11 sw=RW hw=RO 0x0  */
		hwint32 tst_fstp_25 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avss_25 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avdd_25 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_cmp_bias : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int1_bias : 2;	/* 17:18 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int2_bias : 2;	/* 19:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int3_bias : 2;	/* 21:22 sw=RW hw=RO 0x0  */
		hwint32 ctrl_zero_op_bias : 2;	/* 23:24 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op1 : 2;	/* 25:26 sw=RW hw=RO 0x0  */
		hwint32 ctrl_idac_dclkwidth : 2;	/* 27:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_zero_oa : 2;	/* 29:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_op1_2stage_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC3_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 iadj_mic : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 iqui_mic : 3;	/* 3:5 sw=RW hw=RO 0x0  */
		hwint32 pga_cc : 3;	/* 6:8 sw=RW hw=RO 0x0  */
		hwint32 pga_rc : 3;	/* 9:11 sw=RW hw=RO 0x0  */
		hwint32 tst_fstp_25 : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avss_25 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 tst_nw_avdd_25 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_cmp_bias : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int1_bias : 2;	/* 17:18 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int2_bias : 2;	/* 19:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_int3_bias : 2;	/* 21:22 sw=RW hw=RO 0x0  */
		hwint32 ctrl_zero_op_bias : 2;	/* 23:24 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op1 : 2;	/* 25:26 sw=RW hw=RO 0x0  */
		hwint32 ctrl_idac_dclwidth : 2;	/* 27:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_zero_oa : 2;	/* 29:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_op1_2stage_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC4_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 ctrl_itrim_op2 : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op3 : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_cal_dis : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_speed : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sel_sw_sat : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_dynamic_pd_11 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_ed_11 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 1;	/* 12:12 sw=RO hw=RO 0x0  */
		hwint32 ctrl_flip_ck1x_11 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 ctrl_only_ck1x_11 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat_test_11 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 3;	/* 16:18 sw=RO hw=RO 0x0  */
		hwint32 ctrl_disable_diodes_25 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 ctrl_disable_extra_2stage_25 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_force_diodes_25 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 pga_nbias_select : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 en_hp_mode : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 pga_ormute_en_25 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 pga_input_sw_en_25 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_adc : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_pga : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_test_25 : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_loop_test_25 : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ctsd_test_25 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_res_pga_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC0_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 ctrl_itrim_op2 : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op3 : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_cal_dis : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_speed : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sel_sw_sat : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_dynamic_pd_11 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_ed_11 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 1;	/* 12:12 sw=RO hw=RO 0x0  */
		hwint32 ctrl_flip_ck1x_11 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 ctrl_only_ck1x_11 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat_test_11 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 3;	/* 16:18 sw=RO hw=RO 0x0  */
		hwint32 ctrl_disable_diodes_25 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 ctrl_disable_extra_2stage_25 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_force_diodes_25 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 pga_nbias_select : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 en_hp_mode : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 pga_ormute_en_25 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 pga_input_sw_en_25 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_adc : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_pga : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_test_25 : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_loop_test_25 : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ctsd_test_25 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_res_pga_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC1_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 ctrl_itrim_op2 : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op3 : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_cal_dis : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_speed : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sel_sw_sat : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_dynamic_pd_11 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_ed_11 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 1;	/* 12:12 sw=RO hw=RO 0x0  */
		hwint32 ctrl_flip_ck1x_11 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 ctrl_only_ck1x_11 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat_test_11 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 3;	/* 16:18 sw=RO hw=RO 0x0  */
		hwint32 ctrl_disable_diodes_25 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 ctrl_disable_extra_2stage_25 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_force_diodes_25 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 pga_nbias_select : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 en_hp_mode : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 pga_ormute_en_25 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 pga_input_sw_en_25 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_adc : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_pga : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_test_25 : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_loop_test_25 : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ctsd_test_25 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_res_pga_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC2_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 ctrl_itrim_op2 : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op3 : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_cal_dis : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_speed : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sel_sw_sat : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_dynamic_pd_11 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_ed_11 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 1;	/* 12:12 sw=RO hw=RO 0x0  */
		hwint32 ctrl_flip_ck1x_11 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 ctrl_only_ck1x_11 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat_test_11 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 3;	/* 16:18 sw=RO hw=RO 0x0  */
		hwint32 ctrl_disable_diodes_25 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 ctrl_disable_extra_2stage_25 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_force_diodes_25 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 pga_nbias_select : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 en_hp_mode : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 pga_ormute_en_25 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 pga_input_sw_en_25 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_adc : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_pga : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_test_25 : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_loop_test_25 : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ctsd_test_25 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_res_pga_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC3_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 ctrl_itrim_op2 : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 ctrl_itrim_op3 : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_cal_dis : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_speed : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sel_sw_sat : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_dynamic_pd_11 : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_ed_11 : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 1;	/* 12:12 sw=RO hw=RO 0x0  */
		hwint32 ctrl_flip_ck1x_11 : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 ctrl_only_ck1x_11 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sw_sat_test_11 : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 3;	/* 16:18 sw=RO hw=RO 0x0  */
		hwint32 ctrl_disable_diodes_25 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 ctrl_disable_extra_2stage_25 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 ctrl_force_diodes_25 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 pga_nbias_select : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 en_hp_mode : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 pga_ormute_en_25 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 pga_input_sw_en_25 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_adc : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 local_disable_mic_pga : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 ctrl_sar_test_25 : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 ctrl_loop_test_25 : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 ctrl_ctsd_test_25 : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 ctrl_dis_res_pga_25 : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC4_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 rx_tstctrl_1_core_0 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_1 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_3to2 : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_4 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_5 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_7to6 : 2;	/* 6:7 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_8 : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_9 : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_11to10 : 2;	/* 10:11 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_26to12 : 15;	/* 12:26 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_1_core_31to27 : 5;	/* 27:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_TSTCTRL_1_CORE_s;


typedef union {
	struct {
		hwint32 rx_tstctrl_2_core_0 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_2_core_1 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_2_core_2 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_2_core_3 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_2_core_4 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_2_core_8to5 : 4;	/* 5:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 4;	/* 9:12 sw=RO hw=RO 0x0  */
		hwint32 res_val : 4;	/* 13:16 sw=RW hw=RO 0x0  */
		hwint32 res_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 res_sel : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 ref_sel : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 rx_tstctrl_2_core_31to20 : 12;	/* 20:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_TSTCTRL_2_CORE_s;


typedef union {
	struct {
		hwint32 rx_vad_pga_gain : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_hpf : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_vth : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_beta1 : 3;	/* 7:9 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_beta2 : 3;	/* 10:12 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_intg_cint : 2;	/* 13:14 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_intg_period : 2;	/* 15:16 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_intg_csmpl : 2;	/* 17:18 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_offset_ctrl : 2;	/* 19:20 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_offcal_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_test_mode : 3;	/* 22:24 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_ctrl_force : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_pga_bypass : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 rx_vad_force_offcal : 5;	/* 27:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_TSTCTRL_3_CORE_s;


typedef union {
	struct {
		hwint32 rx_mic0_sample_freq_core : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 2;	/* 2:3 sw=RO hw=RO 0x0  */
		hwint32 rx_mic1_sample_freq_core : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 2;	/* 6:7 sw=RO hw=RO 0x0  */
		hwint32 rx_mic2_sample_freq_core : 2;	/* 8:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 rx_mic3_sample_freq_core : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 2;	/* 14:15 sw=RO hw=RO 0x0  */
		hwint32 rx_mic4_sample_freq_core : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_MIC4_SAMPLE_FREQ_SET_s;


typedef union {
	struct {
		hwint32 rx_gain_mic0_core : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 2;	/* 2:3 sw=RO hw=RO 0x0  */
		hwint32 rx_gain_mic1_core : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 2;	/* 6:7 sw=RO hw=RO 0x0  */
		hwint32 rx_gain_mic2_core : 2;	/* 8:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 2;	/* 10:11 sw=RO hw=RO 0x0  */
		hwint32 rx_gain_mic3_core : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 2;	/* 14:15 sw=RO hw=RO 0x0  */
		hwint32 rx_gain_mic4_core : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 2;	/* 18:19 sw=RO hw=RO 0x0  */
		hwint32 rx_ref_vref_ok_core_sync : 1;	/* 20:20 sw=RO hw=RO 0x0  */
		hwint32 reserved21 : 11;	/* 21:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_GAIN_MIC_CORE_s;


typedef union {
	struct {
		hwint32 rx_unmute_mic0_core : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rx_unmute_mic1_core : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 rx_unmute_mic2_core : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 rx_unmute_mic3_core : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 rx_unmute_mic4_core : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 27;	/* 5:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_UNMUTE_MIC_CORE_s;


typedef union {
	struct {
		hwint32 rx_test_core_r : 4;	/* 0:3 sw=RO hw=RW 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RX_TEST_CORE_R_s;


typedef union {
	struct {
		hwint32 stdrcosc_debug_ctrl_core : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 stdrcosc_pdb_core : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 stdrcosc_cal_start : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} STDRCOSC_CAL_CTRL_s;


typedef union {
	struct {
		hwint32 stdrcosc_cal_force_value : 7;	/* 0:6 sw=RW hw=RO 0x0  */
		hwint32 stdrcosc_cal_force : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} STDRCOSC_CAL_FORCE_s;


typedef union {
	struct {
		hwint32 stdrcosc_cal_value : 7;	/* 0:6 sw=RO hw=RO 0x0  */
		hwint32 stdrcosc_cal_ready : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} STDRCOSC_CAL_VAL_s;


typedef union {
	struct {
		hwint32 pgood_vad_core : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 pgood_tx_core : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 pgood_rx_core : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} PGOOD_STATE_s;


typedef union {
	struct {
		hwint32 madc_pdb_core : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 madc_start_conv_core_reg : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWER_MADC_CTL_s;


typedef union {
	struct {
		hwint32 madc_b_core_r0 : 10;	/* 0:9 sw=RO hw=RW 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWER_MADC_B_STS0_s;


typedef union {
	struct {
		hwint32 madc_b_core_r1 : 10;	/* 0:9 sw=RO hw=RW 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWER_MADC_B_STS1_s;


typedef union {
	struct {
		hwint32 madc_b_core_r2 : 10;	/* 0:9 sw=RO hw=RW 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWER_MADC_B_STS2_s;


typedef union {
	struct {
		hwint32 madc_b_core_r3 : 10;	/* 0:9 sw=RO hw=RW 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWER_MADC_B_STS3_s;


typedef union {
	struct {
		hwint32 lprcosc_trim_core_sw : 5;	/* 0:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 3;	/* 5:7 sw=RO hw=RO 0x0  */
		hwint32 lprcosc_trim_core_ovr_wrt : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} POWER_LPRCOSC_TRIM_SW_CTL_s;


typedef struct {
	ACL_REG0_s  acl_reg0;
	ACL_REG1_s  acl_reg1;
	ACL_REG2_s  acl_reg2;
	ACL_REG3_s  acl_reg3;
	TX_TSTCTRL_1_CORE_s  tx_tstctrl_1_core;
	TX_TSTCTRL_2_CORE_s  tx_tstctrl_2_core;
	TX_TSTCTRL_3_CORE_s  tx_tstctrl_3_core;
	TX_TSTCTRL_4_CORE_s  tx_tstctrl_4_core;
	TX_TSTCTRL_5_CORE_s  tx_tstctrl_5_core;
	hwint8 filler0[0x1c];
	E_LINK_PLL_CTRL0_s  e_link_pll_ctrl0;
	E_LINK_PLL_CTRL1_s  e_link_pll_ctrl1;
	hwint8 filler1[0x18];
	SYS_PLL_CTRL0_s  sys_pll_ctrl0;
	SYS_PLL_CTRL1_s  sys_pll_ctrl1;
	hwint8 filler2[0x18];
	BGREF_TSTCTRL_1_CORE_s  bgref_tstctrl_1_core;
	BGREF_TSTCTRL_2_CORE_s  bgref_tstctrl_2_core;
	hwint8 filler3[0x4];
	POWERTOP_TSTCTRL_1_CORE_s  powertop_tstctrl_1_core;
	POWERTOP_TSTCTRL_2_CORE_s  powertop_tstctrl_2_core;
	POWERTOP_TSTCTRL_3_CORE_s  powertop_tstctrl_3_core;
	MADC_TSTCTRL_1_CORE_s  madc_tstctrl_1_core;
	MADC_TSTCTRL_2_CORE_s  madc_tstctrl_2_core;
	TX_RCCAL_OUT_CORE_s  tx_rccal_out_core;
	LPRCOSC_FSEL_CORE_s  lprcosc_fsel_core;
	hwint8 filler4[0x18];
	RX_MIC_RC_TUNING_s  rx_mic_rc_tuning;
	RX_MICBIAS_SET_s  rx_micbias_set;
	RX_MICBIAS_PDB_HP_CTRL_s  rx_micbias_pdb_hp_ctrl;
	RX_MIC0_TSTCTRL_1_CORE_s  rx_mic0_tstctrl_1_core;
	RX_MIC1_TSTCTRL_1_CORE_s  rx_mic1_tstctrl_1_core;
	RX_MIC2_TSTCTRL_1_CORE_s  rx_mic2_tstctrl_1_core;
	RX_MIC3_TSTCTRL_1_CORE_s  rx_mic3_tstctrl_1_core;
	RX_MIC4_TSTCTRL_1_CORE_s  rx_mic4_tstctrl_1_core;
	RX_MIC0_TSTCTRL_2_CORE_s  rx_mic0_tstctrl_2_core;
	RX_MIC1_TSTCTRL_2_CORE_s  rx_mic1_tstctrl_2_core;
	RX_MIC2_TSTCTRL_2_CORE_s  rx_mic2_tstctrl_2_core;
	RX_MIC3_TSTCTRL_2_CORE_s  rx_mic3_tstctrl_2_core;
	RX_MIC4_TSTCTRL_2_CORE_s  rx_mic4_tstctrl_2_core;
	RX_TSTCTRL_1_CORE_s  rx_tstctrl_1_core;
	RX_TSTCTRL_2_CORE_s  rx_tstctrl_2_core;
	RX_TSTCTRL_3_CORE_s  rx_tstctrl_3_core;
	RX_MIC4_SAMPLE_FREQ_SET_s  rx_mic4_sample_freq_set;
	RX_GAIN_MIC_CORE_s  rx_gain_mic_core;
	RX_UNMUTE_MIC_CORE_s  rx_unmute_mic_core;
	RX_TEST_CORE_R_s  rx_test_core_r;
	STDRCOSC_CAL_CTRL_s  stdrcosc_cal_ctrl;
	STDRCOSC_CAL_FORCE_s  stdrcosc_cal_force;
	STDRCOSC_CAL_VAL_s  stdrcosc_cal_val;
	PGOOD_STATE_s  pgood_state;
	POWER_MADC_CTL_s  power_madc_ctl;
	POWER_MADC_B_STS0_s  power_madc_b_sts0;
	hwint8 filler5[0x18];
	POWER_MADC_B_STS1_s  power_madc_b_sts1;
	POWER_MADC_B_STS2_s  power_madc_b_sts2;
	POWER_MADC_B_STS3_s  power_madc_b_sts3;
	POWER_LPRCOSC_TRIM_SW_CTL_s  power_lprcosc_trim_sw_ctl;

} ACL_s;

#define ACL_REG0_READMASK  0xffffffff
#define ACL_REG0_WRITEMASK  0xff807ffd
#define ACL_REG0_VOLATILEMASK  0xff8000
#define ACL_REG0_RESETMASK  0xfffffffd
#define ACL_REG0_DEFAULT  0x0

#define ACL_REG1_READMASK  0xffffffff
#define ACL_REG1_WRITEMASK  0xff807ffc
#define ACL_REG1_VOLATILEMASK  0xff8000
#define ACL_REG1_RESETMASK  0xfffffffc
#define ACL_REG1_DEFAULT  0x0

#define ACL_REG2_READMASK  0xffffffff
#define ACL_REG2_WRITEMASK  0x9ffd3ffb
#define ACL_REG2_VOLATILEMASK  0x0
#define ACL_REG2_RESETMASK  0x9ffd3ffb
#define ACL_REG2_DEFAULT  0x0

#define ACL_REG3_READMASK  0xffffffff
#define ACL_REG3_WRITEMASK  0xf000fd0f
#define ACL_REG3_VOLATILEMASK  0x0
#define ACL_REG3_RESETMASK  0xf000fd0f
#define ACL_REG3_DEFAULT  0x10000001

#define TX_TSTCTRL_1_CORE_READMASK  0xffffffff
#define TX_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define TX_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define TX_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define TX_TSTCTRL_1_CORE_DEFAULT  0x0

#define TX_TSTCTRL_2_CORE_READMASK  0xffffffff
#define TX_TSTCTRL_2_CORE_WRITEMASK  0xffffffff
#define TX_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define TX_TSTCTRL_2_CORE_RESETMASK  0xffffffff
#define TX_TSTCTRL_2_CORE_DEFAULT  0x0

#define TX_TSTCTRL_3_CORE_READMASK  0xffffffff
#define TX_TSTCTRL_3_CORE_WRITEMASK  0xffffffff
#define TX_TSTCTRL_3_CORE_VOLATILEMASK  0x0
#define TX_TSTCTRL_3_CORE_RESETMASK  0xffffffff
#define TX_TSTCTRL_3_CORE_DEFAULT  0x0

#define TX_TSTCTRL_4_CORE_READMASK  0xffffffff
#define TX_TSTCTRL_4_CORE_WRITEMASK  0xffffffff
#define TX_TSTCTRL_4_CORE_VOLATILEMASK  0x0
#define TX_TSTCTRL_4_CORE_RESETMASK  0xffffffff
#define TX_TSTCTRL_4_CORE_DEFAULT  0x0

#define TX_TSTCTRL_5_CORE_READMASK  0xffffffff
#define TX_TSTCTRL_5_CORE_WRITEMASK  0xffffffff
#define TX_TSTCTRL_5_CORE_VOLATILEMASK  0x0
#define TX_TSTCTRL_5_CORE_RESETMASK  0xffffffff
#define TX_TSTCTRL_5_CORE_DEFAULT  0x0

#define E_LINK_PLL_CTRL0_READMASK  0xffffffff
#define E_LINK_PLL_CTRL0_WRITEMASK  0x773fffdf
#define E_LINK_PLL_CTRL0_VOLATILEMASK  0x0
#define E_LINK_PLL_CTRL0_RESETMASK  0x773fffdf
#define E_LINK_PLL_CTRL0_DEFAULT  0x11070014

#define E_LINK_PLL_CTRL1_READMASK  0xffffffff
#define E_LINK_PLL_CTRL1_WRITEMASK  0x1fffffff
#define E_LINK_PLL_CTRL1_VOLATILEMASK  0x0
#define E_LINK_PLL_CTRL1_RESETMASK  0xdfffffff
#define E_LINK_PLL_CTRL1_DEFAULT  0x4f00000

#define SYS_PLL_CTRL0_READMASK  0xffffffff
#define SYS_PLL_CTRL0_WRITEMASK  0xf3ff773f
#define SYS_PLL_CTRL0_VOLATILEMASK  0x0
#define SYS_PLL_CTRL0_RESETMASK  0xf3ff773f
#define SYS_PLL_CTRL0_DEFAULT  0x70001104

#define SYS_PLL_CTRL1_READMASK  0xffffffff
#define SYS_PLL_CTRL1_WRITEMASK  0x1ffff
#define SYS_PLL_CTRL1_VOLATILEMASK  0x0
#define SYS_PLL_CTRL1_RESETMASK  0x7ffff
#define SYS_PLL_CTRL1_DEFAULT  0x4f00

#define BGREF_TSTCTRL_1_CORE_READMASK  0xffffffff
#define BGREF_TSTCTRL_1_CORE_WRITEMASK  0xf3ffffff
#define BGREF_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define BGREF_TSTCTRL_1_CORE_RESETMASK  0xf3ff7fff
#define BGREF_TSTCTRL_1_CORE_DEFAULT  0x0

#define BGREF_TSTCTRL_2_CORE_READMASK  0xffffffff
#define BGREF_TSTCTRL_2_CORE_WRITEMASK  0xfbff
#define BGREF_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define BGREF_TSTCTRL_2_CORE_RESETMASK  0xfbff
#define BGREF_TSTCTRL_2_CORE_DEFAULT  0x0

#define POWERTOP_TSTCTRL_1_CORE_READMASK  0xffffffff
#define POWERTOP_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define POWERTOP_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define POWERTOP_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define POWERTOP_TSTCTRL_1_CORE_DEFAULT  0x0

#define POWERTOP_TSTCTRL_2_CORE_READMASK  0xffffffff
#define POWERTOP_TSTCTRL_2_CORE_WRITEMASK  0xffffffff
#define POWERTOP_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define POWERTOP_TSTCTRL_2_CORE_RESETMASK  0xffffffff
#define POWERTOP_TSTCTRL_2_CORE_DEFAULT  0x0

#define POWERTOP_TSTCTRL_3_CORE_READMASK  0xffffffff
#define POWERTOP_TSTCTRL_3_CORE_WRITEMASK  0xffffffff
#define POWERTOP_TSTCTRL_3_CORE_VOLATILEMASK  0x0
#define POWERTOP_TSTCTRL_3_CORE_RESETMASK  0xcfffffff
#define POWERTOP_TSTCTRL_3_CORE_DEFAULT  0x0

#define MADC_TSTCTRL_1_CORE_READMASK  0xffffffff
#define MADC_TSTCTRL_1_CORE_WRITEMASK  0x3ffff7
#define MADC_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define MADC_TSTCTRL_1_CORE_RESETMASK  0x3f7ff7
#define MADC_TSTCTRL_1_CORE_DEFAULT  0x0

#define MADC_TSTCTRL_2_CORE_READMASK  0xffffffff
#define MADC_TSTCTRL_2_CORE_WRITEMASK  0xffffffff
#define MADC_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define MADC_TSTCTRL_2_CORE_RESETMASK  0xffffffff
#define MADC_TSTCTRL_2_CORE_DEFAULT  0x0

#define TX_RCCAL_OUT_CORE_READMASK  0xffffffff
#define TX_RCCAL_OUT_CORE_WRITEMASK  0x0
#define TX_RCCAL_OUT_CORE_VOLATILEMASK  0x0
#define TX_RCCAL_OUT_CORE_RESETMASK  0x3f
#define TX_RCCAL_OUT_CORE_DEFAULT  0x0

#define LPRCOSC_FSEL_CORE_READMASK  0xffffffff
#define LPRCOSC_FSEL_CORE_WRITEMASK  0x1
#define LPRCOSC_FSEL_CORE_VOLATILEMASK  0x0
#define LPRCOSC_FSEL_CORE_RESETMASK  0x1
#define LPRCOSC_FSEL_CORE_DEFAULT  0x0

#define RX_MIC_RC_TUNING_READMASK  0xffffffff
#define RX_MIC_RC_TUNING_WRITEMASK  0x1f1f1f1f
#define RX_MIC_RC_TUNING_VOLATILEMASK  0x0
#define RX_MIC_RC_TUNING_RESETMASK  0x1f1f1f1f
#define RX_MIC_RC_TUNING_DEFAULT  0x0

#define RX_MICBIAS_SET_READMASK  0xffffffff
#define RX_MICBIAS_SET_WRITEMASK  0x1ffff
#define RX_MICBIAS_SET_VOLATILEMASK  0x0
#define RX_MICBIAS_SET_RESETMASK  0x1ffff
#define RX_MICBIAS_SET_DEFAULT  0x0

#define RX_MICBIAS_PDB_HP_CTRL_READMASK  0xffffffff
#define RX_MICBIAS_PDB_HP_CTRL_WRITEMASK  0x3ffff
#define RX_MICBIAS_PDB_HP_CTRL_VOLATILEMASK  0x0
#define RX_MICBIAS_PDB_HP_CTRL_RESETMASK  0x3ffff
#define RX_MICBIAS_PDB_HP_CTRL_DEFAULT  0x0

#define RX_MIC0_TSTCTRL_1_CORE_READMASK  0xffffffff
#define RX_MIC0_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define RX_MIC0_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define RX_MIC0_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define RX_MIC0_TSTCTRL_1_CORE_DEFAULT  0x0

#define RX_MIC1_TSTCTRL_1_CORE_READMASK  0xffffffff
#define RX_MIC1_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define RX_MIC1_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define RX_MIC1_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define RX_MIC1_TSTCTRL_1_CORE_DEFAULT  0x0

#define RX_MIC2_TSTCTRL_1_CORE_READMASK  0xffffffff
#define RX_MIC2_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define RX_MIC2_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define RX_MIC2_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define RX_MIC2_TSTCTRL_1_CORE_DEFAULT  0x0

#define RX_MIC3_TSTCTRL_1_CORE_READMASK  0xffffffff
#define RX_MIC3_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define RX_MIC3_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define RX_MIC3_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define RX_MIC3_TSTCTRL_1_CORE_DEFAULT  0x0

#define RX_MIC4_TSTCTRL_1_CORE_READMASK  0xffffffff
#define RX_MIC4_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define RX_MIC4_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define RX_MIC4_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define RX_MIC4_TSTCTRL_1_CORE_DEFAULT  0x0

#define RX_MIC0_TSTCTRL_2_CORE_READMASK  0xffffffff
#define RX_MIC0_TSTCTRL_2_CORE_WRITEMASK  0xfff8efff
#define RX_MIC0_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define RX_MIC0_TSTCTRL_2_CORE_RESETMASK  0xfff8efff
#define RX_MIC0_TSTCTRL_2_CORE_DEFAULT  0x0

#define RX_MIC1_TSTCTRL_2_CORE_READMASK  0xffffffff
#define RX_MIC1_TSTCTRL_2_CORE_WRITEMASK  0xfff8efff
#define RX_MIC1_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define RX_MIC1_TSTCTRL_2_CORE_RESETMASK  0xfff8efff
#define RX_MIC1_TSTCTRL_2_CORE_DEFAULT  0x0

#define RX_MIC2_TSTCTRL_2_CORE_READMASK  0xffffffff
#define RX_MIC2_TSTCTRL_2_CORE_WRITEMASK  0xfff8efff
#define RX_MIC2_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define RX_MIC2_TSTCTRL_2_CORE_RESETMASK  0xfff8efff
#define RX_MIC2_TSTCTRL_2_CORE_DEFAULT  0x0

#define RX_MIC3_TSTCTRL_2_CORE_READMASK  0xffffffff
#define RX_MIC3_TSTCTRL_2_CORE_WRITEMASK  0xfff8efff
#define RX_MIC3_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define RX_MIC3_TSTCTRL_2_CORE_RESETMASK  0xfff8efff
#define RX_MIC3_TSTCTRL_2_CORE_DEFAULT  0x0

#define RX_MIC4_TSTCTRL_2_CORE_READMASK  0xffffffff
#define RX_MIC4_TSTCTRL_2_CORE_WRITEMASK  0xfff8efff
#define RX_MIC4_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define RX_MIC4_TSTCTRL_2_CORE_RESETMASK  0xfff8efff
#define RX_MIC4_TSTCTRL_2_CORE_DEFAULT  0x0

#define RX_TSTCTRL_1_CORE_READMASK  0xffffffff
#define RX_TSTCTRL_1_CORE_WRITEMASK  0xffffffff
#define RX_TSTCTRL_1_CORE_VOLATILEMASK  0x0
#define RX_TSTCTRL_1_CORE_RESETMASK  0xffffffff
#define RX_TSTCTRL_1_CORE_DEFAULT  0x0

#define RX_TSTCTRL_2_CORE_READMASK  0xffffffff
#define RX_TSTCTRL_2_CORE_WRITEMASK  0xffffe1ff
#define RX_TSTCTRL_2_CORE_VOLATILEMASK  0x0
#define RX_TSTCTRL_2_CORE_RESETMASK  0xffffe1ff
#define RX_TSTCTRL_2_CORE_DEFAULT  0x0

#define RX_TSTCTRL_3_CORE_READMASK  0xffffffff
#define RX_TSTCTRL_3_CORE_WRITEMASK  0xffffffff
#define RX_TSTCTRL_3_CORE_VOLATILEMASK  0x0
#define RX_TSTCTRL_3_CORE_RESETMASK  0xffffffff
#define RX_TSTCTRL_3_CORE_DEFAULT  0x0

#define RX_MIC4_SAMPLE_FREQ_SET_READMASK  0xffffffff
#define RX_MIC4_SAMPLE_FREQ_SET_WRITEMASK  0x33333
#define RX_MIC4_SAMPLE_FREQ_SET_VOLATILEMASK  0x0
#define RX_MIC4_SAMPLE_FREQ_SET_RESETMASK  0x33333
#define RX_MIC4_SAMPLE_FREQ_SET_DEFAULT  0x0

#define RX_GAIN_MIC_CORE_READMASK  0xffffffff
#define RX_GAIN_MIC_CORE_WRITEMASK  0x33333
#define RX_GAIN_MIC_CORE_VOLATILEMASK  0x0
#define RX_GAIN_MIC_CORE_RESETMASK  0x133333
#define RX_GAIN_MIC_CORE_DEFAULT  0x0

#define RX_UNMUTE_MIC_CORE_READMASK  0xffffffff
#define RX_UNMUTE_MIC_CORE_WRITEMASK  0x1f
#define RX_UNMUTE_MIC_CORE_VOLATILEMASK  0x0
#define RX_UNMUTE_MIC_CORE_RESETMASK  0x1f
#define RX_UNMUTE_MIC_CORE_DEFAULT  0x0

#define RX_TEST_CORE_R_READMASK  0xffffffff
#define RX_TEST_CORE_R_WRITEMASK  0x0
#define RX_TEST_CORE_R_VOLATILEMASK  0xf
#define RX_TEST_CORE_R_RESETMASK  0xf
#define RX_TEST_CORE_R_DEFAULT  0x0

#define STDRCOSC_CAL_CTRL_READMASK  0xffffffff
#define STDRCOSC_CAL_CTRL_WRITEMASK  0xf
#define STDRCOSC_CAL_CTRL_VOLATILEMASK  0x0
#define STDRCOSC_CAL_CTRL_RESETMASK  0xf
#define STDRCOSC_CAL_CTRL_DEFAULT  0x4

#define STDRCOSC_CAL_FORCE_READMASK  0xffffffff
#define STDRCOSC_CAL_FORCE_WRITEMASK  0xff
#define STDRCOSC_CAL_FORCE_VOLATILEMASK  0x0
#define STDRCOSC_CAL_FORCE_RESETMASK  0xff
#define STDRCOSC_CAL_FORCE_DEFAULT  0x0

#define STDRCOSC_CAL_VAL_READMASK  0xffffffff
#define STDRCOSC_CAL_VAL_WRITEMASK  0x0
#define STDRCOSC_CAL_VAL_VOLATILEMASK  0x0
#define STDRCOSC_CAL_VAL_RESETMASK  0xff
#define STDRCOSC_CAL_VAL_DEFAULT  0x0

#define PGOOD_STATE_READMASK  0xffffffff
#define PGOOD_STATE_WRITEMASK  0x0
#define PGOOD_STATE_VOLATILEMASK  0x7
#define PGOOD_STATE_RESETMASK  0x7
#define PGOOD_STATE_DEFAULT  0x0

#define POWER_MADC_CTL_READMASK  0xffffffff
#define POWER_MADC_CTL_WRITEMASK  0x3
#define POWER_MADC_CTL_VOLATILEMASK  0x0
#define POWER_MADC_CTL_RESETMASK  0x3
#define POWER_MADC_CTL_DEFAULT  0x0

#define POWER_MADC_B_STS0_READMASK  0xffffffff
#define POWER_MADC_B_STS0_WRITEMASK  0x0
#define POWER_MADC_B_STS0_VOLATILEMASK  0x3ff
#define POWER_MADC_B_STS0_RESETMASK  0x3ff
#define POWER_MADC_B_STS0_DEFAULT  0x0

#define POWER_MADC_B_STS1_READMASK  0xffffffff
#define POWER_MADC_B_STS1_WRITEMASK  0x0
#define POWER_MADC_B_STS1_VOLATILEMASK  0x3ff
#define POWER_MADC_B_STS1_RESETMASK  0x3ff
#define POWER_MADC_B_STS1_DEFAULT  0x0

#define POWER_MADC_B_STS2_READMASK  0xffffffff
#define POWER_MADC_B_STS2_WRITEMASK  0x0
#define POWER_MADC_B_STS2_VOLATILEMASK  0x3ff
#define POWER_MADC_B_STS2_RESETMASK  0x3ff
#define POWER_MADC_B_STS2_DEFAULT  0x0

#define POWER_MADC_B_STS3_READMASK  0xffffffff
#define POWER_MADC_B_STS3_WRITEMASK  0x0
#define POWER_MADC_B_STS3_VOLATILEMASK  0x3ff
#define POWER_MADC_B_STS3_RESETMASK  0x3ff
#define POWER_MADC_B_STS3_DEFAULT  0x0

#define POWER_LPRCOSC_TRIM_SW_CTL_READMASK  0xffffffff
#define POWER_LPRCOSC_TRIM_SW_CTL_WRITEMASK  0x11f
#define POWER_LPRCOSC_TRIM_SW_CTL_VOLATILEMASK  0x0
#define POWER_LPRCOSC_TRIM_SW_CTL_RESETMASK  0x11f
#define POWER_LPRCOSC_TRIM_SW_CTL_DEFAULT  0x0




/*block :  DSP_GLB */
typedef union {
	struct {
		hwint32 dsp_core_gck_ctl : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_CORE_GCK_CTL_s;


typedef union {
	struct {
		hwint32 cape_a_bank_gck_ctl : 7;	/* 0:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 cape_b_bank_gck_ctl : 5;	/* 8:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 lle_a_bank_gck_ctl : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 2;	/* 18:19 sw=RO hw=RO 0x0  */
		hwint32 lle_b_bank_gck_ctl : 5;	/* 20:24 sw=RW hw=RO 0x0  */
		hwint32 vect_bank_gck_ctl : 5;	/* 25:29 sw=RW hw=RO 0x0  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MEM_BANK_CLK_CTRL_s;


typedef union {
	struct {
		hwint32 dsp_core_rst_ctl : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 4;	/* 4:7 sw=RO hw=RO 0x0  */
		hwint32 dsp_mem_rst_ctl : 5;	/* 8:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 19;	/* 13:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_RST_CTRL_s;


typedef union {
	struct {
		hwint32 llr_congestion_st : 12;	/* 0:11 sw=RO hw=WO 0x0  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_CONGESTION_ST_s;


typedef union {
	struct {
		hwint32 dsp_illegal_access : 5;	/* 0:4 sw=RW hw=WO 0x0  */
		hwint32 asip2ahb_illegal_access : 4;	/* 5:8 sw=RW hw=WO 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_ILLEGAL_ACCESS_s;


typedef union {
	struct {
		hwint32 arm_lock : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} ARM_LOCK_s;


typedef union {
	struct {
		hwint32 hifi3_lock : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3_LOCK_s;


typedef union {
	struct {
		hwint32 cape_a_lock : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} CAPE_A_LOCK_s;


typedef union {
	struct {
		hwint32 cape_b_lock : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} CAPE_B_LOCK_s;


typedef union {
	struct {
		hwint32 lle_a_lock : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LLE_A_LOCK_s;


typedef union {
	struct {
		hwint32 lle_b_lock : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LLE_B_LOCK_s;


typedef union {
	struct {
		hwint32 enable0 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 enable1 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_INTR_ENABLE_s;


typedef union {
	struct {
		hwint32 status0 : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 status1 : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_INTR_STS_s;


typedef union {
	struct {
		hwint32 clear0 : 1;	/* 0:0 sw=W1C hw=RO 0x0  */
		hwint32 clear1 : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_INTR_CLR_s;


typedef union {
	struct {
		hwint32 debug : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_CFG_s;


typedef union {
	struct {
		hwint32 llea_sleep_type_out : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLEA_SLEEP_TYPE_OUT_s;


typedef union {
	struct {
		hwint32 lleb_sleep_type_out : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLEB_SLEEP_TYPE_OUT_s;


typedef union {
	struct {
		hwint32 capa_sleep_type_out : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CAPA_SLEEP_TYPE_OUT_s;


typedef union {
	struct {
		hwint32 lleb_sleep_type_out : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CAPB_SLEEP_TYPE_OUT_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CAPEA_RAM0_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CAPEA_RAM5_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CAPEB_RAM0_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CAPEB_RAM6_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLEA_RAM0_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLEB_RAM0_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLEB_RAM4_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} VECT_RAM0_MISC_CTRL_s;


typedef union {
	struct {
		hwint32 asip_core_id : 32;	/* 0:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ASIP_CORE_ID_s;


typedef union {
	struct {
		hwint32 lle_anc_latency_target_ch0 : 4;	/* 0:3 sw=RW hw=RO 0x1  */
		hwint32 reserved4 : 4;	/* 4:7 sw=RO hw=RO 0x0  */
		hwint32 lle_anc_latency_target_ch1 : 4;	/* 8:11 sw=RW hw=RO 0x1  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ANC_LTCY_CFG1_s;


typedef union {
	struct {
		hwint32 lle_anc_auto_cal_en : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 lle_anc_reset_ch0 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 lle_anc_reset_ch1 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 llr_decim_int_auto_clr_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ANC_LTCY_CFG2_s;


typedef union {
	struct {
		hwint32 missed_smp_cnt_anc_chan0_r : 4;	/* 0:3 sw=RO hw=RW 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ANC_MIS_SMP_CHAN0_s;


typedef union {
	struct {
		hwint32 missed_smp_cnt_anc_chan1_r : 4;	/* 0:3 sw=RO hw=RW 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ANC_MIS_SMP_CHAN1_s;


typedef union {
	struct {
		hwint32 plybck_ancin_synflag_sel : 1;	/* 0:0 sw=RW hw=RW 0x0  */
		hwint32 interp_ancout_syncflag_sel : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 decim_ancin_syncflag_sel : 2;	/* 2:3 sw=RW hw=RW 0x0  */
		hwint32 plybck_ancin_en_ch0 : 1;	/* 4:4 sw=RW hw=RW 0x1  */
		hwint32 plybck_ancin_en_ch1 : 1;	/* 5:5 sw=RW hw=RW 0x1  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ANC_PLYBCK_SYNC_CTL_s;


typedef union {
	struct {
		hwint32 anc_smp_mis_int_chan0 : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 anc_smp_mis_int_chan1 : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ANC_SMP_MIS_INT_s;


typedef union {
	struct {
		hwint32 llr_ll_decim_int0 : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 llr_ll_decim_int1 : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 llr_ll_decim_int2 : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 llr_ll_decim_int3 : 1;	/* 3:3 sw=W1C hw=RW 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_LL_DECIM_INT_s;


typedef union {
	struct {
		hwint32 llr_elk_int_ch0 : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 llr_elk_int_ch1 : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ELK_IN_INT_s;


typedef union {
	struct {
		hwint32 byps_ancout_chan0 : 1;	/* 0:0 sw=RW hw=RW 0x0  */
		hwint32 byps_ancout_chan1 : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 reserved2 : 2;	/* 2:3 sw=RO hw=RO 0x0  */
		hwint32 decim_chan_sel_byps_to_anc_chan0 : 2;	/* 4:5 sw=RW hw=RW 0x0  */
		hwint32 reserved6 : 2;	/* 6:7 sw=RO hw=RO 0x0  */
		hwint32 decim_chan_sel_byps_to_anc_chan1 : 2;	/* 8:9 sw=RW hw=RW 0x0  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} LLR_ANC_BYPASS_CTRL_s;


typedef struct {
	DSP_CORE_GCK_CTL_s  dsp_core_gck_ctl;
	MEM_BANK_CLK_CTRL_s  mem_bank_clk_ctrl;
	DSP_RST_CTRL_s  dsp_rst_ctrl;
	LLR_CONGESTION_ST_s  llr_congestion_st;
	DSP_ILLEGAL_ACCESS_s  dsp_illegal_access;
	ARM_LOCK_s  arm_lock;
	HIFI3_LOCK_s  hifi3_lock;
	CAPE_A_LOCK_s  cape_a_lock;
	CAPE_B_LOCK_s  cape_b_lock;
	LLE_A_LOCK_s  lle_a_lock;
	LLE_B_LOCK_s  lle_b_lock;
	hwint8 filler0[0x30];
	GLOBAL_LOCK_INTR_ENABLE_s  global_lock_intr_enable;
	GLOBAL_LOCK_INTR_STS_s  global_lock_intr_sts;
	GLOBAL_LOCK_INTR_CLR_s  global_lock_intr_clr;
	GLOBAL_LOCK_CFG_s  global_lock_cfg;
	LLEA_SLEEP_TYPE_OUT_s  llea_sleep_type_out;
	LLEB_SLEEP_TYPE_OUT_s  lleb_sleep_type_out;
	CAPA_SLEEP_TYPE_OUT_s  capa_sleep_type_out;
	CAPB_SLEEP_TYPE_OUT_s  capb_sleep_type_out;
	hwint8 filler1[0x4];
	CAPEA_RAM0_MISC_CTRL_s  capea_ram0_misc_ctrl;
	CAPEA_RAM5_MISC_CTRL_s  capea_ram5_misc_ctrl;
	CAPEB_RAM0_MISC_CTRL_s  capeb_ram0_misc_ctrl;
	hwint8 filler2[0x4];
	CAPEB_RAM6_MISC_CTRL_s  capeb_ram6_misc_ctrl;
	LLEA_RAM0_MISC_CTRL_s  llea_ram0_misc_ctrl;
	hwint8 filler3[0x4];
	LLEB_RAM0_MISC_CTRL_s  lleb_ram0_misc_ctrl;
	hwint8 filler4[0x4];
	LLEB_RAM4_MISC_CTRL_s  lleb_ram4_misc_ctrl;
	VECT_RAM0_MISC_CTRL_s  vect_ram0_misc_ctrl;
	hwint8 filler5[0x4];
	ASIP_CORE_ID_s  asip_core_id;
	hwint8 filler6[0x30c];
	LLR_ANC_LTCY_CFG1_s  llr_anc_ltcy_cfg1;
	LLR_ANC_LTCY_CFG2_s  llr_anc_ltcy_cfg2;
	LLR_ANC_MIS_SMP_CHAN0_s  llr_anc_mis_smp_chan0;
	LLR_ANC_MIS_SMP_CHAN1_s  llr_anc_mis_smp_chan1;
	LLR_ANC_PLYBCK_SYNC_CTL_s  llr_anc_plybck_sync_ctl;
	hwint8 filler7[0x4];
	LLR_ANC_SMP_MIS_INT_s  llr_anc_smp_mis_int;
	hwint8 filler8[0x4];
	LLR_LL_DECIM_INT_s  llr_ll_decim_int;
	hwint8 filler9[0x4];
	LLR_ELK_IN_INT_s  llr_elk_in_int;
	hwint8 filler10[0x4];
	LLR_ANC_BYPASS_CTRL_s  llr_anc_bypass_ctrl;

} DSP_GLB_s;

#define DSP_CORE_GCK_CTL_READMASK  0xffffffff
#define DSP_CORE_GCK_CTL_WRITEMASK  0xf
#define DSP_CORE_GCK_CTL_VOLATILEMASK  0x0
#define DSP_CORE_GCK_CTL_RESETMASK  0xf
#define DSP_CORE_GCK_CTL_DEFAULT  0x0

#define MEM_BANK_CLK_CTRL_READMASK  0xffffffff
#define MEM_BANK_CLK_CTRL_WRITEMASK  0x3ff31f7f
#define MEM_BANK_CLK_CTRL_VOLATILEMASK  0x0
#define MEM_BANK_CLK_CTRL_RESETMASK  0x3ff31f7f
#define MEM_BANK_CLK_CTRL_DEFAULT  0x0

#define DSP_RST_CTRL_READMASK  0xffffffff
#define DSP_RST_CTRL_WRITEMASK  0x1f0f
#define DSP_RST_CTRL_VOLATILEMASK  0x0
#define DSP_RST_CTRL_RESETMASK  0x1f0f
#define DSP_RST_CTRL_DEFAULT  0x0

#define LLR_CONGESTION_ST_READMASK  0xffffffff
#define LLR_CONGESTION_ST_WRITEMASK  0x0
#define LLR_CONGESTION_ST_VOLATILEMASK  0xfff
#define LLR_CONGESTION_ST_RESETMASK  0xfff
#define LLR_CONGESTION_ST_DEFAULT  0x0

#define DSP_ILLEGAL_ACCESS_READMASK  0xffffffff
#define DSP_ILLEGAL_ACCESS_WRITEMASK  0x1ff
#define DSP_ILLEGAL_ACCESS_VOLATILEMASK  0x1ff
#define DSP_ILLEGAL_ACCESS_RESETMASK  0x1ff
#define DSP_ILLEGAL_ACCESS_DEFAULT  0x0

#define ARM_LOCK_READMASK  0xffffffff
#define ARM_LOCK_WRITEMASK  0x0
#define ARM_LOCK_VOLATILEMASK  0xffffffff
#define ARM_LOCK_RESETMASK  0xffffffff
#define ARM_LOCK_DEFAULT  0x0

#define HIFI3_LOCK_READMASK  0xffffffff
#define HIFI3_LOCK_WRITEMASK  0x0
#define HIFI3_LOCK_VOLATILEMASK  0xffffffff
#define HIFI3_LOCK_RESETMASK  0xffffffff
#define HIFI3_LOCK_DEFAULT  0x0

#define CAPE_A_LOCK_READMASK  0xffffffff
#define CAPE_A_LOCK_WRITEMASK  0x0
#define CAPE_A_LOCK_VOLATILEMASK  0xffffffff
#define CAPE_A_LOCK_RESETMASK  0xffffffff
#define CAPE_A_LOCK_DEFAULT  0x0

#define CAPE_B_LOCK_READMASK  0xffffffff
#define CAPE_B_LOCK_WRITEMASK  0x0
#define CAPE_B_LOCK_VOLATILEMASK  0xffffffff
#define CAPE_B_LOCK_RESETMASK  0xffffffff
#define CAPE_B_LOCK_DEFAULT  0x0

#define LLE_A_LOCK_READMASK  0xffffffff
#define LLE_A_LOCK_WRITEMASK  0x0
#define LLE_A_LOCK_VOLATILEMASK  0xffffffff
#define LLE_A_LOCK_RESETMASK  0xffffffff
#define LLE_A_LOCK_DEFAULT  0x0

#define LLE_B_LOCK_READMASK  0xffffffff
#define LLE_B_LOCK_WRITEMASK  0x0
#define LLE_B_LOCK_VOLATILEMASK  0xffffffff
#define LLE_B_LOCK_RESETMASK  0xffffffff
#define LLE_B_LOCK_DEFAULT  0x0

#define GLOBAL_LOCK_INTR_ENABLE_READMASK  0xffffffff
#define GLOBAL_LOCK_INTR_ENABLE_WRITEMASK  0x3
#define GLOBAL_LOCK_INTR_ENABLE_VOLATILEMASK  0x0
#define GLOBAL_LOCK_INTR_ENABLE_RESETMASK  0x3
#define GLOBAL_LOCK_INTR_ENABLE_DEFAULT  0x0

#define GLOBAL_LOCK_INTR_STS_READMASK  0xffffffff
#define GLOBAL_LOCK_INTR_STS_WRITEMASK  0x0
#define GLOBAL_LOCK_INTR_STS_VOLATILEMASK  0x3
#define GLOBAL_LOCK_INTR_STS_RESETMASK  0x3
#define GLOBAL_LOCK_INTR_STS_DEFAULT  0x0

#define GLOBAL_LOCK_INTR_CLR_READMASK  0xfffffffc
#define GLOBAL_LOCK_INTR_CLR_WRITEMASK  0x3
#define GLOBAL_LOCK_INTR_CLR_VOLATILEMASK  0x0
#define GLOBAL_LOCK_INTR_CLR_RESETMASK  0x3
#define GLOBAL_LOCK_INTR_CLR_DEFAULT  0x0

#define GLOBAL_LOCK_CFG_READMASK  0xffffffff
#define GLOBAL_LOCK_CFG_WRITEMASK  0x1
#define GLOBAL_LOCK_CFG_VOLATILEMASK  0x0
#define GLOBAL_LOCK_CFG_RESETMASK  0x1
#define GLOBAL_LOCK_CFG_DEFAULT  0x0

#define LLEA_SLEEP_TYPE_OUT_READMASK  0xffffffff
#define LLEA_SLEEP_TYPE_OUT_WRITEMASK  0x0
#define LLEA_SLEEP_TYPE_OUT_VOLATILEMASK  0xffff
#define LLEA_SLEEP_TYPE_OUT_RESETMASK  0xffff
#define LLEA_SLEEP_TYPE_OUT_DEFAULT  0x0

#define LLEB_SLEEP_TYPE_OUT_READMASK  0xffffffff
#define LLEB_SLEEP_TYPE_OUT_WRITEMASK  0x0
#define LLEB_SLEEP_TYPE_OUT_VOLATILEMASK  0xffff
#define LLEB_SLEEP_TYPE_OUT_RESETMASK  0xffff
#define LLEB_SLEEP_TYPE_OUT_DEFAULT  0x0

#define CAPA_SLEEP_TYPE_OUT_READMASK  0xffffffff
#define CAPA_SLEEP_TYPE_OUT_WRITEMASK  0x0
#define CAPA_SLEEP_TYPE_OUT_VOLATILEMASK  0xffff
#define CAPA_SLEEP_TYPE_OUT_RESETMASK  0xffff
#define CAPA_SLEEP_TYPE_OUT_DEFAULT  0x0

#define CAPB_SLEEP_TYPE_OUT_READMASK  0xffffffff
#define CAPB_SLEEP_TYPE_OUT_WRITEMASK  0x0
#define CAPB_SLEEP_TYPE_OUT_VOLATILEMASK  0xffff
#define CAPB_SLEEP_TYPE_OUT_RESETMASK  0xffff
#define CAPB_SLEEP_TYPE_OUT_DEFAULT  0x0

#define CAPEA_RAM0_MISC_CTRL_READMASK  0xffffffff
#define CAPEA_RAM0_MISC_CTRL_WRITEMASK  0x7fff
#define CAPEA_RAM0_MISC_CTRL_VOLATILEMASK  0x0
#define CAPEA_RAM0_MISC_CTRL_RESETMASK  0x7fff
#define CAPEA_RAM0_MISC_CTRL_DEFAULT  0x413

#define CAPEA_RAM5_MISC_CTRL_READMASK  0xffffffff
#define CAPEA_RAM5_MISC_CTRL_WRITEMASK  0x7fff
#define CAPEA_RAM5_MISC_CTRL_VOLATILEMASK  0x0
#define CAPEA_RAM5_MISC_CTRL_RESETMASK  0x7fff
#define CAPEA_RAM5_MISC_CTRL_DEFAULT  0x413

#define CAPEB_RAM0_MISC_CTRL_READMASK  0xffffffff
#define CAPEB_RAM0_MISC_CTRL_WRITEMASK  0x7fff
#define CAPEB_RAM0_MISC_CTRL_VOLATILEMASK  0x0
#define CAPEB_RAM0_MISC_CTRL_RESETMASK  0x7fff
#define CAPEB_RAM0_MISC_CTRL_DEFAULT  0x413

#define CAPEB_RAM6_MISC_CTRL_READMASK  0xffffffff
#define CAPEB_RAM6_MISC_CTRL_WRITEMASK  0x7fff
#define CAPEB_RAM6_MISC_CTRL_VOLATILEMASK  0x0
#define CAPEB_RAM6_MISC_CTRL_RESETMASK  0x7fff
#define CAPEB_RAM6_MISC_CTRL_DEFAULT  0x413

#define LLEA_RAM0_MISC_CTRL_READMASK  0xffffffff
#define LLEA_RAM0_MISC_CTRL_WRITEMASK  0x7fff
#define LLEA_RAM0_MISC_CTRL_VOLATILEMASK  0x0
#define LLEA_RAM0_MISC_CTRL_RESETMASK  0x7fff
#define LLEA_RAM0_MISC_CTRL_DEFAULT  0x413

#define LLEB_RAM0_MISC_CTRL_READMASK  0xffffffff
#define LLEB_RAM0_MISC_CTRL_WRITEMASK  0x7fff
#define LLEB_RAM0_MISC_CTRL_VOLATILEMASK  0x0
#define LLEB_RAM0_MISC_CTRL_RESETMASK  0x7fff
#define LLEB_RAM0_MISC_CTRL_DEFAULT  0x413

#define LLEB_RAM4_MISC_CTRL_READMASK  0xffffffff
#define LLEB_RAM4_MISC_CTRL_WRITEMASK  0x7fff
#define LLEB_RAM4_MISC_CTRL_VOLATILEMASK  0x0
#define LLEB_RAM4_MISC_CTRL_RESETMASK  0x7fff
#define LLEB_RAM4_MISC_CTRL_DEFAULT  0x413

#define VECT_RAM0_MISC_CTRL_READMASK  0xffffffff
#define VECT_RAM0_MISC_CTRL_WRITEMASK  0x7fff
#define VECT_RAM0_MISC_CTRL_VOLATILEMASK  0x0
#define VECT_RAM0_MISC_CTRL_RESETMASK  0x7fff
#define VECT_RAM0_MISC_CTRL_DEFAULT  0x413

#define ASIP_CORE_ID_READMASK  0xffffffff
#define ASIP_CORE_ID_WRITEMASK  0x0
#define ASIP_CORE_ID_VOLATILEMASK  0x0
#define ASIP_CORE_ID_RESETMASK  0xffffffff
#define ASIP_CORE_ID_DEFAULT  0x0

#define LLR_ANC_LTCY_CFG1_READMASK  0xffffffff
#define LLR_ANC_LTCY_CFG1_WRITEMASK  0xf0f
#define LLR_ANC_LTCY_CFG1_VOLATILEMASK  0x0
#define LLR_ANC_LTCY_CFG1_RESETMASK  0xf0f
#define LLR_ANC_LTCY_CFG1_DEFAULT  0x101

#define LLR_ANC_LTCY_CFG2_READMASK  0xffffffff
#define LLR_ANC_LTCY_CFG2_WRITEMASK  0xf
#define LLR_ANC_LTCY_CFG2_VOLATILEMASK  0x0
#define LLR_ANC_LTCY_CFG2_RESETMASK  0xf
#define LLR_ANC_LTCY_CFG2_DEFAULT  0x1

#define LLR_ANC_MIS_SMP_CHAN0_READMASK  0xffffffff
#define LLR_ANC_MIS_SMP_CHAN0_WRITEMASK  0x0
#define LLR_ANC_MIS_SMP_CHAN0_VOLATILEMASK  0xf
#define LLR_ANC_MIS_SMP_CHAN0_RESETMASK  0xf
#define LLR_ANC_MIS_SMP_CHAN0_DEFAULT  0x0

#define LLR_ANC_MIS_SMP_CHAN1_READMASK  0xffffffff
#define LLR_ANC_MIS_SMP_CHAN1_WRITEMASK  0x0
#define LLR_ANC_MIS_SMP_CHAN1_VOLATILEMASK  0xf
#define LLR_ANC_MIS_SMP_CHAN1_RESETMASK  0xf
#define LLR_ANC_MIS_SMP_CHAN1_DEFAULT  0x0

#define LLR_ANC_PLYBCK_SYNC_CTL_READMASK  0xffffffff
#define LLR_ANC_PLYBCK_SYNC_CTL_WRITEMASK  0x3f
#define LLR_ANC_PLYBCK_SYNC_CTL_VOLATILEMASK  0x3f
#define LLR_ANC_PLYBCK_SYNC_CTL_RESETMASK  0x3f
#define LLR_ANC_PLYBCK_SYNC_CTL_DEFAULT  0x30

#define LLR_ANC_SMP_MIS_INT_READMASK  0xfffffffc
#define LLR_ANC_SMP_MIS_INT_WRITEMASK  0x3
#define LLR_ANC_SMP_MIS_INT_VOLATILEMASK  0x3
#define LLR_ANC_SMP_MIS_INT_RESETMASK  0x3
#define LLR_ANC_SMP_MIS_INT_DEFAULT  0x0

#define LLR_LL_DECIM_INT_READMASK  0xfffffff0
#define LLR_LL_DECIM_INT_WRITEMASK  0xf
#define LLR_LL_DECIM_INT_VOLATILEMASK  0xf
#define LLR_LL_DECIM_INT_RESETMASK  0xf
#define LLR_LL_DECIM_INT_DEFAULT  0x0

#define LLR_ELK_IN_INT_READMASK  0xfffffffc
#define LLR_ELK_IN_INT_WRITEMASK  0x3
#define LLR_ELK_IN_INT_VOLATILEMASK  0x3
#define LLR_ELK_IN_INT_RESETMASK  0x3
#define LLR_ELK_IN_INT_DEFAULT  0x0

#define LLR_ANC_BYPASS_CTRL_READMASK  0xffffffff
#define LLR_ANC_BYPASS_CTRL_WRITEMASK  0x333
#define LLR_ANC_BYPASS_CTRL_VOLATILEMASK  0x333
#define LLR_ANC_BYPASS_CTRL_RESETMASK  0x333
#define LLR_ANC_BYPASS_CTRL_DEFAULT  0x0




/*block :  DSP_LOCK_CTRL */
typedef union {
	struct {
		hwint32 global_lock_set : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_SET_AHB_s;


typedef union {
	struct {
		hwint32 global_lock_set : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_SET_HIFI3_s;


typedef union {
	struct {
		hwint32 global_lock_set : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_SET_CAPEA_s;


typedef union {
	struct {
		hwint32 global_lock_set : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_SET_CAPEB_s;


typedef union {
	struct {
		hwint32 global_lock_set : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_SET_LLEA_s;


typedef union {
	struct {
		hwint32 global_lock_set : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_SET_LLEB_s;


typedef union {
	struct {
		hwint32 global_lock_clr : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_CLR_AHB_s;


typedef union {
	struct {
		hwint32 global_lock_clr : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_CLR_HIFI3_s;


typedef union {
	struct {
		hwint32 global_lock_clr : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_CLR_CAPEA_s;


typedef union {
	struct {
		hwint32 global_lock_clr : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_CLR_CAPEB_s;


typedef union {
	struct {
		hwint32 global_lock_clr : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_CLR_LLEA_s;


typedef union {
	struct {
		hwint32 global_lock_clr : 32;	/* 0:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} GLOBAL_LOCK_CLR_LLEB_s;


typedef struct {
	GLOBAL_LOCK_SET_AHB_s  global_lock_set_ahb;
	GLOBAL_LOCK_SET_HIFI3_s  global_lock_set_hifi3;
	GLOBAL_LOCK_SET_CAPEA_s  global_lock_set_capea;
	GLOBAL_LOCK_SET_CAPEB_s  global_lock_set_capeb;
	GLOBAL_LOCK_SET_LLEA_s  global_lock_set_llea;
	GLOBAL_LOCK_SET_LLEB_s  global_lock_set_lleb;
	GLOBAL_LOCK_CLR_AHB_s  global_lock_clr_ahb;
	GLOBAL_LOCK_CLR_HIFI3_s  global_lock_clr_hifi3;
	GLOBAL_LOCK_CLR_CAPEA_s  global_lock_clr_capea;
	GLOBAL_LOCK_CLR_CAPEB_s  global_lock_clr_capeb;
	GLOBAL_LOCK_CLR_LLEA_s  global_lock_clr_llea;
	GLOBAL_LOCK_CLR_LLEB_s  global_lock_clr_lleb;

} DSP_LOCK_CTRL_s;

#define GLOBAL_LOCK_SET_AHB_READMASK  0x0
#define GLOBAL_LOCK_SET_AHB_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_SET_AHB_VOLATILEMASK  0x0
#define GLOBAL_LOCK_SET_AHB_RESETMASK  0xffffffff
#define GLOBAL_LOCK_SET_AHB_DEFAULT  0x0

#define GLOBAL_LOCK_SET_HIFI3_READMASK  0x0
#define GLOBAL_LOCK_SET_HIFI3_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_SET_HIFI3_VOLATILEMASK  0x0
#define GLOBAL_LOCK_SET_HIFI3_RESETMASK  0xffffffff
#define GLOBAL_LOCK_SET_HIFI3_DEFAULT  0x0

#define GLOBAL_LOCK_SET_CAPEA_READMASK  0x0
#define GLOBAL_LOCK_SET_CAPEA_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_SET_CAPEA_VOLATILEMASK  0x0
#define GLOBAL_LOCK_SET_CAPEA_RESETMASK  0xffffffff
#define GLOBAL_LOCK_SET_CAPEA_DEFAULT  0x0

#define GLOBAL_LOCK_SET_CAPEB_READMASK  0x0
#define GLOBAL_LOCK_SET_CAPEB_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_SET_CAPEB_VOLATILEMASK  0x0
#define GLOBAL_LOCK_SET_CAPEB_RESETMASK  0xffffffff
#define GLOBAL_LOCK_SET_CAPEB_DEFAULT  0x0

#define GLOBAL_LOCK_SET_LLEA_READMASK  0x0
#define GLOBAL_LOCK_SET_LLEA_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_SET_LLEA_VOLATILEMASK  0x0
#define GLOBAL_LOCK_SET_LLEA_RESETMASK  0xffffffff
#define GLOBAL_LOCK_SET_LLEA_DEFAULT  0x0

#define GLOBAL_LOCK_SET_LLEB_READMASK  0x0
#define GLOBAL_LOCK_SET_LLEB_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_SET_LLEB_VOLATILEMASK  0x0
#define GLOBAL_LOCK_SET_LLEB_RESETMASK  0xffffffff
#define GLOBAL_LOCK_SET_LLEB_DEFAULT  0x0

#define GLOBAL_LOCK_CLR_AHB_READMASK  0x0
#define GLOBAL_LOCK_CLR_AHB_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_CLR_AHB_VOLATILEMASK  0x0
#define GLOBAL_LOCK_CLR_AHB_RESETMASK  0xffffffff
#define GLOBAL_LOCK_CLR_AHB_DEFAULT  0x0

#define GLOBAL_LOCK_CLR_HIFI3_READMASK  0x0
#define GLOBAL_LOCK_CLR_HIFI3_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_CLR_HIFI3_VOLATILEMASK  0x0
#define GLOBAL_LOCK_CLR_HIFI3_RESETMASK  0xffffffff
#define GLOBAL_LOCK_CLR_HIFI3_DEFAULT  0x0

#define GLOBAL_LOCK_CLR_CAPEA_READMASK  0x0
#define GLOBAL_LOCK_CLR_CAPEA_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEA_VOLATILEMASK  0x0
#define GLOBAL_LOCK_CLR_CAPEA_RESETMASK  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEA_DEFAULT  0x0

#define GLOBAL_LOCK_CLR_CAPEB_READMASK  0x0
#define GLOBAL_LOCK_CLR_CAPEB_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEB_VOLATILEMASK  0x0
#define GLOBAL_LOCK_CLR_CAPEB_RESETMASK  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEB_DEFAULT  0x0

#define GLOBAL_LOCK_CLR_LLEA_READMASK  0x0
#define GLOBAL_LOCK_CLR_LLEA_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_CLR_LLEA_VOLATILEMASK  0x0
#define GLOBAL_LOCK_CLR_LLEA_RESETMASK  0xffffffff
#define GLOBAL_LOCK_CLR_LLEA_DEFAULT  0x0

#define GLOBAL_LOCK_CLR_LLEB_READMASK  0x0
#define GLOBAL_LOCK_CLR_LLEB_WRITEMASK  0xffffffff
#define GLOBAL_LOCK_CLR_LLEB_VOLATILEMASK  0x0
#define GLOBAL_LOCK_CLR_LLEB_RESETMASK  0xffffffff
#define GLOBAL_LOCK_CLR_LLEB_DEFAULT  0x0




/*block :  DSP_INT_GLBCTRL */
typedef union {
	struct {
		hwint32 int_dis_reg_l : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_DIS_REG_L_s;


typedef union {
	struct {
		hwint32 int_dis_reg_h : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_DIS_REG_H_s;


typedef struct {
	INT_DIS_REG_L_s  int_dis_reg_l;
	INT_DIS_REG_H_s  int_dis_reg_h;

} DSP_INT_GLBCTRL_s;

#define INT_DIS_REG_L_READMASK  0xffffffff
#define INT_DIS_REG_L_WRITEMASK  0xffffffff
#define INT_DIS_REG_L_VOLATILEMASK  0x0
#define INT_DIS_REG_L_RESETMASK  0xffffffff
#define INT_DIS_REG_L_DEFAULT  0xffffffff

#define INT_DIS_REG_H_READMASK  0xffffffff
#define INT_DIS_REG_H_WRITEMASK  0xffffffff
#define INT_DIS_REG_H_VOLATILEMASK  0x0
#define INT_DIS_REG_H_RESETMASK  0xffffffff
#define INT_DIS_REG_H_DEFAULT  0xffffffff




/*block :  DSP_INT_CORECTRL_AHBVIEW */
typedef union {
	struct {
		hwint32 int_assign_asip_l : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_L_LLEA_s;


typedef union {
	struct {
		hwint32 int_assign_asip_h : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_H_LLEA_s;


typedef union {
	struct {
		hwint32 int_sts_asip_l_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_L_R_LLEA_s;


typedef union {
	struct {
		hwint32 int_sts_asip_h_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_H_R_LLEA_s;


typedef union {
	struct {
		hwint32 int_en0_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_L_LLEA_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_H_LLEA_s;


typedef union {
	struct {
		hwint32 int_en1_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_L_LLEA_s;


typedef union {
	struct {
		hwint32 int_en1_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_H_LLEA_s;


typedef union {
	struct {
		hwint32 int_en2_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_L_LLEA_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_H_LLEA_s;


typedef union {
	struct {
		hwint32 int_en3_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_L_LLEA_s;


typedef union {
	struct {
		hwint32 int_en3_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_H_LLEA_s;


typedef union {
	struct {
		hwint32 sw_wakeup : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKEUP_LLEA_s;


typedef union {
	struct {
		hwint32 sw_wake_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKE_MODE_LLEA_s;


typedef union {
	struct {
		hwint32 dsp_sw_int : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_CORE_SFT_INT_LLEA_s;


typedef union {
	struct {
		hwint32 int_assign_asip_l : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_L_LLEB_s;


typedef union {
	struct {
		hwint32 int_assign_asip_h : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_H_LLEB_s;


typedef union {
	struct {
		hwint32 int_sts_asip_l_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_L_R_LLEB_s;


typedef union {
	struct {
		hwint32 int_sts_asip_h_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_H_R_LLEB_s;


typedef union {
	struct {
		hwint32 int_en0_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_L_LLEB_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_H_LLEB_s;


typedef union {
	struct {
		hwint32 int_en1_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_L_LLEB_s;


typedef union {
	struct {
		hwint32 int_en1_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_H_LLEB_s;


typedef union {
	struct {
		hwint32 int_en2_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_L_LLEB_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_H_LLEB_s;


typedef union {
	struct {
		hwint32 int_en3_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_L_LLEB_s;


typedef union {
	struct {
		hwint32 int_en3_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_H_LLEB_s;


typedef union {
	struct {
		hwint32 sw_wakeup : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKEUP_LLEB_s;


typedef union {
	struct {
		hwint32 sw_wake_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKE_MODE_LLEB_s;


typedef union {
	struct {
		hwint32 dsp_sw_int : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_CORE_SFT_INT_LLEB_s;


typedef union {
	struct {
		hwint32 int_assign_asip_l : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_L_CAPEA_s;


typedef union {
	struct {
		hwint32 int_assign_asip_h : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_H_CAPEA_s;


typedef union {
	struct {
		hwint32 int_sts_asip_l_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_L_R_CAPEA_s;


typedef union {
	struct {
		hwint32 int_sts_asip_h_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_H_R_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en0_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_L_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_H_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en1_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_L_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en1_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_H_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en2_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_L_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_H_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en3_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_L_CAPEA_s;


typedef union {
	struct {
		hwint32 int_en3_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_H_CAPEA_s;


typedef union {
	struct {
		hwint32 sw_wakeup : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKEUP_CAPEA_s;


typedef union {
	struct {
		hwint32 sw_wake_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKE_MODE_CAPEA_s;


typedef union {
	struct {
		hwint32 dsp_sw_int : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_CORE_SFT_INT_CAPEA_s;


typedef union {
	struct {
		hwint32 int_assign_asip_l : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_L_CAPEB_s;


typedef union {
	struct {
		hwint32 int_assign_asip_h : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_H_CAPEB_s;


typedef union {
	struct {
		hwint32 int_sts_asip_l_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_L_R_CAPEB_s;


typedef union {
	struct {
		hwint32 int_sts_asip_h_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_H_R_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en0_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_L_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_H_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en1_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_L_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en1_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_H_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en2_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_L_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_H_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en3_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_L_CAPEB_s;


typedef union {
	struct {
		hwint32 int_en3_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_H_CAPEB_s;


typedef union {
	struct {
		hwint32 sw_wakeup : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKEUP_CAPEB_s;


typedef union {
	struct {
		hwint32 sw_wake_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKE_MODE_CAPEB_s;


typedef union {
	struct {
		hwint32 dsp_sw_int : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_CORE_SFT_INT_CAPEB_s;


typedef struct {
	INT_ASSIGN_ASIP_L_LLEA_s  int_assign_asip_l_llea;
	INT_ASSIGN_ASIP_H_LLEA_s  int_assign_asip_h_llea;
	INT_STS_ASIP_L_R_LLEA_s  int_sts_asip_l_r_llea;
	INT_STS_ASIP_H_R_LLEA_s  int_sts_asip_h_r_llea;
	INT_EN0_ASIP_L_LLEA_s  int_en0_asip_l_llea;
	INT_EN0_ASIP_H_LLEA_s  int_en0_asip_h_llea;
	INT_EN1_ASIP_L_LLEA_s  int_en1_asip_l_llea;
	INT_EN1_ASIP_H_LLEA_s  int_en1_asip_h_llea;
	INT_EN2_ASIP_L_LLEA_s  int_en2_asip_l_llea;
	INT_EN2_ASIP_H_LLEA_s  int_en2_asip_h_llea;
	INT_EN3_ASIP_L_LLEA_s  int_en3_asip_l_llea;
	INT_EN3_ASIP_H_LLEA_s  int_en3_asip_h_llea;
	SW_WAKEUP_LLEA_s  sw_wakeup_llea;
	hwint8 filler0[0x4];
	SW_WAKE_MODE_LLEA_s  sw_wake_mode_llea;
	hwint8 filler1[0x4];
	DSP_CORE_SFT_INT_LLEA_s  dsp_core_sft_int_llea;
	hwint8 filler2[0x3c];
	INT_ASSIGN_ASIP_L_LLEB_s  int_assign_asip_l_lleb;
	INT_ASSIGN_ASIP_H_LLEB_s  int_assign_asip_h_lleb;
	INT_STS_ASIP_L_R_LLEB_s  int_sts_asip_l_r_lleb;
	INT_STS_ASIP_H_R_LLEB_s  int_sts_asip_h_r_lleb;
	INT_EN0_ASIP_L_LLEB_s  int_en0_asip_l_lleb;
	INT_EN0_ASIP_H_LLEB_s  int_en0_asip_h_lleb;
	INT_EN1_ASIP_L_LLEB_s  int_en1_asip_l_lleb;
	INT_EN1_ASIP_H_LLEB_s  int_en1_asip_h_lleb;
	INT_EN2_ASIP_L_LLEB_s  int_en2_asip_l_lleb;
	INT_EN2_ASIP_H_LLEB_s  int_en2_asip_h_lleb;
	INT_EN3_ASIP_L_LLEB_s  int_en3_asip_l_lleb;
	INT_EN3_ASIP_H_LLEB_s  int_en3_asip_h_lleb;
	SW_WAKEUP_LLEB_s  sw_wakeup_lleb;
	hwint8 filler3[0x4];
	SW_WAKE_MODE_LLEB_s  sw_wake_mode_lleb;
	hwint8 filler4[0x4];
	DSP_CORE_SFT_INT_LLEB_s  dsp_core_sft_int_lleb;
	hwint8 filler5[0x3c];
	INT_ASSIGN_ASIP_L_CAPEA_s  int_assign_asip_l_capea;
	INT_ASSIGN_ASIP_H_CAPEA_s  int_assign_asip_h_capea;
	INT_STS_ASIP_L_R_CAPEA_s  int_sts_asip_l_r_capea;
	INT_STS_ASIP_H_R_CAPEA_s  int_sts_asip_h_r_capea;
	INT_EN0_ASIP_L_CAPEA_s  int_en0_asip_l_capea;
	INT_EN0_ASIP_H_CAPEA_s  int_en0_asip_h_capea;
	INT_EN1_ASIP_L_CAPEA_s  int_en1_asip_l_capea;
	INT_EN1_ASIP_H_CAPEA_s  int_en1_asip_h_capea;
	INT_EN2_ASIP_L_CAPEA_s  int_en2_asip_l_capea;
	INT_EN2_ASIP_H_CAPEA_s  int_en2_asip_h_capea;
	INT_EN3_ASIP_L_CAPEA_s  int_en3_asip_l_capea;
	INT_EN3_ASIP_H_CAPEA_s  int_en3_asip_h_capea;
	SW_WAKEUP_CAPEA_s  sw_wakeup_capea;
	hwint8 filler6[0x4];
	SW_WAKE_MODE_CAPEA_s  sw_wake_mode_capea;
	hwint8 filler7[0x4];
	DSP_CORE_SFT_INT_CAPEA_s  dsp_core_sft_int_capea;
	hwint8 filler8[0x3c];
	INT_ASSIGN_ASIP_L_CAPEB_s  int_assign_asip_l_capeb;
	INT_ASSIGN_ASIP_H_CAPEB_s  int_assign_asip_h_capeb;
	INT_STS_ASIP_L_R_CAPEB_s  int_sts_asip_l_r_capeb;
	INT_STS_ASIP_H_R_CAPEB_s  int_sts_asip_h_r_capeb;
	INT_EN0_ASIP_L_CAPEB_s  int_en0_asip_l_capeb;
	INT_EN0_ASIP_H_CAPEB_s  int_en0_asip_h_capeb;
	INT_EN1_ASIP_L_CAPEB_s  int_en1_asip_l_capeb;
	INT_EN1_ASIP_H_CAPEB_s  int_en1_asip_h_capeb;
	INT_EN2_ASIP_L_CAPEB_s  int_en2_asip_l_capeb;
	INT_EN2_ASIP_H_CAPEB_s  int_en2_asip_h_capeb;
	INT_EN3_ASIP_L_CAPEB_s  int_en3_asip_l_capeb;
	INT_EN3_ASIP_H_CAPEB_s  int_en3_asip_h_capeb;
	SW_WAKEUP_CAPEB_s  sw_wakeup_capeb;
	hwint8 filler9[0x4];
	SW_WAKE_MODE_CAPEB_s  sw_wake_mode_capeb;
	hwint8 filler10[0x4];
	DSP_CORE_SFT_INT_CAPEB_s  dsp_core_sft_int_capeb;

} DSP_INT_CORECTRL_AHBVIEW_s;

#define INT_ASSIGN_ASIP_L_LLEA_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEA_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEA_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_L_LLEA_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEA_DEFAULT  0xffffffff

#define INT_ASSIGN_ASIP_H_LLEA_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEA_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEA_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_H_LLEA_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEA_DEFAULT  0xffffffff

#define INT_STS_ASIP_L_R_LLEA_READMASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEA_WRITEMASK  0x0
#define INT_STS_ASIP_L_R_LLEA_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEA_RESETMASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEA_DEFAULT  0x0

#define INT_STS_ASIP_H_R_LLEA_READMASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEA_WRITEMASK  0x0
#define INT_STS_ASIP_H_R_LLEA_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEA_RESETMASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEA_DEFAULT  0x0

#define INT_EN0_ASIP_L_LLEA_READMASK  0xffffffff
#define INT_EN0_ASIP_L_LLEA_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_L_LLEA_VOLATILEMASK  0x0
#define INT_EN0_ASIP_L_LLEA_RESETMASK  0xffffffff
#define INT_EN0_ASIP_L_LLEA_DEFAULT  0x0

#define INT_EN0_ASIP_H_LLEA_READMASK  0xffffffff
#define INT_EN0_ASIP_H_LLEA_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_H_LLEA_VOLATILEMASK  0x0
#define INT_EN0_ASIP_H_LLEA_RESETMASK  0xffffffff
#define INT_EN0_ASIP_H_LLEA_DEFAULT  0x0

#define INT_EN1_ASIP_L_LLEA_READMASK  0xffffffff
#define INT_EN1_ASIP_L_LLEA_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_L_LLEA_VOLATILEMASK  0x0
#define INT_EN1_ASIP_L_LLEA_RESETMASK  0xffffffff
#define INT_EN1_ASIP_L_LLEA_DEFAULT  0x0

#define INT_EN1_ASIP_H_LLEA_READMASK  0xffffffff
#define INT_EN1_ASIP_H_LLEA_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_H_LLEA_VOLATILEMASK  0x0
#define INT_EN1_ASIP_H_LLEA_RESETMASK  0xffffffff
#define INT_EN1_ASIP_H_LLEA_DEFAULT  0x0

#define INT_EN2_ASIP_L_LLEA_READMASK  0xffffffff
#define INT_EN2_ASIP_L_LLEA_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_L_LLEA_VOLATILEMASK  0x0
#define INT_EN2_ASIP_L_LLEA_RESETMASK  0xffffffff
#define INT_EN2_ASIP_L_LLEA_DEFAULT  0x0

#define INT_EN2_ASIP_H_LLEA_READMASK  0xffffffff
#define INT_EN2_ASIP_H_LLEA_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_H_LLEA_VOLATILEMASK  0x0
#define INT_EN2_ASIP_H_LLEA_RESETMASK  0xffffffff
#define INT_EN2_ASIP_H_LLEA_DEFAULT  0x0

#define INT_EN3_ASIP_L_LLEA_READMASK  0xffffffff
#define INT_EN3_ASIP_L_LLEA_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_L_LLEA_VOLATILEMASK  0x0
#define INT_EN3_ASIP_L_LLEA_RESETMASK  0xffffffff
#define INT_EN3_ASIP_L_LLEA_DEFAULT  0x0

#define INT_EN3_ASIP_H_LLEA_READMASK  0xffffffff
#define INT_EN3_ASIP_H_LLEA_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_H_LLEA_VOLATILEMASK  0x0
#define INT_EN3_ASIP_H_LLEA_RESETMASK  0xffffffff
#define INT_EN3_ASIP_H_LLEA_DEFAULT  0x0

#define SW_WAKEUP_LLEA_READMASK  0xffffffff
#define SW_WAKEUP_LLEA_WRITEMASK  0x1
#define SW_WAKEUP_LLEA_VOLATILEMASK  0x0
#define SW_WAKEUP_LLEA_RESETMASK  0x1
#define SW_WAKEUP_LLEA_DEFAULT  0x0

#define SW_WAKE_MODE_LLEA_READMASK  0xffffffff
#define SW_WAKE_MODE_LLEA_WRITEMASK  0x1
#define SW_WAKE_MODE_LLEA_VOLATILEMASK  0x0
#define SW_WAKE_MODE_LLEA_RESETMASK  0x1
#define SW_WAKE_MODE_LLEA_DEFAULT  0x0

#define DSP_CORE_SFT_INT_LLEA_READMASK  0xffffffff
#define DSP_CORE_SFT_INT_LLEA_WRITEMASK  0x1
#define DSP_CORE_SFT_INT_LLEA_VOLATILEMASK  0x0
#define DSP_CORE_SFT_INT_LLEA_RESETMASK  0x1
#define DSP_CORE_SFT_INT_LLEA_DEFAULT  0x0

#define INT_ASSIGN_ASIP_L_LLEB_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEB_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEB_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_L_LLEB_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEB_DEFAULT  0xffffffff

#define INT_ASSIGN_ASIP_H_LLEB_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEB_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEB_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_H_LLEB_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEB_DEFAULT  0xffffffff

#define INT_STS_ASIP_L_R_LLEB_READMASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEB_WRITEMASK  0x0
#define INT_STS_ASIP_L_R_LLEB_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEB_RESETMASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEB_DEFAULT  0x0

#define INT_STS_ASIP_H_R_LLEB_READMASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEB_WRITEMASK  0x0
#define INT_STS_ASIP_H_R_LLEB_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEB_RESETMASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEB_DEFAULT  0x0

#define INT_EN0_ASIP_L_LLEB_READMASK  0xffffffff
#define INT_EN0_ASIP_L_LLEB_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_L_LLEB_VOLATILEMASK  0x0
#define INT_EN0_ASIP_L_LLEB_RESETMASK  0xffffffff
#define INT_EN0_ASIP_L_LLEB_DEFAULT  0x0

#define INT_EN0_ASIP_H_LLEB_READMASK  0xffffffff
#define INT_EN0_ASIP_H_LLEB_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_H_LLEB_VOLATILEMASK  0x0
#define INT_EN0_ASIP_H_LLEB_RESETMASK  0xffffffff
#define INT_EN0_ASIP_H_LLEB_DEFAULT  0x0

#define INT_EN1_ASIP_L_LLEB_READMASK  0xffffffff
#define INT_EN1_ASIP_L_LLEB_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_L_LLEB_VOLATILEMASK  0x0
#define INT_EN1_ASIP_L_LLEB_RESETMASK  0xffffffff
#define INT_EN1_ASIP_L_LLEB_DEFAULT  0x0

#define INT_EN1_ASIP_H_LLEB_READMASK  0xffffffff
#define INT_EN1_ASIP_H_LLEB_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_H_LLEB_VOLATILEMASK  0x0
#define INT_EN1_ASIP_H_LLEB_RESETMASK  0xffffffff
#define INT_EN1_ASIP_H_LLEB_DEFAULT  0x0

#define INT_EN2_ASIP_L_LLEB_READMASK  0xffffffff
#define INT_EN2_ASIP_L_LLEB_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_L_LLEB_VOLATILEMASK  0x0
#define INT_EN2_ASIP_L_LLEB_RESETMASK  0xffffffff
#define INT_EN2_ASIP_L_LLEB_DEFAULT  0x0

#define INT_EN2_ASIP_H_LLEB_READMASK  0xffffffff
#define INT_EN2_ASIP_H_LLEB_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_H_LLEB_VOLATILEMASK  0x0
#define INT_EN2_ASIP_H_LLEB_RESETMASK  0xffffffff
#define INT_EN2_ASIP_H_LLEB_DEFAULT  0x0

#define INT_EN3_ASIP_L_LLEB_READMASK  0xffffffff
#define INT_EN3_ASIP_L_LLEB_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_L_LLEB_VOLATILEMASK  0x0
#define INT_EN3_ASIP_L_LLEB_RESETMASK  0xffffffff
#define INT_EN3_ASIP_L_LLEB_DEFAULT  0x0

#define INT_EN3_ASIP_H_LLEB_READMASK  0xffffffff
#define INT_EN3_ASIP_H_LLEB_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_H_LLEB_VOLATILEMASK  0x0
#define INT_EN3_ASIP_H_LLEB_RESETMASK  0xffffffff
#define INT_EN3_ASIP_H_LLEB_DEFAULT  0x0

#define SW_WAKEUP_LLEB_READMASK  0xffffffff
#define SW_WAKEUP_LLEB_WRITEMASK  0x1
#define SW_WAKEUP_LLEB_VOLATILEMASK  0x0
#define SW_WAKEUP_LLEB_RESETMASK  0x1
#define SW_WAKEUP_LLEB_DEFAULT  0x0

#define SW_WAKE_MODE_LLEB_READMASK  0xffffffff
#define SW_WAKE_MODE_LLEB_WRITEMASK  0x1
#define SW_WAKE_MODE_LLEB_VOLATILEMASK  0x0
#define SW_WAKE_MODE_LLEB_RESETMASK  0x1
#define SW_WAKE_MODE_LLEB_DEFAULT  0x0

#define DSP_CORE_SFT_INT_LLEB_READMASK  0xffffffff
#define DSP_CORE_SFT_INT_LLEB_WRITEMASK  0x1
#define DSP_CORE_SFT_INT_LLEB_VOLATILEMASK  0x0
#define DSP_CORE_SFT_INT_LLEB_RESETMASK  0x1
#define DSP_CORE_SFT_INT_LLEB_DEFAULT  0x0

#define INT_ASSIGN_ASIP_L_CAPEA_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEA_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEA_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_L_CAPEA_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEA_DEFAULT  0xffffffff

#define INT_ASSIGN_ASIP_H_CAPEA_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEA_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEA_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_H_CAPEA_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEA_DEFAULT  0xffffffff

#define INT_STS_ASIP_L_R_CAPEA_READMASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEA_WRITEMASK  0x0
#define INT_STS_ASIP_L_R_CAPEA_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEA_RESETMASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEA_DEFAULT  0x0

#define INT_STS_ASIP_H_R_CAPEA_READMASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEA_WRITEMASK  0x0
#define INT_STS_ASIP_H_R_CAPEA_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEA_RESETMASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEA_DEFAULT  0x0

#define INT_EN0_ASIP_L_CAPEA_READMASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEA_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEA_VOLATILEMASK  0x0
#define INT_EN0_ASIP_L_CAPEA_RESETMASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEA_DEFAULT  0x0

#define INT_EN0_ASIP_H_CAPEA_READMASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEA_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEA_VOLATILEMASK  0x0
#define INT_EN0_ASIP_H_CAPEA_RESETMASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEA_DEFAULT  0x0

#define INT_EN1_ASIP_L_CAPEA_READMASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEA_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEA_VOLATILEMASK  0x0
#define INT_EN1_ASIP_L_CAPEA_RESETMASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEA_DEFAULT  0x0

#define INT_EN1_ASIP_H_CAPEA_READMASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEA_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEA_VOLATILEMASK  0x0
#define INT_EN1_ASIP_H_CAPEA_RESETMASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEA_DEFAULT  0x0

#define INT_EN2_ASIP_L_CAPEA_READMASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEA_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEA_VOLATILEMASK  0x0
#define INT_EN2_ASIP_L_CAPEA_RESETMASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEA_DEFAULT  0x0

#define INT_EN2_ASIP_H_CAPEA_READMASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEA_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEA_VOLATILEMASK  0x0
#define INT_EN2_ASIP_H_CAPEA_RESETMASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEA_DEFAULT  0x0

#define INT_EN3_ASIP_L_CAPEA_READMASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEA_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEA_VOLATILEMASK  0x0
#define INT_EN3_ASIP_L_CAPEA_RESETMASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEA_DEFAULT  0x0

#define INT_EN3_ASIP_H_CAPEA_READMASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEA_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEA_VOLATILEMASK  0x0
#define INT_EN3_ASIP_H_CAPEA_RESETMASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEA_DEFAULT  0x0

#define SW_WAKEUP_CAPEA_READMASK  0xffffffff
#define SW_WAKEUP_CAPEA_WRITEMASK  0x1
#define SW_WAKEUP_CAPEA_VOLATILEMASK  0x0
#define SW_WAKEUP_CAPEA_RESETMASK  0x1
#define SW_WAKEUP_CAPEA_DEFAULT  0x0

#define SW_WAKE_MODE_CAPEA_READMASK  0xffffffff
#define SW_WAKE_MODE_CAPEA_WRITEMASK  0x1
#define SW_WAKE_MODE_CAPEA_VOLATILEMASK  0x0
#define SW_WAKE_MODE_CAPEA_RESETMASK  0x1
#define SW_WAKE_MODE_CAPEA_DEFAULT  0x0

#define DSP_CORE_SFT_INT_CAPEA_READMASK  0xffffffff
#define DSP_CORE_SFT_INT_CAPEA_WRITEMASK  0x1
#define DSP_CORE_SFT_INT_CAPEA_VOLATILEMASK  0x0
#define DSP_CORE_SFT_INT_CAPEA_RESETMASK  0x1
#define DSP_CORE_SFT_INT_CAPEA_DEFAULT  0x0

#define INT_ASSIGN_ASIP_L_CAPEB_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEB_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEB_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_L_CAPEB_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEB_DEFAULT  0xffffffff

#define INT_ASSIGN_ASIP_H_CAPEB_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEB_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEB_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_H_CAPEB_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEB_DEFAULT  0xffffffff

#define INT_STS_ASIP_L_R_CAPEB_READMASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEB_WRITEMASK  0x0
#define INT_STS_ASIP_L_R_CAPEB_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEB_RESETMASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEB_DEFAULT  0x0

#define INT_STS_ASIP_H_R_CAPEB_READMASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEB_WRITEMASK  0x0
#define INT_STS_ASIP_H_R_CAPEB_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEB_RESETMASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEB_DEFAULT  0x0

#define INT_EN0_ASIP_L_CAPEB_READMASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEB_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEB_VOLATILEMASK  0x0
#define INT_EN0_ASIP_L_CAPEB_RESETMASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEB_DEFAULT  0x0

#define INT_EN0_ASIP_H_CAPEB_READMASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEB_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEB_VOLATILEMASK  0x0
#define INT_EN0_ASIP_H_CAPEB_RESETMASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEB_DEFAULT  0x0

#define INT_EN1_ASIP_L_CAPEB_READMASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEB_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEB_VOLATILEMASK  0x0
#define INT_EN1_ASIP_L_CAPEB_RESETMASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEB_DEFAULT  0x0

#define INT_EN1_ASIP_H_CAPEB_READMASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEB_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEB_VOLATILEMASK  0x0
#define INT_EN1_ASIP_H_CAPEB_RESETMASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEB_DEFAULT  0x0

#define INT_EN2_ASIP_L_CAPEB_READMASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEB_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEB_VOLATILEMASK  0x0
#define INT_EN2_ASIP_L_CAPEB_RESETMASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEB_DEFAULT  0x0

#define INT_EN2_ASIP_H_CAPEB_READMASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEB_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEB_VOLATILEMASK  0x0
#define INT_EN2_ASIP_H_CAPEB_RESETMASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEB_DEFAULT  0x0

#define INT_EN3_ASIP_L_CAPEB_READMASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEB_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEB_VOLATILEMASK  0x0
#define INT_EN3_ASIP_L_CAPEB_RESETMASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEB_DEFAULT  0x0

#define INT_EN3_ASIP_H_CAPEB_READMASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEB_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEB_VOLATILEMASK  0x0
#define INT_EN3_ASIP_H_CAPEB_RESETMASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEB_DEFAULT  0x0

#define SW_WAKEUP_CAPEB_READMASK  0xffffffff
#define SW_WAKEUP_CAPEB_WRITEMASK  0x1
#define SW_WAKEUP_CAPEB_VOLATILEMASK  0x0
#define SW_WAKEUP_CAPEB_RESETMASK  0x1
#define SW_WAKEUP_CAPEB_DEFAULT  0x0

#define SW_WAKE_MODE_CAPEB_READMASK  0xffffffff
#define SW_WAKE_MODE_CAPEB_WRITEMASK  0x1
#define SW_WAKE_MODE_CAPEB_VOLATILEMASK  0x0
#define SW_WAKE_MODE_CAPEB_RESETMASK  0x1
#define SW_WAKE_MODE_CAPEB_DEFAULT  0x0

#define DSP_CORE_SFT_INT_CAPEB_READMASK  0xffffffff
#define DSP_CORE_SFT_INT_CAPEB_WRITEMASK  0x1
#define DSP_CORE_SFT_INT_CAPEB_VOLATILEMASK  0x0
#define DSP_CORE_SFT_INT_CAPEB_RESETMASK  0x1
#define DSP_CORE_SFT_INT_CAPEB_DEFAULT  0x0




/*block :  DSP_INT_CORECTRL_ASIPVIEW */
typedef union {
	struct {
		hwint32 int_assign_asip_l : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_L_s;


typedef union {
	struct {
		hwint32 int_assign_asip_h : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} INT_ASSIGN_ASIP_H_s;


typedef union {
	struct {
		hwint32 int_sts_asip_l_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_L_R_s;


typedef union {
	struct {
		hwint32 int_sts_asip_h_r : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_STS_ASIP_H_R_s;


typedef union {
	struct {
		hwint32 int_en0_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_L_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_ASIP_H_s;


typedef union {
	struct {
		hwint32 int_en1_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_L_s;


typedef union {
	struct {
		hwint32 int_en1_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_ASIP_H_s;


typedef union {
	struct {
		hwint32 int_en2_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_L_s;


typedef union {
	struct {
		hwint32 int_en0_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN2_ASIP_H_s;


typedef union {
	struct {
		hwint32 int_en3_asip_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_L_s;


typedef union {
	struct {
		hwint32 int_en3_asip_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN3_ASIP_H_s;


typedef union {
	struct {
		hwint32 sw_wakeup : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKEUP_s;


typedef union {
	struct {
		hwint32 sw_wake_mode : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SW_WAKE_MODE_s;


typedef union {
	struct {
		hwint32 dsp_sw_int : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_CORE_SFT_INT_s;


typedef struct {
	INT_ASSIGN_ASIP_L_s  int_assign_asip_l;
	INT_ASSIGN_ASIP_H_s  int_assign_asip_h;
	INT_STS_ASIP_L_R_s  int_sts_asip_l_r;
	INT_STS_ASIP_H_R_s  int_sts_asip_h_r;
	INT_EN0_ASIP_L_s  int_en0_asip_l;
	INT_EN0_ASIP_H_s  int_en0_asip_h;
	INT_EN1_ASIP_L_s  int_en1_asip_l;
	INT_EN1_ASIP_H_s  int_en1_asip_h;
	INT_EN2_ASIP_L_s  int_en2_asip_l;
	INT_EN2_ASIP_H_s  int_en2_asip_h;
	INT_EN3_ASIP_L_s  int_en3_asip_l;
	INT_EN3_ASIP_H_s  int_en3_asip_h;
	SW_WAKEUP_s  sw_wakeup;
	hwint8 filler0[0x4];
	SW_WAKE_MODE_s  sw_wake_mode;
	hwint8 filler1[0x4];
	DSP_CORE_SFT_INT_s  dsp_core_sft_int;

} DSP_INT_CORECTRL_ASIPVIEW_s;

#define INT_ASSIGN_ASIP_L_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_L_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_L_DEFAULT  0xffffffff

#define INT_ASSIGN_ASIP_H_READMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_WRITEMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_VOLATILEMASK  0x0
#define INT_ASSIGN_ASIP_H_RESETMASK  0xffffffff
#define INT_ASSIGN_ASIP_H_DEFAULT  0xffffffff

#define INT_STS_ASIP_L_R_READMASK  0xffffffff
#define INT_STS_ASIP_L_R_WRITEMASK  0x0
#define INT_STS_ASIP_L_R_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_L_R_RESETMASK  0xffffffff
#define INT_STS_ASIP_L_R_DEFAULT  0x0

#define INT_STS_ASIP_H_R_READMASK  0xffffffff
#define INT_STS_ASIP_H_R_WRITEMASK  0x0
#define INT_STS_ASIP_H_R_VOLATILEMASK  0xffffffff
#define INT_STS_ASIP_H_R_RESETMASK  0xffffffff
#define INT_STS_ASIP_H_R_DEFAULT  0x0

#define INT_EN0_ASIP_L_READMASK  0xffffffff
#define INT_EN0_ASIP_L_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_L_VOLATILEMASK  0x0
#define INT_EN0_ASIP_L_RESETMASK  0xffffffff
#define INT_EN0_ASIP_L_DEFAULT  0x0

#define INT_EN0_ASIP_H_READMASK  0xffffffff
#define INT_EN0_ASIP_H_WRITEMASK  0xffffffff
#define INT_EN0_ASIP_H_VOLATILEMASK  0x0
#define INT_EN0_ASIP_H_RESETMASK  0xffffffff
#define INT_EN0_ASIP_H_DEFAULT  0x0

#define INT_EN1_ASIP_L_READMASK  0xffffffff
#define INT_EN1_ASIP_L_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_L_VOLATILEMASK  0x0
#define INT_EN1_ASIP_L_RESETMASK  0xffffffff
#define INT_EN1_ASIP_L_DEFAULT  0x0

#define INT_EN1_ASIP_H_READMASK  0xffffffff
#define INT_EN1_ASIP_H_WRITEMASK  0xffffffff
#define INT_EN1_ASIP_H_VOLATILEMASK  0x0
#define INT_EN1_ASIP_H_RESETMASK  0xffffffff
#define INT_EN1_ASIP_H_DEFAULT  0x0

#define INT_EN2_ASIP_L_READMASK  0xffffffff
#define INT_EN2_ASIP_L_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_L_VOLATILEMASK  0x0
#define INT_EN2_ASIP_L_RESETMASK  0xffffffff
#define INT_EN2_ASIP_L_DEFAULT  0x0

#define INT_EN2_ASIP_H_READMASK  0xffffffff
#define INT_EN2_ASIP_H_WRITEMASK  0xffffffff
#define INT_EN2_ASIP_H_VOLATILEMASK  0x0
#define INT_EN2_ASIP_H_RESETMASK  0xffffffff
#define INT_EN2_ASIP_H_DEFAULT  0x0

#define INT_EN3_ASIP_L_READMASK  0xffffffff
#define INT_EN3_ASIP_L_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_L_VOLATILEMASK  0x0
#define INT_EN3_ASIP_L_RESETMASK  0xffffffff
#define INT_EN3_ASIP_L_DEFAULT  0x0

#define INT_EN3_ASIP_H_READMASK  0xffffffff
#define INT_EN3_ASIP_H_WRITEMASK  0xffffffff
#define INT_EN3_ASIP_H_VOLATILEMASK  0x0
#define INT_EN3_ASIP_H_RESETMASK  0xffffffff
#define INT_EN3_ASIP_H_DEFAULT  0x0

#define SW_WAKEUP_READMASK  0xffffffff
#define SW_WAKEUP_WRITEMASK  0x1
#define SW_WAKEUP_VOLATILEMASK  0x0
#define SW_WAKEUP_RESETMASK  0x1
#define SW_WAKEUP_DEFAULT  0x0

#define SW_WAKE_MODE_READMASK  0xffffffff
#define SW_WAKE_MODE_WRITEMASK  0x1
#define SW_WAKE_MODE_VOLATILEMASK  0x0
#define SW_WAKE_MODE_RESETMASK  0x1
#define SW_WAKE_MODE_DEFAULT  0x0

#define DSP_CORE_SFT_INT_READMASK  0xffffffff
#define DSP_CORE_SFT_INT_WRITEMASK  0x1
#define DSP_CORE_SFT_INT_VOLATILEMASK  0x0
#define DSP_CORE_SFT_INT_RESETMASK  0x1
#define DSP_CORE_SFT_INT_DEFAULT  0x0




/*block :  DSP_TIMER */
typedef union {
	struct {
		hwint32 clock_select0 : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 clock_select1 : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 clock_select2 : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 clock_select3 : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 clock_select4 : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 clock_select5 : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 clock_select6 : 4;	/* 24:27 sw=RW hw=RO 0x0  */
		hwint32 reserved28 : 1;	/* 28:28 sw=RO hw=RO 0x0  */
		hwint32 clock_select7 : 3;	/* 29:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CLK_CTL_s;


typedef union {
	struct {
		hwint32 counter_enable0 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 counter_enable1 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 counter_enable2 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 counter_enable3 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 counter_enable4 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 counter_enable5 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 counter_enable6 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 counter_enable7 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 clock_edge_select : 8;	/* 8:15 sw=RW hw=RO 0x0  */
		hwint32 watchdog_monitor : 4;	/* 16:19 sw=RO hw=RO 0x0  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CTL_s;


typedef union {
	struct {
		hwint32 watchdog0_mode_enable : 4;	/* 0:3 sw=RW hw=RW 0x0  */
		hwint32 wtd0_rsten : 5;	/* 4:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WTD0_CTL_s;


typedef union {
	struct {
		hwint32 watchdog1_mode_enable : 4;	/* 0:3 sw=RW hw=RW 0x0  */
		hwint32 wtd1_rsten : 5;	/* 4:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WTD1_CTL_s;


typedef union {
	struct {
		hwint32 watchdog2_mode_enable : 4;	/* 0:3 sw=RW hw=RW 0x0  */
		hwint32 wtd2_rsten : 5;	/* 4:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WTD2_CTL_s;


typedef union {
	struct {
		hwint32 watchdog3_mode_enable : 4;	/* 0:3 sw=RW hw=RW 0x0  */
		hwint32 wtd3_rsten : 5;	/* 4:8 sw=RW hw=RO 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WTD3_CTL_s;


typedef union {
	struct {
		hwint32 timer0_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT0_s;


typedef union {
	struct {
		hwint32 timer0_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT0_s;


typedef union {
	struct {
		hwint32 timer1_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT1_s;


typedef union {
	struct {
		hwint32 timer1_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT1_s;


typedef union {
	struct {
		hwint32 timer2_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT2_s;


typedef union {
	struct {
		hwint32 timer2_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT2_s;


typedef union {
	struct {
		hwint32 timer3_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT3_s;


typedef union {
	struct {
		hwint32 timer3_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT3_s;


typedef union {
	struct {
		hwint32 timer3_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT4_s;


typedef union {
	struct {
		hwint32 timer4_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT4_s;


typedef union {
	struct {
		hwint32 timer5_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT5_s;


typedef union {
	struct {
		hwint32 timer4_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT5_s;


typedef union {
	struct {
		hwint32 timer6_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT6_s;


typedef union {
	struct {
		hwint32 timer6_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT6_s;


typedef union {
	struct {
		hwint32 timer6_count : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_CNT7_s;


typedef union {
	struct {
		hwint32 timer7_limit : 32;	/* 0:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} TIMER_LIMT7_s;


typedef union {
	struct {
		hwint32 timer_strobe0_a : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe0_b : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe0_c : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe0_d : 1;	/* 3:3 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe1 : 1;	/* 4:4 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe2 : 1;	/* 5:5 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe3 : 1;	/* 6:6 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe4 : 1;	/* 7:7 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe5 : 1;	/* 8:8 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe6 : 1;	/* 9:9 sw=W1C hw=RW 0x0  */
		hwint32 timer_strobe7 : 1;	/* 10:10 sw=W1C hw=RW 0x0  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} TIMER_INTERRUPT_s;


typedef struct {
	TIMER_CLK_CTL_s  timer_clk_ctl;
	hwint8 filler0[0x4];
	TIMER_CTL_s  timer_ctl;
	hwint8 filler1[0x4];
	WTD0_CTL_s  wtd0_ctl;
	hwint8 filler2[0x4];
	WTD1_CTL_s  wtd1_ctl;
	hwint8 filler3[0x4];
	WTD2_CTL_s  wtd2_ctl;
	hwint8 filler4[0x4];
	WTD3_CTL_s  wtd3_ctl;
	hwint8 filler5[0x4];
	TIMER_CNT0_s  timer_cnt0;
	hwint8 filler6[0x4];
	TIMER_LIMT0_s  timer_limt0;
	hwint8 filler7[0x4];
	TIMER_CNT1_s  timer_cnt1;
	hwint8 filler8[0x4];
	TIMER_LIMT1_s  timer_limt1;
	hwint8 filler9[0x4];
	TIMER_CNT2_s  timer_cnt2;
	hwint8 filler10[0x4];
	TIMER_LIMT2_s  timer_limt2;
	hwint8 filler11[0x4];
	TIMER_CNT3_s  timer_cnt3;
	hwint8 filler12[0x4];
	TIMER_LIMT3_s  timer_limt3;
	hwint8 filler13[0x4];
	TIMER_CNT4_s  timer_cnt4;
	hwint8 filler14[0x4];
	TIMER_LIMT4_s  timer_limt4;
	hwint8 filler15[0x4];
	TIMER_CNT5_s  timer_cnt5;
	hwint8 filler16[0x4];
	TIMER_LIMT5_s  timer_limt5;
	hwint8 filler17[0x4];
	TIMER_CNT6_s  timer_cnt6;
	hwint8 filler18[0x4];
	TIMER_LIMT6_s  timer_limt6;
	hwint8 filler19[0x4];
	TIMER_CNT7_s  timer_cnt7;
	hwint8 filler20[0x4];
	TIMER_LIMT7_s  timer_limt7;
	hwint8 filler21[0x4];
	TIMER_INTERRUPT_s  timer_interrupt;

} DSP_TIMER_s;

#define TIMER_CLK_CTL_READMASK  0xffffffff
#define TIMER_CLK_CTL_WRITEMASK  0xefffffff
#define TIMER_CLK_CTL_VOLATILEMASK  0x0
#define TIMER_CLK_CTL_RESETMASK  0xefffffff
#define TIMER_CLK_CTL_DEFAULT  0x0

#define TIMER_CTL_READMASK  0xffffffff
#define TIMER_CTL_WRITEMASK  0xffff
#define TIMER_CTL_VOLATILEMASK  0x0
#define TIMER_CTL_RESETMASK  0xfffff
#define TIMER_CTL_DEFAULT  0x0

#define WTD0_CTL_READMASK  0xffffffff
#define WTD0_CTL_WRITEMASK  0x1ff
#define WTD0_CTL_VOLATILEMASK  0xf
#define WTD0_CTL_RESETMASK  0x1ff
#define WTD0_CTL_DEFAULT  0x0

#define WTD1_CTL_READMASK  0xffffffff
#define WTD1_CTL_WRITEMASK  0x1ff
#define WTD1_CTL_VOLATILEMASK  0xf
#define WTD1_CTL_RESETMASK  0x1ff
#define WTD1_CTL_DEFAULT  0x0

#define WTD2_CTL_READMASK  0xffffffff
#define WTD2_CTL_WRITEMASK  0x1ff
#define WTD2_CTL_VOLATILEMASK  0xf
#define WTD2_CTL_RESETMASK  0x1ff
#define WTD2_CTL_DEFAULT  0x0

#define WTD3_CTL_READMASK  0xffffffff
#define WTD3_CTL_WRITEMASK  0x1ff
#define WTD3_CTL_VOLATILEMASK  0xf
#define WTD3_CTL_RESETMASK  0x1ff
#define WTD3_CTL_DEFAULT  0x0

#define TIMER_CNT0_READMASK  0xffffffff
#define TIMER_CNT0_WRITEMASK  0xffffffff
#define TIMER_CNT0_VOLATILEMASK  0xffffffff
#define TIMER_CNT0_RESETMASK  0xffffffff
#define TIMER_CNT0_DEFAULT  0x0

#define TIMER_LIMT0_READMASK  0xffffffff
#define TIMER_LIMT0_WRITEMASK  0xffffffff
#define TIMER_LIMT0_VOLATILEMASK  0xffffffff
#define TIMER_LIMT0_RESETMASK  0xffffffff
#define TIMER_LIMT0_DEFAULT  0x0

#define TIMER_CNT1_READMASK  0xffffffff
#define TIMER_CNT1_WRITEMASK  0xffffffff
#define TIMER_CNT1_VOLATILEMASK  0xffffffff
#define TIMER_CNT1_RESETMASK  0xffffffff
#define TIMER_CNT1_DEFAULT  0x0

#define TIMER_LIMT1_READMASK  0xffffffff
#define TIMER_LIMT1_WRITEMASK  0xffffffff
#define TIMER_LIMT1_VOLATILEMASK  0xffffffff
#define TIMER_LIMT1_RESETMASK  0xffffffff
#define TIMER_LIMT1_DEFAULT  0x0

#define TIMER_CNT2_READMASK  0xffffffff
#define TIMER_CNT2_WRITEMASK  0xffffffff
#define TIMER_CNT2_VOLATILEMASK  0xffffffff
#define TIMER_CNT2_RESETMASK  0xffffffff
#define TIMER_CNT2_DEFAULT  0x0

#define TIMER_LIMT2_READMASK  0xffffffff
#define TIMER_LIMT2_WRITEMASK  0xffffffff
#define TIMER_LIMT2_VOLATILEMASK  0xffffffff
#define TIMER_LIMT2_RESETMASK  0xffffffff
#define TIMER_LIMT2_DEFAULT  0x0

#define TIMER_CNT3_READMASK  0xffffffff
#define TIMER_CNT3_WRITEMASK  0xffffffff
#define TIMER_CNT3_VOLATILEMASK  0xffffffff
#define TIMER_CNT3_RESETMASK  0xffffffff
#define TIMER_CNT3_DEFAULT  0x0

#define TIMER_LIMT3_READMASK  0xffffffff
#define TIMER_LIMT3_WRITEMASK  0xffffffff
#define TIMER_LIMT3_VOLATILEMASK  0xffffffff
#define TIMER_LIMT3_RESETMASK  0xffffffff
#define TIMER_LIMT3_DEFAULT  0x0

#define TIMER_CNT4_READMASK  0xffffffff
#define TIMER_CNT4_WRITEMASK  0xffffffff
#define TIMER_CNT4_VOLATILEMASK  0xffffffff
#define TIMER_CNT4_RESETMASK  0xffffffff
#define TIMER_CNT4_DEFAULT  0x0

#define TIMER_LIMT4_READMASK  0xffffffff
#define TIMER_LIMT4_WRITEMASK  0xffffffff
#define TIMER_LIMT4_VOLATILEMASK  0xffffffff
#define TIMER_LIMT4_RESETMASK  0xffffffff
#define TIMER_LIMT4_DEFAULT  0x0

#define TIMER_CNT5_READMASK  0xffffffff
#define TIMER_CNT5_WRITEMASK  0xffffffff
#define TIMER_CNT5_VOLATILEMASK  0xffffffff
#define TIMER_CNT5_RESETMASK  0xffffffff
#define TIMER_CNT5_DEFAULT  0x0

#define TIMER_LIMT5_READMASK  0xffffffff
#define TIMER_LIMT5_WRITEMASK  0xffffffff
#define TIMER_LIMT5_VOLATILEMASK  0xffffffff
#define TIMER_LIMT5_RESETMASK  0xffffffff
#define TIMER_LIMT5_DEFAULT  0x0

#define TIMER_CNT6_READMASK  0xffffffff
#define TIMER_CNT6_WRITEMASK  0xffffffff
#define TIMER_CNT6_VOLATILEMASK  0xffffffff
#define TIMER_CNT6_RESETMASK  0xffffffff
#define TIMER_CNT6_DEFAULT  0x0

#define TIMER_LIMT6_READMASK  0xffffffff
#define TIMER_LIMT6_WRITEMASK  0xffffffff
#define TIMER_LIMT6_VOLATILEMASK  0xffffffff
#define TIMER_LIMT6_RESETMASK  0xffffffff
#define TIMER_LIMT6_DEFAULT  0x0

#define TIMER_CNT7_READMASK  0xffffffff
#define TIMER_CNT7_WRITEMASK  0xffffffff
#define TIMER_CNT7_VOLATILEMASK  0xffffffff
#define TIMER_CNT7_RESETMASK  0xffffffff
#define TIMER_CNT7_DEFAULT  0x0

#define TIMER_LIMT7_READMASK  0xffffffff
#define TIMER_LIMT7_WRITEMASK  0xffffffff
#define TIMER_LIMT7_VOLATILEMASK  0xffffffff
#define TIMER_LIMT7_RESETMASK  0xffffffff
#define TIMER_LIMT7_DEFAULT  0x0

#define TIMER_INTERRUPT_READMASK  0xfffff800
#define TIMER_INTERRUPT_WRITEMASK  0x7ff
#define TIMER_INTERRUPT_VOLATILEMASK  0x7ff
#define TIMER_INTERRUPT_RESETMASK  0x7ff
#define TIMER_INTERRUPT_DEFAULT  0x0




/*block :  DSP_LLR_IO */
typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 anc_out_ch0 : 24;	/* 8:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ANC_OUT_CH0_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 anc_out_ch1 : 24;	/* 8:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ANC_OUT_CH1_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_decim_in_ch0 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_DECIM_IN_CH0_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_decim_in_ch1 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_DECIM_IN_CH1_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_decim_in_ch2 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_DECIM_IN_CH2_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_decim_in_ch3 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_DECIM_IN_CH3_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_interpo_in_ch0 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_INTERPO_IN_CH0_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_interpo_in_ch1 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_INTERPO_IN_CH1_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_elink_in_ch0 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_ELINK_IN_CH0_s;


typedef union {
	struct {
		hwint32 reserved0 : 8;	/* 0:7 sw=RO hw=RO 0x0  */
		hwint32 ll_elink_in_ch1 : 24;	/* 8:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} LL_ELINK_IN_CH1_s;


typedef struct {
	ANC_OUT_CH0_s  anc_out_ch0;
	ANC_OUT_CH1_s  anc_out_ch1;
	hwint8 filler0[0x28];
	LL_DECIM_IN_CH0_s  ll_decim_in_ch0;
	LL_DECIM_IN_CH1_s  ll_decim_in_ch1;
	LL_DECIM_IN_CH2_s  ll_decim_in_ch2;
	LL_DECIM_IN_CH3_s  ll_decim_in_ch3;
	hwint8 filler1[0x29];
	LL_INTERPO_IN_CH0_s  ll_interpo_in_ch0;
	LL_INTERPO_IN_CH1_s  ll_interpo_in_ch1;
	hwint8 filler2[0x2b];
	LL_ELINK_IN_CH0_s  ll_elink_in_ch0;
	LL_ELINK_IN_CH1_s  ll_elink_in_ch1;

} DSP_LLR_IO_s;

#define ANC_OUT_CH0_READMASK  0xff
#define ANC_OUT_CH0_WRITEMASK  0xffffff00
#define ANC_OUT_CH0_VOLATILEMASK  0x0
#define ANC_OUT_CH0_RESETMASK  0xffffff00
#define ANC_OUT_CH0_DEFAULT  0x0

#define ANC_OUT_CH1_READMASK  0xff
#define ANC_OUT_CH1_WRITEMASK  0xffffff00
#define ANC_OUT_CH1_VOLATILEMASK  0x0
#define ANC_OUT_CH1_RESETMASK  0xffffff00
#define ANC_OUT_CH1_DEFAULT  0x0

#define LL_DECIM_IN_CH0_READMASK  0xffffffff
#define LL_DECIM_IN_CH0_WRITEMASK  0x0
#define LL_DECIM_IN_CH0_VOLATILEMASK  0xffffff00
#define LL_DECIM_IN_CH0_RESETMASK  0xffffff00
#define LL_DECIM_IN_CH0_DEFAULT  0x0

#define LL_DECIM_IN_CH1_READMASK  0xffffffff
#define LL_DECIM_IN_CH1_WRITEMASK  0x0
#define LL_DECIM_IN_CH1_VOLATILEMASK  0xffffff00
#define LL_DECIM_IN_CH1_RESETMASK  0xffffff00
#define LL_DECIM_IN_CH1_DEFAULT  0x0

#define LL_DECIM_IN_CH2_READMASK  0xffffffff
#define LL_DECIM_IN_CH2_WRITEMASK  0x0
#define LL_DECIM_IN_CH2_VOLATILEMASK  0xffffff00
#define LL_DECIM_IN_CH2_RESETMASK  0xffffff00
#define LL_DECIM_IN_CH2_DEFAULT  0x0

#define LL_DECIM_IN_CH3_READMASK  0xffffffff
#define LL_DECIM_IN_CH3_WRITEMASK  0x0
#define LL_DECIM_IN_CH3_VOLATILEMASK  0xffffff00
#define LL_DECIM_IN_CH3_RESETMASK  0xffffff00
#define LL_DECIM_IN_CH3_DEFAULT  0x0

#define LL_INTERPO_IN_CH0_READMASK  0xffffffff
#define LL_INTERPO_IN_CH0_WRITEMASK  0x0
#define LL_INTERPO_IN_CH0_VOLATILEMASK  0xffffff00
#define LL_INTERPO_IN_CH0_RESETMASK  0xffffff00
#define LL_INTERPO_IN_CH0_DEFAULT  0x0

#define LL_INTERPO_IN_CH1_READMASK  0xffffffff
#define LL_INTERPO_IN_CH1_WRITEMASK  0x0
#define LL_INTERPO_IN_CH1_VOLATILEMASK  0xffffff00
#define LL_INTERPO_IN_CH1_RESETMASK  0xffffff00
#define LL_INTERPO_IN_CH1_DEFAULT  0x0

#define LL_ELINK_IN_CH0_READMASK  0xffffffff
#define LL_ELINK_IN_CH0_WRITEMASK  0x0
#define LL_ELINK_IN_CH0_VOLATILEMASK  0xffffff00
#define LL_ELINK_IN_CH0_RESETMASK  0xffffff00
#define LL_ELINK_IN_CH0_DEFAULT  0x0

#define LL_ELINK_IN_CH1_READMASK  0xffffffff
#define LL_ELINK_IN_CH1_WRITEMASK  0x0
#define LL_ELINK_IN_CH1_VOLATILEMASK  0xffffff00
#define LL_ELINK_IN_CH1_RESETMASK  0xffffff00
#define LL_ELINK_IN_CH1_DEFAULT  0x0




/*block :  SSE200_MISC */
typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ARM_MEM_MISC_CTRL0_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ARM_MEM_MISC_CTRL8_s;


typedef union {
	struct {
		hwint32 qspi_i_inst_otp : 8;	/* 0:7 sw=RW hw=RO 0xeb  */
		hwint32 qspi_i_dummy_cycles_otp : 6;	/* 8:13 sw=RW hw=RO 0x10  */
		hwint32 qspi_i_spi_mode_otp : 2;	/* 14:15 sw=RW hw=RO 0x3  */
		hwint32 qspi_i_addr_len_otp : 3;	/* 16:18 sw=RW hw=RO 0x3  */
		hwint32 qspi_i_pre_load_dma_disable_otp : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 qspi_i_otp_override : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 reserved21 : 11;	/* 21:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_MISC_OPTION_s;


typedef union {
	struct {
		hwint32 dsp_core_gck_ctl : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 reserved4 : 28;	/* 4:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SSE200_PCLK_GATE_s;


typedef struct {
	ARM_MEM_MISC_CTRL0_s  arm_mem_misc_ctrl0;
	ARM_MEM_MISC_CTRL8_s  arm_mem_misc_ctrl8;
	QSPI_MISC_OPTION_s  qspi_misc_option;
	SSE200_PCLK_GATE_s  sse200_pclk_gate;

} SSE200_MISC_s;

#define ARM_MEM_MISC_CTRL0_READMASK  0xffffffff
#define ARM_MEM_MISC_CTRL0_WRITEMASK  0x7fff
#define ARM_MEM_MISC_CTRL0_VOLATILEMASK  0x0
#define ARM_MEM_MISC_CTRL0_RESETMASK  0x7fff
#define ARM_MEM_MISC_CTRL0_DEFAULT  0x413

#define ARM_MEM_MISC_CTRL8_READMASK  0xffffffff
#define ARM_MEM_MISC_CTRL8_WRITEMASK  0x7fff
#define ARM_MEM_MISC_CTRL8_VOLATILEMASK  0x0
#define ARM_MEM_MISC_CTRL8_RESETMASK  0x7fff
#define ARM_MEM_MISC_CTRL8_DEFAULT  0x413

#define QSPI_MISC_OPTION_READMASK  0xffffffff
#define QSPI_MISC_OPTION_WRITEMASK  0x1fffff
#define QSPI_MISC_OPTION_VOLATILEMASK  0x0
#define QSPI_MISC_OPTION_RESETMASK  0x1fffff
#define QSPI_MISC_OPTION_DEFAULT  0xbd0eb

#define SSE200_PCLK_GATE_READMASK  0xffffffff
#define SSE200_PCLK_GATE_WRITEMASK  0xf
#define SSE200_PCLK_GATE_VOLATILEMASK  0x0
#define SSE200_PCLK_GATE_RESETMASK  0xf
#define SSE200_PCLK_GATE_DEFAULT  0x0




/*block :  RRAM */
typedef union {
	struct {
		hwint32 rram_cfg_data_l : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RRAM_CFG_DATA_L_s;


typedef union {
	struct {
		hwint32 rram_cfg_data_h : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RRAM_CFG_DATA_H_s;


typedef struct {
	RRAM_CFG_DATA_L_s  rram_cfg_data_l;
	RRAM_CFG_DATA_H_s  rram_cfg_data_h;

} RRAM_s;

#define RRAM_CFG_DATA_L_READMASK  0xffffffff
#define RRAM_CFG_DATA_L_WRITEMASK  0xffffffff
#define RRAM_CFG_DATA_L_VOLATILEMASK  0x0
#define RRAM_CFG_DATA_L_RESETMASK  0xffffffff
#define RRAM_CFG_DATA_L_DEFAULT  0x0

#define RRAM_CFG_DATA_H_READMASK  0xffffffff
#define RRAM_CFG_DATA_H_WRITEMASK  0xffffffff
#define RRAM_CFG_DATA_H_VOLATILEMASK  0x0
#define RRAM_CFG_DATA_H_RESETMASK  0xffffffff
#define RRAM_CFG_DATA_H_DEFAULT  0x0




/*block :  I2C_SLAVE */
typedef union {
	struct {
		hwint32 base_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2C_SLAVE_BASE_ADDR_s;


typedef union {
	struct {
		hwint32 limit_addr : 32;	/* 0:31 sw=RW hw=RO 0xffffffff  */
	} bf;
	hwint32 dw;
} I2C_SLAVE_LIMIT_ADDR_s;


typedef union {
	struct {
		hwint32 zero_int_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 zero_int_clear : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2C_SLAVE_ZERO_ADDR_s;


typedef union {
	struct {
		hwint32 limit_int_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 limit_int_clear : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2C_SLAVE_LIMIT_INTERRUPT_s;


typedef union {
	struct {
		hwint32 i2c_slave_addr : 7;	/* 0:6 sw=RW hw=RO 0x47  */
		hwint32 dev_addr_update : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2C_SLAVE_ADDR_s;


typedef union {
	struct {
		hwint32 offset_size : 2;	/* 0:1 sw=RW hw=RO 0x3  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2C_SLAVE_OFFSET_SIZE_s;


typedef struct {
	I2C_SLAVE_BASE_ADDR_s  i2c_slave_base_addr;
	I2C_SLAVE_LIMIT_ADDR_s  i2c_slave_limit_addr;
	I2C_SLAVE_ZERO_ADDR_s  i2c_slave_zero_addr;
	I2C_SLAVE_LIMIT_INTERRUPT_s  i2c_slave_limit_interrupt;
	I2C_SLAVE_ADDR_s  i2c_slave_addr;
	I2C_SLAVE_OFFSET_SIZE_s  i2c_slave_offset_size;

} I2C_SLAVE_s;

#define I2C_SLAVE_BASE_ADDR_READMASK  0xffffffff
#define I2C_SLAVE_BASE_ADDR_WRITEMASK  0xffffffff
#define I2C_SLAVE_BASE_ADDR_VOLATILEMASK  0x0
#define I2C_SLAVE_BASE_ADDR_RESETMASK  0xffffffff
#define I2C_SLAVE_BASE_ADDR_DEFAULT  0x0

#define I2C_SLAVE_LIMIT_ADDR_READMASK  0xffffffff
#define I2C_SLAVE_LIMIT_ADDR_WRITEMASK  0xffffffff
#define I2C_SLAVE_LIMIT_ADDR_VOLATILEMASK  0x0
#define I2C_SLAVE_LIMIT_ADDR_RESETMASK  0xffffffff
#define I2C_SLAVE_LIMIT_ADDR_DEFAULT  0xffffffff

#define I2C_SLAVE_ZERO_ADDR_READMASK  0xfffffffd
#define I2C_SLAVE_ZERO_ADDR_WRITEMASK  0x3
#define I2C_SLAVE_ZERO_ADDR_VOLATILEMASK  0x2
#define I2C_SLAVE_ZERO_ADDR_RESETMASK  0x3
#define I2C_SLAVE_ZERO_ADDR_DEFAULT  0x0

#define I2C_SLAVE_LIMIT_INTERRUPT_READMASK  0xfffffffd
#define I2C_SLAVE_LIMIT_INTERRUPT_WRITEMASK  0x3
#define I2C_SLAVE_LIMIT_INTERRUPT_VOLATILEMASK  0x2
#define I2C_SLAVE_LIMIT_INTERRUPT_RESETMASK  0x3
#define I2C_SLAVE_LIMIT_INTERRUPT_DEFAULT  0x0

#define I2C_SLAVE_ADDR_READMASK  0xffffffff
#define I2C_SLAVE_ADDR_WRITEMASK  0xff
#define I2C_SLAVE_ADDR_VOLATILEMASK  0x0
#define I2C_SLAVE_ADDR_RESETMASK  0xff
#define I2C_SLAVE_ADDR_DEFAULT  0x47

#define I2C_SLAVE_OFFSET_SIZE_READMASK  0xffffffff
#define I2C_SLAVE_OFFSET_SIZE_WRITEMASK  0x3
#define I2C_SLAVE_OFFSET_SIZE_VOLATILEMASK  0x0
#define I2C_SLAVE_OFFSET_SIZE_RESETMASK  0x3
#define I2C_SLAVE_OFFSET_SIZE_DEFAULT  0x3




/*block :  I2C_MASTER */
typedef union {
	struct {
		hwint32 txdma_cont_enb : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 rxdma_cont_enb : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 fifo_flush : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 i2c_br : 14;	/* 3:16 sw=RW hw=RO 0x0  */
		hwint32 i2c_bus_clear : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 1;	/* 18:18 sw=RO hw=RO 0x0  */
		hwint32 dev_addr_10b_nak_ie : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 i2c_daddr_7b_nak_ie : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 i2c_subaddr_nak_ie : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 i2c_data_nak_ie : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 i2c_daddr_rd_nak_ie : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 i2ctransie : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 txemptyie : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 txfullie : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 txheie : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 rxemptyie : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 rxfullie : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 rxhfie : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_I2CM_CTL_s;


typedef union {
	struct {
		hwint32 i2ctransi : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 tx_fifo_empty : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 tx_fifo_full : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 tx_fifo_he : 1;	/* 3:3 sw=W1C hw=RW 0x0  */
		hwint32 rx_fifo_empty : 1;	/* 4:4 sw=W1C hw=RW 0x0  */
		hwint32 rx_fifo_full : 1;	/* 5:5 sw=W1C hw=RW 0x0  */
		hwint32 rx_fifo_hf : 1;	/* 6:6 sw=W1C hw=RW 0x0  */
		hwint32 xfer_prog : 1;	/* 7:7 sw=RO hw=RW 0x0  */
		hwint32 clr_status : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 reserved9 : 23;	/* 9:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_I2CM_STAT_s;


typedef union {
	struct {
		hwint32 fifo_lvl : 6;	/* 0:5 sw=RO hw=RW 0x0  */
		hwint32 reserved6 : 18;	/* 6:23 sw=RO hw=RO 0x0  */
		hwint32 dev_addr_10b_nak_int : 1;	/* 24:24 sw=W1C hw=RW 0x0  */
		hwint32 dev_addr_7b_nak_int : 1;	/* 25:25 sw=W1C hw=RW 0x0  */
		hwint32 subaddr_nak_int : 1;	/* 26:26 sw=W1C hw=RW 0x0  */
		hwint32 data_nak_int : 1;	/* 27:27 sw=W1C hw=RW 0x0  */
		hwint32 dev_rd_nak_int : 1;	/* 28:28 sw=W1C hw=RW 0x0  */
		hwint32 reserved29 : 3;	/* 29:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_I2CM_NAK_FFLVL_s;


typedef union {
	struct {
		hwint32 i2c_rx_bytes : 14;	/* 0:13 sw=RW hw=RO 0x0  */
		hwint32 reserved14 : 2;	/* 14:15 sw=RO hw=RO 0x0  */
		hwint32 i2c_tx_bytes : 14;	/* 16:29 sw=RW hw=RO 0x0  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_I2CM_XFER_s;


typedef union {
	struct {
		hwint32 i2c_trans_cnt : 14;	/* 0:13 sw=RO hw=RW 0x0  */
		hwint32 tx_rx_dir : 1;	/* 14:14 sw=RO hw=RW 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_I2CM_XCNT_s;


typedef union {
	struct {
		hwint32 i2c_saddr_len : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 i2c_sync : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 i2c_daddr : 15;	/* 4:18 sw=RW hw=RO 0x7800  */
		hwint32 dev_addr_10b_7b_sel : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 i2c_read_wrn : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 i2c_read_sa : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 rx_endianess : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 tx_endianess : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 fifo_level : 6;	/* 24:29 sw=RW hw=RO 0x10  */
		hwint32 fifo_level_access : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_I2CM_CTL_2_s;


typedef struct {
	RA_I2CM_CTL_s  ra_i2cm_ctl;
	RA_I2CM_STAT_s  ra_i2cm_stat;
	RA_I2CM_NAK_FFLVL_s  ra_i2cm_nak_fflvl;
	RA_I2CM_XFER_s  ra_i2cm_xfer;
	RA_I2CM_XCNT_s  ra_i2cm_xcnt;
	RA_I2CM_CTL_2_s  ra_i2cm_ctl_2;

} I2C_MASTER_s;

#define RA_I2CM_CTL_READMASK  0xffffffff
#define RA_I2CM_CTL_WRITEMASK  0x7ffbffff
#define RA_I2CM_CTL_VOLATILEMASK  0x0
#define RA_I2CM_CTL_RESETMASK  0x7ffbffff
#define RA_I2CM_CTL_DEFAULT  0x0

#define RA_I2CM_STAT_READMASK  0xffffff80
#define RA_I2CM_STAT_WRITEMASK  0x7f
#define RA_I2CM_STAT_VOLATILEMASK  0x1ff
#define RA_I2CM_STAT_RESETMASK  0x1ff
#define RA_I2CM_STAT_DEFAULT  0x0

#define RA_I2CM_NAK_FFLVL_READMASK  0xe0ffffff
#define RA_I2CM_NAK_FFLVL_WRITEMASK  0x1f000000
#define RA_I2CM_NAK_FFLVL_VOLATILEMASK  0x1f00003f
#define RA_I2CM_NAK_FFLVL_RESETMASK  0x1f00003f
#define RA_I2CM_NAK_FFLVL_DEFAULT  0x0

#define RA_I2CM_XFER_READMASK  0xffffffff
#define RA_I2CM_XFER_WRITEMASK  0x3fff3fff
#define RA_I2CM_XFER_VOLATILEMASK  0x0
#define RA_I2CM_XFER_RESETMASK  0x3fff3fff
#define RA_I2CM_XFER_DEFAULT  0x0

#define RA_I2CM_XCNT_READMASK  0xffffffff
#define RA_I2CM_XCNT_WRITEMASK  0x0
#define RA_I2CM_XCNT_VOLATILEMASK  0x7fff
#define RA_I2CM_XCNT_RESETMASK  0x7fff
#define RA_I2CM_XCNT_DEFAULT  0x0

#define RA_I2CM_CTL_2_READMASK  0xffffffff
#define RA_I2CM_CTL_2_WRITEMASK  0x7fffffff
#define RA_I2CM_CTL_2_VOLATILEMASK  0x0
#define RA_I2CM_CTL_2_RESETMASK  0x7fffffff
#define RA_I2CM_CTL_2_DEFAULT  0x10078000




/*block :  FLEXI_DMA0 */
typedef union {
	struct {
		hwint32 dma_0_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_1_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_2_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_3_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_4_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_5_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_6_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_7_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_req_0_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dma_req_1_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 dma_req_2_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 dma_req_3_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 dma_req_4_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 dma_req_5_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 dma_req_6_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 dma_req_7_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 dma_0_irq_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_1_irq_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_2_irq_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_3_irq_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_4_irq_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_5_irq_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_6_irq_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_7_irq_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dma_0_status_clr_int : 1;	/* 24:24 sw=W1C hw=RW 0x0  */
		hwint32 dma_1_status_clr_int : 1;	/* 25:25 sw=W1C hw=RW 0x0  */
		hwint32 dma_2_status_clr_int : 1;	/* 26:26 sw=W1C hw=RW 0x0  */
		hwint32 dma_3_status_clr_int : 1;	/* 27:27 sw=W1C hw=RW 0x0  */
		hwint32 dma_4_status_clr_int : 1;	/* 28:28 sw=W1C hw=RW 0x0  */
		hwint32 dma_5_status_clr_int : 1;	/* 29:29 sw=W1C hw=RW 0x0  */
		hwint32 dma_6_status_clr_int : 1;	/* 30:30 sw=W1C hw=RW 0x0  */
		hwint32 dma_7_status_clr_int : 1;	/* 31:31 sw=W1C hw=RW 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_ENABLE_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH0_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH0_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH0_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH1_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH1_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH1_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH2_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH2_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH2_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH3_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH3_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH3_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH4_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH4_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH4_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH5_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH5_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH5_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH6_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH6_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH6_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_SRC_ADDR_CH7_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_DST_ADDR_CH7_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_CTRL_CH7_s;


typedef union {
	struct {
		hwint32 ch0_int_pair_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 ch1_int_pair_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ch2_int_pair_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ch3_int_pair_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ch4_int_pair_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ch5_int_pair_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 ch6_int_pair_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 ch7_int_pair_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_0_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_1_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_2_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_3_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_4_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_5_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_6_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_7_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_PARIS_SRST_s;


typedef union {
	struct {
		hwint32 ch_0_underrun : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 ch_1_underrun : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 ch_2_underrun : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 ch_3_underrun : 1;	/* 3:3 sw=RO hw=RW 0x0  */
		hwint32 ch_4_underrun : 1;	/* 4:4 sw=RO hw=RW 0x0  */
		hwint32 ch_5_underrun : 1;	/* 5:5 sw=RO hw=RW 0x0  */
		hwint32 ch_6_underrun : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 ch_7_underrun : 1;	/* 7:7 sw=RO hw=RW 0x0  */
		hwint32 ch_0_overrun : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 ch_1_overrun : 1;	/* 9:9 sw=RO hw=RW 0x0  */
		hwint32 ch_2_overrun : 1;	/* 10:10 sw=RO hw=RW 0x0  */
		hwint32 ch_3_overrun : 1;	/* 11:11 sw=RO hw=RW 0x0  */
		hwint32 ch_4_overrun : 1;	/* 12:12 sw=RO hw=RW 0x0  */
		hwint32 ch_5_overrun : 1;	/* 13:13 sw=RO hw=RW 0x0  */
		hwint32 ch_6_overrun : 1;	/* 14:14 sw=RO hw=RW 0x0  */
		hwint32 ch_7_overrun : 1;	/* 15:15 sw=RO hw=RW 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA0_FIFO_STATUS_s;


typedef struct {
	FLEXI_DMA0_ENABLE_s  flexi_dma0_enable;
	hwint8 filler0[0xc];
	FLEXI_DMA0_SRC_ADDR_CH0_s  flexi_dma0_src_addr_ch0;
	FLEXI_DMA0_DST_ADDR_CH0_s  flexi_dma0_dst_addr_ch0;
	FLEXI_DMA0_CTRL_CH0_s  flexi_dma0_ctrl_ch0;
	hwint8 filler1[0x4];
	FLEXI_DMA0_SRC_ADDR_CH1_s  flexi_dma0_src_addr_ch1;
	FLEXI_DMA0_DST_ADDR_CH1_s  flexi_dma0_dst_addr_ch1;
	FLEXI_DMA0_CTRL_CH1_s  flexi_dma0_ctrl_ch1;
	hwint8 filler2[0x4];
	FLEXI_DMA0_SRC_ADDR_CH2_s  flexi_dma0_src_addr_ch2;
	FLEXI_DMA0_DST_ADDR_CH2_s  flexi_dma0_dst_addr_ch2;
	FLEXI_DMA0_CTRL_CH2_s  flexi_dma0_ctrl_ch2;
	hwint8 filler3[0x4];
	FLEXI_DMA0_SRC_ADDR_CH3_s  flexi_dma0_src_addr_ch3;
	FLEXI_DMA0_DST_ADDR_CH3_s  flexi_dma0_dst_addr_ch3;
	FLEXI_DMA0_CTRL_CH3_s  flexi_dma0_ctrl_ch3;
	hwint8 filler4[0x4];
	FLEXI_DMA0_SRC_ADDR_CH4_s  flexi_dma0_src_addr_ch4;
	FLEXI_DMA0_DST_ADDR_CH4_s  flexi_dma0_dst_addr_ch4;
	FLEXI_DMA0_CTRL_CH4_s  flexi_dma0_ctrl_ch4;
	hwint8 filler5[0x4];
	FLEXI_DMA0_SRC_ADDR_CH5_s  flexi_dma0_src_addr_ch5;
	FLEXI_DMA0_DST_ADDR_CH5_s  flexi_dma0_dst_addr_ch5;
	FLEXI_DMA0_CTRL_CH5_s  flexi_dma0_ctrl_ch5;
	hwint8 filler6[0x4];
	FLEXI_DMA0_SRC_ADDR_CH6_s  flexi_dma0_src_addr_ch6;
	FLEXI_DMA0_DST_ADDR_CH6_s  flexi_dma0_dst_addr_ch6;
	FLEXI_DMA0_CTRL_CH6_s  flexi_dma0_ctrl_ch6;
	hwint8 filler7[0x4];
	FLEXI_DMA0_SRC_ADDR_CH7_s  flexi_dma0_src_addr_ch7;
	FLEXI_DMA0_DST_ADDR_CH7_s  flexi_dma0_dst_addr_ch7;
	FLEXI_DMA0_CTRL_CH7_s  flexi_dma0_ctrl_ch7;
	hwint8 filler8[0x4];
	FLEXI_DMA0_PARIS_SRST_s  flexi_dma0_paris_srst;
	FLEXI_DMA0_FIFO_STATUS_s  flexi_dma0_fifo_status;

} FLEXI_DMA0_s;

#define FLEXI_DMA0_ENABLE_READMASK  0xffffff
#define FLEXI_DMA0_ENABLE_WRITEMASK  0xffffffff
#define FLEXI_DMA0_ENABLE_VOLATILEMASK  0xff000000
#define FLEXI_DMA0_ENABLE_RESETMASK  0xffffffff
#define FLEXI_DMA0_ENABLE_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH0_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH0_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH0_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH0_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH0_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH0_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH0_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH0_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH0_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH0_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH0_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH0_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH0_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH0_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH0_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH1_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH1_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH1_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH1_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH1_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH1_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH1_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH1_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH1_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH1_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH1_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH1_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH1_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH1_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH1_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH2_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH2_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH2_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH2_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH2_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH2_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH2_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH2_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH2_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH2_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH2_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH2_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH2_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH2_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH2_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH3_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH3_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH3_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH3_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH3_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH3_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH3_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH3_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH3_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH3_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH3_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH3_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH3_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH3_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH3_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH4_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH4_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH4_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH4_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH4_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH4_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH4_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH4_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH4_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH4_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH4_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH4_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH4_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH4_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH4_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH5_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH5_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH5_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH5_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH5_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH5_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH5_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH5_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH5_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH5_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH5_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH5_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH5_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH5_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH5_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH6_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH6_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH6_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH6_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH6_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH6_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH6_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH6_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH6_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH6_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH6_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH6_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH6_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH6_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH6_DEFAULT  0x0

#define FLEXI_DMA0_SRC_ADDR_CH7_READMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH7_WRITEMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH7_VOLATILEMASK  0x0
#define FLEXI_DMA0_SRC_ADDR_CH7_RESETMASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH7_DEFAULT  0x0

#define FLEXI_DMA0_DST_ADDR_CH7_READMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH7_WRITEMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH7_VOLATILEMASK  0x0
#define FLEXI_DMA0_DST_ADDR_CH7_RESETMASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH7_DEFAULT  0x0

#define FLEXI_DMA0_CTRL_CH7_READMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH7_WRITEMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH7_VOLATILEMASK  0x0
#define FLEXI_DMA0_CTRL_CH7_RESETMASK  0xffffffff
#define FLEXI_DMA0_CTRL_CH7_DEFAULT  0x0

#define FLEXI_DMA0_PARIS_SRST_READMASK  0xffffffff
#define FLEXI_DMA0_PARIS_SRST_WRITEMASK  0xffff
#define FLEXI_DMA0_PARIS_SRST_VOLATILEMASK  0x0
#define FLEXI_DMA0_PARIS_SRST_RESETMASK  0xffff
#define FLEXI_DMA0_PARIS_SRST_DEFAULT  0x0

#define FLEXI_DMA0_FIFO_STATUS_READMASK  0xffffffff
#define FLEXI_DMA0_FIFO_STATUS_WRITEMASK  0x0
#define FLEXI_DMA0_FIFO_STATUS_VOLATILEMASK  0xffff
#define FLEXI_DMA0_FIFO_STATUS_RESETMASK  0xffff
#define FLEXI_DMA0_FIFO_STATUS_DEFAULT  0x0




/*block :  FLEXI_DMA0_FIFO */
typedef union {
	struct {
		hwint32 i2cm_rx_fifo : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2CM_RX_FIFO_s;


typedef union {
	struct {
		hwint32 uart_fifo : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} UART_FIFO_s;


typedef union {
	struct {
		hwint32 i2cm_fifo : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2CM_FIFO_s;


typedef union {
	struct {
		hwint32 i3cm_fifo : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I3CM_FIFO_s;


typedef struct {
	I2CM_RX_FIFO_s  i2cm_rx_fifo;
	hwint8 filler0[0x3fc];
	UART_FIFO_s  uart_fifo;
	hwint8 filler1[0x3fc];
	I2CM_FIFO_s  i2cm_fifo;
	hwint8 filler2[0x23fc];
	I3CM_FIFO_s  i3cm_fifo;

} FLEXI_DMA0_FIFO_s;

#define I2CM_RX_FIFO_READMASK  0xffffffff
#define I2CM_RX_FIFO_WRITEMASK  0xffffffff
#define I2CM_RX_FIFO_VOLATILEMASK  0x0
#define I2CM_RX_FIFO_RESETMASK  0xffffffff
#define I2CM_RX_FIFO_DEFAULT  0x0

#define UART_FIFO_READMASK  0xffffffff
#define UART_FIFO_WRITEMASK  0xffffffff
#define UART_FIFO_VOLATILEMASK  0x0
#define UART_FIFO_RESETMASK  0xffffffff
#define UART_FIFO_DEFAULT  0x0

#define I2CM_FIFO_READMASK  0xffffffff
#define I2CM_FIFO_WRITEMASK  0xffffffff
#define I2CM_FIFO_VOLATILEMASK  0x0
#define I2CM_FIFO_RESETMASK  0xffffffff
#define I2CM_FIFO_DEFAULT  0x0

#define I3CM_FIFO_READMASK  0xffffffff
#define I3CM_FIFO_WRITEMASK  0xffffffff
#define I3CM_FIFO_VOLATILEMASK  0x0
#define I3CM_FIFO_RESETMASK  0xffffffff
#define I3CM_FIFO_DEFAULT  0x0




/*block :  FLEXI_DMA1 */
typedef union {
	struct {
		hwint32 dma_0_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_1_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_2_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_3_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_4_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_5_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_6_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_7_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_req_0_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dma_req_1_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 dma_req_2_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 dma_req_3_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 dma_req_4_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 dma_req_5_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 dma_req_6_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 dma_req_7_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 dma_0_irq_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_1_irq_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_2_irq_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_3_irq_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_4_irq_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_5_irq_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_6_irq_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_7_irq_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dma_0_status_clr_int : 1;	/* 24:24 sw=W1C hw=RW 0x0  */
		hwint32 dma_1_status_clr_int : 1;	/* 25:25 sw=W1C hw=RW 0x0  */
		hwint32 dma_2_status_clr_int : 1;	/* 26:26 sw=W1C hw=RW 0x0  */
		hwint32 dma_3_status_clr_int : 1;	/* 27:27 sw=W1C hw=RW 0x0  */
		hwint32 dma_4_status_clr_int : 1;	/* 28:28 sw=W1C hw=RW 0x0  */
		hwint32 dma_5_status_clr_int : 1;	/* 29:29 sw=W1C hw=RW 0x0  */
		hwint32 dma_6_status_clr_int : 1;	/* 30:30 sw=W1C hw=RW 0x0  */
		hwint32 dma_7_status_clr_int : 1;	/* 31:31 sw=W1C hw=RW 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_ENABLE_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH0_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH0_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH0_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH1_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH1_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH1_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH2_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH2_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH2_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH3_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH3_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH3_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH4_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH4_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH4_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH5_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH5_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH5_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH6_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH6_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH6_s;


typedef union {
	struct {
		hwint32 src_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_SRC_ADDR_CH7_s;


typedef union {
	struct {
		hwint32 des_addr : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_DST_ADDR_CH7_s;


typedef union {
	struct {
		hwint32 buffer_size_src : 10;	/* 0:9 sw=RW hw=RO 0x0  */
		hwint32 buffer_size_dest : 10;	/* 10:19 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_src : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 step_ofst_dest : 3;	/* 24:26 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 28:30 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_CTRL_CH7_s;


typedef union {
	struct {
		hwint32 ch0_int_pair_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 ch1_int_pair_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ch2_int_pair_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ch3_int_pair_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ch4_int_pair_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ch5_int_pair_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 ch6_int_pair_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 ch7_int_pair_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_0_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_1_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_2_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_3_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_4_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_5_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_6_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 soft_rst_7_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_PARIS_SRST_s;


typedef union {
	struct {
		hwint32 ch_0_underrun : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 ch_1_underrun : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 ch_2_underrun : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 ch_3_underrun : 1;	/* 3:3 sw=RO hw=RW 0x0  */
		hwint32 ch_4_underrun : 1;	/* 4:4 sw=RO hw=RW 0x0  */
		hwint32 ch_5_underrun : 1;	/* 5:5 sw=RO hw=RW 0x0  */
		hwint32 ch_6_underrun : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 ch_7_underrun : 1;	/* 7:7 sw=RO hw=RW 0x0  */
		hwint32 ch_0_overrun : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 ch_1_overrun : 1;	/* 9:9 sw=RO hw=RW 0x0  */
		hwint32 ch_2_overrun : 1;	/* 10:10 sw=RO hw=RW 0x0  */
		hwint32 ch_3_overrun : 1;	/* 11:11 sw=RO hw=RW 0x0  */
		hwint32 ch_4_overrun : 1;	/* 12:12 sw=RO hw=RW 0x0  */
		hwint32 ch_5_overrun : 1;	/* 13:13 sw=RO hw=RW 0x0  */
		hwint32 ch_6_overrun : 1;	/* 14:14 sw=RO hw=RW 0x0  */
		hwint32 ch_7_overrun : 1;	/* 15:15 sw=RO hw=RW 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLEXI_DMA1_FIFO_STATUS_s;


typedef struct {
	FLEXI_DMA1_ENABLE_s  flexi_dma1_enable;
	hwint8 filler0[0xc];
	FLEXI_DMA1_SRC_ADDR_CH0_s  flexi_dma1_src_addr_ch0;
	FLEXI_DMA1_DST_ADDR_CH0_s  flexi_dma1_dst_addr_ch0;
	FLEXI_DMA1_CTRL_CH0_s  flexi_dma1_ctrl_ch0;
	hwint8 filler1[0x4];
	FLEXI_DMA1_SRC_ADDR_CH1_s  flexi_dma1_src_addr_ch1;
	FLEXI_DMA1_DST_ADDR_CH1_s  flexi_dma1_dst_addr_ch1;
	FLEXI_DMA1_CTRL_CH1_s  flexi_dma1_ctrl_ch1;
	hwint8 filler2[0x4];
	FLEXI_DMA1_SRC_ADDR_CH2_s  flexi_dma1_src_addr_ch2;
	FLEXI_DMA1_DST_ADDR_CH2_s  flexi_dma1_dst_addr_ch2;
	FLEXI_DMA1_CTRL_CH2_s  flexi_dma1_ctrl_ch2;
	hwint8 filler3[0x4];
	FLEXI_DMA1_SRC_ADDR_CH3_s  flexi_dma1_src_addr_ch3;
	FLEXI_DMA1_DST_ADDR_CH3_s  flexi_dma1_dst_addr_ch3;
	FLEXI_DMA1_CTRL_CH3_s  flexi_dma1_ctrl_ch3;
	hwint8 filler4[0x4];
	FLEXI_DMA1_SRC_ADDR_CH4_s  flexi_dma1_src_addr_ch4;
	FLEXI_DMA1_DST_ADDR_CH4_s  flexi_dma1_dst_addr_ch4;
	FLEXI_DMA1_CTRL_CH4_s  flexi_dma1_ctrl_ch4;
	hwint8 filler5[0x4];
	FLEXI_DMA1_SRC_ADDR_CH5_s  flexi_dma1_src_addr_ch5;
	FLEXI_DMA1_DST_ADDR_CH5_s  flexi_dma1_dst_addr_ch5;
	FLEXI_DMA1_CTRL_CH5_s  flexi_dma1_ctrl_ch5;
	hwint8 filler6[0x4];
	FLEXI_DMA1_SRC_ADDR_CH6_s  flexi_dma1_src_addr_ch6;
	FLEXI_DMA1_DST_ADDR_CH6_s  flexi_dma1_dst_addr_ch6;
	FLEXI_DMA1_CTRL_CH6_s  flexi_dma1_ctrl_ch6;
	hwint8 filler7[0x4];
	FLEXI_DMA1_SRC_ADDR_CH7_s  flexi_dma1_src_addr_ch7;
	FLEXI_DMA1_DST_ADDR_CH7_s  flexi_dma1_dst_addr_ch7;
	FLEXI_DMA1_CTRL_CH7_s  flexi_dma1_ctrl_ch7;
	hwint8 filler8[0x4];
	FLEXI_DMA1_PARIS_SRST_s  flexi_dma1_paris_srst;
	FLEXI_DMA1_FIFO_STATUS_s  flexi_dma1_fifo_status;

} FLEXI_DMA1_s;

#define FLEXI_DMA1_ENABLE_READMASK  0xffffff
#define FLEXI_DMA1_ENABLE_WRITEMASK  0xffffffff
#define FLEXI_DMA1_ENABLE_VOLATILEMASK  0xff000000
#define FLEXI_DMA1_ENABLE_RESETMASK  0xffffffff
#define FLEXI_DMA1_ENABLE_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH0_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH0_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH0_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH0_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH0_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH0_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH0_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH0_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH0_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH0_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH0_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH0_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH0_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH0_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH0_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH1_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH1_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH1_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH1_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH1_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH1_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH1_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH1_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH1_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH1_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH1_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH1_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH1_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH1_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH1_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH2_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH2_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH2_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH2_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH2_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH2_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH2_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH2_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH2_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH2_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH2_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH2_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH2_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH2_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH2_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH3_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH3_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH3_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH3_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH3_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH3_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH3_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH3_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH3_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH3_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH3_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH3_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH3_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH3_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH3_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH4_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH4_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH4_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH4_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH4_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH4_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH4_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH4_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH4_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH4_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH4_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH4_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH4_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH4_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH4_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH5_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH5_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH5_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH5_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH5_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH5_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH5_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH5_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH5_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH5_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH5_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH5_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH5_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH5_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH5_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH6_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH6_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH6_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH6_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH6_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH6_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH6_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH6_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH6_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH6_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH6_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH6_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH6_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH6_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH6_DEFAULT  0x0

#define FLEXI_DMA1_SRC_ADDR_CH7_READMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH7_WRITEMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH7_VOLATILEMASK  0x0
#define FLEXI_DMA1_SRC_ADDR_CH7_RESETMASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH7_DEFAULT  0x0

#define FLEXI_DMA1_DST_ADDR_CH7_READMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH7_WRITEMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH7_VOLATILEMASK  0x0
#define FLEXI_DMA1_DST_ADDR_CH7_RESETMASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH7_DEFAULT  0x0

#define FLEXI_DMA1_CTRL_CH7_READMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH7_WRITEMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH7_VOLATILEMASK  0x0
#define FLEXI_DMA1_CTRL_CH7_RESETMASK  0xffffffff
#define FLEXI_DMA1_CTRL_CH7_DEFAULT  0x0

#define FLEXI_DMA1_PARIS_SRST_READMASK  0xffffffff
#define FLEXI_DMA1_PARIS_SRST_WRITEMASK  0xffff
#define FLEXI_DMA1_PARIS_SRST_VOLATILEMASK  0x0
#define FLEXI_DMA1_PARIS_SRST_RESETMASK  0xffff
#define FLEXI_DMA1_PARIS_SRST_DEFAULT  0x0

#define FLEXI_DMA1_FIFO_STATUS_READMASK  0xffffffff
#define FLEXI_DMA1_FIFO_STATUS_WRITEMASK  0x0
#define FLEXI_DMA1_FIFO_STATUS_VOLATILEMASK  0xffff
#define FLEXI_DMA1_FIFO_STATUS_RESETMASK  0xffff
#define FLEXI_DMA1_FIFO_STATUS_DEFAULT  0x0




/*block :  FLEXI_DMA1_FIFO */
typedef union {
	struct {
		hwint32 spim_tx_fifo : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPIM_TX_FIFO_s;


typedef union {
	struct {
		hwint32 spim_rx_fifo : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SPIM_RX_FIFO_s;


typedef union {
	struct {
		hwint32 aes_fifo : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AES_FIFO_s;


typedef struct {
	SPIM_TX_FIFO_s  spim_tx_fifo;
	hwint8 filler0[0x3fc];
	SPIM_RX_FIFO_s  spim_rx_fifo;
	hwint8 filler1[0xbfc];
	AES_FIFO_s  aes_fifo;

} FLEXI_DMA1_FIFO_s;

#define SPIM_TX_FIFO_READMASK  0xffffffff
#define SPIM_TX_FIFO_WRITEMASK  0xffffffff
#define SPIM_TX_FIFO_VOLATILEMASK  0x0
#define SPIM_TX_FIFO_RESETMASK  0xffffffff
#define SPIM_TX_FIFO_DEFAULT  0x0

#define SPIM_RX_FIFO_READMASK  0xffffffff
#define SPIM_RX_FIFO_WRITEMASK  0xffffffff
#define SPIM_RX_FIFO_VOLATILEMASK  0x0
#define SPIM_RX_FIFO_RESETMASK  0xffffffff
#define SPIM_RX_FIFO_DEFAULT  0x0

#define AES_FIFO_READMASK  0xffffffff
#define AES_FIFO_WRITEMASK  0xffffffff
#define AES_FIFO_VOLATILEMASK  0x0
#define AES_FIFO_RESETMASK  0xffffffff
#define AES_FIFO_DEFAULT  0x0




/*block :  SPI_MASTER */
typedef union {
	struct {
		hwint32 txdma_cont_enb : 1;	/* 0:0 sw=RW hw=RW 0x0  */
		hwint32 rxdma_cont_enb : 1;	/* 1:1 sw=RW hw=RW 0x0  */
		hwint32 cpha : 1;	/* 2:2 sw=RW hw=RW 0x0  */
		hwint32 cpol : 1;	/* 3:3 sw=RW hw=RW 0x0  */
		hwint32 rx_fifo_fluxh : 1;	/* 4:4 sw=RW hw=RW 0x0  */
		hwint32 spi_ss_sel : 1;	/* 5:5 sw=RW hw=RW 0x0  */
		hwint32 rx_endianess : 1;	/* 6:6 sw=RW hw=RW 0x0  */
		hwint32 ss0_pol : 1;	/* 7:7 sw=RW hw=RW 0x0  */
		hwint32 ss1_pol : 1;	/* 8:8 sw=RW hw=RW 0x0  */
		hwint32 tx_fifo_flush : 1;	/* 9:9 sw=RW hw=RW 0x0  */
		hwint32 tx_endianess : 1;	/* 10:10 sw=RW hw=RW 0x0  */
		hwint32 spi_br : 10;	/* 11:20 sw=RW hw=RW 0x1  */
		hwint32 spi_command_bytes : 3;	/* 21:23 sw=RW hw=RW 0x0  */
		hwint32 sptransie_tx : 1;	/* 24:24 sw=RW hw=RW 0x0  */
		hwint32 sptransie_rx : 1;	/* 25:25 sw=RW hw=RW 0x0  */
		hwint32 txemptyie : 1;	/* 26:26 sw=RW hw=RW 0x0  */
		hwint32 txfullie : 1;	/* 27:27 sw=RW hw=RW 0x0  */
		hwint32 txhfie : 1;	/* 28:28 sw=RW hw=RW 0x0  */
		hwint32 rxemptyie : 1;	/* 29:29 sw=RW hw=RW 0x0  */
		hwint32 rxfullie : 1;	/* 30:30 sw=RW hw=RW 0x0  */
		hwint32 rxhfie : 1;	/* 31:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} RA_SPIM_CTL_s;


typedef union {
	struct {
		hwint32 sptransi_tx : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 sptransi_rx : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 tx_fifo_empty : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 tx_fifo_full : 1;	/* 3:3 sw=W1C hw=RW 0x0  */
		hwint32 tx_fifo_he : 1;	/* 4:4 sw=W1C hw=RW 0x0  */
		hwint32 rx_fifo_empty : 1;	/* 5:5 sw=W1C hw=RW 0x0  */
		hwint32 rx_fifo_full : 1;	/* 6:6 sw=W1C hw=RW 0x0  */
		hwint32 rx_fifo_hf : 1;	/* 7:7 sw=W1C hw=RW 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_SPIM_STAT_s;


typedef union {
	struct {
		hwint32 rx_fifo_lvl : 4;	/* 0:3 sw=RO hw=RW 0x0  */
		hwint32 tx_fifo_lvl : 4;	/* 4:7 sw=RO hw=RW 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_SPIM_FFLVL_s;


typedef union {
	struct {
		hwint32 spi_rx_bytes : 14;	/* 0:13 sw=RW hw=RW 0x0  */
		hwint32 reserved14 : 2;	/* 14:15 sw=RO hw=RO 0x0  */
		hwint32 spi_tx_bytes : 14;	/* 16:29 sw=RW hw=RW 0x0  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_SPIM_XFER_s;


typedef union {
	struct {
		hwint32 spi_rx_trans_cnt : 14;	/* 0:13 sw=RO hw=RW 0x0  */
		hwint32 rx_dir : 1;	/* 14:14 sw=RO hw=RW 0x0  */
		hwint32 tx_dir : 1;	/* 15:15 sw=RO hw=RW 0x0  */
		hwint32 spi_tx_trans_cnt : 14;	/* 16:29 sw=RO hw=RW 0x0  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_SPIM_XCNT_s;


typedef union {
	struct {
		hwint32 rx_fifo_threshold : 4;	/* 0:3 sw=RW hw=RW 0x4  */
		hwint32 tx_fifo_threshold : 4;	/* 4:7 sw=RW hw=RW 0x4  */
		hwint32 xfer_rfifo_reset_mask : 1;	/* 8:8 sw=RW hw=RW 0x0  */
		hwint32 xfer_tfifo_reset_mask : 1;	/* 9:9 sw=RW hw=RW 0x0  */
		hwint32 spim_hispeed : 1;	/* 10:10 sw=RW hw=RW 0x0  */
		hwint32 reserved11 : 21;	/* 11:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_SPIM_CTRL_2_s;


typedef struct {
	RA_SPIM_CTL_s  ra_spim_ctl;
	RA_SPIM_STAT_s  ra_spim_stat;
	RA_SPIM_FFLVL_s  ra_spim_fflvl;
	RA_SPIM_XFER_s  ra_spim_xfer;
	RA_SPIM_XCNT_s  ra_spim_xcnt;
	RA_SPIM_CTRL_2_s  ra_spim_ctrl_2;

} SPI_MASTER_s;

#define RA_SPIM_CTL_READMASK  0xffffffff
#define RA_SPIM_CTL_WRITEMASK  0xffffffff
#define RA_SPIM_CTL_VOLATILEMASK  0xffffffff
#define RA_SPIM_CTL_RESETMASK  0xffffffff
#define RA_SPIM_CTL_DEFAULT  0x800

#define RA_SPIM_STAT_READMASK  0xffffff00
#define RA_SPIM_STAT_WRITEMASK  0xff
#define RA_SPIM_STAT_VOLATILEMASK  0xff
#define RA_SPIM_STAT_RESETMASK  0xff
#define RA_SPIM_STAT_DEFAULT  0x0

#define RA_SPIM_FFLVL_READMASK  0xffffffff
#define RA_SPIM_FFLVL_WRITEMASK  0x0
#define RA_SPIM_FFLVL_VOLATILEMASK  0xff
#define RA_SPIM_FFLVL_RESETMASK  0xff
#define RA_SPIM_FFLVL_DEFAULT  0x0

#define RA_SPIM_XFER_READMASK  0xffffffff
#define RA_SPIM_XFER_WRITEMASK  0x3fff3fff
#define RA_SPIM_XFER_VOLATILEMASK  0x3fff3fff
#define RA_SPIM_XFER_RESETMASK  0x3fff3fff
#define RA_SPIM_XFER_DEFAULT  0x0

#define RA_SPIM_XCNT_READMASK  0xffffffff
#define RA_SPIM_XCNT_WRITEMASK  0x0
#define RA_SPIM_XCNT_VOLATILEMASK  0x3fffffff
#define RA_SPIM_XCNT_RESETMASK  0x3fffffff
#define RA_SPIM_XCNT_DEFAULT  0x0

#define RA_SPIM_CTRL_2_READMASK  0xffffffff
#define RA_SPIM_CTRL_2_WRITEMASK  0x7ff
#define RA_SPIM_CTRL_2_VOLATILEMASK  0x7ff
#define RA_SPIM_CTRL_2_RESETMASK  0x7ff
#define RA_SPIM_CTRL_2_DEFAULT  0x44




/*block :  TOP_INTERRUPT_CTRL */
typedef union {
	struct {
		hwint32 irq_battery_vdt_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 irq_pmu_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 irq_llea_soft_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 irq_lleb_soft_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 irq_capea_soft_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 irq_capeb_soft_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 irq_arm_soft_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 irq_hifi3_soft_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 irq_buserr_merge_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 irq_fdma0_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 irq_fdma1_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 irq_auddma0_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 irq_auddma3_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 irq_spim_rx_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 irq_spim_tx_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 irq_gpio_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 irq_i2cm_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 irq_i2cs_merge_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 irq_i3c_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 irq_cache_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 irq_dac_ramp_done_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 reserved21 : 9;	/* 21:29 sw=RO hw=RO 0x0  */
		hwint32 irq_asip_timer6_en : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 irq_asip_timer7_en : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN0_s;


typedef union {
	struct {
		hwint32 irq_battery_vdt_mask : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 irq_pmu_mask : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 irq_llea_soft_mask : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 irq_lleb_soft_mask : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 irq_capea_soft_mask : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 irq_capeb_soft_mask : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 irq_arm_soft_mask : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 irq_hifi3_soft_mask : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 irq_buserr_merge_mask : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 irq_fdma0_mask : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 irq_fdma1_mask : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 irq_auddma0_mask : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 irq_auddma3_mask : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 irq_spim_rx_mask : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 irq_spim_tx_mask : 1;	/* 14:14 sw=RW hw=RO 0x1  */
		hwint32 irq_gpio_mask : 1;	/* 15:15 sw=RW hw=RO 0x1  */
		hwint32 irq_i2cm_mask : 1;	/* 16:16 sw=RW hw=RO 0x1  */
		hwint32 irq_i2cs_merge_mask : 1;	/* 17:17 sw=RW hw=RO 0x1  */
		hwint32 irq_i3c_mask : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 irq_cache_mask : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 irq_dac_ramp_done_mask : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 reserved21 : 9;	/* 21:29 sw=RO hw=RO 0x0  */
		hwint32 irq_asip_timer6_mask : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 irq_asip_timer7_mask : 1;	/* 31:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} INT_MASK0_s;


typedef union {
	struct {
		hwint32 irq_battery_vdt_byp : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 irq_pmu_byp : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 irq_llea_soft_byp : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 irq_lleb_soft_byp : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 irq_capea_soft_byp : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 irq_capeb_soft_byp : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 irq_arm_soft_byp : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 irq_hifi3_soft_byp : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 irq_buserr_merge_byp : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 irq_fdma0_byp : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 irq_fdma1_byp : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 irq_auddma0_byp : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 irq_auddma3_byp : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 irq_spim_rx_byp : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 irq_spim_tx_byp : 1;	/* 14:14 sw=RW hw=RO 0x1  */
		hwint32 irq_gpio_byp : 1;	/* 15:15 sw=RW hw=RO 0x1  */
		hwint32 irq_i2cm_byp : 1;	/* 16:16 sw=RW hw=RO 0x1  */
		hwint32 irq_i2cs_merge_byp : 1;	/* 17:17 sw=RW hw=RO 0x1  */
		hwint32 irq_i3c_byp : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 irq_cache_byp : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 irq_dac_ramp_done_byp : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 reserved21 : 9;	/* 21:29 sw=RO hw=RO 0x0  */
		hwint32 irq_asip_timer6_byp : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 irq_asip_timer7_byp : 1;	/* 31:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} INT_BYP0_s;


typedef union {
	struct {
		hwint32 irq_battery_vdt_st : 1;	/* 0:0 sw=W1C hw=WO 0x0  */
		hwint32 irq_pmu_st : 1;	/* 1:1 sw=W1C hw=WO 0x0  */
		hwint32 irq_llea_soft_st : 1;	/* 2:2 sw=W1C hw=WO 0x0  */
		hwint32 irq_lleb_soft_st : 1;	/* 3:3 sw=W1C hw=WO 0x0  */
		hwint32 irq_capea_soft_st : 1;	/* 4:4 sw=W1C hw=WO 0x0  */
		hwint32 irq_capeb_soft_st : 1;	/* 5:5 sw=W1C hw=WO 0x0  */
		hwint32 irq_arm_soft_st : 1;	/* 6:6 sw=W1C hw=WO 0x0  */
		hwint32 irq_hifi3_soft_st : 1;	/* 7:7 sw=W1C hw=WO 0x0  */
		hwint32 irq_buserr_merge_st : 1;	/* 8:8 sw=W1C hw=WO 0x0  */
		hwint32 irq_fdma0_st : 1;	/* 9:9 sw=W1C hw=WO 0x0  */
		hwint32 irq_fdma1_st : 1;	/* 10:10 sw=W1C hw=WO 0x0  */
		hwint32 irq_auddma0_st : 1;	/* 11:11 sw=W1C hw=WO 0x0  */
		hwint32 irq_auddma3_st : 1;	/* 12:12 sw=W1C hw=WO 0x0  */
		hwint32 irq_spim_rx_st : 1;	/* 13:13 sw=W1C hw=WO 0x0  */
		hwint32 irq_spim_tx_st : 1;	/* 14:14 sw=W1C hw=WO 0x0  */
		hwint32 irq_gpio_st : 1;	/* 15:15 sw=W1C hw=WO 0x0  */
		hwint32 irq_i2cm_st : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 irq_i2cs_merge_st : 1;	/* 17:17 sw=W1C hw=WO 0x0  */
		hwint32 irq_i3c_st : 1;	/* 18:18 sw=W1C hw=WO 0x0  */
		hwint32 irq_cache_st : 1;	/* 19:19 sw=W1C hw=WO 0x0  */
		hwint32 irq_dac_ramp_done_st : 1;	/* 20:20 sw=W1C hw=WO 0x0  */
		hwint32 reserved21 : 9;	/* 21:29 sw=RO hw=RO 0x0  */
		hwint32 irq_asip_timer6_st : 1;	/* 30:30 sw=W1C hw=WO 0x0  */
		hwint32 irq_asip_timer7_st : 1;	/* 31:31 sw=W1C hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_ST0_s;


typedef union {
	struct {
		hwint32 irq_timer_gp0_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 irq_timer_gp1_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 irq_timer_sp0_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 irq_qspi_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch3_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch2_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch1_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 2;	/* 7:8 sw=RO hw=RO 0x0  */
		hwint32 irq_earlink_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 irq_aes_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 irq_vad_detection_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 irq_clk_detection_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch0_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 irq_sync_en : 4;	/* 14:17 sw=RW hw=RO 0x0  */
		hwint32 irq_slp_type_out_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 irq_mailbox_en : 6;	/* 19:24 sw=RW hw=RO 0x0  */
		hwint32 irq_sec_violation_merge_en : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 irq_hifi3_wrap_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 reserved27 : 1;	/* 27:27 sw=RO hw=RO 0x0  */
		hwint32 irq_lock_en : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 irq_uart_en : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 irq_wdt_merge_en : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 irq_tx_oc_status_core_en : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EN1_s;


typedef union {
	struct {
		hwint32 irq_timer_gp0_mask : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 irq_timer_gp1_mask : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 irq_timer_sp0_mask : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 irq_qspi_mask : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch3_mask : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch2_mask : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch1_mask : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 reserved7 : 2;	/* 7:8 sw=RO hw=RO 0x0  */
		hwint32 irq_earlink_mask : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 irq_aes_mask : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 irq_vad_detection_mask : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 irq_clk_detection_mask : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch0_mask : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 irq_sync_mask : 4;	/* 14:17 sw=RW hw=RO 0xf  */
		hwint32 irq_slp_type_out_mask : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 irq_mailbox_mask : 6;	/* 19:24 sw=RW hw=RO 0x3f  */
		hwint32 irq_sec_violation_merge_mask : 1;	/* 25:25 sw=RW hw=RO 0x1  */
		hwint32 irq_hifi3_wrap_mask : 1;	/* 26:26 sw=RW hw=RO 0x1  */
		hwint32 reserved27 : 1;	/* 27:27 sw=RO hw=RO 0x0  */
		hwint32 irq_lock_mask : 1;	/* 28:28 sw=RW hw=RO 0x1  */
		hwint32 irq_uart_mask : 1;	/* 29:29 sw=RW hw=RO 0x1  */
		hwint32 irq_wdt_merge_mask : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 irq_tx_oc_status_core_mask : 1;	/* 31:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} INT_MASK1_s;


typedef union {
	struct {
		hwint32 irq_timer_gp0_byp : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 irq_timer_gp1_byp : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 irq_timer_sp0_byp : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 irq_qspi_byp : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch3_byp : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch2_byp : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch1_byp : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 reserved7 : 2;	/* 7:8 sw=RO hw=RO 0x0  */
		hwint32 irq_earlink_byp : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 irq_aes_byp : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 irq_vad_detection_byp : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 irq_clk_detection_byp : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 irq_ll_decimation_ch0_byp : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 irq_sync_byp : 4;	/* 14:17 sw=RW hw=RO 0xf  */
		hwint32 irq_slp_type_out_byp : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 irq_mailbox_byp : 6;	/* 19:24 sw=RW hw=RO 0x3f  */
		hwint32 irq_sec_violation_merge_byp : 1;	/* 25:25 sw=RW hw=RO 0x1  */
		hwint32 irq_hifi3_wrap_byp : 1;	/* 26:26 sw=RW hw=RO 0x1  */
		hwint32 reserved27 : 1;	/* 27:27 sw=RO hw=RO 0x0  */
		hwint32 irq_lock_byp : 1;	/* 28:28 sw=RW hw=RO 0x1  */
		hwint32 irq_uart_byp : 1;	/* 29:29 sw=RW hw=RO 0x1  */
		hwint32 irq_wdt_merge_byp : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 irq_tx_oc_status_core_byp : 1;	/* 31:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} INT_BYP1_s;


typedef union {
	struct {
		hwint32 irq_timer_gp0_st : 1;	/* 0:0 sw=W1C hw=WO 0x0  */
		hwint32 irq_timer_gp1_st : 1;	/* 1:1 sw=W1C hw=WO 0x0  */
		hwint32 irq_timer_sp0_st : 1;	/* 2:2 sw=W1C hw=WO 0x0  */
		hwint32 irq_qspi_st : 1;	/* 3:3 sw=W1C hw=WO 0x0  */
		hwint32 irq_ll_decimation_ch3_st : 1;	/* 4:4 sw=W1C hw=WO 0x0  */
		hwint32 irq_ll_decimation_ch2_st : 1;	/* 5:5 sw=W1C hw=WO 0x0  */
		hwint32 irq_ll_decimation_ch1_st : 1;	/* 6:6 sw=W1C hw=WO 0x0  */
		hwint32 reserved7 : 2;	/* 7:8 sw=RO hw=RO 0x0  */
		hwint32 irq_earlink_st : 1;	/* 9:9 sw=W1C hw=WO 0x0  */
		hwint32 irq_aes_st : 1;	/* 10:10 sw=W1C hw=WO 0x0  */
		hwint32 irq_vad_detection_st : 1;	/* 11:11 sw=W1C hw=WO 0x0  */
		hwint32 irq_clk_detection_st : 1;	/* 12:12 sw=W1C hw=WO 0x0  */
		hwint32 irq_ll_decimation_ch0_st : 1;	/* 13:13 sw=W1C hw=WO 0x0  */
		hwint32 irq_sync_st : 4;	/* 14:17 sw=W1C hw=WO 0x0  */
		hwint32 irq_slp_type_out_st : 1;	/* 18:18 sw=W1C hw=WO 0x0  */
		hwint32 irq_mailbox_st : 6;	/* 19:24 sw=W1C hw=WO 0x0  */
		hwint32 irq_sec_violation_merge_st : 1;	/* 25:25 sw=W1C hw=WO 0x0  */
		hwint32 irq_hifi3_wrap_st : 1;	/* 26:26 sw=W1C hw=WO 0x0  */
		hwint32 reserved27 : 1;	/* 27:27 sw=RO hw=RO 0x0  */
		hwint32 irq_lock_st : 1;	/* 28:28 sw=W1C hw=WO 0x0  */
		hwint32 irq_uart_st : 1;	/* 29:29 sw=W1C hw=WO 0x0  */
		hwint32 irq_wdt_merge_st : 1;	/* 30:30 sw=W1C hw=WO 0x0  */
		hwint32 irq_tx_oc_status_core_st : 1;	/* 31:31 sw=W1C hw=WO 0x0  */
	} bf;
	hwint32 dw;
} INT_ST1_s;


typedef union {
	struct {
		hwint32 auddma0_msc_irq_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 auddma3_msc_irq_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 capea_msc_irq_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 capeb_msc_irq_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 llea_msc_irq_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 lleb_msc_irq_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 earlink_msc_irq_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 fdma0_msc_irq_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fdma1_msc_irq_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 hifi3m_msc_irq_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 i2cs_msc_irq_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 qspi_msc_irq_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 mpc_cache_irq_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 mpc_prom_irq_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 mpc_dspsmb_irq_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 irq_i2cs_zero_address_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 irq_i2cs_limit_address_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 qspi_ahb5_sync_down_irq_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 arms1_ahb5_sync_up_irq_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 armm1_ahb5_sync_down_irq_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 asip_bus_err_irq_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 irq_timer_wdt_reset_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 asip_wdt_irq_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_MERGE_EN_s;


typedef union {
	struct {
		hwint32 auddma0_msc_irq_mask : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 auddma3_msc_irq_mask : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 capea_msc_irq_mask : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 capeb_msc_irq_mask : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 llea_msc_irq_mask : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 lleb_msc_irq_mask : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 earlink_msc_irq_mask : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 fdma0_msc_irq_mask : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 fdma1_msc_irq_mask : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 hifi3m_msc_irq_mask : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 i2cs_msc_irq_mask : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 qspi_msc_irq_mask : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 mpc_cache_irq_mask : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 mpc_prom_irq_mask : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 mpc_dspsmb_irq_mask : 1;	/* 14:14 sw=RW hw=RO 0x1  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 irq_i2cs_zero_address_mask : 1;	/* 16:16 sw=RW hw=RO 0x1  */
		hwint32 irq_i2cs_limit_address_mask : 1;	/* 17:17 sw=RW hw=RO 0x1  */
		hwint32 qspi_ahb5_sync_down_irq_mask : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 arms1_ahb5_sync_up_irq_mask : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 armm1_ahb5_sync_down_irq_mask : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 asip_bus_err_irq_mask : 1;	/* 21:21 sw=RW hw=RO 0x1  */
		hwint32 irq_timer_wdt_reset_mask : 1;	/* 22:22 sw=RW hw=RO 0x1  */
		hwint32 asip_wdt_irq_mask : 1;	/* 23:23 sw=RW hw=RO 0x1  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_MERGE_MASK_s;


typedef union {
	struct {
		hwint32 auddma0_msc_irq_byp : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 auddma3_msc_irq_byp : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 capea_msc_irq_byp : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 capeb_msc_irq_byp : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 llea_msc_irq_byp : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 lleb_msc_irq_byp : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 earlink_msc_irq_byp : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 fdma0_msc_irq_byp : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 fdma1_msc_irq_byp : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 hifi3m_msc_irq_byp : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 i2cs_msc_irq_byp : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 qspi_msc_irq_byp : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 mpc_cache_irq_byp : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 mpc_prom_irq_byp : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 mpc_dspsmb_irq_byp : 1;	/* 14:14 sw=RW hw=RO 0x1  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 irq_i2cs_zero_address_byp : 1;	/* 16:16 sw=RW hw=RO 0x1  */
		hwint32 irq_i2cs_limit_address_byp : 1;	/* 17:17 sw=RW hw=RO 0x1  */
		hwint32 qspi_ahb5_sync_down_irq_byp : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 arms1_ahb5_sync_up_irq_byp : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 armm1_ahb5_sync_down_irq_byp : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 asip_bus_err_irq_byp : 1;	/* 21:21 sw=RW hw=RO 0x1  */
		hwint32 irq_timer_wdt_reset_byp : 1;	/* 22:22 sw=RW hw=RO 0x1  */
		hwint32 asip_wdt_irq_byp : 1;	/* 23:23 sw=RW hw=RO 0x1  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_MERGE_BYP_s;


typedef union {
	struct {
		hwint32 auddma0_msc_irq_st : 1;	/* 0:0 sw=W1C hw=WO 0x0  */
		hwint32 auddma3_msc_irq_st : 1;	/* 1:1 sw=W1C hw=WO 0x0  */
		hwint32 capea_msc_irq_st : 1;	/* 2:2 sw=W1C hw=WO 0x0  */
		hwint32 capeb_msc_irq_st : 1;	/* 3:3 sw=W1C hw=WO 0x0  */
		hwint32 llea_msc_irq_st : 1;	/* 4:4 sw=W1C hw=WO 0x0  */
		hwint32 lleb_msc_irq_st : 1;	/* 5:5 sw=W1C hw=WO 0x0  */
		hwint32 earlink_msc_irq_st : 1;	/* 6:6 sw=W1C hw=WO 0x0  */
		hwint32 fdma0_msc_irq_st : 1;	/* 7:7 sw=W1C hw=WO 0x0  */
		hwint32 fdma1_msc_irq_st : 1;	/* 8:8 sw=W1C hw=WO 0x0  */
		hwint32 hifi3m_msc_irq_st : 1;	/* 9:9 sw=W1C hw=WO 0x0  */
		hwint32 i2cs_msc_irq_st : 1;	/* 10:10 sw=W1C hw=WO 0x0  */
		hwint32 qspi_msc_irq_st : 1;	/* 11:11 sw=W1C hw=WO 0x0  */
		hwint32 mpc_cache_irq_st : 1;	/* 12:12 sw=W1C hw=WO 0x0  */
		hwint32 mpc_prom_irq_st : 1;	/* 13:13 sw=W1C hw=WO 0x0  */
		hwint32 mpc_dspsmb_irq_st : 1;	/* 14:14 sw=W1C hw=WO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 irq_i2cs_zero_address_st : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 irq_i2cs_limit_address_st : 1;	/* 17:17 sw=W1C hw=WO 0x0  */
		hwint32 qspi_ahb5_sync_down_irq_st : 1;	/* 18:18 sw=W1C hw=WO 0x0  */
		hwint32 arms1_ahb5_sync_up_irq_st : 1;	/* 19:19 sw=W1C hw=WO 0x0  */
		hwint32 armm1_ahb5_sync_down_irq_st : 1;	/* 20:20 sw=W1C hw=WO 0x0  */
		hwint32 asip_bus_err_irq_st : 1;	/* 21:21 sw=W1C hw=WO 0x0  */
		hwint32 irq_timer_wdt_reset_st : 1;	/* 22:22 sw=W1C hw=WO 0x0  */
		hwint32 asip_wdt_irq_st : 1;	/* 23:23 sw=W1C hw=WO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_MERGE_ST_s;


typedef union {
	struct {
		hwint32 irq_battery_vdt_force : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 irq_pmu_force : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 irq_llea_soft_force : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 irq_lleb_soft_force : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 irq_capea_soft_force : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 irq_capeb_soft_force : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 irq_arm_soft_force : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 irq_hifi3_soft_force : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 irq_buserr_merge_force : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 irq_fdma0_force : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 irq_fdma1_force : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 irq_auddma0_force : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 irq_auddma3_force : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 irq_spim_rx_force : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 irq_spim_tx_force : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 irq_gpio_force : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 irq_i2cm_force : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 irq_i2cs_merge_force : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 irq_i3c_force : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 irq_cache_force : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 irq_dac_ramp_done_force : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 reserved21 : 9;	/* 21:29 sw=RO hw=RO 0x0  */
		hwint32 irq_asip_timer6_force : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 irq_asip_timer7_force : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_SOFTSET0_s;


typedef union {
	struct {
		hwint32 irq_timer_gp0_force : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 irq_timer_gp1_force : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 irq_timer_sp0_force : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 irq_qspi_force : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch3_force : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch2_force : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch1_force : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 2;	/* 7:8 sw=RO hw=RO 0x0  */
		hwint32 irq_earlink_force : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 irq_aes_force : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 irq_vad_detection_force : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 irq_clk_detection_force : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 irq_ll_decimation_ch0_force : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 irq_sync_force : 4;	/* 14:17 sw=RW hw=RO 0x0  */
		hwint32 irq_slp_type_out_force : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 irq_mailbox_force : 6;	/* 19:24 sw=RW hw=RO 0x0  */
		hwint32 irq_sec_violation_merge_force : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 irq_hifi3_wrap_force : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 reserved27 : 1;	/* 27:27 sw=RO hw=RO 0x0  */
		hwint32 irq_lock_force : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 irq_uart_force : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 irq_wdt_merge_force : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 irq_tx_oc_status_core_en : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_SOFTSET1_s;


typedef union {
	struct {
		hwint32 nmiirq_battery_vdt_mask : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_pmu_mask : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_llea_soft_mask : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_lleb_soft_mask : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_capea_soft_mask : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_capeb_soft_mask : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_arm_soft_mask : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_hifi3_soft_mask : 1;	/* 7:7 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_buserr_merge_mask : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_fdma0_mask : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_fdma1_mask : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_auddma0_mask : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_auddma3_mask : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_spim_rx_mask : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_spim_tx_mask : 1;	/* 14:14 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_gpio_mask : 1;	/* 15:15 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_i2cm_mask : 1;	/* 16:16 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_i2cs_merge_mask : 1;	/* 17:17 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_i3c_mask : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_cache_mask : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_dac_ramp_done_mask : 1;	/* 20:20 sw=RW hw=RO 0x1  */
		hwint32 reserved21 : 9;	/* 21:29 sw=RO hw=RO 0x0  */
		hwint32 nmiirq_asip_timer6_mask : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_asip_timer7_mask : 1;	/* 31:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} INT_NMI_MASK0_s;


typedef union {
	struct {
		hwint32 nmiirq_timer_gp0_mask : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_timer_gp1_mask : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_timer_sp0_mask : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_qspi_mask : 1;	/* 3:3 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_ll_decimation_ch3_mask : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_ll_decimation_ch2_mask : 1;	/* 5:5 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_ll_decimation_ch1_mask : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 reserved7 : 2;	/* 7:8 sw=RO hw=RO 0x0  */
		hwint32 nmiirq_earlink_mask : 1;	/* 9:9 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_aes_mask : 1;	/* 10:10 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_vad_detection_mask : 1;	/* 11:11 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_clk_detection_mask : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_ll_decimation_ch0_mask : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_sync_mask : 4;	/* 14:17 sw=RW hw=RO 0xf  */
		hwint32 nmiirq_slp_type_out_mask : 1;	/* 18:18 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_mailbox_mask : 6;	/* 19:24 sw=RW hw=RO 0x3f  */
		hwint32 nmiirq_sec_violation_merge_mask : 1;	/* 25:25 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_hifi3_wrap_mask : 1;	/* 26:26 sw=RW hw=RO 0x1  */
		hwint32 reserved27 : 1;	/* 27:27 sw=RO hw=RO 0x0  */
		hwint32 nmiirq_lock_mask : 1;	/* 28:28 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_uart_mask : 1;	/* 29:29 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_wdt_merge_mask : 1;	/* 30:30 sw=RW hw=RO 0x1  */
		hwint32 nmiirq_tx_oc_status_core_mask : 1;	/* 31:31 sw=RW hw=RO 0x1  */
	} bf;
	hwint32 dw;
} INT_NMI_MASK1_s;


typedef union {
	struct {
		hwint32 auddma0_msc_irq_ext_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 auddma3_msc_irq_ext_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 capea_msc_irq_ext_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 capeb_msc_irq_ext_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 llea_msc_irq_ext_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 lleb_msc_irq_ext_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 earlink_msc_irq_ext_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 fdma0_msc_irq_ext_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fdma1_msc_irq_ext_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 hifi3m_msc_irq_ext_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 i2cs_msc_irq_ext_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 qspi_msc_irq_ext_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 17;	/* 12:28 sw=RO hw=RO 0x0  */
		hwint32 mpc_dspsmb_irq_ext_en : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 mpc_cache_irq_ext_en : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 mpc_prom_irq_ext_en : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EXT_EN_s;


typedef union {
	struct {
		hwint32 auddma0_msc_irq_ext_clr : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 auddma3_msc_irq_ext_clr : 1;	/* 1:1 sw=WO hw=RO 0x0  */
		hwint32 capea_msc_irq_ext_clr : 1;	/* 2:2 sw=WO hw=RO 0x0  */
		hwint32 capeb_msc_irq_ext_clr : 1;	/* 3:3 sw=WO hw=RO 0x0  */
		hwint32 llea_msc_irq_ext_clr : 1;	/* 4:4 sw=WO hw=RO 0x0  */
		hwint32 lleb_msc_irq_ext_clr : 1;	/* 5:5 sw=WO hw=RO 0x0  */
		hwint32 earlink_msc_irq_ext_clr : 1;	/* 6:6 sw=WO hw=RO 0x0  */
		hwint32 fdma0_msc_irq_ext_clr : 1;	/* 7:7 sw=WO hw=RO 0x0  */
		hwint32 fdma1_msc_irq_ext_clr : 1;	/* 8:8 sw=WO hw=RO 0x0  */
		hwint32 hifi3m_msc_irq_ext_clr : 1;	/* 9:9 sw=WO hw=RO 0x0  */
		hwint32 i2cs_msc_irq_ext_clr : 1;	/* 10:10 sw=WO hw=RO 0x0  */
		hwint32 qspi_msc_irq_ext_clr : 1;	/* 11:11 sw=WO hw=RO 0x0  */
		hwint32 reserved12 : 17;	/* 12:28 sw=RO hw=RO 0x0  */
		hwint32 qspi_ahb5_sync_down_irq_ext_clr : 1;	/* 29:29 sw=WO hw=RO 0x0  */
		hwint32 arms1_ahb5_sync_up_irq_ext_clr : 1;	/* 30:30 sw=WO hw=RO 0x0  */
		hwint32 armm1_ahb5_sync_down_irq_ext_clr : 1;	/* 31:31 sw=WO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} INT_EXT_CLR_s;


typedef struct {
	INT_EN0_s  int_en0;
	INT_MASK0_s  int_mask0;
	INT_BYP0_s  int_byp0;
	INT_ST0_s  int_st0;
	INT_EN1_s  int_en1;
	INT_MASK1_s  int_mask1;
	INT_BYP1_s  int_byp1;
	INT_ST1_s  int_st1;
	INT_MERGE_EN_s  int_merge_en;
	INT_MERGE_MASK_s  int_merge_mask;
	INT_MERGE_BYP_s  int_merge_byp;
	INT_MERGE_ST_s  int_merge_st;
	INT_SOFTSET0_s  int_softset0;
	INT_SOFTSET1_s  int_softset1;
	INT_NMI_MASK0_s  int_nmi_mask0;
	INT_NMI_MASK1_s  int_nmi_mask1;
	hwint8 filler0[0xc0];
	INT_EXT_EN_s  int_ext_en;
	INT_EXT_CLR_s  int_ext_clr;

} TOP_INTERRUPT_CTRL_s;

#define INT_EN0_READMASK  0xffffffff
#define INT_EN0_WRITEMASK  0xc01fffff
#define INT_EN0_VOLATILEMASK  0x0
#define INT_EN0_RESETMASK  0xc01fffff
#define INT_EN0_DEFAULT  0x0

#define INT_MASK0_READMASK  0xffffffff
#define INT_MASK0_WRITEMASK  0xc01fffff
#define INT_MASK0_VOLATILEMASK  0x0
#define INT_MASK0_RESETMASK  0xc01fffff
#define INT_MASK0_DEFAULT  0xc01fffff

#define INT_BYP0_READMASK  0xffffffff
#define INT_BYP0_WRITEMASK  0xc01fffff
#define INT_BYP0_VOLATILEMASK  0x0
#define INT_BYP0_RESETMASK  0xc01fffff
#define INT_BYP0_DEFAULT  0xc01fffff

#define INT_ST0_READMASK  0x3fe00000
#define INT_ST0_WRITEMASK  0xc01fffff
#define INT_ST0_VOLATILEMASK  0xc01fffff
#define INT_ST0_RESETMASK  0xc01fffff
#define INT_ST0_DEFAULT  0x0

#define INT_EN1_READMASK  0xffffffff
#define INT_EN1_WRITEMASK  0xf7fffe7f
#define INT_EN1_VOLATILEMASK  0x0
#define INT_EN1_RESETMASK  0xf7fffe7f
#define INT_EN1_DEFAULT  0x0

#define INT_MASK1_READMASK  0xffffffff
#define INT_MASK1_WRITEMASK  0xf7fffe7f
#define INT_MASK1_VOLATILEMASK  0x0
#define INT_MASK1_RESETMASK  0xf7fffe7f
#define INT_MASK1_DEFAULT  0xf7fffe7f

#define INT_BYP1_READMASK  0xffffffff
#define INT_BYP1_WRITEMASK  0xf7fffe7f
#define INT_BYP1_VOLATILEMASK  0x0
#define INT_BYP1_RESETMASK  0xf7fffe7f
#define INT_BYP1_DEFAULT  0xf7fffe7f

#define INT_ST1_READMASK  0x8000180
#define INT_ST1_WRITEMASK  0xf7fffe7f
#define INT_ST1_VOLATILEMASK  0xf7fffe7f
#define INT_ST1_RESETMASK  0xf7fffe7f
#define INT_ST1_DEFAULT  0x0

#define INT_MERGE_EN_READMASK  0xffffffff
#define INT_MERGE_EN_WRITEMASK  0xff7fff
#define INT_MERGE_EN_VOLATILEMASK  0x0
#define INT_MERGE_EN_RESETMASK  0xff7fff
#define INT_MERGE_EN_DEFAULT  0x0

#define INT_MERGE_MASK_READMASK  0xffffffff
#define INT_MERGE_MASK_WRITEMASK  0xff7fff
#define INT_MERGE_MASK_VOLATILEMASK  0x0
#define INT_MERGE_MASK_RESETMASK  0xff7fff
#define INT_MERGE_MASK_DEFAULT  0xff7fff

#define INT_MERGE_BYP_READMASK  0xffffffff
#define INT_MERGE_BYP_WRITEMASK  0xff7fff
#define INT_MERGE_BYP_VOLATILEMASK  0x0
#define INT_MERGE_BYP_RESETMASK  0xff7fff
#define INT_MERGE_BYP_DEFAULT  0xff7fff

#define INT_MERGE_ST_READMASK  0xff008000
#define INT_MERGE_ST_WRITEMASK  0xff7fff
#define INT_MERGE_ST_VOLATILEMASK  0xff7fff
#define INT_MERGE_ST_RESETMASK  0xff7fff
#define INT_MERGE_ST_DEFAULT  0x0

#define INT_SOFTSET0_READMASK  0xffffffff
#define INT_SOFTSET0_WRITEMASK  0xc01fffff
#define INT_SOFTSET0_VOLATILEMASK  0x0
#define INT_SOFTSET0_RESETMASK  0xc01fffff
#define INT_SOFTSET0_DEFAULT  0x0

#define INT_SOFTSET1_READMASK  0xffffffff
#define INT_SOFTSET1_WRITEMASK  0xf7fffe7f
#define INT_SOFTSET1_VOLATILEMASK  0x0
#define INT_SOFTSET1_RESETMASK  0xf7fffe7f
#define INT_SOFTSET1_DEFAULT  0x0

#define INT_NMI_MASK0_READMASK  0xffffffff
#define INT_NMI_MASK0_WRITEMASK  0xc01fffff
#define INT_NMI_MASK0_VOLATILEMASK  0x0
#define INT_NMI_MASK0_RESETMASK  0xc01fffff
#define INT_NMI_MASK0_DEFAULT  0xc01fffff

#define INT_NMI_MASK1_READMASK  0xffffffff
#define INT_NMI_MASK1_WRITEMASK  0xf7fffe7f
#define INT_NMI_MASK1_VOLATILEMASK  0x0
#define INT_NMI_MASK1_RESETMASK  0xf7fffe7f
#define INT_NMI_MASK1_DEFAULT  0xf7fffe7f

#define INT_EXT_EN_READMASK  0xffffffff
#define INT_EXT_EN_WRITEMASK  0xe0000fff
#define INT_EXT_EN_VOLATILEMASK  0x0
#define INT_EXT_EN_RESETMASK  0xe0000fff
#define INT_EXT_EN_DEFAULT  0x0

#define INT_EXT_CLR_READMASK  0x1ffff000
#define INT_EXT_CLR_WRITEMASK  0xe0000fff
#define INT_EXT_CLR_VOLATILEMASK  0x0
#define INT_EXT_CLR_RESETMASK  0xe0000fff
#define INT_EXT_CLR_DEFAULT  0x0




/*block :  AUDIO_DMA */
typedef union {
	struct {
		hwint32 dma_1_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 2;	/* 8:9 sw=RO hw=RO 0x0  */
		hwint32 dma_0_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 dma_2_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CHANNEL_ENABLE_s;


typedef union {
	struct {
		hwint32 ipath_int_grp0_sta_clr : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp1_sta_clr : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp2_sta_clr : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp3_sta_clr : 1;	/* 3:3 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp4_sta_clr : 1;	/* 4:4 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp5_sta_clr : 1;	/* 5:5 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp6_sta_clr : 1;	/* 6:6 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp7_sta_clr : 1;	/* 7:7 sw=W1C hw=RW 0x0  */
		hwint32 reserved8 : 2;	/* 8:9 sw=RO hw=RO 0x0  */
		hwint32 dma_0_int_status_clr : 1;	/* 10:10 sw=W1C hw=RW 0x0  */
		hwint32 dma_2_int_status_clr : 1;	/* 11:11 sw=W1C hw=RW 0x0  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_INTERRUPT_STATUS_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH0_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH0_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH1_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH1_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH2_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH2_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH3_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH3_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH5_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH5_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH7_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH7_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH9_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH9_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH11_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH11_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH13_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH13_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_START_ADDRESS_CH15_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_CH15_s;


typedef union {
	struct {
		hwint32 ipth_irq_grp0_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp1_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp2_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp3_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp4_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp5_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp6_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp7_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 8;	/* 8:15 sw=RO hw=RO 0x0  */
		hwint32 dma_0_irq_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_2_irq_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_INTERRUPT_ENABLE_s;


typedef union {
	struct {
		hwint32 dma_0_2_pair : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_INTERRUPT_PARING_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp0 : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 dma_3_sel_grp0 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp0 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp0 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp0 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp0 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp0 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp0 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 8;	/* 8:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp1 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp1 : 1;	/* 17:17 sw=RW hw=RO 0x1  */
		hwint32 dma_5_sel_grp1 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp1 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp1 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp1 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp1 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp1 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_INTERRUPPT_GROUPING01_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp2 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp2 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp2 : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 dma_7_sel_grp2 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp2 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp2 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp2 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp2 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 8;	/* 8:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp3 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp3 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp3 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp3 : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 dma_9_sel_grp3 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp3 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp3 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp3 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_INTERRUPPT_GROUPING23_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp4 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp4 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp4 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp4 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp4 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 dma_11_sel_grp4 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp4 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp4 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 8;	/* 8:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp5 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp5 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp5 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp5 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp5 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp5 : 1;	/* 21:21 sw=RW hw=RO 0x1  */
		hwint32 dma_13_sel_grp5 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp5 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_INTERRUPPT_GROUPING45_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp6 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp6 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp6 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp6 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp6 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp6 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp6 : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 dma_15_sel_grp6 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 8;	/* 8:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp7 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp7 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp7 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp7 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp7 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp7 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp7 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp7 : 1;	/* 23:23 sw=RW hw=RO 0x1  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_INTERRUPPT_GROUPING67_s;


typedef union {
	struct {
		hwint32 channel_0 : 5;	/* 0:4 sw=RW hw=RO 0x1f  */
		hwint32 channel_2 : 5;	/* 5:9 sw=RW hw=RO 0x1f  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CHANNEL_ASSIGNMENTS02_s;


typedef union {
	struct {
		hwint32 channel_1 : 5;	/* 0:4 sw=RW hw=RO 0x1f  */
		hwint32 channel_3 : 5;	/* 5:9 sw=RW hw=RO 0x1f  */
		hwint32 channel_5 : 5;	/* 10:14 sw=RW hw=RO 0x1f  */
		hwint32 channel_7 : 5;	/* 15:19 sw=RW hw=RO 0x1f  */
		hwint32 channel_9 : 5;	/* 20:24 sw=RW hw=RO 0x1f  */
		hwint32 channel_11 : 5;	/* 25:29 sw=RW hw=RO 0x1f  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CHANNEL_ASSIGNMENT_1357911_s;


typedef union {
	struct {
		hwint32 channel_13 : 5;	/* 0:4 sw=RW hw=RO 0x1f  */
		hwint32 channel_15 : 5;	/* 5:9 sw=RW hw=RO 0x1f  */
		hwint32 reserved10 : 22;	/* 10:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CHANNEL_ASSIGNMENT_1315_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH0_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH1_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH2_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH3_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH5_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH7_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH9_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH11_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH13_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_CONTROL_EXT_CH15_s;


typedef union {
	struct {
		hwint32 dma_1_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_17_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dma_19_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 dma_0_en : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 dma_2_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 dma_4_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 dma_6_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 dma_8_en : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 dma_10_en : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 dma_12_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_14_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_16_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_18_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CHANNEL_ENABLE_s;


typedef union {
	struct {
		hwint32 ipath_int_grp0_sta_clr : 1;	/* 0:0 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp1_sta_clr : 1;	/* 1:1 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp2_sta_clr : 1;	/* 2:2 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp3_sta_clr : 1;	/* 3:3 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp4_sta_clr : 1;	/* 4:4 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp5_sta_clr : 1;	/* 5:5 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp6_sta_clr : 1;	/* 6:6 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp7_sta_clr : 1;	/* 7:7 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp8_sta_clr : 1;	/* 8:8 sw=W1C hw=RW 0x0  */
		hwint32 ipath_int_grp9_sta_clr : 1;	/* 9:9 sw=W1C hw=RW 0x0  */
		hwint32 dma_0_int_status_clr : 1;	/* 10:10 sw=W1C hw=RW 0x0  */
		hwint32 dma_2_int_status_clr : 1;	/* 11:11 sw=W1C hw=RW 0x0  */
		hwint32 dma_4_int_status_clr : 1;	/* 12:12 sw=W1C hw=RW 0x0  */
		hwint32 dma_6_int_status_clr : 1;	/* 13:13 sw=W1C hw=RW 0x0  */
		hwint32 dma_8_int_status_clr : 1;	/* 14:14 sw=W1C hw=RW 0x0  */
		hwint32 dma_10_int_status_clr : 1;	/* 15:15 sw=W1C hw=RW 0x0  */
		hwint32 dma_12_int_status_clr : 1;	/* 16:16 sw=W1C hw=RW 0x0  */
		hwint32 dma_14_int_status_clr : 1;	/* 17:17 sw=W1C hw=RW 0x0  */
		hwint32 dma_16_int_status_clr : 1;	/* 18:18 sw=W1C hw=RW 0x0  */
		hwint32 dma_18_int_status_clr : 1;	/* 19:19 sw=W1C hw=RW 0x0  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPT_STATUS_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH0_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH0_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH1_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH1_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH2_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH2_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH3_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH3_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH4_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH4_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH5_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH5_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH6_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH6_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH7_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH7_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH8_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH8_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH9_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH9_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH10_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH10_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH11_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH11_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH12_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH12_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH13_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH13_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH14_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH14_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH15_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH15_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH16_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH16_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH17_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH17_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH18_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH18_s;


typedef union {
	struct {
		hwint32 start_address : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_START_ADDRESS_CH19_s;


typedef union {
	struct {
		hwint32 buffer_size : 15;	/* 0:14 sw=RW hw=RO 0x0  */
		hwint32 samp_size : 3;	/* 15:17 sw=RW hw=RO 0x0  */
		hwint32 s_cnt : 7;	/* 18:24 sw=RW hw=RO 0x0  */
		hwint32 step_ofst : 3;	/* 25:27 sw=RW hw=RO 0x0  */
		hwint32 address_direction : 1;	/* 28:28 sw=RW hw=RO 0x0  */
		hwint32 burst_size : 1;	/* 29:29 sw=RW hw=RO 0x0  */
		hwint32 block_interrupt : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 reserved31 : 1;	/* 31:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_CH19_s;


typedef union {
	struct {
		hwint32 ipth_irq_grp0_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp1_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp2_en : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp3_en : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp4_en : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp5_en : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp6_en : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp7_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp9_en : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 ipth_irq_grp11_en : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 6;	/* 10:15 sw=RO hw=RO 0x0  */
		hwint32 dma_0_irq_en : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_2_irq_en : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_4_irq_en : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_6_irq_en : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_8_irq_en : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_10_irq_en : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_12_irq_en : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_14_irq_en : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dma_16_irq_en : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 dma_18_irq_en : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 reserved26 : 6;	/* 26:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPT_ENABLE_s;


typedef union {
	struct {
		hwint32 dma_0_2_pair : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_4_6_pair : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_8_10_pair : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_12_14_pair : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_16_18_pair : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 27;	/* 5:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPT_PARING_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp0 : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 dma_3_sel_grp0 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp0 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp0 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp0 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp0 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp0 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp0 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp0 : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp0 : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 6;	/* 10:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp1 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp1 : 1;	/* 17:17 sw=RW hw=RO 0x1  */
		hwint32 dma_5_sel_grp1 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp1 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp1 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp1 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp1 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp1 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp1 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp1 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 reserved26 : 6;	/* 26:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPPT_GROUPING01_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp2 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp2 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp2 : 1;	/* 2:2 sw=RW hw=RO 0x1  */
		hwint32 dma_7_sel_grp2 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp2 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp2 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp2 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp2 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp2 : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp2 : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 6;	/* 10:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp3 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp3 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp3 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp3 : 1;	/* 19:19 sw=RW hw=RO 0x1  */
		hwint32 dma_9_sel_grp3 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp3 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp3 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp3 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp3 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp3 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 reserved26 : 6;	/* 26:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPPT_GROUPING23_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp4 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp4 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp4 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp4 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp4 : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 dma_11_sel_grp4 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp4 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp4 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp4 : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp4 : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 6;	/* 10:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp5 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp5 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp5 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp5 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp5 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp5 : 1;	/* 21:21 sw=RW hw=RO 0x1  */
		hwint32 dma_13_sel_grp5 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp5 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp5 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp5 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 reserved26 : 6;	/* 26:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPPT_GROUPING45_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp6 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp6 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp6 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp6 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp6 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp6 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp6 : 1;	/* 6:6 sw=RW hw=RO 0x1  */
		hwint32 dma_15_sel_grp6 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp6 : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp6 : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 6;	/* 10:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp7 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp7 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp7 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp7 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp7 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp7 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp7 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp7 : 1;	/* 23:23 sw=RW hw=RO 0x1  */
		hwint32 dma_17_sel_grp7 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp7 : 1;	/* 25:25 sw=RW hw=RO 0x0  */
		hwint32 reserved26 : 6;	/* 26:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPPT_GROUPING67_s;


typedef union {
	struct {
		hwint32 dma_1_sel_grp8 : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp8 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp8 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp8 : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp8 : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp8 : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp8 : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp8 : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp8 : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 dma_19_sel_grp8 : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 reserved10 : 6;	/* 10:15 sw=RO hw=RO 0x0  */
		hwint32 dma_1_sel_grp9 : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 dma_3_sel_grp9 : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 dma_5_sel_grp9 : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 dma_7_sel_grp9 : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 dma_9_sel_grp9 : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 dma_11_sel_grp9 : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 dma_13_sel_grp9 : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 dma_15_sel_grp9 : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 dma_17_sel_grp9 : 1;	/* 24:24 sw=RW hw=RO 0x0  */
		hwint32 dma_19_sel_grp9 : 1;	/* 25:25 sw=RW hw=RO 0x1  */
		hwint32 reserved26 : 6;	/* 26:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_INTERRUPPT_GROUPING89_s;


typedef union {
	struct {
		hwint32 channel_0 : 5;	/* 0:4 sw=RW hw=RO 0x1f  */
		hwint32 channel_2 : 5;	/* 5:9 sw=RW hw=RO 0x1f  */
		hwint32 channel_4 : 5;	/* 10:14 sw=RW hw=RO 0x1f  */
		hwint32 channel_6 : 5;	/* 15:19 sw=RW hw=RO 0x1f  */
		hwint32 channel_8 : 5;	/* 20:24 sw=RW hw=RO 0x1f  */
		hwint32 channel_10 : 5;	/* 25:29 sw=RW hw=RO 0x1f  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CHANNEL_ASSIGNMENTS0246810_s;


typedef union {
	struct {
		hwint32 channel_12 : 5;	/* 0:4 sw=RW hw=RO 0x1f  */
		hwint32 channel_14 : 5;	/* 5:9 sw=RW hw=RO 0x1f  */
		hwint32 channel_16 : 5;	/* 10:14 sw=RW hw=RO 0x1f  */
		hwint32 channel_18 : 5;	/* 15:19 sw=RW hw=RO 0x1f  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CHANNEL_ASSIGNMENTS12141618_s;


typedef union {
	struct {
		hwint32 channel_1 : 5;	/* 0:4 sw=RW hw=RO 0x1f  */
		hwint32 channel_3 : 5;	/* 5:9 sw=RW hw=RO 0x1f  */
		hwint32 channel_5 : 5;	/* 10:14 sw=RW hw=RO 0x1f  */
		hwint32 channel_7 : 5;	/* 15:19 sw=RW hw=RO 0x1f  */
		hwint32 channel_9 : 5;	/* 20:24 sw=RW hw=RO 0x1f  */
		hwint32 channel_11 : 5;	/* 25:29 sw=RW hw=RO 0x1f  */
		hwint32 reserved30 : 2;	/* 30:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CHANNEL_ASSIGNMENT_1357911_s;


typedef union {
	struct {
		hwint32 channel_13 : 5;	/* 0:4 sw=RW hw=RO 0x1f  */
		hwint32 channel_15 : 5;	/* 5:9 sw=RW hw=RO 0x1f  */
		hwint32 channel_17 : 5;	/* 10:14 sw=RW hw=RO 0x1f  */
		hwint32 channel_19 : 5;	/* 15:19 sw=RW hw=RO 0x1f  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CHANNEL_ASSIGNMENT_13151719_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH0_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH1_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH2_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH3_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH4_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH5_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH6_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH7_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH8_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH9_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH10_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH11_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH12_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH13_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH14_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH15_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH16_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH17_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH18_s;


typedef union {
	struct {
		hwint32 buffer_size_ext : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_CONTROL_EXT_CH19_s;


typedef union {
	struct {
		hwint32 dma0_channel_sel : 5;	/* 0:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 3;	/* 5:7 sw=RO hw=RO 0x0  */
		hwint32 dma3_channel_sel : 5;	/* 8:12 sw=RW hw=RO 0x0  */
		hwint32 reserved13 : 19;	/* 13:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA_ADDR_STATUS_SELECT_s;


typedef union {
	struct {
		hwint32 dma0_addr_updt : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 dma3_addr_updt : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA_ADDRESS_UPDT_STA_s;


typedef union {
	struct {
		hwint32 current_address : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} DMA0_ADDRESS_STATUS_s;


typedef union {
	struct {
		hwint32 current_address : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} DMA3_ADDRESS_STATUS_s;


typedef union {
	struct {
		hwint32 fifo_overrun_ch1 : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch3 : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch5 : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch7 : 1;	/* 3:3 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch9 : 1;	/* 4:4 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch11 : 1;	/* 5:5 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch13 : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch15 : 1;	/* 7:7 sw=RO hw=RW 0x0  */
		hwint32 reserved8 : 8;	/* 8:15 sw=RO hw=RO 0x0  */
		hwint32 fifo_underrun_ch0 : 1;	/* 16:16 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch2 : 1;	/* 17:17 sw=RO hw=RW 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA0_FIFO_STATUS_s;


typedef union {
	struct {
		hwint32 fifo_overrun_ch1 : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch3 : 1;	/* 1:1 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch5 : 1;	/* 2:2 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch7 : 1;	/* 3:3 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch9 : 1;	/* 4:4 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch11 : 1;	/* 5:5 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch13 : 1;	/* 6:6 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch15 : 1;	/* 7:7 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch17 : 1;	/* 8:8 sw=RO hw=RW 0x0  */
		hwint32 fifo_overrun_ch19 : 1;	/* 9:9 sw=RO hw=RW 0x0  */
		hwint32 reserved10 : 6;	/* 10:15 sw=RO hw=RO 0x0  */
		hwint32 fifo_underrun_ch0 : 1;	/* 16:16 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch2 : 1;	/* 17:17 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch4 : 1;	/* 18:18 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch6 : 1;	/* 19:19 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch8 : 1;	/* 20:20 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch10 : 1;	/* 21:21 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch12 : 1;	/* 22:22 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch14 : 1;	/* 23:23 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch16 : 1;	/* 24:24 sw=RO hw=RW 0x0  */
		hwint32 fifo_underrun_ch18 : 1;	/* 25:25 sw=RO hw=RW 0x0  */
		hwint32 reserved26 : 6;	/* 26:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMA3_FIFO_STATUS_s;


typedef struct {
	DMA0_CHANNEL_ENABLE_s  dma0_channel_enable;
	DMA0_INTERRUPT_STATUS_s  dma0_interrupt_status;
	DMA0_START_ADDRESS_CH0_s  dma0_start_address_ch0;
	DMA0_CONTROL_CH0_s  dma0_control_ch0;
	DMA0_START_ADDRESS_CH1_s  dma0_start_address_ch1;
	DMA0_CONTROL_CH1_s  dma0_control_ch1;
	DMA0_START_ADDRESS_CH2_s  dma0_start_address_ch2;
	DMA0_CONTROL_CH2_s  dma0_control_ch2;
	DMA0_START_ADDRESS_CH3_s  dma0_start_address_ch3;
	DMA0_CONTROL_CH3_s  dma0_control_ch3;
	hwint8 filler0[0x8];
	DMA0_START_ADDRESS_CH5_s  dma0_start_address_ch5;
	DMA0_CONTROL_CH5_s  dma0_control_ch5;
	hwint8 filler1[0x8];
	DMA0_START_ADDRESS_CH7_s  dma0_start_address_ch7;
	DMA0_CONTROL_CH7_s  dma0_control_ch7;
	hwint8 filler2[0x8];
	DMA0_START_ADDRESS_CH9_s  dma0_start_address_ch9;
	DMA0_CONTROL_CH9_s  dma0_control_ch9;
	hwint8 filler3[0x8];
	DMA0_START_ADDRESS_CH11_s  dma0_start_address_ch11;
	DMA0_CONTROL_CH11_s  dma0_control_ch11;
	hwint8 filler4[0x8];
	DMA0_START_ADDRESS_CH13_s  dma0_start_address_ch13;
	DMA0_CONTROL_CH13_s  dma0_control_ch13;
	hwint8 filler5[0x8];
	DMA0_START_ADDRESS_CH15_s  dma0_start_address_ch15;
	DMA0_CONTROL_CH15_s  dma0_control_ch15;
	DMA0_INTERRUPT_ENABLE_s  dma0_interrupt_enable;
	DMA0_INTERRUPT_PARING_s  dma0_interrupt_paring;
	DMA0_INTERRUPPT_GROUPING01_s  dma0_interruppt_grouping01;
	DMA0_INTERRUPPT_GROUPING23_s  dma0_interruppt_grouping23;
	DMA0_INTERRUPPT_GROUPING45_s  dma0_interruppt_grouping45;
	DMA0_INTERRUPPT_GROUPING67_s  dma0_interruppt_grouping67;
	hwint8 filler6[0x4];
	DMA0_CHANNEL_ASSIGNMENTS02_s  dma0_channel_assignments02;
	DMA0_CHANNEL_ASSIGNMENT_1357911_s  dma0_channel_assignment_1357911;
	DMA0_CHANNEL_ASSIGNMENT_1315_s  dma0_channel_assignment_1315;
	DMA0_CONTROL_EXT_CH0_s  dma0_control_ext_ch0;
	DMA0_CONTROL_EXT_CH1_s  dma0_control_ext_ch1;
	DMA0_CONTROL_EXT_CH2_s  dma0_control_ext_ch2;
	DMA0_CONTROL_EXT_CH3_s  dma0_control_ext_ch3;
	DMA0_CONTROL_EXT_CH5_s  dma0_control_ext_ch5;
	DMA0_CONTROL_EXT_CH7_s  dma0_control_ext_ch7;
	DMA0_CONTROL_EXT_CH9_s  dma0_control_ext_ch9;
	DMA0_CONTROL_EXT_CH11_s  dma0_control_ext_ch11;
	DMA0_CONTROL_EXT_CH13_s  dma0_control_ext_ch13;
	DMA0_CONTROL_EXT_CH15_s  dma0_control_ext_ch15;
	hwint8 filler7[0xe8];
	DMA3_CHANNEL_ENABLE_s  dma3_channel_enable;
	DMA3_INTERRUPT_STATUS_s  dma3_interrupt_status;
	DMA3_START_ADDRESS_CH0_s  dma3_start_address_ch0;
	DMA3_CONTROL_CH0_s  dma3_control_ch0;
	DMA3_START_ADDRESS_CH1_s  dma3_start_address_ch1;
	DMA3_CONTROL_CH1_s  dma3_control_ch1;
	DMA3_START_ADDRESS_CH2_s  dma3_start_address_ch2;
	DMA3_CONTROL_CH2_s  dma3_control_ch2;
	DMA3_START_ADDRESS_CH3_s  dma3_start_address_ch3;
	DMA3_CONTROL_CH3_s  dma3_control_ch3;
	DMA3_START_ADDRESS_CH4_s  dma3_start_address_ch4;
	DMA3_CONTROL_CH4_s  dma3_control_ch4;
	DMA3_START_ADDRESS_CH5_s  dma3_start_address_ch5;
	DMA3_CONTROL_CH5_s  dma3_control_ch5;
	DMA3_START_ADDRESS_CH6_s  dma3_start_address_ch6;
	DMA3_CONTROL_CH6_s  dma3_control_ch6;
	DMA3_START_ADDRESS_CH7_s  dma3_start_address_ch7;
	DMA3_CONTROL_CH7_s  dma3_control_ch7;
	DMA3_START_ADDRESS_CH8_s  dma3_start_address_ch8;
	DMA3_CONTROL_CH8_s  dma3_control_ch8;
	DMA3_START_ADDRESS_CH9_s  dma3_start_address_ch9;
	DMA3_CONTROL_CH9_s  dma3_control_ch9;
	DMA3_START_ADDRESS_CH10_s  dma3_start_address_ch10;
	DMA3_CONTROL_CH10_s  dma3_control_ch10;
	DMA3_START_ADDRESS_CH11_s  dma3_start_address_ch11;
	DMA3_CONTROL_CH11_s  dma3_control_ch11;
	DMA3_START_ADDRESS_CH12_s  dma3_start_address_ch12;
	DMA3_CONTROL_CH12_s  dma3_control_ch12;
	DMA3_START_ADDRESS_CH13_s  dma3_start_address_ch13;
	DMA3_CONTROL_CH13_s  dma3_control_ch13;
	DMA3_START_ADDRESS_CH14_s  dma3_start_address_ch14;
	DMA3_CONTROL_CH14_s  dma3_control_ch14;
	DMA3_START_ADDRESS_CH15_s  dma3_start_address_ch15;
	DMA3_CONTROL_CH15_s  dma3_control_ch15;
	DMA3_START_ADDRESS_CH16_s  dma3_start_address_ch16;
	DMA3_CONTROL_CH16_s  dma3_control_ch16;
	DMA3_START_ADDRESS_CH17_s  dma3_start_address_ch17;
	DMA3_CONTROL_CH17_s  dma3_control_ch17;
	DMA3_START_ADDRESS_CH18_s  dma3_start_address_ch18;
	DMA3_CONTROL_CH18_s  dma3_control_ch18;
	DMA3_START_ADDRESS_CH19_s  dma3_start_address_ch19;
	DMA3_CONTROL_CH19_s  dma3_control_ch19;
	DMA3_INTERRUPT_ENABLE_s  dma3_interrupt_enable;
	DMA3_INTERRUPT_PARING_s  dma3_interrupt_paring;
	DMA3_INTERRUPPT_GROUPING01_s  dma3_interruppt_grouping01;
	DMA3_INTERRUPPT_GROUPING23_s  dma3_interruppt_grouping23;
	DMA3_INTERRUPPT_GROUPING45_s  dma3_interruppt_grouping45;
	DMA3_INTERRUPPT_GROUPING67_s  dma3_interruppt_grouping67;
	DMA3_INTERRUPPT_GROUPING89_s  dma3_interruppt_grouping89;
	DMA3_CHANNEL_ASSIGNMENTS0246810_s  dma3_channel_assignments0246810;
	DMA3_CHANNEL_ASSIGNMENTS12141618_s  dma3_channel_assignments12141618;
	DMA3_CHANNEL_ASSIGNMENT_1357911_s  dma3_channel_assignment_1357911;
	DMA3_CHANNEL_ASSIGNMENT_13151719_s  dma3_channel_assignment_13151719;
	DMA3_CONTROL_EXT_CH0_s  dma3_control_ext_ch0;
	DMA3_CONTROL_EXT_CH1_s  dma3_control_ext_ch1;
	DMA3_CONTROL_EXT_CH2_s  dma3_control_ext_ch2;
	DMA3_CONTROL_EXT_CH3_s  dma3_control_ext_ch3;
	DMA3_CONTROL_EXT_CH4_s  dma3_control_ext_ch4;
	DMA3_CONTROL_EXT_CH5_s  dma3_control_ext_ch5;
	DMA3_CONTROL_EXT_CH6_s  dma3_control_ext_ch6;
	DMA3_CONTROL_EXT_CH7_s  dma3_control_ext_ch7;
	DMA3_CONTROL_EXT_CH8_s  dma3_control_ext_ch8;
	DMA3_CONTROL_EXT_CH9_s  dma3_control_ext_ch9;
	DMA3_CONTROL_EXT_CH10_s  dma3_control_ext_ch10;
	DMA3_CONTROL_EXT_CH11_s  dma3_control_ext_ch11;
	DMA3_CONTROL_EXT_CH12_s  dma3_control_ext_ch12;
	DMA3_CONTROL_EXT_CH13_s  dma3_control_ext_ch13;
	DMA3_CONTROL_EXT_CH14_s  dma3_control_ext_ch14;
	DMA3_CONTROL_EXT_CH15_s  dma3_control_ext_ch15;
	DMA3_CONTROL_EXT_CH16_s  dma3_control_ext_ch16;
	DMA3_CONTROL_EXT_CH17_s  dma3_control_ext_ch17;
	DMA3_CONTROL_EXT_CH18_s  dma3_control_ext_ch18;
	DMA3_CONTROL_EXT_CH19_s  dma3_control_ext_ch19;
	hwint8 filler8[0xdc];
	DMA_ADDR_STATUS_SELECT_s  dma_addr_status_select;
	DMA_ADDRESS_UPDT_STA_s  dma_address_updt_sta;
	DMA0_ADDRESS_STATUS_s  dma0_address_status;
	DMA3_ADDRESS_STATUS_s  dma3_address_status;
	DMA0_FIFO_STATUS_s  dma0_fifo_status;
	DMA3_FIFO_STATUS_s  dma3_fifo_status;

} AUDIO_DMA_s;

#define DMA0_CHANNEL_ENABLE_READMASK  0xffffffff
#define DMA0_CHANNEL_ENABLE_WRITEMASK  0xcff
#define DMA0_CHANNEL_ENABLE_VOLATILEMASK  0x0
#define DMA0_CHANNEL_ENABLE_RESETMASK  0xcff
#define DMA0_CHANNEL_ENABLE_DEFAULT  0x0

#define DMA0_INTERRUPT_STATUS_READMASK  0xfffff300
#define DMA0_INTERRUPT_STATUS_WRITEMASK  0xcff
#define DMA0_INTERRUPT_STATUS_VOLATILEMASK  0xcff
#define DMA0_INTERRUPT_STATUS_RESETMASK  0xcff
#define DMA0_INTERRUPT_STATUS_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH0_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH0_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH0_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH0_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH0_DEFAULT  0x0

#define DMA0_CONTROL_CH0_READMASK  0xffffffff
#define DMA0_CONTROL_CH0_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH0_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH0_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH0_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH1_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH1_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH1_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH1_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH1_DEFAULT  0x0

#define DMA0_CONTROL_CH1_READMASK  0xffffffff
#define DMA0_CONTROL_CH1_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH1_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH1_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH1_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH2_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH2_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH2_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH2_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH2_DEFAULT  0x0

#define DMA0_CONTROL_CH2_READMASK  0xffffffff
#define DMA0_CONTROL_CH2_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH2_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH2_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH2_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH3_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH3_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH3_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH3_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH3_DEFAULT  0x0

#define DMA0_CONTROL_CH3_READMASK  0xffffffff
#define DMA0_CONTROL_CH3_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH3_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH3_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH3_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH5_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH5_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH5_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH5_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH5_DEFAULT  0x0

#define DMA0_CONTROL_CH5_READMASK  0xffffffff
#define DMA0_CONTROL_CH5_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH5_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH5_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH5_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH7_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH7_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH7_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH7_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH7_DEFAULT  0x0

#define DMA0_CONTROL_CH7_READMASK  0xffffffff
#define DMA0_CONTROL_CH7_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH7_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH7_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH7_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH9_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH9_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH9_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH9_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH9_DEFAULT  0x0

#define DMA0_CONTROL_CH9_READMASK  0xffffffff
#define DMA0_CONTROL_CH9_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH9_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH9_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH9_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH11_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH11_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH11_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH11_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH11_DEFAULT  0x0

#define DMA0_CONTROL_CH11_READMASK  0xffffffff
#define DMA0_CONTROL_CH11_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH11_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH11_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH11_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH13_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH13_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH13_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH13_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH13_DEFAULT  0x0

#define DMA0_CONTROL_CH13_READMASK  0xffffffff
#define DMA0_CONTROL_CH13_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH13_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH13_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH13_DEFAULT  0x0

#define DMA0_START_ADDRESS_CH15_READMASK  0xffffffff
#define DMA0_START_ADDRESS_CH15_WRITEMASK  0xffffffff
#define DMA0_START_ADDRESS_CH15_VOLATILEMASK  0x0
#define DMA0_START_ADDRESS_CH15_RESETMASK  0xffffffff
#define DMA0_START_ADDRESS_CH15_DEFAULT  0x0

#define DMA0_CONTROL_CH15_READMASK  0xffffffff
#define DMA0_CONTROL_CH15_WRITEMASK  0x7fffffff
#define DMA0_CONTROL_CH15_VOLATILEMASK  0x0
#define DMA0_CONTROL_CH15_RESETMASK  0x7fffffff
#define DMA0_CONTROL_CH15_DEFAULT  0x0

#define DMA0_INTERRUPT_ENABLE_READMASK  0xffffffff
#define DMA0_INTERRUPT_ENABLE_WRITEMASK  0x300ff
#define DMA0_INTERRUPT_ENABLE_VOLATILEMASK  0x0
#define DMA0_INTERRUPT_ENABLE_RESETMASK  0x300ff
#define DMA0_INTERRUPT_ENABLE_DEFAULT  0x0

#define DMA0_INTERRUPT_PARING_READMASK  0xffffffff
#define DMA0_INTERRUPT_PARING_WRITEMASK  0x1
#define DMA0_INTERRUPT_PARING_VOLATILEMASK  0x0
#define DMA0_INTERRUPT_PARING_RESETMASK  0x1
#define DMA0_INTERRUPT_PARING_DEFAULT  0x0

#define DMA0_INTERRUPPT_GROUPING01_READMASK  0xffffffff
#define DMA0_INTERRUPPT_GROUPING01_WRITEMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING01_VOLATILEMASK  0x0
#define DMA0_INTERRUPPT_GROUPING01_RESETMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING01_DEFAULT  0x20001

#define DMA0_INTERRUPPT_GROUPING23_READMASK  0xffffffff
#define DMA0_INTERRUPPT_GROUPING23_WRITEMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING23_VOLATILEMASK  0x0
#define DMA0_INTERRUPPT_GROUPING23_RESETMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING23_DEFAULT  0x80004

#define DMA0_INTERRUPPT_GROUPING45_READMASK  0xffffffff
#define DMA0_INTERRUPPT_GROUPING45_WRITEMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING45_VOLATILEMASK  0x0
#define DMA0_INTERRUPPT_GROUPING45_RESETMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING45_DEFAULT  0x200010

#define DMA0_INTERRUPPT_GROUPING67_READMASK  0xffffffff
#define DMA0_INTERRUPPT_GROUPING67_WRITEMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING67_VOLATILEMASK  0x0
#define DMA0_INTERRUPPT_GROUPING67_RESETMASK  0xff00ff
#define DMA0_INTERRUPPT_GROUPING67_DEFAULT  0x800040

#define DMA0_CHANNEL_ASSIGNMENTS02_READMASK  0xffffffff
#define DMA0_CHANNEL_ASSIGNMENTS02_WRITEMASK  0x3ff
#define DMA0_CHANNEL_ASSIGNMENTS02_VOLATILEMASK  0x0
#define DMA0_CHANNEL_ASSIGNMENTS02_RESETMASK  0x3ff
#define DMA0_CHANNEL_ASSIGNMENTS02_DEFAULT  0x3ff

#define DMA0_CHANNEL_ASSIGNMENT_1357911_READMASK  0xffffffff
#define DMA0_CHANNEL_ASSIGNMENT_1357911_WRITEMASK  0x3fffffff
#define DMA0_CHANNEL_ASSIGNMENT_1357911_VOLATILEMASK  0x0
#define DMA0_CHANNEL_ASSIGNMENT_1357911_RESETMASK  0x3fffffff
#define DMA0_CHANNEL_ASSIGNMENT_1357911_DEFAULT  0x3fffffff

#define DMA0_CHANNEL_ASSIGNMENT_1315_READMASK  0xffffffff
#define DMA0_CHANNEL_ASSIGNMENT_1315_WRITEMASK  0x3ff
#define DMA0_CHANNEL_ASSIGNMENT_1315_VOLATILEMASK  0x0
#define DMA0_CHANNEL_ASSIGNMENT_1315_RESETMASK  0x3ff
#define DMA0_CHANNEL_ASSIGNMENT_1315_DEFAULT  0x3ff

#define DMA0_CONTROL_EXT_CH0_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH0_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH0_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH0_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH0_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH1_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH1_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH1_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH1_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH1_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH2_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH2_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH2_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH2_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH2_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH3_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH3_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH3_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH3_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH3_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH5_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH5_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH5_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH5_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH5_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH7_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH7_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH7_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH7_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH7_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH9_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH9_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH9_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH9_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH9_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH11_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH11_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH11_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH11_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH11_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH13_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH13_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH13_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH13_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH13_DEFAULT  0x0

#define DMA0_CONTROL_EXT_CH15_READMASK  0xffffffff
#define DMA0_CONTROL_EXT_CH15_WRITEMASK  0x7
#define DMA0_CONTROL_EXT_CH15_VOLATILEMASK  0x0
#define DMA0_CONTROL_EXT_CH15_RESETMASK  0x7
#define DMA0_CONTROL_EXT_CH15_DEFAULT  0x0

#define DMA3_CHANNEL_ENABLE_READMASK  0xffffffff
#define DMA3_CHANNEL_ENABLE_WRITEMASK  0xfffff
#define DMA3_CHANNEL_ENABLE_VOLATILEMASK  0x0
#define DMA3_CHANNEL_ENABLE_RESETMASK  0xfffff
#define DMA3_CHANNEL_ENABLE_DEFAULT  0x0

#define DMA3_INTERRUPT_STATUS_READMASK  0xfff00000
#define DMA3_INTERRUPT_STATUS_WRITEMASK  0xfffff
#define DMA3_INTERRUPT_STATUS_VOLATILEMASK  0xfffff
#define DMA3_INTERRUPT_STATUS_RESETMASK  0xfffff
#define DMA3_INTERRUPT_STATUS_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH0_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH0_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH0_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH0_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH0_DEFAULT  0x0

#define DMA3_CONTROL_CH0_READMASK  0xffffffff
#define DMA3_CONTROL_CH0_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH0_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH0_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH0_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH1_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH1_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH1_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH1_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH1_DEFAULT  0x0

#define DMA3_CONTROL_CH1_READMASK  0xffffffff
#define DMA3_CONTROL_CH1_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH1_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH1_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH1_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH2_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH2_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH2_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH2_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH2_DEFAULT  0x0

#define DMA3_CONTROL_CH2_READMASK  0xffffffff
#define DMA3_CONTROL_CH2_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH2_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH2_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH2_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH3_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH3_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH3_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH3_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH3_DEFAULT  0x0

#define DMA3_CONTROL_CH3_READMASK  0xffffffff
#define DMA3_CONTROL_CH3_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH3_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH3_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH3_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH4_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH4_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH4_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH4_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH4_DEFAULT  0x0

#define DMA3_CONTROL_CH4_READMASK  0xffffffff
#define DMA3_CONTROL_CH4_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH4_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH4_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH4_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH5_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH5_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH5_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH5_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH5_DEFAULT  0x0

#define DMA3_CONTROL_CH5_READMASK  0xffffffff
#define DMA3_CONTROL_CH5_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH5_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH5_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH5_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH6_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH6_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH6_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH6_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH6_DEFAULT  0x0

#define DMA3_CONTROL_CH6_READMASK  0xffffffff
#define DMA3_CONTROL_CH6_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH6_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH6_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH6_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH7_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH7_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH7_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH7_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH7_DEFAULT  0x0

#define DMA3_CONTROL_CH7_READMASK  0xffffffff
#define DMA3_CONTROL_CH7_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH7_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH7_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH7_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH8_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH8_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH8_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH8_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH8_DEFAULT  0x0

#define DMA3_CONTROL_CH8_READMASK  0xffffffff
#define DMA3_CONTROL_CH8_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH8_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH8_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH8_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH9_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH9_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH9_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH9_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH9_DEFAULT  0x0

#define DMA3_CONTROL_CH9_READMASK  0xffffffff
#define DMA3_CONTROL_CH9_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH9_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH9_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH9_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH10_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH10_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH10_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH10_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH10_DEFAULT  0x0

#define DMA3_CONTROL_CH10_READMASK  0xffffffff
#define DMA3_CONTROL_CH10_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH10_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH10_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH10_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH11_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH11_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH11_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH11_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH11_DEFAULT  0x0

#define DMA3_CONTROL_CH11_READMASK  0xffffffff
#define DMA3_CONTROL_CH11_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH11_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH11_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH11_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH12_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH12_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH12_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH12_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH12_DEFAULT  0x0

#define DMA3_CONTROL_CH12_READMASK  0xffffffff
#define DMA3_CONTROL_CH12_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH12_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH12_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH12_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH13_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH13_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH13_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH13_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH13_DEFAULT  0x0

#define DMA3_CONTROL_CH13_READMASK  0xffffffff
#define DMA3_CONTROL_CH13_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH13_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH13_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH13_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH14_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH14_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH14_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH14_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH14_DEFAULT  0x0

#define DMA3_CONTROL_CH14_READMASK  0xffffffff
#define DMA3_CONTROL_CH14_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH14_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH14_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH14_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH15_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH15_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH15_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH15_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH15_DEFAULT  0x0

#define DMA3_CONTROL_CH15_READMASK  0xffffffff
#define DMA3_CONTROL_CH15_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH15_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH15_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH15_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH16_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH16_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH16_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH16_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH16_DEFAULT  0x0

#define DMA3_CONTROL_CH16_READMASK  0xffffffff
#define DMA3_CONTROL_CH16_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH16_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH16_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH16_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH17_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH17_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH17_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH17_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH17_DEFAULT  0x0

#define DMA3_CONTROL_CH17_READMASK  0xffffffff
#define DMA3_CONTROL_CH17_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH17_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH17_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH17_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH18_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH18_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH18_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH18_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH18_DEFAULT  0x0

#define DMA3_CONTROL_CH18_READMASK  0xffffffff
#define DMA3_CONTROL_CH18_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH18_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH18_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH18_DEFAULT  0x0

#define DMA3_START_ADDRESS_CH19_READMASK  0xffffffff
#define DMA3_START_ADDRESS_CH19_WRITEMASK  0xffffffff
#define DMA3_START_ADDRESS_CH19_VOLATILEMASK  0x0
#define DMA3_START_ADDRESS_CH19_RESETMASK  0xffffffff
#define DMA3_START_ADDRESS_CH19_DEFAULT  0x0

#define DMA3_CONTROL_CH19_READMASK  0xffffffff
#define DMA3_CONTROL_CH19_WRITEMASK  0x7fffffff
#define DMA3_CONTROL_CH19_VOLATILEMASK  0x0
#define DMA3_CONTROL_CH19_RESETMASK  0x7fffffff
#define DMA3_CONTROL_CH19_DEFAULT  0x0

#define DMA3_INTERRUPT_ENABLE_READMASK  0xffffffff
#define DMA3_INTERRUPT_ENABLE_WRITEMASK  0x3ff03ff
#define DMA3_INTERRUPT_ENABLE_VOLATILEMASK  0x0
#define DMA3_INTERRUPT_ENABLE_RESETMASK  0x3ff03ff
#define DMA3_INTERRUPT_ENABLE_DEFAULT  0x0

#define DMA3_INTERRUPT_PARING_READMASK  0xffffffff
#define DMA3_INTERRUPT_PARING_WRITEMASK  0x1f
#define DMA3_INTERRUPT_PARING_VOLATILEMASK  0x0
#define DMA3_INTERRUPT_PARING_RESETMASK  0x1f
#define DMA3_INTERRUPT_PARING_DEFAULT  0x0

#define DMA3_INTERRUPPT_GROUPING01_READMASK  0xffffffff
#define DMA3_INTERRUPPT_GROUPING01_WRITEMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING01_VOLATILEMASK  0x0
#define DMA3_INTERRUPPT_GROUPING01_RESETMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING01_DEFAULT  0x20001

#define DMA3_INTERRUPPT_GROUPING23_READMASK  0xffffffff
#define DMA3_INTERRUPPT_GROUPING23_WRITEMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING23_VOLATILEMASK  0x0
#define DMA3_INTERRUPPT_GROUPING23_RESETMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING23_DEFAULT  0x80004

#define DMA3_INTERRUPPT_GROUPING45_READMASK  0xffffffff
#define DMA3_INTERRUPPT_GROUPING45_WRITEMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING45_VOLATILEMASK  0x0
#define DMA3_INTERRUPPT_GROUPING45_RESETMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING45_DEFAULT  0x200010

#define DMA3_INTERRUPPT_GROUPING67_READMASK  0xffffffff
#define DMA3_INTERRUPPT_GROUPING67_WRITEMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING67_VOLATILEMASK  0x0
#define DMA3_INTERRUPPT_GROUPING67_RESETMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING67_DEFAULT  0x800040

#define DMA3_INTERRUPPT_GROUPING89_READMASK  0xffffffff
#define DMA3_INTERRUPPT_GROUPING89_WRITEMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING89_VOLATILEMASK  0x0
#define DMA3_INTERRUPPT_GROUPING89_RESETMASK  0x3ff03ff
#define DMA3_INTERRUPPT_GROUPING89_DEFAULT  0x2000100

#define DMA3_CHANNEL_ASSIGNMENTS0246810_READMASK  0xffffffff
#define DMA3_CHANNEL_ASSIGNMENTS0246810_WRITEMASK  0x3fffffff
#define DMA3_CHANNEL_ASSIGNMENTS0246810_VOLATILEMASK  0x0
#define DMA3_CHANNEL_ASSIGNMENTS0246810_RESETMASK  0x3fffffff
#define DMA3_CHANNEL_ASSIGNMENTS0246810_DEFAULT  0x3fffffff

#define DMA3_CHANNEL_ASSIGNMENTS12141618_READMASK  0xffffffff
#define DMA3_CHANNEL_ASSIGNMENTS12141618_WRITEMASK  0xfffff
#define DMA3_CHANNEL_ASSIGNMENTS12141618_VOLATILEMASK  0x0
#define DMA3_CHANNEL_ASSIGNMENTS12141618_RESETMASK  0xfffff
#define DMA3_CHANNEL_ASSIGNMENTS12141618_DEFAULT  0xfffff

#define DMA3_CHANNEL_ASSIGNMENT_1357911_READMASK  0xffffffff
#define DMA3_CHANNEL_ASSIGNMENT_1357911_WRITEMASK  0x3fffffff
#define DMA3_CHANNEL_ASSIGNMENT_1357911_VOLATILEMASK  0x0
#define DMA3_CHANNEL_ASSIGNMENT_1357911_RESETMASK  0x3fffffff
#define DMA3_CHANNEL_ASSIGNMENT_1357911_DEFAULT  0x3fffffff

#define DMA3_CHANNEL_ASSIGNMENT_13151719_READMASK  0xffffffff
#define DMA3_CHANNEL_ASSIGNMENT_13151719_WRITEMASK  0xfffff
#define DMA3_CHANNEL_ASSIGNMENT_13151719_VOLATILEMASK  0x0
#define DMA3_CHANNEL_ASSIGNMENT_13151719_RESETMASK  0xfffff
#define DMA3_CHANNEL_ASSIGNMENT_13151719_DEFAULT  0xfffff

#define DMA3_CONTROL_EXT_CH0_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH0_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH0_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH0_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH0_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH1_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH1_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH1_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH1_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH1_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH2_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH2_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH2_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH2_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH2_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH3_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH3_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH3_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH3_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH3_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH4_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH4_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH4_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH4_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH4_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH5_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH5_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH5_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH5_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH5_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH6_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH6_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH6_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH6_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH6_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH7_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH7_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH7_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH7_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH7_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH8_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH8_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH8_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH8_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH8_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH9_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH9_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH9_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH9_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH9_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH10_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH10_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH10_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH10_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH10_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH11_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH11_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH11_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH11_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH11_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH12_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH12_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH12_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH12_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH12_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH13_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH13_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH13_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH13_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH13_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH14_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH14_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH14_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH14_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH14_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH15_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH15_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH15_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH15_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH15_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH16_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH16_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH16_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH16_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH16_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH17_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH17_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH17_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH17_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH17_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH18_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH18_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH18_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH18_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH18_DEFAULT  0x0

#define DMA3_CONTROL_EXT_CH19_READMASK  0xffffffff
#define DMA3_CONTROL_EXT_CH19_WRITEMASK  0x7
#define DMA3_CONTROL_EXT_CH19_VOLATILEMASK  0x0
#define DMA3_CONTROL_EXT_CH19_RESETMASK  0x7
#define DMA3_CONTROL_EXT_CH19_DEFAULT  0x0

#define DMA_ADDR_STATUS_SELECT_READMASK  0xffffffff
#define DMA_ADDR_STATUS_SELECT_WRITEMASK  0x1f1f
#define DMA_ADDR_STATUS_SELECT_VOLATILEMASK  0x0
#define DMA_ADDR_STATUS_SELECT_RESETMASK  0x1f1f
#define DMA_ADDR_STATUS_SELECT_DEFAULT  0x0

#define DMA_ADDRESS_UPDT_STA_READMASK  0xffffffff
#define DMA_ADDRESS_UPDT_STA_WRITEMASK  0x0
#define DMA_ADDRESS_UPDT_STA_VOLATILEMASK  0x3
#define DMA_ADDRESS_UPDT_STA_RESETMASK  0x3
#define DMA_ADDRESS_UPDT_STA_DEFAULT  0x0

#define DMA0_ADDRESS_STATUS_READMASK  0xffffffff
#define DMA0_ADDRESS_STATUS_WRITEMASK  0x0
#define DMA0_ADDRESS_STATUS_VOLATILEMASK  0xffffffff
#define DMA0_ADDRESS_STATUS_RESETMASK  0xffffffff
#define DMA0_ADDRESS_STATUS_DEFAULT  0x0

#define DMA3_ADDRESS_STATUS_READMASK  0xffffffff
#define DMA3_ADDRESS_STATUS_WRITEMASK  0x0
#define DMA3_ADDRESS_STATUS_VOLATILEMASK  0xffffffff
#define DMA3_ADDRESS_STATUS_RESETMASK  0xffffffff
#define DMA3_ADDRESS_STATUS_DEFAULT  0x0

#define DMA0_FIFO_STATUS_READMASK  0xffffffff
#define DMA0_FIFO_STATUS_WRITEMASK  0x0
#define DMA0_FIFO_STATUS_VOLATILEMASK  0x300ff
#define DMA0_FIFO_STATUS_RESETMASK  0x300ff
#define DMA0_FIFO_STATUS_DEFAULT  0x0

#define DMA3_FIFO_STATUS_READMASK  0xffffffff
#define DMA3_FIFO_STATUS_WRITEMASK  0x0
#define DMA3_FIFO_STATUS_VOLATILEMASK  0x3ff03ff
#define DMA3_FIFO_STATUS_RESETMASK  0x3ff03ff
#define DMA3_FIFO_STATUS_DEFAULT  0x0




/*block :  OTP */
typedef union {
	struct {
		hwint32 csb : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 pgm : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 sclk : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 din : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 27;	/* 5:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_CTRL_STA_s;


typedef union {
	struct {
		hwint32 csb : 1;	/* 0:0 sw=WO hw=RO 0x1  */
		hwint32 pgm : 1;	/* 1:1 sw=WO hw=RO 0x0  */
		hwint32 sclk : 1;	/* 2:2 sw=WO hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 din : 1;	/* 4:4 sw=WO hw=RO 0x0  */
		hwint32 reserved5 : 27;	/* 5:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_STATUS_SET_s;


typedef union {
	struct {
		hwint32 csb : 1;	/* 0:0 sw=WO hw=RO 0x1  */
		hwint32 pgm : 1;	/* 1:1 sw=WO hw=RO 0x0  */
		hwint32 sclk : 1;	/* 2:2 sw=WO hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 din : 1;	/* 4:4 sw=WO hw=RO 0x0  */
		hwint32 reserved5 : 27;	/* 5:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_STATUS_CLR_s;


typedef union {
	struct {
		hwint32 sdout : 1;	/* 0:0 sw=RO hw=RW 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_SERAL_DATA_OUTPUT_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_s;


typedef union {
	struct {
		hwint32 pdout : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_s;


typedef struct {
	OTP_FUSE0_CTRL_STA_s  otp_fuse0_ctrl_sta;
	OTP_FUSE0_STATUS_SET_s  otp_fuse0_status_set;
	OTP_FUSE0_STATUS_CLR_s  otp_fuse0_status_clr;
	OTP_FUSE0_SERAL_DATA_OUTPUT_s  otp_fuse0_seral_data_output;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_s  otp_fuse0_parallel_data_output_0;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_s  otp_fuse0_parallel_data_output_1;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_s  otp_fuse0_parallel_data_output_2;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_s  otp_fuse0_parallel_data_output_3;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_s  otp_fuse0_parallel_data_output_4;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_s  otp_fuse0_parallel_data_output_5;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_s  otp_fuse0_parallel_data_output_6;
	OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_s  otp_fuse0_parallel_data_output_7;

} OTP_s;

#define OTP_FUSE0_CTRL_STA_READMASK  0xffffffff
#define OTP_FUSE0_CTRL_STA_WRITEMASK  0x17
#define OTP_FUSE0_CTRL_STA_VOLATILEMASK  0x0
#define OTP_FUSE0_CTRL_STA_RESETMASK  0x17
#define OTP_FUSE0_CTRL_STA_DEFAULT  0x1

#define OTP_FUSE0_STATUS_SET_READMASK  0xffffffe8
#define OTP_FUSE0_STATUS_SET_WRITEMASK  0x17
#define OTP_FUSE0_STATUS_SET_VOLATILEMASK  0x0
#define OTP_FUSE0_STATUS_SET_RESETMASK  0x17
#define OTP_FUSE0_STATUS_SET_DEFAULT  0x1

#define OTP_FUSE0_STATUS_CLR_READMASK  0xffffffe8
#define OTP_FUSE0_STATUS_CLR_WRITEMASK  0x17
#define OTP_FUSE0_STATUS_CLR_VOLATILEMASK  0x0
#define OTP_FUSE0_STATUS_CLR_RESETMASK  0x17
#define OTP_FUSE0_STATUS_CLR_DEFAULT  0x1

#define OTP_FUSE0_SERAL_DATA_OUTPUT_READMASK  0xffffffff
#define OTP_FUSE0_SERAL_DATA_OUTPUT_WRITEMASK  0x0
#define OTP_FUSE0_SERAL_DATA_OUTPUT_VOLATILEMASK  0x1
#define OTP_FUSE0_SERAL_DATA_OUTPUT_RESETMASK  0x1
#define OTP_FUSE0_SERAL_DATA_OUTPUT_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_DEFAULT  0x0

#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_READMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_WRITEMASK  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_VOLATILEMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_RESETMASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_DEFAULT  0x0




/*block :  AHB_FLASH_CACHE */
typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpluse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CACHE_DATA_RAM0_CFG_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpluse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CACHE_DATA_RAM1_CFG_s;


typedef union {
	struct {
		hwint32 bypass : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 fun_clk_gate : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CACHE_USER_CFG_s;


typedef struct {
	CACHE_DATA_RAM0_CFG_s  cache_data_ram0_cfg;
	CACHE_DATA_RAM1_CFG_s  cache_data_ram1_cfg;
	CACHE_USER_CFG_s  cache_user_cfg;

} AHB_FLASH_CACHE_s;

#define CACHE_DATA_RAM0_CFG_READMASK  0xffffffff
#define CACHE_DATA_RAM0_CFG_WRITEMASK  0x7fff
#define CACHE_DATA_RAM0_CFG_VOLATILEMASK  0x0
#define CACHE_DATA_RAM0_CFG_RESETMASK  0x7fff
#define CACHE_DATA_RAM0_CFG_DEFAULT  0x413

#define CACHE_DATA_RAM1_CFG_READMASK  0xffffffff
#define CACHE_DATA_RAM1_CFG_WRITEMASK  0x7fff
#define CACHE_DATA_RAM1_CFG_VOLATILEMASK  0x0
#define CACHE_DATA_RAM1_CFG_RESETMASK  0x7fff
#define CACHE_DATA_RAM1_CFG_DEFAULT  0x413

#define CACHE_USER_CFG_READMASK  0xffffffff
#define CACHE_USER_CFG_WRITEMASK  0x3
#define CACHE_USER_CFG_VOLATILEMASK  0x0
#define CACHE_USER_CFG_RESETMASK  0x3
#define CACHE_USER_CFG_DEFAULT  0x2




/*block :  PWM */
typedef union {
	struct {
		hwint32 pwm1 : 8;	/* 0:7 sw=RW hw=RW 0x0  */
		hwint32 pwm2 : 8;	/* 8:15 sw=RW hw=RW 0x0  */
		hwint32 pwm3 : 8;	/* 16:23 sw=RW hw=RW 0x0  */
		hwint32 pwm4 : 8;	/* 24:31 sw=RW hw=RW 0x0  */
	} bf;
	hwint32 dw;
} RA_PWM_CTRL_1_s;


typedef union {
	struct {
		hwint32 pwm5 : 8;	/* 0:7 sw=RW hw=RW 0x0  */
		hwint32 pwm1_en : 1;	/* 8:8 sw=RW hw=RW 0x0  */
		hwint32 pwm2_en : 1;	/* 9:9 sw=RW hw=RW 0x0  */
		hwint32 pwm3_en : 1;	/* 10:10 sw=RW hw=RW 0x0  */
		hwint32 dmblnk : 1;	/* 11:11 sw=RW hw=RW 0x0  */
		hwint32 reserved12 : 4;	/* 12:15 sw=RO hw=RO 0x0  */
		hwint32 pwm1_cntrl : 2;	/* 16:17 sw=RW hw=RW 0x0  */
		hwint32 pwm2_cntrl : 2;	/* 18:19 sw=RW hw=RW 0x0  */
		hwint32 pwm3_cntrl : 2;	/* 20:21 sw=RW hw=RW 0x0  */
		hwint32 reserved22 : 2;	/* 22:23 sw=RO hw=RO 0x0  */
		hwint32 pwm1_out_invert : 1;	/* 24:24 sw=RW hw=RW 0x0  */
		hwint32 pwm2_out_invert : 1;	/* 25:25 sw=RW hw=RW 0x0  */
		hwint32 pwm3_out_invert : 1;	/* 26:26 sw=RW hw=RW 0x0  */
		hwint32 reserved27 : 5;	/* 27:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} RA_PWM_CTRL_2_s;


typedef struct {
	RA_PWM_CTRL_1_s  ra_pwm_ctrl_1;
	RA_PWM_CTRL_2_s  ra_pwm_ctrl_2;

} PWM_s;

#define RA_PWM_CTRL_1_READMASK  0xffffffff
#define RA_PWM_CTRL_1_WRITEMASK  0xffffffff
#define RA_PWM_CTRL_1_VOLATILEMASK  0xffffffff
#define RA_PWM_CTRL_1_RESETMASK  0xffffffff
#define RA_PWM_CTRL_1_DEFAULT  0x0

#define RA_PWM_CTRL_2_READMASK  0xffffffff
#define RA_PWM_CTRL_2_WRITEMASK  0x73f0fff
#define RA_PWM_CTRL_2_VOLATILEMASK  0x73f0fff
#define RA_PWM_CTRL_2_RESETMASK  0x73f0fff
#define RA_PWM_CTRL_2_DEFAULT  0x0




/*block :  MAILBOX */
typedef union {
	struct {
		hwint32 fifo_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 overflow_clr : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 fifo_dbg : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 4;	/* 3:6 sw=RO hw=RO 0x0  */
		hwint32 int_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fifo_full_entry_threshold : 4;	/* 8:11 sw=RW hw=RO 0x1  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_CFG_FIFO0_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 master_id : 4;	/* 8:11 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 12:12 sw=RO hw=WO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 int_status : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_STATUS_FIFO0_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty_entry : 8;	/* 8:15 sw=RO hw=WO 0xa  */
		hwint32 fifo_full : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 fifo_afull : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty : 1;	/* 18:18 sw=RO hw=WO 0x1  */
		hwint32 fifo_aempty : 1;	/* 19:19 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 20:20 sw=RO hw=WO 0x0  */
		hwint32 underflow : 1;	/* 21:21 sw=RO hw=WO 0x0  */
		hwint32 reserved22 : 10;	/* 22:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_DBG_MSG_FIFO0_s;


typedef union {
	struct {
		hwint32 fifo_xfer : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_FIFO_XFER_FIFO0_s;


typedef union {
	struct {
		hwint32 fifo_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 overflow_clr : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 fifo_dbg : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 4;	/* 3:6 sw=RO hw=RO 0x0  */
		hwint32 int_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fifo_full_entry_threshold : 4;	/* 8:11 sw=RW hw=RO 0x1  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_CFG_FIFO1_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 master_id : 4;	/* 8:11 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 12:12 sw=RO hw=WO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 int_status : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_STATUS_FIFO1_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty_entry : 8;	/* 8:15 sw=RO hw=WO 0xa  */
		hwint32 fifo_full : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 fifo_afull : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty : 1;	/* 18:18 sw=RO hw=WO 0x1  */
		hwint32 fifo_aempty : 1;	/* 19:19 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 20:20 sw=RO hw=WO 0x0  */
		hwint32 underflow : 1;	/* 21:21 sw=RO hw=WO 0x0  */
		hwint32 reserved22 : 10;	/* 22:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_DBG_MSG_FIFO1_s;


typedef union {
	struct {
		hwint32 fifo_xfer : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_FIFO_XFER_FIFO1_s;


typedef union {
	struct {
		hwint32 fifo_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 overflow_clr : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 fifo_dbg : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 4;	/* 3:6 sw=RO hw=RO 0x0  */
		hwint32 int_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fifo_full_entry_threshold : 4;	/* 8:11 sw=RW hw=RO 0x1  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_CFG_FIFO2_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 master_id : 4;	/* 8:11 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 12:12 sw=RO hw=WO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 int_status : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_STATUS_FIFO2_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty_entry : 8;	/* 8:15 sw=RO hw=WO 0xa  */
		hwint32 fifo_full : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 fifo_afull : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty : 1;	/* 18:18 sw=RO hw=WO 0x1  */
		hwint32 fifo_aempty : 1;	/* 19:19 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 20:20 sw=RO hw=WO 0x0  */
		hwint32 underflow : 1;	/* 21:21 sw=RO hw=WO 0x0  */
		hwint32 reserved22 : 10;	/* 22:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_DBG_MSG_FIFO2_s;


typedef union {
	struct {
		hwint32 fifo_xfer : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_FIFO_XFER_FIFO2_s;


typedef union {
	struct {
		hwint32 fifo_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 overflow_clr : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 fifo_dbg : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 4;	/* 3:6 sw=RO hw=RO 0x0  */
		hwint32 int_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fifo_full_entry_threshold : 4;	/* 8:11 sw=RW hw=RO 0x1  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_CFG_FIFO3_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 master_id : 4;	/* 8:11 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 12:12 sw=RO hw=WO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 int_status : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_STATUS_FIFO3_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty_entry : 8;	/* 8:15 sw=RO hw=WO 0xa  */
		hwint32 fifo_full : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 fifo_afull : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty : 1;	/* 18:18 sw=RO hw=WO 0x1  */
		hwint32 fifo_aempty : 1;	/* 19:19 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 20:20 sw=RO hw=WO 0x0  */
		hwint32 underflow : 1;	/* 21:21 sw=RO hw=WO 0x0  */
		hwint32 reserved22 : 10;	/* 22:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_DBG_MSG_FIFO3_s;


typedef union {
	struct {
		hwint32 fifo_xfer : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_FIFO_XFER_FIFO3_s;


typedef union {
	struct {
		hwint32 fifo_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 overflow_clr : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 fifo_dbg : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 4;	/* 3:6 sw=RO hw=RO 0x0  */
		hwint32 int_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fifo_full_entry_threshold : 4;	/* 8:11 sw=RW hw=RO 0x1  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_CFG_FIFO4_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 master_id : 4;	/* 8:11 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 12:12 sw=RO hw=WO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 int_status : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_STATUS_FIFO4_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty_entry : 8;	/* 8:15 sw=RO hw=WO 0xa  */
		hwint32 fifo_full : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 fifo_afull : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty : 1;	/* 18:18 sw=RO hw=WO 0x1  */
		hwint32 fifo_aempty : 1;	/* 19:19 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 20:20 sw=RO hw=WO 0x0  */
		hwint32 underflow : 1;	/* 21:21 sw=RO hw=WO 0x0  */
		hwint32 reserved22 : 10;	/* 22:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_DBG_MSG_FIFO4_s;


typedef union {
	struct {
		hwint32 fifo_xfer : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_FIFO_XFER_FIFO4_s;


typedef union {
	struct {
		hwint32 fifo_enable : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 overflow_clr : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 fifo_dbg : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 4;	/* 3:6 sw=RO hw=RO 0x0  */
		hwint32 int_en : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fifo_full_entry_threshold : 4;	/* 8:11 sw=RW hw=RO 0x1  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_CFG_FIFO5_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 master_id : 4;	/* 8:11 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 12:12 sw=RO hw=WO 0x0  */
		hwint32 reserved13 : 3;	/* 13:15 sw=RO hw=RO 0x0  */
		hwint32 int_status : 1;	/* 16:16 sw=W1C hw=WO 0x0  */
		hwint32 reserved17 : 15;	/* 17:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_STATUS_FIFO5_s;


typedef union {
	struct {
		hwint32 fifo_full_entry : 8;	/* 0:7 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty_entry : 8;	/* 8:15 sw=RO hw=WO 0xa  */
		hwint32 fifo_full : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 fifo_afull : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 fifo_empty : 1;	/* 18:18 sw=RO hw=WO 0x1  */
		hwint32 fifo_aempty : 1;	/* 19:19 sw=RO hw=WO 0x0  */
		hwint32 overflow : 1;	/* 20:20 sw=RO hw=WO 0x0  */
		hwint32 underflow : 1;	/* 21:21 sw=RO hw=WO 0x0  */
		hwint32 reserved22 : 10;	/* 22:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_DBG_MSG_FIFO5_s;


typedef union {
	struct {
		hwint32 fifo_xfer : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} MAILBOX_FIFO_XFER_FIFO5_s;


typedef struct {
	MAILBOX_CFG_FIFO0_s  mailbox_cfg_fifo0;
	MAILBOX_STATUS_FIFO0_s  mailbox_status_fifo0;
	MAILBOX_DBG_MSG_FIFO0_s  mailbox_dbg_msg_fifo0;
	MAILBOX_FIFO_XFER_FIFO0_s  mailbox_fifo_xfer_fifo0;
	MAILBOX_CFG_FIFO1_s  mailbox_cfg_fifo1;
	MAILBOX_STATUS_FIFO1_s  mailbox_status_fifo1;
	MAILBOX_DBG_MSG_FIFO1_s  mailbox_dbg_msg_fifo1;
	MAILBOX_FIFO_XFER_FIFO1_s  mailbox_fifo_xfer_fifo1;
	MAILBOX_CFG_FIFO2_s  mailbox_cfg_fifo2;
	MAILBOX_STATUS_FIFO2_s  mailbox_status_fifo2;
	MAILBOX_DBG_MSG_FIFO2_s  mailbox_dbg_msg_fifo2;
	MAILBOX_FIFO_XFER_FIFO2_s  mailbox_fifo_xfer_fifo2;
	MAILBOX_CFG_FIFO3_s  mailbox_cfg_fifo3;
	MAILBOX_STATUS_FIFO3_s  mailbox_status_fifo3;
	MAILBOX_DBG_MSG_FIFO3_s  mailbox_dbg_msg_fifo3;
	MAILBOX_FIFO_XFER_FIFO3_s  mailbox_fifo_xfer_fifo3;
	MAILBOX_CFG_FIFO4_s  mailbox_cfg_fifo4;
	MAILBOX_STATUS_FIFO4_s  mailbox_status_fifo4;
	MAILBOX_DBG_MSG_FIFO4_s  mailbox_dbg_msg_fifo4;
	MAILBOX_FIFO_XFER_FIFO4_s  mailbox_fifo_xfer_fifo4;
	MAILBOX_CFG_FIFO5_s  mailbox_cfg_fifo5;
	MAILBOX_STATUS_FIFO5_s  mailbox_status_fifo5;
	MAILBOX_DBG_MSG_FIFO5_s  mailbox_dbg_msg_fifo5;
	MAILBOX_FIFO_XFER_FIFO5_s  mailbox_fifo_xfer_fifo5;

} MAILBOX_s;

#define MAILBOX_CFG_FIFO0_READMASK  0xfffffffd
#define MAILBOX_CFG_FIFO0_WRITEMASK  0xf87
#define MAILBOX_CFG_FIFO0_VOLATILEMASK  0x0
#define MAILBOX_CFG_FIFO0_RESETMASK  0xf87
#define MAILBOX_CFG_FIFO0_DEFAULT  0x100

#define MAILBOX_STATUS_FIFO0_READMASK  0xfffeffff
#define MAILBOX_STATUS_FIFO0_WRITEMASK  0x10000
#define MAILBOX_STATUS_FIFO0_VOLATILEMASK  0x11fff
#define MAILBOX_STATUS_FIFO0_RESETMASK  0x11fff
#define MAILBOX_STATUS_FIFO0_DEFAULT  0x0

#define MAILBOX_DBG_MSG_FIFO0_READMASK  0xffffffff
#define MAILBOX_DBG_MSG_FIFO0_WRITEMASK  0x0
#define MAILBOX_DBG_MSG_FIFO0_VOLATILEMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO0_RESETMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO0_DEFAULT  0x40a00

#define MAILBOX_FIFO_XFER_FIFO0_READMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO0_WRITEMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO0_VOLATILEMASK  0x0
#define MAILBOX_FIFO_XFER_FIFO0_RESETMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO0_DEFAULT  0x0

#define MAILBOX_CFG_FIFO1_READMASK  0xfffffffd
#define MAILBOX_CFG_FIFO1_WRITEMASK  0xf87
#define MAILBOX_CFG_FIFO1_VOLATILEMASK  0x0
#define MAILBOX_CFG_FIFO1_RESETMASK  0xf87
#define MAILBOX_CFG_FIFO1_DEFAULT  0x100

#define MAILBOX_STATUS_FIFO1_READMASK  0xfffeffff
#define MAILBOX_STATUS_FIFO1_WRITEMASK  0x10000
#define MAILBOX_STATUS_FIFO1_VOLATILEMASK  0x11fff
#define MAILBOX_STATUS_FIFO1_RESETMASK  0x11fff
#define MAILBOX_STATUS_FIFO1_DEFAULT  0x0

#define MAILBOX_DBG_MSG_FIFO1_READMASK  0xffffffff
#define MAILBOX_DBG_MSG_FIFO1_WRITEMASK  0x0
#define MAILBOX_DBG_MSG_FIFO1_VOLATILEMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO1_RESETMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO1_DEFAULT  0x40a00

#define MAILBOX_FIFO_XFER_FIFO1_READMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO1_WRITEMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO1_VOLATILEMASK  0x0
#define MAILBOX_FIFO_XFER_FIFO1_RESETMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO1_DEFAULT  0x0

#define MAILBOX_CFG_FIFO2_READMASK  0xfffffffd
#define MAILBOX_CFG_FIFO2_WRITEMASK  0xf87
#define MAILBOX_CFG_FIFO2_VOLATILEMASK  0x0
#define MAILBOX_CFG_FIFO2_RESETMASK  0xf87
#define MAILBOX_CFG_FIFO2_DEFAULT  0x100

#define MAILBOX_STATUS_FIFO2_READMASK  0xfffeffff
#define MAILBOX_STATUS_FIFO2_WRITEMASK  0x10000
#define MAILBOX_STATUS_FIFO2_VOLATILEMASK  0x11fff
#define MAILBOX_STATUS_FIFO2_RESETMASK  0x11fff
#define MAILBOX_STATUS_FIFO2_DEFAULT  0x0

#define MAILBOX_DBG_MSG_FIFO2_READMASK  0xffffffff
#define MAILBOX_DBG_MSG_FIFO2_WRITEMASK  0x0
#define MAILBOX_DBG_MSG_FIFO2_VOLATILEMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO2_RESETMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO2_DEFAULT  0x40a00

#define MAILBOX_FIFO_XFER_FIFO2_READMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO2_WRITEMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO2_VOLATILEMASK  0x0
#define MAILBOX_FIFO_XFER_FIFO2_RESETMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO2_DEFAULT  0x0

#define MAILBOX_CFG_FIFO3_READMASK  0xfffffffd
#define MAILBOX_CFG_FIFO3_WRITEMASK  0xf87
#define MAILBOX_CFG_FIFO3_VOLATILEMASK  0x0
#define MAILBOX_CFG_FIFO3_RESETMASK  0xf87
#define MAILBOX_CFG_FIFO3_DEFAULT  0x100

#define MAILBOX_STATUS_FIFO3_READMASK  0xfffeffff
#define MAILBOX_STATUS_FIFO3_WRITEMASK  0x10000
#define MAILBOX_STATUS_FIFO3_VOLATILEMASK  0x11fff
#define MAILBOX_STATUS_FIFO3_RESETMASK  0x11fff
#define MAILBOX_STATUS_FIFO3_DEFAULT  0x0

#define MAILBOX_DBG_MSG_FIFO3_READMASK  0xffffffff
#define MAILBOX_DBG_MSG_FIFO3_WRITEMASK  0x0
#define MAILBOX_DBG_MSG_FIFO3_VOLATILEMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO3_RESETMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO3_DEFAULT  0x40a00

#define MAILBOX_FIFO_XFER_FIFO3_READMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO3_WRITEMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO3_VOLATILEMASK  0x0
#define MAILBOX_FIFO_XFER_FIFO3_RESETMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO3_DEFAULT  0x0

#define MAILBOX_CFG_FIFO4_READMASK  0xfffffffd
#define MAILBOX_CFG_FIFO4_WRITEMASK  0xf87
#define MAILBOX_CFG_FIFO4_VOLATILEMASK  0x0
#define MAILBOX_CFG_FIFO4_RESETMASK  0xf87
#define MAILBOX_CFG_FIFO4_DEFAULT  0x100

#define MAILBOX_STATUS_FIFO4_READMASK  0xfffeffff
#define MAILBOX_STATUS_FIFO4_WRITEMASK  0x10000
#define MAILBOX_STATUS_FIFO4_VOLATILEMASK  0x11fff
#define MAILBOX_STATUS_FIFO4_RESETMASK  0x11fff
#define MAILBOX_STATUS_FIFO4_DEFAULT  0x0

#define MAILBOX_DBG_MSG_FIFO4_READMASK  0xffffffff
#define MAILBOX_DBG_MSG_FIFO4_WRITEMASK  0x0
#define MAILBOX_DBG_MSG_FIFO4_VOLATILEMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO4_RESETMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO4_DEFAULT  0x40a00

#define MAILBOX_FIFO_XFER_FIFO4_READMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO4_WRITEMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO4_VOLATILEMASK  0x0
#define MAILBOX_FIFO_XFER_FIFO4_RESETMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO4_DEFAULT  0x0

#define MAILBOX_CFG_FIFO5_READMASK  0xfffffffd
#define MAILBOX_CFG_FIFO5_WRITEMASK  0xf87
#define MAILBOX_CFG_FIFO5_VOLATILEMASK  0x0
#define MAILBOX_CFG_FIFO5_RESETMASK  0xf87
#define MAILBOX_CFG_FIFO5_DEFAULT  0x100

#define MAILBOX_STATUS_FIFO5_READMASK  0xfffeffff
#define MAILBOX_STATUS_FIFO5_WRITEMASK  0x10000
#define MAILBOX_STATUS_FIFO5_VOLATILEMASK  0x11fff
#define MAILBOX_STATUS_FIFO5_RESETMASK  0x11fff
#define MAILBOX_STATUS_FIFO5_DEFAULT  0x0

#define MAILBOX_DBG_MSG_FIFO5_READMASK  0xffffffff
#define MAILBOX_DBG_MSG_FIFO5_WRITEMASK  0x0
#define MAILBOX_DBG_MSG_FIFO5_VOLATILEMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO5_RESETMASK  0x3fffff
#define MAILBOX_DBG_MSG_FIFO5_DEFAULT  0x40a00

#define MAILBOX_FIFO_XFER_FIFO5_READMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO5_WRITEMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO5_VOLATILEMASK  0x0
#define MAILBOX_FIFO_XFER_FIFO5_RESETMASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO5_DEFAULT  0x0




/*block :  FLASH_MPC */
typedef union {
	struct {
		hwint32 reserved0 : 4;	/* 0:3 sw=RO hw=RO 0x0  */
		hwint32 cfg_sec_resp : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 gate_req : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 gate_ack : 1;	/* 7:7 sw=RO hw=WO 0x0  */
		hwint32 blk_idx_autoinc_en : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 22;	/* 9:30 sw=RO hw=RO 0x0  */
		hwint32 sec_cfg_lock : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_CTRL_s;


typedef union {
	struct {
		hwint32 blk_max : 32;	/* 0:31 sw=RO hw=WO 0x1  */
	} bf;
	hwint32 dw;
} FLASHMPC_BLK_MAX_s;


typedef union {
	struct {
		hwint32 blk_size : 4;	/* 0:3 sw=RO hw=WO 0xd  */
		hwint32 reserved4 : 27;	/* 4:30 sw=RO hw=RO 0x0  */
		hwint32 lut_init_done : 1;	/* 31:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_BLK_CFG_s;


typedef union {
	struct {
		hwint32 blk_idx : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_BLK_IDX_s;


typedef union {
	struct {
		hwint32 blk_lut : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_BLK_LUT_s;


typedef union {
	struct {
		hwint32 int_stat : 1;	/* 0:0 sw=RO hw=WO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_INT_STAT_s;


typedef union {
	struct {
		hwint32 int_clear : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_INT_CLEAR_s;


typedef union {
	struct {
		hwint32 int_en : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_INT_EN_s;


typedef union {
	struct {
		hwint32 int_info1 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_INT_INFO1_s;


typedef union {
	struct {
		hwint32 sec_info_hmaster : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 sec_info_hnonsec : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 sec_info_cfg_ns : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_INT_INFO2_s;


typedef union {
	struct {
		hwint32 int_set : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_INT_SET_s;


typedef union {
	struct {
		hwint32 jep106_c_code : 4;	/* 0:3 sw=RO hw=WO 0x4  */
		hwint32 block_count : 4;	/* 4:7 sw=RO hw=WO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID4_s;


typedef union {
	struct {
		hwint32 pid5 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID5_s;


typedef union {
	struct {
		hwint32 pid6 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID6_s;


typedef union {
	struct {
		hwint32 pid7 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID7_s;


typedef union {
	struct {
		hwint32 pid0 : 32;	/* 0:31 sw=RO hw=WO 0x60  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID0_s;


typedef union {
	struct {
		hwint32 part_num : 4;	/* 0:3 sw=RO hw=WO 0x8  */
		hwint32 jep106_id_3_0 : 4;	/* 4:7 sw=RO hw=WO 0xb  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID1_s;


typedef union {
	struct {
		hwint32 jep106_id_6_4 : 3;	/* 0:2 sw=RO hw=WO 0x3  */
		hwint32 jedec_used : 1;	/* 3:3 sw=RO hw=WO 0x1  */
		hwint32 revision : 4;	/* 4:7 sw=RO hw=WO 0x1  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID2_s;


typedef union {
	struct {
		hwint32 customer_num : 4;	/* 0:3 sw=RO hw=WO 0x0  */
		hwint32 eco_revision : 4;	/* 4:7 sw=RO hw=WO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FLASHMPC_PID3_s;


typedef union {
	struct {
		hwint32 cid0 : 32;	/* 0:31 sw=RO hw=WO 0xd  */
	} bf;
	hwint32 dw;
} FLASHMPC_CID0_s;


typedef union {
	struct {
		hwint32 cid1 : 32;	/* 0:31 sw=RO hw=WO 0xf0  */
	} bf;
	hwint32 dw;
} FLASHMPC_CID1_s;


typedef union {
	struct {
		hwint32 cid2 : 32;	/* 0:31 sw=RO hw=WO 0x5  */
	} bf;
	hwint32 dw;
} FLASHMPC_CID2_s;


typedef union {
	struct {
		hwint32 cid3 : 32;	/* 0:31 sw=RO hw=WO 0xb1  */
	} bf;
	hwint32 dw;
} FLASHMPC_CID3_s;


typedef struct {
	FLASHMPC_CTRL_s  flashmpc_ctrl;
	hwint8 filler0[0xc];
	FLASHMPC_BLK_MAX_s  flashmpc_blk_max;
	FLASHMPC_BLK_CFG_s  flashmpc_blk_cfg;
	FLASHMPC_BLK_IDX_s  flashmpc_blk_idx;
	FLASHMPC_BLK_LUT_s  flashmpc_blk_lut;
	FLASHMPC_INT_STAT_s  flashmpc_int_stat;
	FLASHMPC_INT_CLEAR_s  flashmpc_int_clear;
	FLASHMPC_INT_EN_s  flashmpc_int_en;
	FLASHMPC_INT_INFO1_s  flashmpc_int_info1;
	FLASHMPC_INT_INFO2_s  flashmpc_int_info2;
	FLASHMPC_INT_SET_s  flashmpc_int_set;
	hwint8 filler1[0xf98];
	FLASHMPC_PID4_s  flashmpc_pid4;
	FLASHMPC_PID5_s  flashmpc_pid5;
	FLASHMPC_PID6_s  flashmpc_pid6;
	FLASHMPC_PID7_s  flashmpc_pid7;
	FLASHMPC_PID0_s  flashmpc_pid0;
	FLASHMPC_PID1_s  flashmpc_pid1;
	FLASHMPC_PID2_s  flashmpc_pid2;
	FLASHMPC_PID3_s  flashmpc_pid3;
	FLASHMPC_CID0_s  flashmpc_cid0;
	FLASHMPC_CID1_s  flashmpc_cid1;
	FLASHMPC_CID2_s  flashmpc_cid2;
	FLASHMPC_CID3_s  flashmpc_cid3;

} FLASH_MPC_s;

#define FLASHMPC_CTRL_READMASK  0xffffffff
#define FLASHMPC_CTRL_WRITEMASK  0x80000150
#define FLASHMPC_CTRL_VOLATILEMASK  0x80
#define FLASHMPC_CTRL_RESETMASK  0x800001d0
#define FLASHMPC_CTRL_DEFAULT  0x100

#define FLASHMPC_BLK_MAX_READMASK  0xffffffff
#define FLASHMPC_BLK_MAX_WRITEMASK  0x0
#define FLASHMPC_BLK_MAX_VOLATILEMASK  0xffffffff
#define FLASHMPC_BLK_MAX_RESETMASK  0xffffffff
#define FLASHMPC_BLK_MAX_DEFAULT  0x1

#define FLASHMPC_BLK_CFG_READMASK  0xffffffff
#define FLASHMPC_BLK_CFG_WRITEMASK  0x0
#define FLASHMPC_BLK_CFG_VOLATILEMASK  0x8000000f
#define FLASHMPC_BLK_CFG_RESETMASK  0x8000000f
#define FLASHMPC_BLK_CFG_DEFAULT  0xd

#define FLASHMPC_BLK_IDX_READMASK  0xffffffff
#define FLASHMPC_BLK_IDX_WRITEMASK  0x1
#define FLASHMPC_BLK_IDX_VOLATILEMASK  0x0
#define FLASHMPC_BLK_IDX_RESETMASK  0x1
#define FLASHMPC_BLK_IDX_DEFAULT  0x0

#define FLASHMPC_BLK_LUT_READMASK  0xffffffff
#define FLASHMPC_BLK_LUT_WRITEMASK  0xffffffff
#define FLASHMPC_BLK_LUT_VOLATILEMASK  0x0
#define FLASHMPC_BLK_LUT_RESETMASK  0xffffffff
#define FLASHMPC_BLK_LUT_DEFAULT  0x0

#define FLASHMPC_INT_STAT_READMASK  0xffffffff
#define FLASHMPC_INT_STAT_WRITEMASK  0x0
#define FLASHMPC_INT_STAT_VOLATILEMASK  0x1
#define FLASHMPC_INT_STAT_RESETMASK  0x1
#define FLASHMPC_INT_STAT_DEFAULT  0x0

#define FLASHMPC_INT_CLEAR_READMASK  0xfffffffe
#define FLASHMPC_INT_CLEAR_WRITEMASK  0x1
#define FLASHMPC_INT_CLEAR_VOLATILEMASK  0x0
#define FLASHMPC_INT_CLEAR_RESETMASK  0x1
#define FLASHMPC_INT_CLEAR_DEFAULT  0x0

#define FLASHMPC_INT_EN_READMASK  0xffffffff
#define FLASHMPC_INT_EN_WRITEMASK  0x1
#define FLASHMPC_INT_EN_VOLATILEMASK  0x0
#define FLASHMPC_INT_EN_RESETMASK  0x1
#define FLASHMPC_INT_EN_DEFAULT  0x1

#define FLASHMPC_INT_INFO1_READMASK  0xffffffff
#define FLASHMPC_INT_INFO1_WRITEMASK  0x0
#define FLASHMPC_INT_INFO1_VOLATILEMASK  0xffffffff
#define FLASHMPC_INT_INFO1_RESETMASK  0xffffffff
#define FLASHMPC_INT_INFO1_DEFAULT  0x0

#define FLASHMPC_INT_INFO2_READMASK  0xffffffff
#define FLASHMPC_INT_INFO2_WRITEMASK  0x0
#define FLASHMPC_INT_INFO2_VOLATILEMASK  0x3ffff
#define FLASHMPC_INT_INFO2_RESETMASK  0x3ffff
#define FLASHMPC_INT_INFO2_DEFAULT  0x0

#define FLASHMPC_INT_SET_READMASK  0xfffffffe
#define FLASHMPC_INT_SET_WRITEMASK  0x1
#define FLASHMPC_INT_SET_VOLATILEMASK  0x0
#define FLASHMPC_INT_SET_RESETMASK  0x1
#define FLASHMPC_INT_SET_DEFAULT  0x0

#define FLASHMPC_PID4_READMASK  0xffffffff
#define FLASHMPC_PID4_WRITEMASK  0x0
#define FLASHMPC_PID4_VOLATILEMASK  0xff
#define FLASHMPC_PID4_RESETMASK  0xff
#define FLASHMPC_PID4_DEFAULT  0x4

#define FLASHMPC_PID5_READMASK  0xffffffff
#define FLASHMPC_PID5_WRITEMASK  0x0
#define FLASHMPC_PID5_VOLATILEMASK  0xffffffff
#define FLASHMPC_PID5_RESETMASK  0xffffffff
#define FLASHMPC_PID5_DEFAULT  0x0

#define FLASHMPC_PID6_READMASK  0xffffffff
#define FLASHMPC_PID6_WRITEMASK  0x0
#define FLASHMPC_PID6_VOLATILEMASK  0xffffffff
#define FLASHMPC_PID6_RESETMASK  0xffffffff
#define FLASHMPC_PID6_DEFAULT  0x0

#define FLASHMPC_PID7_READMASK  0xffffffff
#define FLASHMPC_PID7_WRITEMASK  0x0
#define FLASHMPC_PID7_VOLATILEMASK  0xffffffff
#define FLASHMPC_PID7_RESETMASK  0xffffffff
#define FLASHMPC_PID7_DEFAULT  0x0

#define FLASHMPC_PID0_READMASK  0xffffffff
#define FLASHMPC_PID0_WRITEMASK  0x0
#define FLASHMPC_PID0_VOLATILEMASK  0xffffffff
#define FLASHMPC_PID0_RESETMASK  0xffffffff
#define FLASHMPC_PID0_DEFAULT  0x60

#define FLASHMPC_PID1_READMASK  0xffffffff
#define FLASHMPC_PID1_WRITEMASK  0x0
#define FLASHMPC_PID1_VOLATILEMASK  0xff
#define FLASHMPC_PID1_RESETMASK  0xff
#define FLASHMPC_PID1_DEFAULT  0xb8

#define FLASHMPC_PID2_READMASK  0xffffffff
#define FLASHMPC_PID2_WRITEMASK  0x0
#define FLASHMPC_PID2_VOLATILEMASK  0xff
#define FLASHMPC_PID2_RESETMASK  0xff
#define FLASHMPC_PID2_DEFAULT  0x1b

#define FLASHMPC_PID3_READMASK  0xffffffff
#define FLASHMPC_PID3_WRITEMASK  0x0
#define FLASHMPC_PID3_VOLATILEMASK  0xff
#define FLASHMPC_PID3_RESETMASK  0xff
#define FLASHMPC_PID3_DEFAULT  0x0

#define FLASHMPC_CID0_READMASK  0xffffffff
#define FLASHMPC_CID0_WRITEMASK  0x0
#define FLASHMPC_CID0_VOLATILEMASK  0xffffffff
#define FLASHMPC_CID0_RESETMASK  0xffffffff
#define FLASHMPC_CID0_DEFAULT  0xd

#define FLASHMPC_CID1_READMASK  0xffffffff
#define FLASHMPC_CID1_WRITEMASK  0x0
#define FLASHMPC_CID1_VOLATILEMASK  0xffffffff
#define FLASHMPC_CID1_RESETMASK  0xffffffff
#define FLASHMPC_CID1_DEFAULT  0xf0

#define FLASHMPC_CID2_READMASK  0xffffffff
#define FLASHMPC_CID2_WRITEMASK  0x0
#define FLASHMPC_CID2_VOLATILEMASK  0xffffffff
#define FLASHMPC_CID2_RESETMASK  0xffffffff
#define FLASHMPC_CID2_DEFAULT  0x5

#define FLASHMPC_CID3_READMASK  0xffffffff
#define FLASHMPC_CID3_WRITEMASK  0x0
#define FLASHMPC_CID3_VOLATILEMASK  0xffffffff
#define FLASHMPC_CID3_RESETMASK  0xffffffff
#define FLASHMPC_CID3_DEFAULT  0xb1




/*block :  ROM_MPC */
typedef union {
	struct {
		hwint32 reserved0 : 4;	/* 0:3 sw=RO hw=RO 0x0  */
		hwint32 cfg_sec_resp : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 gate_req : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 gate_ack : 1;	/* 7:7 sw=RO hw=WO 0x0  */
		hwint32 blk_idx_autoinc_en : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 22;	/* 9:30 sw=RO hw=RO 0x0  */
		hwint32 sec_cfg_lock : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_CTRL_s;


typedef union {
	struct {
		hwint32 blk_max : 32;	/* 0:31 sw=RO hw=WO 0x1  */
	} bf;
	hwint32 dw;
} ROMMPC_BLK_MAX_s;


typedef union {
	struct {
		hwint32 blk_size : 4;	/* 0:3 sw=RO hw=WO 0x3  */
		hwint32 reserved4 : 27;	/* 4:30 sw=RO hw=RO 0x0  */
		hwint32 lut_init_done : 1;	/* 31:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_BLK_CFG_s;


typedef union {
	struct {
		hwint32 blk_idx : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_BLK_IDX_s;


typedef union {
	struct {
		hwint32 blk_lut : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_BLK_LUT_s;


typedef union {
	struct {
		hwint32 int_stat : 1;	/* 0:0 sw=RO hw=WO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_INT_STAT_s;


typedef union {
	struct {
		hwint32 int_clear : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_INT_CLEAR_s;


typedef union {
	struct {
		hwint32 int_en : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_INT_EN_s;


typedef union {
	struct {
		hwint32 int_info1 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_INT_INFO1_s;


typedef union {
	struct {
		hwint32 sec_info_hmaster : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 sec_info_hnonsec : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 sec_info_cfg_ns : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_INT_INFO2_s;


typedef union {
	struct {
		hwint32 int_set : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_INT_SET_s;


typedef union {
	struct {
		hwint32 jep106_c_code : 4;	/* 0:3 sw=RO hw=WO 0x4  */
		hwint32 block_count : 4;	/* 4:7 sw=RO hw=WO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_PID4_s;


typedef union {
	struct {
		hwint32 pid5 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_PID5_s;


typedef union {
	struct {
		hwint32 pid6 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_PID6_s;


typedef union {
	struct {
		hwint32 pid7 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_PID7_s;


typedef union {
	struct {
		hwint32 pid0 : 32;	/* 0:31 sw=RO hw=WO 0x60  */
	} bf;
	hwint32 dw;
} ROMMPC_PID0_s;


typedef union {
	struct {
		hwint32 part_num : 4;	/* 0:3 sw=RO hw=WO 0x8  */
		hwint32 jep106_id_3_0 : 4;	/* 4:7 sw=RO hw=WO 0xb  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_PID1_s;


typedef union {
	struct {
		hwint32 jep106_id_6_4 : 3;	/* 0:2 sw=RO hw=WO 0x3  */
		hwint32 jedec_used : 1;	/* 3:3 sw=RO hw=WO 0x1  */
		hwint32 revision : 4;	/* 4:7 sw=RO hw=WO 0x1  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_PID2_s;


typedef union {
	struct {
		hwint32 customer_num : 4;	/* 0:3 sw=RO hw=WO 0x0  */
		hwint32 eco_revision : 4;	/* 4:7 sw=RO hw=WO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ROMMPC_PID3_s;


typedef union {
	struct {
		hwint32 cid0 : 32;	/* 0:31 sw=RO hw=WO 0xd  */
	} bf;
	hwint32 dw;
} ROMMPC_CID0_s;


typedef union {
	struct {
		hwint32 cid1 : 32;	/* 0:31 sw=RO hw=WO 0xf0  */
	} bf;
	hwint32 dw;
} ROMMPC_CID1_s;


typedef union {
	struct {
		hwint32 cid2 : 32;	/* 0:31 sw=RO hw=WO 0x5  */
	} bf;
	hwint32 dw;
} ROMMPC_CID2_s;


typedef union {
	struct {
		hwint32 cid3 : 32;	/* 0:31 sw=RO hw=WO 0xb1  */
	} bf;
	hwint32 dw;
} ROMMPC_CID3_s;


typedef struct {
	ROMMPC_CTRL_s  rommpc_ctrl;
	hwint8 filler0[0xc];
	ROMMPC_BLK_MAX_s  rommpc_blk_max;
	ROMMPC_BLK_CFG_s  rommpc_blk_cfg;
	ROMMPC_BLK_IDX_s  rommpc_blk_idx;
	ROMMPC_BLK_LUT_s  rommpc_blk_lut;
	ROMMPC_INT_STAT_s  rommpc_int_stat;
	ROMMPC_INT_CLEAR_s  rommpc_int_clear;
	ROMMPC_INT_EN_s  rommpc_int_en;
	ROMMPC_INT_INFO1_s  rommpc_int_info1;
	ROMMPC_INT_INFO2_s  rommpc_int_info2;
	ROMMPC_INT_SET_s  rommpc_int_set;
	hwint8 filler1[0xf98];
	ROMMPC_PID4_s  rommpc_pid4;
	ROMMPC_PID5_s  rommpc_pid5;
	ROMMPC_PID6_s  rommpc_pid6;
	ROMMPC_PID7_s  rommpc_pid7;
	ROMMPC_PID0_s  rommpc_pid0;
	ROMMPC_PID1_s  rommpc_pid1;
	ROMMPC_PID2_s  rommpc_pid2;
	ROMMPC_PID3_s  rommpc_pid3;
	ROMMPC_CID0_s  rommpc_cid0;
	ROMMPC_CID1_s  rommpc_cid1;
	ROMMPC_CID2_s  rommpc_cid2;
	ROMMPC_CID3_s  rommpc_cid3;

} ROM_MPC_s;

#define ROMMPC_CTRL_READMASK  0xffffffff
#define ROMMPC_CTRL_WRITEMASK  0x80000150
#define ROMMPC_CTRL_VOLATILEMASK  0x80
#define ROMMPC_CTRL_RESETMASK  0x800001d0
#define ROMMPC_CTRL_DEFAULT  0x100

#define ROMMPC_BLK_MAX_READMASK  0xffffffff
#define ROMMPC_BLK_MAX_WRITEMASK  0x0
#define ROMMPC_BLK_MAX_VOLATILEMASK  0xffffffff
#define ROMMPC_BLK_MAX_RESETMASK  0xffffffff
#define ROMMPC_BLK_MAX_DEFAULT  0x1

#define ROMMPC_BLK_CFG_READMASK  0xffffffff
#define ROMMPC_BLK_CFG_WRITEMASK  0x0
#define ROMMPC_BLK_CFG_VOLATILEMASK  0x8000000f
#define ROMMPC_BLK_CFG_RESETMASK  0x8000000f
#define ROMMPC_BLK_CFG_DEFAULT  0x3

#define ROMMPC_BLK_IDX_READMASK  0xffffffff
#define ROMMPC_BLK_IDX_WRITEMASK  0x1
#define ROMMPC_BLK_IDX_VOLATILEMASK  0x0
#define ROMMPC_BLK_IDX_RESETMASK  0x1
#define ROMMPC_BLK_IDX_DEFAULT  0x0

#define ROMMPC_BLK_LUT_READMASK  0xffffffff
#define ROMMPC_BLK_LUT_WRITEMASK  0xffffffff
#define ROMMPC_BLK_LUT_VOLATILEMASK  0x0
#define ROMMPC_BLK_LUT_RESETMASK  0xffffffff
#define ROMMPC_BLK_LUT_DEFAULT  0x0

#define ROMMPC_INT_STAT_READMASK  0xffffffff
#define ROMMPC_INT_STAT_WRITEMASK  0x0
#define ROMMPC_INT_STAT_VOLATILEMASK  0x1
#define ROMMPC_INT_STAT_RESETMASK  0x1
#define ROMMPC_INT_STAT_DEFAULT  0x0

#define ROMMPC_INT_CLEAR_READMASK  0xfffffffe
#define ROMMPC_INT_CLEAR_WRITEMASK  0x1
#define ROMMPC_INT_CLEAR_VOLATILEMASK  0x0
#define ROMMPC_INT_CLEAR_RESETMASK  0x1
#define ROMMPC_INT_CLEAR_DEFAULT  0x0

#define ROMMPC_INT_EN_READMASK  0xffffffff
#define ROMMPC_INT_EN_WRITEMASK  0x1
#define ROMMPC_INT_EN_VOLATILEMASK  0x0
#define ROMMPC_INT_EN_RESETMASK  0x1
#define ROMMPC_INT_EN_DEFAULT  0x1

#define ROMMPC_INT_INFO1_READMASK  0xffffffff
#define ROMMPC_INT_INFO1_WRITEMASK  0x0
#define ROMMPC_INT_INFO1_VOLATILEMASK  0xffffffff
#define ROMMPC_INT_INFO1_RESETMASK  0xffffffff
#define ROMMPC_INT_INFO1_DEFAULT  0x0

#define ROMMPC_INT_INFO2_READMASK  0xffffffff
#define ROMMPC_INT_INFO2_WRITEMASK  0x0
#define ROMMPC_INT_INFO2_VOLATILEMASK  0x3ffff
#define ROMMPC_INT_INFO2_RESETMASK  0x3ffff
#define ROMMPC_INT_INFO2_DEFAULT  0x0

#define ROMMPC_INT_SET_READMASK  0xfffffffe
#define ROMMPC_INT_SET_WRITEMASK  0x1
#define ROMMPC_INT_SET_VOLATILEMASK  0x0
#define ROMMPC_INT_SET_RESETMASK  0x1
#define ROMMPC_INT_SET_DEFAULT  0x0

#define ROMMPC_PID4_READMASK  0xffffffff
#define ROMMPC_PID4_WRITEMASK  0x0
#define ROMMPC_PID4_VOLATILEMASK  0xff
#define ROMMPC_PID4_RESETMASK  0xff
#define ROMMPC_PID4_DEFAULT  0x4

#define ROMMPC_PID5_READMASK  0xffffffff
#define ROMMPC_PID5_WRITEMASK  0x0
#define ROMMPC_PID5_VOLATILEMASK  0xffffffff
#define ROMMPC_PID5_RESETMASK  0xffffffff
#define ROMMPC_PID5_DEFAULT  0x0

#define ROMMPC_PID6_READMASK  0xffffffff
#define ROMMPC_PID6_WRITEMASK  0x0
#define ROMMPC_PID6_VOLATILEMASK  0xffffffff
#define ROMMPC_PID6_RESETMASK  0xffffffff
#define ROMMPC_PID6_DEFAULT  0x0

#define ROMMPC_PID7_READMASK  0xffffffff
#define ROMMPC_PID7_WRITEMASK  0x0
#define ROMMPC_PID7_VOLATILEMASK  0xffffffff
#define ROMMPC_PID7_RESETMASK  0xffffffff
#define ROMMPC_PID7_DEFAULT  0x0

#define ROMMPC_PID0_READMASK  0xffffffff
#define ROMMPC_PID0_WRITEMASK  0x0
#define ROMMPC_PID0_VOLATILEMASK  0xffffffff
#define ROMMPC_PID0_RESETMASK  0xffffffff
#define ROMMPC_PID0_DEFAULT  0x60

#define ROMMPC_PID1_READMASK  0xffffffff
#define ROMMPC_PID1_WRITEMASK  0x0
#define ROMMPC_PID1_VOLATILEMASK  0xff
#define ROMMPC_PID1_RESETMASK  0xff
#define ROMMPC_PID1_DEFAULT  0xb8

#define ROMMPC_PID2_READMASK  0xffffffff
#define ROMMPC_PID2_WRITEMASK  0x0
#define ROMMPC_PID2_VOLATILEMASK  0xff
#define ROMMPC_PID2_RESETMASK  0xff
#define ROMMPC_PID2_DEFAULT  0x1b

#define ROMMPC_PID3_READMASK  0xffffffff
#define ROMMPC_PID3_WRITEMASK  0x0
#define ROMMPC_PID3_VOLATILEMASK  0xff
#define ROMMPC_PID3_RESETMASK  0xff
#define ROMMPC_PID3_DEFAULT  0x0

#define ROMMPC_CID0_READMASK  0xffffffff
#define ROMMPC_CID0_WRITEMASK  0x0
#define ROMMPC_CID0_VOLATILEMASK  0xffffffff
#define ROMMPC_CID0_RESETMASK  0xffffffff
#define ROMMPC_CID0_DEFAULT  0xd

#define ROMMPC_CID1_READMASK  0xffffffff
#define ROMMPC_CID1_WRITEMASK  0x0
#define ROMMPC_CID1_VOLATILEMASK  0xffffffff
#define ROMMPC_CID1_RESETMASK  0xffffffff
#define ROMMPC_CID1_DEFAULT  0xf0

#define ROMMPC_CID2_READMASK  0xffffffff
#define ROMMPC_CID2_WRITEMASK  0x0
#define ROMMPC_CID2_VOLATILEMASK  0xffffffff
#define ROMMPC_CID2_RESETMASK  0xffffffff
#define ROMMPC_CID2_DEFAULT  0x5

#define ROMMPC_CID3_READMASK  0xffffffff
#define ROMMPC_CID3_WRITEMASK  0x0
#define ROMMPC_CID3_VOLATILEMASK  0xffffffff
#define ROMMPC_CID3_RESETMASK  0xffffffff
#define ROMMPC_CID3_DEFAULT  0xb1




/*block :  DSP_MEM_MPC */
typedef union {
	struct {
		hwint32 reserved0 : 4;	/* 0:3 sw=RO hw=RO 0x0  */
		hwint32 cfg_sec_resp : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 reserved5 : 1;	/* 5:5 sw=RO hw=RO 0x0  */
		hwint32 gate_req : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 gate_ack : 1;	/* 7:7 sw=RO hw=WO 0x0  */
		hwint32 blk_idx_autoinc_en : 1;	/* 8:8 sw=RW hw=RO 0x1  */
		hwint32 reserved9 : 22;	/* 9:30 sw=RO hw=RO 0x0  */
		hwint32 sec_cfg_lock : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_CTRL_s;


typedef union {
	struct {
		hwint32 blk_max : 32;	/* 0:31 sw=RO hw=WO 0x7  */
	} bf;
	hwint32 dw;
} DSPMPC_BLK_MAX_s;


typedef union {
	struct {
		hwint32 blk_size : 4;	/* 0:3 sw=RO hw=WO 0xb  */
		hwint32 reserved4 : 27;	/* 4:30 sw=RO hw=RO 0x0  */
		hwint32 lut_init_done : 1;	/* 31:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_BLK_CFG_s;


typedef union {
	struct {
		hwint32 blk_idx : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_BLK_IDX_s;


typedef union {
	struct {
		hwint32 blk_lut : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_BLK_LUT_s;


typedef union {
	struct {
		hwint32 int_stat : 1;	/* 0:0 sw=RO hw=WO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_INT_STAT_s;


typedef union {
	struct {
		hwint32 int_clear : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_INT_CLEAR_s;


typedef union {
	struct {
		hwint32 int_en : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_INT_EN_s;


typedef union {
	struct {
		hwint32 int_info1 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_INT_INFO1_s;


typedef union {
	struct {
		hwint32 sec_info_hmaster : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 sec_info_hnonsec : 1;	/* 16:16 sw=RO hw=WO 0x0  */
		hwint32 sec_info_cfg_ns : 1;	/* 17:17 sw=RO hw=WO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_INT_INFO2_s;


typedef union {
	struct {
		hwint32 int_set : 1;	/* 0:0 sw=WO hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_INT_SET_s;


typedef union {
	struct {
		hwint32 jep106_c_code : 4;	/* 0:3 sw=RO hw=WO 0x4  */
		hwint32 block_count : 4;	/* 4:7 sw=RO hw=WO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_PID4_s;


typedef union {
	struct {
		hwint32 pid5 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_PID5_s;


typedef union {
	struct {
		hwint32 pid6 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_PID6_s;


typedef union {
	struct {
		hwint32 pid7 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_PID7_s;


typedef union {
	struct {
		hwint32 pid0 : 32;	/* 0:31 sw=RO hw=WO 0x60  */
	} bf;
	hwint32 dw;
} DSPMPC_PID0_s;


typedef union {
	struct {
		hwint32 part_num : 4;	/* 0:3 sw=RO hw=WO 0x8  */
		hwint32 jep106_id_3_0 : 4;	/* 4:7 sw=RO hw=WO 0xb  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_PID1_s;


typedef union {
	struct {
		hwint32 jep106_id_6_4 : 3;	/* 0:2 sw=RO hw=WO 0x3  */
		hwint32 jedec_used : 1;	/* 3:3 sw=RO hw=WO 0x1  */
		hwint32 revision : 4;	/* 4:7 sw=RO hw=WO 0x1  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_PID2_s;


typedef union {
	struct {
		hwint32 customer_num : 4;	/* 0:3 sw=RO hw=WO 0x0  */
		hwint32 eco_revision : 4;	/* 4:7 sw=RO hw=WO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSPMPC_PID3_s;


typedef union {
	struct {
		hwint32 cid0 : 32;	/* 0:31 sw=RO hw=WO 0xd  */
	} bf;
	hwint32 dw;
} DSPMPC_CID0_s;


typedef union {
	struct {
		hwint32 cid1 : 32;	/* 0:31 sw=RO hw=WO 0xf0  */
	} bf;
	hwint32 dw;
} DSPMPC_CID1_s;


typedef union {
	struct {
		hwint32 cid2 : 32;	/* 0:31 sw=RO hw=WO 0x5  */
	} bf;
	hwint32 dw;
} DSPMPC_CID2_s;


typedef union {
	struct {
		hwint32 cid3 : 32;	/* 0:31 sw=RO hw=WO 0xb1  */
	} bf;
	hwint32 dw;
} DSPMPC_CID3_s;


typedef struct {
	DSPMPC_CTRL_s  dspmpc_ctrl;
	hwint8 filler0[0xc];
	DSPMPC_BLK_MAX_s  dspmpc_blk_max;
	DSPMPC_BLK_CFG_s  dspmpc_blk_cfg;
	DSPMPC_BLK_IDX_s  dspmpc_blk_idx;
	DSPMPC_BLK_LUT_s  dspmpc_blk_lut;
	DSPMPC_INT_STAT_s  dspmpc_int_stat;
	DSPMPC_INT_CLEAR_s  dspmpc_int_clear;
	DSPMPC_INT_EN_s  dspmpc_int_en;
	DSPMPC_INT_INFO1_s  dspmpc_int_info1;
	DSPMPC_INT_INFO2_s  dspmpc_int_info2;
	DSPMPC_INT_SET_s  dspmpc_int_set;
	hwint8 filler1[0xf98];
	DSPMPC_PID4_s  dspmpc_pid4;
	DSPMPC_PID5_s  dspmpc_pid5;
	DSPMPC_PID6_s  dspmpc_pid6;
	DSPMPC_PID7_s  dspmpc_pid7;
	DSPMPC_PID0_s  dspmpc_pid0;
	DSPMPC_PID1_s  dspmpc_pid1;
	DSPMPC_PID2_s  dspmpc_pid2;
	DSPMPC_PID3_s  dspmpc_pid3;
	DSPMPC_CID0_s  dspmpc_cid0;
	DSPMPC_CID1_s  dspmpc_cid1;
	DSPMPC_CID2_s  dspmpc_cid2;
	DSPMPC_CID3_s  dspmpc_cid3;

} DSP_MEM_MPC_s;

#define DSPMPC_CTRL_READMASK  0xffffffff
#define DSPMPC_CTRL_WRITEMASK  0x80000150
#define DSPMPC_CTRL_VOLATILEMASK  0x80
#define DSPMPC_CTRL_RESETMASK  0x800001d0
#define DSPMPC_CTRL_DEFAULT  0x100

#define DSPMPC_BLK_MAX_READMASK  0xffffffff
#define DSPMPC_BLK_MAX_WRITEMASK  0x0
#define DSPMPC_BLK_MAX_VOLATILEMASK  0xffffffff
#define DSPMPC_BLK_MAX_RESETMASK  0xffffffff
#define DSPMPC_BLK_MAX_DEFAULT  0x7

#define DSPMPC_BLK_CFG_READMASK  0xffffffff
#define DSPMPC_BLK_CFG_WRITEMASK  0x0
#define DSPMPC_BLK_CFG_VOLATILEMASK  0x8000000f
#define DSPMPC_BLK_CFG_RESETMASK  0x8000000f
#define DSPMPC_BLK_CFG_DEFAULT  0xb

#define DSPMPC_BLK_IDX_READMASK  0xffffffff
#define DSPMPC_BLK_IDX_WRITEMASK  0x7
#define DSPMPC_BLK_IDX_VOLATILEMASK  0x0
#define DSPMPC_BLK_IDX_RESETMASK  0x7
#define DSPMPC_BLK_IDX_DEFAULT  0x0

#define DSPMPC_BLK_LUT_READMASK  0xffffffff
#define DSPMPC_BLK_LUT_WRITEMASK  0xffffffff
#define DSPMPC_BLK_LUT_VOLATILEMASK  0x0
#define DSPMPC_BLK_LUT_RESETMASK  0xffffffff
#define DSPMPC_BLK_LUT_DEFAULT  0x0

#define DSPMPC_INT_STAT_READMASK  0xffffffff
#define DSPMPC_INT_STAT_WRITEMASK  0x0
#define DSPMPC_INT_STAT_VOLATILEMASK  0x1
#define DSPMPC_INT_STAT_RESETMASK  0x1
#define DSPMPC_INT_STAT_DEFAULT  0x0

#define DSPMPC_INT_CLEAR_READMASK  0xfffffffe
#define DSPMPC_INT_CLEAR_WRITEMASK  0x1
#define DSPMPC_INT_CLEAR_VOLATILEMASK  0x0
#define DSPMPC_INT_CLEAR_RESETMASK  0x1
#define DSPMPC_INT_CLEAR_DEFAULT  0x0

#define DSPMPC_INT_EN_READMASK  0xffffffff
#define DSPMPC_INT_EN_WRITEMASK  0x1
#define DSPMPC_INT_EN_VOLATILEMASK  0x0
#define DSPMPC_INT_EN_RESETMASK  0x1
#define DSPMPC_INT_EN_DEFAULT  0x1

#define DSPMPC_INT_INFO1_READMASK  0xffffffff
#define DSPMPC_INT_INFO1_WRITEMASK  0x0
#define DSPMPC_INT_INFO1_VOLATILEMASK  0xffffffff
#define DSPMPC_INT_INFO1_RESETMASK  0xffffffff
#define DSPMPC_INT_INFO1_DEFAULT  0x0

#define DSPMPC_INT_INFO2_READMASK  0xffffffff
#define DSPMPC_INT_INFO2_WRITEMASK  0x0
#define DSPMPC_INT_INFO2_VOLATILEMASK  0x3ffff
#define DSPMPC_INT_INFO2_RESETMASK  0x3ffff
#define DSPMPC_INT_INFO2_DEFAULT  0x0

#define DSPMPC_INT_SET_READMASK  0xfffffffe
#define DSPMPC_INT_SET_WRITEMASK  0x1
#define DSPMPC_INT_SET_VOLATILEMASK  0x0
#define DSPMPC_INT_SET_RESETMASK  0x1
#define DSPMPC_INT_SET_DEFAULT  0x0

#define DSPMPC_PID4_READMASK  0xffffffff
#define DSPMPC_PID4_WRITEMASK  0x0
#define DSPMPC_PID4_VOLATILEMASK  0xff
#define DSPMPC_PID4_RESETMASK  0xff
#define DSPMPC_PID4_DEFAULT  0x4

#define DSPMPC_PID5_READMASK  0xffffffff
#define DSPMPC_PID5_WRITEMASK  0x0
#define DSPMPC_PID5_VOLATILEMASK  0xffffffff
#define DSPMPC_PID5_RESETMASK  0xffffffff
#define DSPMPC_PID5_DEFAULT  0x0

#define DSPMPC_PID6_READMASK  0xffffffff
#define DSPMPC_PID6_WRITEMASK  0x0
#define DSPMPC_PID6_VOLATILEMASK  0xffffffff
#define DSPMPC_PID6_RESETMASK  0xffffffff
#define DSPMPC_PID6_DEFAULT  0x0

#define DSPMPC_PID7_READMASK  0xffffffff
#define DSPMPC_PID7_WRITEMASK  0x0
#define DSPMPC_PID7_VOLATILEMASK  0xffffffff
#define DSPMPC_PID7_RESETMASK  0xffffffff
#define DSPMPC_PID7_DEFAULT  0x0

#define DSPMPC_PID0_READMASK  0xffffffff
#define DSPMPC_PID0_WRITEMASK  0x0
#define DSPMPC_PID0_VOLATILEMASK  0xffffffff
#define DSPMPC_PID0_RESETMASK  0xffffffff
#define DSPMPC_PID0_DEFAULT  0x60

#define DSPMPC_PID1_READMASK  0xffffffff
#define DSPMPC_PID1_WRITEMASK  0x0
#define DSPMPC_PID1_VOLATILEMASK  0xff
#define DSPMPC_PID1_RESETMASK  0xff
#define DSPMPC_PID1_DEFAULT  0xb8

#define DSPMPC_PID2_READMASK  0xffffffff
#define DSPMPC_PID2_WRITEMASK  0x0
#define DSPMPC_PID2_VOLATILEMASK  0xff
#define DSPMPC_PID2_RESETMASK  0xff
#define DSPMPC_PID2_DEFAULT  0x1b

#define DSPMPC_PID3_READMASK  0xffffffff
#define DSPMPC_PID3_WRITEMASK  0x0
#define DSPMPC_PID3_VOLATILEMASK  0xff
#define DSPMPC_PID3_RESETMASK  0xff
#define DSPMPC_PID3_DEFAULT  0x0

#define DSPMPC_CID0_READMASK  0xffffffff
#define DSPMPC_CID0_WRITEMASK  0x0
#define DSPMPC_CID0_VOLATILEMASK  0xffffffff
#define DSPMPC_CID0_RESETMASK  0xffffffff
#define DSPMPC_CID0_DEFAULT  0xd

#define DSPMPC_CID1_READMASK  0xffffffff
#define DSPMPC_CID1_WRITEMASK  0x0
#define DSPMPC_CID1_VOLATILEMASK  0xffffffff
#define DSPMPC_CID1_RESETMASK  0xffffffff
#define DSPMPC_CID1_DEFAULT  0xf0

#define DSPMPC_CID2_READMASK  0xffffffff
#define DSPMPC_CID2_WRITEMASK  0x0
#define DSPMPC_CID2_VOLATILEMASK  0xffffffff
#define DSPMPC_CID2_RESETMASK  0xffffffff
#define DSPMPC_CID2_DEFAULT  0x5

#define DSPMPC_CID3_READMASK  0xffffffff
#define DSPMPC_CID3_WRITEMASK  0x0
#define DSPMPC_CID3_VOLATILEMASK  0xffffffff
#define DSPMPC_CID3_RESETMASK  0xffffffff
#define DSPMPC_CID3_DEFAULT  0xb1




/*block :  TRUSTZONE_CTRL */
typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region4 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION4_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region5 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION5_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region6 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION6_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 dsp_region7 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DSP_REGION7_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 hifi3m_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3M_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 hifi3m_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3M_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 hifi3m_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3M_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 hifi3m_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} HIFI3M_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 i2cs_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2CS_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 i2cs_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2CS_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 i2cs_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2CS_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 i2cs_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I2CS_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 earlink_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 earlink_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 earlink_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 earlink_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} EARLINK_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma0_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA0_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma0_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA0_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma0_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA0_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma0_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA0_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma1_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA1_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma1_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA1_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma1_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA1_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 fdma1_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} FDMA1_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma0_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA0_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma0_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA0_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma0_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA0_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma0_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA0_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma1_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA1_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma1_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA1_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma1_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA1_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 adma1_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ADMA1_REGION3_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 qspi_region0 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REGION0_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 qspi_region1 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REGION1_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 qspi_region2 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REGION2_s;


typedef union {
	struct {
		hwint32 reserved0 : 5;	/* 0:4 sw=RO hw=RO 0x0  */
		hwint32 qspi_region3 : 27;	/* 5:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} QSPI_REGION3_s;


typedef union {
	struct {
		hwint32 hifi3_cfg_sec_resp : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 llea_cfg_sec_resp : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 lleb_cfg_sec_resp : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 capea_cfg_sec_resp : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 capeb_cfg_sec_resp : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 adma0_cfg_sec_resp : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 adma1_cfg_sec_resp : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 earlink_cfg_sec_resp : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 fdma0_cfg_sec_resp : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 fdma1_cfg_sec_resp : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 i2cs_cfg_sec_resp : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 qspi_cfg_sec_resp : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 reserved12 : 20;	/* 12:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} CFG_SEC_RESP_s;


typedef union {
	struct {
		hwint32 mpc_flash_cfg_init_value : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 mpc_rom_cfg_init_value : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 sec0_scratch : 30;	/* 2:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SEC_WRREG_CTRL0_s;


typedef union {
	struct {
		hwint32 sec1_scratch : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SEC_WRREG_CTRL1_s;


typedef union {
	struct {
		hwint32 mpc_dspmem_cfg_init_value : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 sec2_scratch : 31;	/* 1:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SEC_WRREG_CTRL2_s;


typedef union {
	struct {
		hwint32 sec3_scratch : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SEC_WRREG_CTRL3_s;


typedef struct {
	DSP_REGION0_s  dsp_region0;
	DSP_REGION1_s  dsp_region1;
	DSP_REGION2_s  dsp_region2;
	DSP_REGION3_s  dsp_region3;
	DSP_REGION4_s  dsp_region4;
	DSP_REGION5_s  dsp_region5;
	DSP_REGION6_s  dsp_region6;
	DSP_REGION7_s  dsp_region7;
	HIFI3M_REGION0_s  hifi3m_region0;
	HIFI3M_REGION1_s  hifi3m_region1;
	HIFI3M_REGION2_s  hifi3m_region2;
	HIFI3M_REGION3_s  hifi3m_region3;
	hwint8 filler0[0x10];
	I2CS_REGION0_s  i2cs_region0;
	I2CS_REGION1_s  i2cs_region1;
	I2CS_REGION2_s  i2cs_region2;
	I2CS_REGION3_s  i2cs_region3;
	hwint8 filler1[0x10];
	EARLINK_REGION0_s  earlink_region0;
	EARLINK_REGION1_s  earlink_region1;
	EARLINK_REGION2_s  earlink_region2;
	EARLINK_REGION3_s  earlink_region3;
	hwint8 filler2[0x10];
	FDMA0_REGION0_s  fdma0_region0;
	FDMA0_REGION1_s  fdma0_region1;
	FDMA0_REGION2_s  fdma0_region2;
	FDMA0_REGION3_s  fdma0_region3;
	hwint8 filler3[0x10];
	FDMA1_REGION0_s  fdma1_region0;
	FDMA1_REGION1_s  fdma1_region1;
	FDMA1_REGION2_s  fdma1_region2;
	FDMA1_REGION3_s  fdma1_region3;
	hwint8 filler4[0x10];
	ADMA0_REGION0_s  adma0_region0;
	ADMA0_REGION1_s  adma0_region1;
	ADMA0_REGION2_s  adma0_region2;
	ADMA0_REGION3_s  adma0_region3;
	hwint8 filler5[0x10];
	ADMA1_REGION0_s  adma1_region0;
	ADMA1_REGION1_s  adma1_region1;
	ADMA1_REGION2_s  adma1_region2;
	ADMA1_REGION3_s  adma1_region3;
	hwint8 filler6[0x10];
	QSPI_REGION0_s  qspi_region0;
	QSPI_REGION1_s  qspi_region1;
	QSPI_REGION2_s  qspi_region2;
	QSPI_REGION3_s  qspi_region3;
	hwint8 filler7[0x70];
	CFG_SEC_RESP_s  cfg_sec_resp;
	hwint8 filler8[0x7c];
	SEC_WRREG_CTRL0_s  sec_wrreg_ctrl0;
	SEC_WRREG_CTRL1_s  sec_wrreg_ctrl1;
	SEC_WRREG_CTRL2_s  sec_wrreg_ctrl2;
	SEC_WRREG_CTRL3_s  sec_wrreg_ctrl3;

} TRUSTZONE_CTRL_s;

#define DSP_REGION0_READMASK  0xffffffff
#define DSP_REGION0_WRITEMASK  0xffffffe0
#define DSP_REGION0_VOLATILEMASK  0x0
#define DSP_REGION0_RESETMASK  0xffffffe0
#define DSP_REGION0_DEFAULT  0x0

#define DSP_REGION1_READMASK  0xffffffff
#define DSP_REGION1_WRITEMASK  0xffffffe0
#define DSP_REGION1_VOLATILEMASK  0x0
#define DSP_REGION1_RESETMASK  0xffffffe0
#define DSP_REGION1_DEFAULT  0x0

#define DSP_REGION2_READMASK  0xffffffff
#define DSP_REGION2_WRITEMASK  0xffffffe0
#define DSP_REGION2_VOLATILEMASK  0x0
#define DSP_REGION2_RESETMASK  0xffffffe0
#define DSP_REGION2_DEFAULT  0x0

#define DSP_REGION3_READMASK  0xffffffff
#define DSP_REGION3_WRITEMASK  0xffffffe0
#define DSP_REGION3_VOLATILEMASK  0x0
#define DSP_REGION3_RESETMASK  0xffffffe0
#define DSP_REGION3_DEFAULT  0x0

#define DSP_REGION4_READMASK  0xffffffff
#define DSP_REGION4_WRITEMASK  0xffffffe0
#define DSP_REGION4_VOLATILEMASK  0x0
#define DSP_REGION4_RESETMASK  0xffffffe0
#define DSP_REGION4_DEFAULT  0x0

#define DSP_REGION5_READMASK  0xffffffff
#define DSP_REGION5_WRITEMASK  0xffffffe0
#define DSP_REGION5_VOLATILEMASK  0x0
#define DSP_REGION5_RESETMASK  0xffffffe0
#define DSP_REGION5_DEFAULT  0x0

#define DSP_REGION6_READMASK  0xffffffff
#define DSP_REGION6_WRITEMASK  0xffffffe0
#define DSP_REGION6_VOLATILEMASK  0x0
#define DSP_REGION6_RESETMASK  0xffffffe0
#define DSP_REGION6_DEFAULT  0x0

#define DSP_REGION7_READMASK  0xffffffff
#define DSP_REGION7_WRITEMASK  0xffffffe0
#define DSP_REGION7_VOLATILEMASK  0x0
#define DSP_REGION7_RESETMASK  0xffffffe0
#define DSP_REGION7_DEFAULT  0x0

#define HIFI3M_REGION0_READMASK  0xffffffff
#define HIFI3M_REGION0_WRITEMASK  0xffffffe0
#define HIFI3M_REGION0_VOLATILEMASK  0x0
#define HIFI3M_REGION0_RESETMASK  0xffffffe0
#define HIFI3M_REGION0_DEFAULT  0x0

#define HIFI3M_REGION1_READMASK  0xffffffff
#define HIFI3M_REGION1_WRITEMASK  0xffffffe0
#define HIFI3M_REGION1_VOLATILEMASK  0x0
#define HIFI3M_REGION1_RESETMASK  0xffffffe0
#define HIFI3M_REGION1_DEFAULT  0x0

#define HIFI3M_REGION2_READMASK  0xffffffff
#define HIFI3M_REGION2_WRITEMASK  0xffffffe0
#define HIFI3M_REGION2_VOLATILEMASK  0x0
#define HIFI3M_REGION2_RESETMASK  0xffffffe0
#define HIFI3M_REGION2_DEFAULT  0x0

#define HIFI3M_REGION3_READMASK  0xffffffff
#define HIFI3M_REGION3_WRITEMASK  0xffffffe0
#define HIFI3M_REGION3_VOLATILEMASK  0x0
#define HIFI3M_REGION3_RESETMASK  0xffffffe0
#define HIFI3M_REGION3_DEFAULT  0x0

#define I2CS_REGION0_READMASK  0xffffffff
#define I2CS_REGION0_WRITEMASK  0xffffffe0
#define I2CS_REGION0_VOLATILEMASK  0x0
#define I2CS_REGION0_RESETMASK  0xffffffe0
#define I2CS_REGION0_DEFAULT  0x0

#define I2CS_REGION1_READMASK  0xffffffff
#define I2CS_REGION1_WRITEMASK  0xffffffe0
#define I2CS_REGION1_VOLATILEMASK  0x0
#define I2CS_REGION1_RESETMASK  0xffffffe0
#define I2CS_REGION1_DEFAULT  0x0

#define I2CS_REGION2_READMASK  0xffffffff
#define I2CS_REGION2_WRITEMASK  0xffffffe0
#define I2CS_REGION2_VOLATILEMASK  0x0
#define I2CS_REGION2_RESETMASK  0xffffffe0
#define I2CS_REGION2_DEFAULT  0x0

#define I2CS_REGION3_READMASK  0xffffffff
#define I2CS_REGION3_WRITEMASK  0xffffffe0
#define I2CS_REGION3_VOLATILEMASK  0x0
#define I2CS_REGION3_RESETMASK  0xffffffe0
#define I2CS_REGION3_DEFAULT  0x0

#define EARLINK_REGION0_READMASK  0xffffffff
#define EARLINK_REGION0_WRITEMASK  0xffffffe0
#define EARLINK_REGION0_VOLATILEMASK  0x0
#define EARLINK_REGION0_RESETMASK  0xffffffe0
#define EARLINK_REGION0_DEFAULT  0x0

#define EARLINK_REGION1_READMASK  0xffffffff
#define EARLINK_REGION1_WRITEMASK  0xffffffe0
#define EARLINK_REGION1_VOLATILEMASK  0x0
#define EARLINK_REGION1_RESETMASK  0xffffffe0
#define EARLINK_REGION1_DEFAULT  0x0

#define EARLINK_REGION2_READMASK  0xffffffff
#define EARLINK_REGION2_WRITEMASK  0xffffffe0
#define EARLINK_REGION2_VOLATILEMASK  0x0
#define EARLINK_REGION2_RESETMASK  0xffffffe0
#define EARLINK_REGION2_DEFAULT  0x0

#define EARLINK_REGION3_READMASK  0xffffffff
#define EARLINK_REGION3_WRITEMASK  0xffffffe0
#define EARLINK_REGION3_VOLATILEMASK  0x0
#define EARLINK_REGION3_RESETMASK  0xffffffe0
#define EARLINK_REGION3_DEFAULT  0x0

#define FDMA0_REGION0_READMASK  0xffffffff
#define FDMA0_REGION0_WRITEMASK  0xffffffe0
#define FDMA0_REGION0_VOLATILEMASK  0x0
#define FDMA0_REGION0_RESETMASK  0xffffffe0
#define FDMA0_REGION0_DEFAULT  0x0

#define FDMA0_REGION1_READMASK  0xffffffff
#define FDMA0_REGION1_WRITEMASK  0xffffffe0
#define FDMA0_REGION1_VOLATILEMASK  0x0
#define FDMA0_REGION1_RESETMASK  0xffffffe0
#define FDMA0_REGION1_DEFAULT  0x0

#define FDMA0_REGION2_READMASK  0xffffffff
#define FDMA0_REGION2_WRITEMASK  0xffffffe0
#define FDMA0_REGION2_VOLATILEMASK  0x0
#define FDMA0_REGION2_RESETMASK  0xffffffe0
#define FDMA0_REGION2_DEFAULT  0x0

#define FDMA0_REGION3_READMASK  0xffffffff
#define FDMA0_REGION3_WRITEMASK  0xffffffe0
#define FDMA0_REGION3_VOLATILEMASK  0x0
#define FDMA0_REGION3_RESETMASK  0xffffffe0
#define FDMA0_REGION3_DEFAULT  0x0

#define FDMA1_REGION0_READMASK  0xffffffff
#define FDMA1_REGION0_WRITEMASK  0xffffffe0
#define FDMA1_REGION0_VOLATILEMASK  0x0
#define FDMA1_REGION0_RESETMASK  0xffffffe0
#define FDMA1_REGION0_DEFAULT  0x0

#define FDMA1_REGION1_READMASK  0xffffffff
#define FDMA1_REGION1_WRITEMASK  0xffffffe0
#define FDMA1_REGION1_VOLATILEMASK  0x0
#define FDMA1_REGION1_RESETMASK  0xffffffe0
#define FDMA1_REGION1_DEFAULT  0x0

#define FDMA1_REGION2_READMASK  0xffffffff
#define FDMA1_REGION2_WRITEMASK  0xffffffe0
#define FDMA1_REGION2_VOLATILEMASK  0x0
#define FDMA1_REGION2_RESETMASK  0xffffffe0
#define FDMA1_REGION2_DEFAULT  0x0

#define FDMA1_REGION3_READMASK  0xffffffff
#define FDMA1_REGION3_WRITEMASK  0xffffffe0
#define FDMA1_REGION3_VOLATILEMASK  0x0
#define FDMA1_REGION3_RESETMASK  0xffffffe0
#define FDMA1_REGION3_DEFAULT  0x0

#define ADMA0_REGION0_READMASK  0xffffffff
#define ADMA0_REGION0_WRITEMASK  0xffffffe0
#define ADMA0_REGION0_VOLATILEMASK  0x0
#define ADMA0_REGION0_RESETMASK  0xffffffe0
#define ADMA0_REGION0_DEFAULT  0x0

#define ADMA0_REGION1_READMASK  0xffffffff
#define ADMA0_REGION1_WRITEMASK  0xffffffe0
#define ADMA0_REGION1_VOLATILEMASK  0x0
#define ADMA0_REGION1_RESETMASK  0xffffffe0
#define ADMA0_REGION1_DEFAULT  0x0

#define ADMA0_REGION2_READMASK  0xffffffff
#define ADMA0_REGION2_WRITEMASK  0xffffffe0
#define ADMA0_REGION2_VOLATILEMASK  0x0
#define ADMA0_REGION2_RESETMASK  0xffffffe0
#define ADMA0_REGION2_DEFAULT  0x0

#define ADMA0_REGION3_READMASK  0xffffffff
#define ADMA0_REGION3_WRITEMASK  0xffffffe0
#define ADMA0_REGION3_VOLATILEMASK  0x0
#define ADMA0_REGION3_RESETMASK  0xffffffe0
#define ADMA0_REGION3_DEFAULT  0x0

#define ADMA1_REGION0_READMASK  0xffffffff
#define ADMA1_REGION0_WRITEMASK  0xffffffe0
#define ADMA1_REGION0_VOLATILEMASK  0x0
#define ADMA1_REGION0_RESETMASK  0xffffffe0
#define ADMA1_REGION0_DEFAULT  0x0

#define ADMA1_REGION1_READMASK  0xffffffff
#define ADMA1_REGION1_WRITEMASK  0xffffffe0
#define ADMA1_REGION1_VOLATILEMASK  0x0
#define ADMA1_REGION1_RESETMASK  0xffffffe0
#define ADMA1_REGION1_DEFAULT  0x0

#define ADMA1_REGION2_READMASK  0xffffffff
#define ADMA1_REGION2_WRITEMASK  0xffffffe0
#define ADMA1_REGION2_VOLATILEMASK  0x0
#define ADMA1_REGION2_RESETMASK  0xffffffe0
#define ADMA1_REGION2_DEFAULT  0x0

#define ADMA1_REGION3_READMASK  0xffffffff
#define ADMA1_REGION3_WRITEMASK  0xffffffe0
#define ADMA1_REGION3_VOLATILEMASK  0x0
#define ADMA1_REGION3_RESETMASK  0xffffffe0
#define ADMA1_REGION3_DEFAULT  0x0

#define QSPI_REGION0_READMASK  0xffffffff
#define QSPI_REGION0_WRITEMASK  0xffffffe0
#define QSPI_REGION0_VOLATILEMASK  0x0
#define QSPI_REGION0_RESETMASK  0xffffffe0
#define QSPI_REGION0_DEFAULT  0x0

#define QSPI_REGION1_READMASK  0xffffffff
#define QSPI_REGION1_WRITEMASK  0xffffffe0
#define QSPI_REGION1_VOLATILEMASK  0x0
#define QSPI_REGION1_RESETMASK  0xffffffe0
#define QSPI_REGION1_DEFAULT  0x0

#define QSPI_REGION2_READMASK  0xffffffff
#define QSPI_REGION2_WRITEMASK  0xffffffe0
#define QSPI_REGION2_VOLATILEMASK  0x0
#define QSPI_REGION2_RESETMASK  0xffffffe0
#define QSPI_REGION2_DEFAULT  0x0

#define QSPI_REGION3_READMASK  0xffffffff
#define QSPI_REGION3_WRITEMASK  0xffffffe0
#define QSPI_REGION3_VOLATILEMASK  0x0
#define QSPI_REGION3_RESETMASK  0xffffffe0
#define QSPI_REGION3_DEFAULT  0x0

#define CFG_SEC_RESP_READMASK  0xffffffff
#define CFG_SEC_RESP_WRITEMASK  0xfff
#define CFG_SEC_RESP_VOLATILEMASK  0x0
#define CFG_SEC_RESP_RESETMASK  0xfff
#define CFG_SEC_RESP_DEFAULT  0x0

#define SEC_WRREG_CTRL0_READMASK  0xffffffff
#define SEC_WRREG_CTRL0_WRITEMASK  0xffffffff
#define SEC_WRREG_CTRL0_VOLATILEMASK  0x0
#define SEC_WRREG_CTRL0_RESETMASK  0xffffffff
#define SEC_WRREG_CTRL0_DEFAULT  0x0

#define SEC_WRREG_CTRL1_READMASK  0xffffffff
#define SEC_WRREG_CTRL1_WRITEMASK  0xffffffff
#define SEC_WRREG_CTRL1_VOLATILEMASK  0x0
#define SEC_WRREG_CTRL1_RESETMASK  0xffffffff
#define SEC_WRREG_CTRL1_DEFAULT  0x0

#define SEC_WRREG_CTRL2_READMASK  0xffffffff
#define SEC_WRREG_CTRL2_WRITEMASK  0xffffffff
#define SEC_WRREG_CTRL2_VOLATILEMASK  0x0
#define SEC_WRREG_CTRL2_RESETMASK  0xffffffff
#define SEC_WRREG_CTRL2_DEFAULT  0x0

#define SEC_WRREG_CTRL3_READMASK  0xffffffff
#define SEC_WRREG_CTRL3_WRITEMASK  0xffffffff
#define SEC_WRREG_CTRL3_VOLATILEMASK  0x0
#define SEC_WRREG_CTRL3_RESETMASK  0xffffffff
#define SEC_WRREG_CTRL3_DEFAULT  0x0




/*block :  AHB_BUS_PROFILING */
typedef union {
	struct {
		hwint32 prf_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 mon_st : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 ahb_if_sel : 4;	/* 2:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_PROFILING_CTRL_s;


typedef union {
	struct {
		hwint32 total_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_TOTAL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_RREQ_CNT_s;


typedef union {
	struct {
		hwint32 wreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_WREQ_CNT_s;


typedef union {
	struct {
		hwint32 rstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_RSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 wstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_WSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rtr_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_RTR_CNT_s;


typedef union {
	struct {
		hwint32 wtr_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_WTR_CNT_s;


typedef union {
	struct {
		hwint32 rdat_bytes_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_RDAT_BYTES_CNT_s;


typedef union {
	struct {
		hwint32 wdat_bytes_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_WDAT_BYTES_CNT_s;


typedef union {
	struct {
		hwint32 breq_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_BREQ_CYC_CNT_s;


typedef union {
	struct {
		hwint32 bgra_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} AHB_BUS_BGRA_CYC_CNT_s;


typedef struct {
	AHB_BUS_PROFILING_CTRL_s  ahb_bus_profiling_ctrl;
	AHB_BUS_TOTAL_CYC_CNT_s  ahb_bus_total_cyc_cnt;
	AHB_BUS_RREQ_CNT_s  ahb_bus_rreq_cnt;
	AHB_BUS_WREQ_CNT_s  ahb_bus_wreq_cnt;
	AHB_BUS_RSTL_CYC_CNT_s  ahb_bus_rstl_cyc_cnt;
	AHB_BUS_WSTL_CYC_CNT_s  ahb_bus_wstl_cyc_cnt;
	AHB_BUS_RTR_CNT_s  ahb_bus_rtr_cnt;
	AHB_BUS_WTR_CNT_s  ahb_bus_wtr_cnt;
	AHB_BUS_RDAT_BYTES_CNT_s  ahb_bus_rdat_bytes_cnt;
	AHB_BUS_WDAT_BYTES_CNT_s  ahb_bus_wdat_bytes_cnt;
	AHB_BUS_BREQ_CYC_CNT_s  ahb_bus_breq_cyc_cnt;
	AHB_BUS_BGRA_CYC_CNT_s  ahb_bus_bgra_cyc_cnt;

} AHB_BUS_PROFILING_s;

#define AHB_BUS_PROFILING_CTRL_READMASK  0xffffffff
#define AHB_BUS_PROFILING_CTRL_WRITEMASK  0x3f
#define AHB_BUS_PROFILING_CTRL_VOLATILEMASK  0x0
#define AHB_BUS_PROFILING_CTRL_RESETMASK  0x3f
#define AHB_BUS_PROFILING_CTRL_DEFAULT  0x0

#define AHB_BUS_TOTAL_CYC_CNT_READMASK  0xffffffff
#define AHB_BUS_TOTAL_CYC_CNT_WRITEMASK  0x0
#define AHB_BUS_TOTAL_CYC_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_TOTAL_CYC_CNT_RESETMASK  0xffffffff
#define AHB_BUS_TOTAL_CYC_CNT_DEFAULT  0x0

#define AHB_BUS_RREQ_CNT_READMASK  0xffffffff
#define AHB_BUS_RREQ_CNT_WRITEMASK  0x0
#define AHB_BUS_RREQ_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_RREQ_CNT_RESETMASK  0xffffffff
#define AHB_BUS_RREQ_CNT_DEFAULT  0x0

#define AHB_BUS_WREQ_CNT_READMASK  0xffffffff
#define AHB_BUS_WREQ_CNT_WRITEMASK  0x0
#define AHB_BUS_WREQ_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_WREQ_CNT_RESETMASK  0xffffffff
#define AHB_BUS_WREQ_CNT_DEFAULT  0x0

#define AHB_BUS_RSTL_CYC_CNT_READMASK  0xffffffff
#define AHB_BUS_RSTL_CYC_CNT_WRITEMASK  0x0
#define AHB_BUS_RSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_RSTL_CYC_CNT_RESETMASK  0xffffffff
#define AHB_BUS_RSTL_CYC_CNT_DEFAULT  0x0

#define AHB_BUS_WSTL_CYC_CNT_READMASK  0xffffffff
#define AHB_BUS_WSTL_CYC_CNT_WRITEMASK  0x0
#define AHB_BUS_WSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_WSTL_CYC_CNT_RESETMASK  0xffffffff
#define AHB_BUS_WSTL_CYC_CNT_DEFAULT  0x0

#define AHB_BUS_RTR_CNT_READMASK  0xffffffff
#define AHB_BUS_RTR_CNT_WRITEMASK  0x0
#define AHB_BUS_RTR_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_RTR_CNT_RESETMASK  0xffffffff
#define AHB_BUS_RTR_CNT_DEFAULT  0x0

#define AHB_BUS_WTR_CNT_READMASK  0xffffffff
#define AHB_BUS_WTR_CNT_WRITEMASK  0x0
#define AHB_BUS_WTR_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_WTR_CNT_RESETMASK  0xffffffff
#define AHB_BUS_WTR_CNT_DEFAULT  0x0

#define AHB_BUS_RDAT_BYTES_CNT_READMASK  0xffffffff
#define AHB_BUS_RDAT_BYTES_CNT_WRITEMASK  0x0
#define AHB_BUS_RDAT_BYTES_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_RDAT_BYTES_CNT_RESETMASK  0xffffffff
#define AHB_BUS_RDAT_BYTES_CNT_DEFAULT  0x0

#define AHB_BUS_WDAT_BYTES_CNT_READMASK  0xffffffff
#define AHB_BUS_WDAT_BYTES_CNT_WRITEMASK  0x0
#define AHB_BUS_WDAT_BYTES_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_WDAT_BYTES_CNT_RESETMASK  0xffffffff
#define AHB_BUS_WDAT_BYTES_CNT_DEFAULT  0x0

#define AHB_BUS_BREQ_CYC_CNT_READMASK  0xffffffff
#define AHB_BUS_BREQ_CYC_CNT_WRITEMASK  0x0
#define AHB_BUS_BREQ_CYC_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_BREQ_CYC_CNT_RESETMASK  0xffffffff
#define AHB_BUS_BREQ_CYC_CNT_DEFAULT  0x0

#define AHB_BUS_BGRA_CYC_CNT_READMASK  0xffffffff
#define AHB_BUS_BGRA_CYC_CNT_WRITEMASK  0x0
#define AHB_BUS_BGRA_CYC_CNT_VOLATILEMASK  0xffffffff
#define AHB_BUS_BGRA_CYC_CNT_RESETMASK  0xffffffff
#define AHB_BUS_BGRA_CYC_CNT_DEFAULT  0x0




/*block :  SSE200_PROFILING */
typedef union {
	struct {
		hwint32 prf_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 mon_st : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_PROFILING_CTRL_s;


typedef union {
	struct {
		hwint32 total_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_TOTAL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_RREQ_CNT_s;


typedef union {
	struct {
		hwint32 wreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_WREQ_CNT_s;


typedef union {
	struct {
		hwint32 rstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_RSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 wstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_WSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rtr_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_RTR_CNT_s;


typedef union {
	struct {
		hwint32 wtr_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_WTR_CNT_s;


typedef union {
	struct {
		hwint32 rdat_bytes_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_RDAT_BYTES_CNT_s;


typedef union {
	struct {
		hwint32 wdat_bytes_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_M0_WDAT_BYTES_CNT_s;


typedef union {
	struct {
		hwint32 prf_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 mon_st : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 30;	/* 2:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_PROFILING_CTRL_s;


typedef union {
	struct {
		hwint32 total_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_TOTAL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_RREQ_CNT_s;


typedef union {
	struct {
		hwint32 wreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_WREQ_CNT_s;


typedef union {
	struct {
		hwint32 rstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_RSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 wstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_WSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rtr_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_RTR_CNT_s;


typedef union {
	struct {
		hwint32 wtr_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_WTR_CNT_s;


typedef union {
	struct {
		hwint32 rdat_bytes_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_RDAT_BYTES_CNT_s;


typedef union {
	struct {
		hwint32 wdat_bytes_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SSE200_S0_WDAT_BYTES_CNT_s;


typedef struct {
	SSE200_M0_PROFILING_CTRL_s  sse200_m0_profiling_ctrl;
	SSE200_M0_TOTAL_CYC_CNT_s  sse200_m0_total_cyc_cnt;
	SSE200_M0_RREQ_CNT_s  sse200_m0_rreq_cnt;
	SSE200_M0_WREQ_CNT_s  sse200_m0_wreq_cnt;
	SSE200_M0_RSTL_CYC_CNT_s  sse200_m0_rstl_cyc_cnt;
	SSE200_M0_WSTL_CYC_CNT_s  sse200_m0_wstl_cyc_cnt;
	SSE200_M0_RTR_CNT_s  sse200_m0_rtr_cnt;
	SSE200_M0_WTR_CNT_s  sse200_m0_wtr_cnt;
	SSE200_M0_RDAT_BYTES_CNT_s  sse200_m0_rdat_bytes_cnt;
	SSE200_M0_WDAT_BYTES_CNT_s  sse200_m0_wdat_bytes_cnt;
	hwint8 filler0[0x8];
	SSE200_S0_PROFILING_CTRL_s  sse200_s0_profiling_ctrl;
	SSE200_S0_TOTAL_CYC_CNT_s  sse200_s0_total_cyc_cnt;
	SSE200_S0_RREQ_CNT_s  sse200_s0_rreq_cnt;
	SSE200_S0_WREQ_CNT_s  sse200_s0_wreq_cnt;
	SSE200_S0_RSTL_CYC_CNT_s  sse200_s0_rstl_cyc_cnt;
	SSE200_S0_WSTL_CYC_CNT_s  sse200_s0_wstl_cyc_cnt;
	SSE200_S0_RTR_CNT_s  sse200_s0_rtr_cnt;
	SSE200_S0_WTR_CNT_s  sse200_s0_wtr_cnt;
	SSE200_S0_RDAT_BYTES_CNT_s  sse200_s0_rdat_bytes_cnt;
	SSE200_S0_WDAT_BYTES_CNT_s  sse200_s0_wdat_bytes_cnt;

} SSE200_PROFILING_s;

#define SSE200_M0_PROFILING_CTRL_READMASK  0xffffffff
#define SSE200_M0_PROFILING_CTRL_WRITEMASK  0x3
#define SSE200_M0_PROFILING_CTRL_VOLATILEMASK  0x0
#define SSE200_M0_PROFILING_CTRL_RESETMASK  0x3
#define SSE200_M0_PROFILING_CTRL_DEFAULT  0x0

#define SSE200_M0_TOTAL_CYC_CNT_READMASK  0xffffffff
#define SSE200_M0_TOTAL_CYC_CNT_WRITEMASK  0x0
#define SSE200_M0_TOTAL_CYC_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_TOTAL_CYC_CNT_RESETMASK  0xffffffff
#define SSE200_M0_TOTAL_CYC_CNT_DEFAULT  0x0

#define SSE200_M0_RREQ_CNT_READMASK  0xffffffff
#define SSE200_M0_RREQ_CNT_WRITEMASK  0x0
#define SSE200_M0_RREQ_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_RREQ_CNT_RESETMASK  0xffffffff
#define SSE200_M0_RREQ_CNT_DEFAULT  0x0

#define SSE200_M0_WREQ_CNT_READMASK  0xffffffff
#define SSE200_M0_WREQ_CNT_WRITEMASK  0x0
#define SSE200_M0_WREQ_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_WREQ_CNT_RESETMASK  0xffffffff
#define SSE200_M0_WREQ_CNT_DEFAULT  0x0

#define SSE200_M0_RSTL_CYC_CNT_READMASK  0xffffffff
#define SSE200_M0_RSTL_CYC_CNT_WRITEMASK  0x0
#define SSE200_M0_RSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_RSTL_CYC_CNT_RESETMASK  0xffffffff
#define SSE200_M0_RSTL_CYC_CNT_DEFAULT  0x0

#define SSE200_M0_WSTL_CYC_CNT_READMASK  0xffffffff
#define SSE200_M0_WSTL_CYC_CNT_WRITEMASK  0x0
#define SSE200_M0_WSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_WSTL_CYC_CNT_RESETMASK  0xffffffff
#define SSE200_M0_WSTL_CYC_CNT_DEFAULT  0x0

#define SSE200_M0_RTR_CNT_READMASK  0xffffffff
#define SSE200_M0_RTR_CNT_WRITEMASK  0x0
#define SSE200_M0_RTR_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_RTR_CNT_RESETMASK  0xffffffff
#define SSE200_M0_RTR_CNT_DEFAULT  0x0

#define SSE200_M0_WTR_CNT_READMASK  0xffffffff
#define SSE200_M0_WTR_CNT_WRITEMASK  0x0
#define SSE200_M0_WTR_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_WTR_CNT_RESETMASK  0xffffffff
#define SSE200_M0_WTR_CNT_DEFAULT  0x0

#define SSE200_M0_RDAT_BYTES_CNT_READMASK  0xffffffff
#define SSE200_M0_RDAT_BYTES_CNT_WRITEMASK  0x0
#define SSE200_M0_RDAT_BYTES_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_RDAT_BYTES_CNT_RESETMASK  0xffffffff
#define SSE200_M0_RDAT_BYTES_CNT_DEFAULT  0x0

#define SSE200_M0_WDAT_BYTES_CNT_READMASK  0xffffffff
#define SSE200_M0_WDAT_BYTES_CNT_WRITEMASK  0x0
#define SSE200_M0_WDAT_BYTES_CNT_VOLATILEMASK  0xffffffff
#define SSE200_M0_WDAT_BYTES_CNT_RESETMASK  0xffffffff
#define SSE200_M0_WDAT_BYTES_CNT_DEFAULT  0x0

#define SSE200_S0_PROFILING_CTRL_READMASK  0xffffffff
#define SSE200_S0_PROFILING_CTRL_WRITEMASK  0x3
#define SSE200_S0_PROFILING_CTRL_VOLATILEMASK  0x0
#define SSE200_S0_PROFILING_CTRL_RESETMASK  0x3
#define SSE200_S0_PROFILING_CTRL_DEFAULT  0x0

#define SSE200_S0_TOTAL_CYC_CNT_READMASK  0xffffffff
#define SSE200_S0_TOTAL_CYC_CNT_WRITEMASK  0x0
#define SSE200_S0_TOTAL_CYC_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_TOTAL_CYC_CNT_RESETMASK  0xffffffff
#define SSE200_S0_TOTAL_CYC_CNT_DEFAULT  0x0

#define SSE200_S0_RREQ_CNT_READMASK  0xffffffff
#define SSE200_S0_RREQ_CNT_WRITEMASK  0x0
#define SSE200_S0_RREQ_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_RREQ_CNT_RESETMASK  0xffffffff
#define SSE200_S0_RREQ_CNT_DEFAULT  0x0

#define SSE200_S0_WREQ_CNT_READMASK  0xffffffff
#define SSE200_S0_WREQ_CNT_WRITEMASK  0x0
#define SSE200_S0_WREQ_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_WREQ_CNT_RESETMASK  0xffffffff
#define SSE200_S0_WREQ_CNT_DEFAULT  0x0

#define SSE200_S0_RSTL_CYC_CNT_READMASK  0xffffffff
#define SSE200_S0_RSTL_CYC_CNT_WRITEMASK  0x0
#define SSE200_S0_RSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_RSTL_CYC_CNT_RESETMASK  0xffffffff
#define SSE200_S0_RSTL_CYC_CNT_DEFAULT  0x0

#define SSE200_S0_WSTL_CYC_CNT_READMASK  0xffffffff
#define SSE200_S0_WSTL_CYC_CNT_WRITEMASK  0x0
#define SSE200_S0_WSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_WSTL_CYC_CNT_RESETMASK  0xffffffff
#define SSE200_S0_WSTL_CYC_CNT_DEFAULT  0x0

#define SSE200_S0_RTR_CNT_READMASK  0xffffffff
#define SSE200_S0_RTR_CNT_WRITEMASK  0x0
#define SSE200_S0_RTR_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_RTR_CNT_RESETMASK  0xffffffff
#define SSE200_S0_RTR_CNT_DEFAULT  0x0

#define SSE200_S0_WTR_CNT_READMASK  0xffffffff
#define SSE200_S0_WTR_CNT_WRITEMASK  0x0
#define SSE200_S0_WTR_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_WTR_CNT_RESETMASK  0xffffffff
#define SSE200_S0_WTR_CNT_DEFAULT  0x0

#define SSE200_S0_RDAT_BYTES_CNT_READMASK  0xffffffff
#define SSE200_S0_RDAT_BYTES_CNT_WRITEMASK  0x0
#define SSE200_S0_RDAT_BYTES_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_RDAT_BYTES_CNT_RESETMASK  0xffffffff
#define SSE200_S0_RDAT_BYTES_CNT_DEFAULT  0x0

#define SSE200_S0_WDAT_BYTES_CNT_READMASK  0xffffffff
#define SSE200_S0_WDAT_BYTES_CNT_WRITEMASK  0x0
#define SSE200_S0_WDAT_BYTES_CNT_VOLATILEMASK  0xffffffff
#define SSE200_S0_WDAT_BYTES_CNT_RESETMASK  0xffffffff
#define SSE200_S0_WDAT_BYTES_CNT_DEFAULT  0x0




/*block :  ASIP_PROFILING */
typedef union {
	struct {
		hwint32 prf_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 mst_mon_st : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 slv_mon_st : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 mst_sel : 2;	/* 4:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 2;	/* 6:7 sw=RO hw=RO 0x0  */
		hwint32 asip_bus_sel : 3;	/* 8:10 sw=RW hw=RO 0x0  */
		hwint32 reserved11 : 1;	/* 11:11 sw=RO hw=RO 0x0  */
		hwint32 slv_sel : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 slv_bank_sel : 3;	/* 16:18 sw=RW hw=RO 0x0  */
		hwint32 reserved19 : 1;	/* 19:19 sw=RO hw=RO 0x0  */
		hwint32 capea_slp_mon_st : 1;	/* 20:20 sw=RW hw=RO 0x0  */
		hwint32 capeb_slp_mon_st : 1;	/* 21:21 sw=RW hw=RO 0x0  */
		hwint32 llea_slp_mon_st : 1;	/* 22:22 sw=RW hw=RO 0x0  */
		hwint32 lleb_slp_mon_st : 1;	/* 23:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ASIP_PROFILING_CTR_s;


typedef union {
	struct {
		hwint32 total_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_MST_TOTAL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 wreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_MST_WREQ_CNT_s;


typedef union {
	struct {
		hwint32 rreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_MST_RREQ_CNT_s;


typedef union {
	struct {
		hwint32 wstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_MST_WSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rstl_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_MST_RSTL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 slp_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} CAPE_A_SLP_CNT_s;


typedef union {
	struct {
		hwint32 slp_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} CAPE_B_SLP_CNT_s;


typedef union {
	struct {
		hwint32 slp_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} LLE_A_SLP_CNT_s;


typedef union {
	struct {
		hwint32 slp_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} LLE_B_SLP_CNT_s;


typedef union {
	struct {
		hwint32 total_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_SLV_TOTAL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 wreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_SLV_WREQ_CNT_s;


typedef union {
	struct {
		hwint32 rreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_SLV_RREQ_CNT_s;


typedef union {
	struct {
		hwint32 wblk_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_SLV_WBLK_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rblk_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} ASIP_SLV_RBLK_CYC_CNT_s;


typedef struct {
	ASIP_PROFILING_CTR_s  asip_profiling_ctr;
	ASIP_MST_TOTAL_CYC_CNT_s  asip_mst_total_cyc_cnt;
	ASIP_MST_WREQ_CNT_s  asip_mst_wreq_cnt;
	ASIP_MST_RREQ_CNT_s  asip_mst_rreq_cnt;
	ASIP_MST_WSTL_CYC_CNT_s  asip_mst_wstl_cyc_cnt;
	ASIP_MST_RSTL_CYC_CNT_s  asip_mst_rstl_cyc_cnt;
	CAPE_A_SLP_CNT_s  cape_a_slp_cnt;
	CAPE_B_SLP_CNT_s  cape_b_slp_cnt;
	LLE_A_SLP_CNT_s  lle_a_slp_cnt;
	LLE_B_SLP_CNT_s  lle_b_slp_cnt;
	ASIP_SLV_TOTAL_CYC_CNT_s  asip_slv_total_cyc_cnt;
	ASIP_SLV_WREQ_CNT_s  asip_slv_wreq_cnt;
	ASIP_SLV_RREQ_CNT_s  asip_slv_rreq_cnt;
	ASIP_SLV_WBLK_CYC_CNT_s  asip_slv_wblk_cyc_cnt;
	ASIP_SLV_RBLK_CYC_CNT_s  asip_slv_rblk_cyc_cnt;

} ASIP_PROFILING_s;

#define ASIP_PROFILING_CTR_READMASK  0xffffffff
#define ASIP_PROFILING_CTR_WRITEMASK  0xf77737
#define ASIP_PROFILING_CTR_VOLATILEMASK  0x0
#define ASIP_PROFILING_CTR_RESETMASK  0xf77737
#define ASIP_PROFILING_CTR_DEFAULT  0x0

#define ASIP_MST_TOTAL_CYC_CNT_READMASK  0xffffffff
#define ASIP_MST_TOTAL_CYC_CNT_WRITEMASK  0x0
#define ASIP_MST_TOTAL_CYC_CNT_VOLATILEMASK  0xffffffff
#define ASIP_MST_TOTAL_CYC_CNT_RESETMASK  0xffffffff
#define ASIP_MST_TOTAL_CYC_CNT_DEFAULT  0x0

#define ASIP_MST_WREQ_CNT_READMASK  0xffffffff
#define ASIP_MST_WREQ_CNT_WRITEMASK  0x0
#define ASIP_MST_WREQ_CNT_VOLATILEMASK  0xffffffff
#define ASIP_MST_WREQ_CNT_RESETMASK  0xffffffff
#define ASIP_MST_WREQ_CNT_DEFAULT  0x0

#define ASIP_MST_RREQ_CNT_READMASK  0xffffffff
#define ASIP_MST_RREQ_CNT_WRITEMASK  0x0
#define ASIP_MST_RREQ_CNT_VOLATILEMASK  0xffffffff
#define ASIP_MST_RREQ_CNT_RESETMASK  0xffffffff
#define ASIP_MST_RREQ_CNT_DEFAULT  0x0

#define ASIP_MST_WSTL_CYC_CNT_READMASK  0xffffffff
#define ASIP_MST_WSTL_CYC_CNT_WRITEMASK  0x0
#define ASIP_MST_WSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define ASIP_MST_WSTL_CYC_CNT_RESETMASK  0xffffffff
#define ASIP_MST_WSTL_CYC_CNT_DEFAULT  0x0

#define ASIP_MST_RSTL_CYC_CNT_READMASK  0xffffffff
#define ASIP_MST_RSTL_CYC_CNT_WRITEMASK  0x0
#define ASIP_MST_RSTL_CYC_CNT_VOLATILEMASK  0xffffffff
#define ASIP_MST_RSTL_CYC_CNT_RESETMASK  0xffffffff
#define ASIP_MST_RSTL_CYC_CNT_DEFAULT  0x0

#define CAPE_A_SLP_CNT_READMASK  0xffffffff
#define CAPE_A_SLP_CNT_WRITEMASK  0x0
#define CAPE_A_SLP_CNT_VOLATILEMASK  0xffffffff
#define CAPE_A_SLP_CNT_RESETMASK  0xffffffff
#define CAPE_A_SLP_CNT_DEFAULT  0x0

#define CAPE_B_SLP_CNT_READMASK  0xffffffff
#define CAPE_B_SLP_CNT_WRITEMASK  0x0
#define CAPE_B_SLP_CNT_VOLATILEMASK  0xffffffff
#define CAPE_B_SLP_CNT_RESETMASK  0xffffffff
#define CAPE_B_SLP_CNT_DEFAULT  0x0

#define LLE_A_SLP_CNT_READMASK  0xffffffff
#define LLE_A_SLP_CNT_WRITEMASK  0x0
#define LLE_A_SLP_CNT_VOLATILEMASK  0xffffffff
#define LLE_A_SLP_CNT_RESETMASK  0xffffffff
#define LLE_A_SLP_CNT_DEFAULT  0x0

#define LLE_B_SLP_CNT_READMASK  0xffffffff
#define LLE_B_SLP_CNT_WRITEMASK  0x0
#define LLE_B_SLP_CNT_VOLATILEMASK  0xffffffff
#define LLE_B_SLP_CNT_RESETMASK  0xffffffff
#define LLE_B_SLP_CNT_DEFAULT  0x0

#define ASIP_SLV_TOTAL_CYC_CNT_READMASK  0xffffffff
#define ASIP_SLV_TOTAL_CYC_CNT_WRITEMASK  0x0
#define ASIP_SLV_TOTAL_CYC_CNT_VOLATILEMASK  0xffffffff
#define ASIP_SLV_TOTAL_CYC_CNT_RESETMASK  0xffffffff
#define ASIP_SLV_TOTAL_CYC_CNT_DEFAULT  0x0

#define ASIP_SLV_WREQ_CNT_READMASK  0xffffffff
#define ASIP_SLV_WREQ_CNT_WRITEMASK  0x0
#define ASIP_SLV_WREQ_CNT_VOLATILEMASK  0xffffffff
#define ASIP_SLV_WREQ_CNT_RESETMASK  0xffffffff
#define ASIP_SLV_WREQ_CNT_DEFAULT  0x0

#define ASIP_SLV_RREQ_CNT_READMASK  0xffffffff
#define ASIP_SLV_RREQ_CNT_WRITEMASK  0x0
#define ASIP_SLV_RREQ_CNT_VOLATILEMASK  0xffffffff
#define ASIP_SLV_RREQ_CNT_RESETMASK  0xffffffff
#define ASIP_SLV_RREQ_CNT_DEFAULT  0x0

#define ASIP_SLV_WBLK_CYC_CNT_READMASK  0xffffffff
#define ASIP_SLV_WBLK_CYC_CNT_WRITEMASK  0x0
#define ASIP_SLV_WBLK_CYC_CNT_VOLATILEMASK  0xffffffff
#define ASIP_SLV_WBLK_CYC_CNT_RESETMASK  0xffffffff
#define ASIP_SLV_WBLK_CYC_CNT_DEFAULT  0x0

#define ASIP_SLV_RBLK_CYC_CNT_READMASK  0xffffffff
#define ASIP_SLV_RBLK_CYC_CNT_WRITEMASK  0x0
#define ASIP_SLV_RBLK_CYC_CNT_VOLATILEMASK  0xffffffff
#define ASIP_SLV_RBLK_CYC_CNT_RESETMASK  0xffffffff
#define ASIP_SLV_RBLK_CYC_CNT_DEFAULT  0x0




/*block :  SHARE_MEM_PROFILING */
typedef union {
	struct {
		hwint32 prf_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 mon_st : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 reserved2 : 2;	/* 2:3 sw=RO hw=RO 0x0  */
		hwint32 bank_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 reserved8 : 24;	/* 8:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SHARE_MEM_PROFILER_CTR_s;


typedef union {
	struct {
		hwint32 total_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SHARE_MEM_TOTAL_CYC_CNT_s;


typedef union {
	struct {
		hwint32 rreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SHARE_MEM_RREQ_CNT_s;


typedef union {
	struct {
		hwint32 wreq_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SHARE_MEM_WREQ_CNT_s;


typedef union {
	struct {
		hwint32 rblk_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SHARE_MEM_RBLK_CYC_CNT_s;


typedef union {
	struct {
		hwint32 wblk_cyc_cnt : 32;	/* 0:31 sw=RO hw=RW 0x0  */
	} bf;
	hwint32 dw;
} SHARE_MEM_WBLK_CYC_CNT_s;


typedef struct {
	SHARE_MEM_PROFILER_CTR_s  share_mem_profiler_ctr;
	SHARE_MEM_TOTAL_CYC_CNT_s  share_mem_total_cyc_cnt;
	SHARE_MEM_RREQ_CNT_s  share_mem_rreq_cnt;
	SHARE_MEM_WREQ_CNT_s  share_mem_wreq_cnt;
	SHARE_MEM_RBLK_CYC_CNT_s  share_mem_rblk_cyc_cnt;
	SHARE_MEM_WBLK_CYC_CNT_s  share_mem_wblk_cyc_cnt;

} SHARE_MEM_PROFILING_s;

#define SHARE_MEM_PROFILER_CTR_READMASK  0xffffffff
#define SHARE_MEM_PROFILER_CTR_WRITEMASK  0xf3
#define SHARE_MEM_PROFILER_CTR_VOLATILEMASK  0x0
#define SHARE_MEM_PROFILER_CTR_RESETMASK  0xf3
#define SHARE_MEM_PROFILER_CTR_DEFAULT  0x0

#define SHARE_MEM_TOTAL_CYC_CNT_READMASK  0xffffffff
#define SHARE_MEM_TOTAL_CYC_CNT_WRITEMASK  0x0
#define SHARE_MEM_TOTAL_CYC_CNT_VOLATILEMASK  0xffffffff
#define SHARE_MEM_TOTAL_CYC_CNT_RESETMASK  0xffffffff
#define SHARE_MEM_TOTAL_CYC_CNT_DEFAULT  0x0

#define SHARE_MEM_RREQ_CNT_READMASK  0xffffffff
#define SHARE_MEM_RREQ_CNT_WRITEMASK  0x0
#define SHARE_MEM_RREQ_CNT_VOLATILEMASK  0xffffffff
#define SHARE_MEM_RREQ_CNT_RESETMASK  0xffffffff
#define SHARE_MEM_RREQ_CNT_DEFAULT  0x0

#define SHARE_MEM_WREQ_CNT_READMASK  0xffffffff
#define SHARE_MEM_WREQ_CNT_WRITEMASK  0x0
#define SHARE_MEM_WREQ_CNT_VOLATILEMASK  0xffffffff
#define SHARE_MEM_WREQ_CNT_RESETMASK  0xffffffff
#define SHARE_MEM_WREQ_CNT_DEFAULT  0x0

#define SHARE_MEM_RBLK_CYC_CNT_READMASK  0xffffffff
#define SHARE_MEM_RBLK_CYC_CNT_WRITEMASK  0x0
#define SHARE_MEM_RBLK_CYC_CNT_VOLATILEMASK  0xffffffff
#define SHARE_MEM_RBLK_CYC_CNT_RESETMASK  0xffffffff
#define SHARE_MEM_RBLK_CYC_CNT_DEFAULT  0x0

#define SHARE_MEM_WBLK_CYC_CNT_READMASK  0xffffffff
#define SHARE_MEM_WBLK_CYC_CNT_WRITEMASK  0x0
#define SHARE_MEM_WBLK_CYC_CNT_VOLATILEMASK  0xffffffff
#define SHARE_MEM_WBLK_CYC_CNT_RESETMASK  0xffffffff
#define SHARE_MEM_WBLK_CYC_CNT_DEFAULT  0x0




/*block :  SMB */
typedef union {
	struct {
		hwint32 bbrd_arb : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 bbwr_arb : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 sram0_arb : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 sram1_arb : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 sram2_arb : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 sram3_arb : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 sram4_arb : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 sram5_arb : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 sram6_arb : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 sram7_arb : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 sram8_arb : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 sram9_arb : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 sram10_arb : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 sram11_arb : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 sram12_arb : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 sram13_arb : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 sram14_arb : 1;	/* 16:16 sw=RW hw=RO 0x0  */
		hwint32 sram15_arb : 1;	/* 17:17 sw=RW hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_ARB_CTRL_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 pri6_sel : 4;	/* 24:27 sw=RW hw=RO 0x0  */
		hwint32 pri7_sel : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_BBRD_ARB_PRI_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 pri6_sel : 4;	/* 24:27 sw=RW hw=RO 0x0  */
		hwint32 pri7_sel : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_BBWR_ARB_PRI_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM0_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM1_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM2_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM3_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM4_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM5_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM6_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM7_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM8_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM9_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM10_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM11_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM12_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM13_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM14_s;


typedef union {
	struct {
		hwint32 pri0_sel : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 pri1_sel : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 pri2_sel : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 pri3_sel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 pri4_sel : 4;	/* 16:19 sw=RW hw=RO 0x0  */
		hwint32 pri5_sel : 4;	/* 20:23 sw=RW hw=RO 0x0  */
		hwint32 reserved24 : 8;	/* 24:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_ARB_PRI_SRAM15_s;


typedef union {
	struct {
		hwint32 sram0_clkg : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 sram1_clkg : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 sram2_clkg : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 sram3_clkg : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 sram4_clkg : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 sram5_clkg : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 sram6_clkg : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 sram7_clkg : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 sram8_clkg : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 sram9_clkg : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 sram10_clkg : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 sram11_clkg : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 sram12_clkg : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 sram13_clkg : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 sram14_clkg : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 sram15_clkg : 1;	/* 15:15 sw=RW hw=RO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_CLKG_CTRL_s;


typedef union {
	struct {
		hwint32 srst : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRST_CTRL_s;


typedef union {
	struct {
		hwint32 bbrd_arb_pri_cfg_err : 1;	/* 0:0 sw=RC hw=RO 0x0  */
		hwint32 bbwr_arb_pri_cfg_err : 1;	/* 1:1 sw=RC hw=RO 0x0  */
		hwint32 sram0_arb_pri_cfg_err : 1;	/* 2:2 sw=RC hw=RO 0x0  */
		hwint32 sram1_arb_pri_cfg_err : 1;	/* 3:3 sw=RC hw=RO 0x0  */
		hwint32 sram2_arb_pri_cfg_err : 1;	/* 4:4 sw=RC hw=RO 0x0  */
		hwint32 sram3_arb_pri_cfg_err : 1;	/* 5:5 sw=RC hw=RO 0x0  */
		hwint32 sram4_arb_pri_cfg_err : 1;	/* 6:6 sw=RC hw=RO 0x0  */
		hwint32 sram5_arb_pri_cfg_err : 1;	/* 7:7 sw=RC hw=RO 0x0  */
		hwint32 sram6_arb_pri_cfg_err : 1;	/* 8:8 sw=RC hw=RO 0x0  */
		hwint32 sram7_arb_pri_cfg_err : 1;	/* 9:9 sw=RC hw=RO 0x0  */
		hwint32 sram8_arb_pri_cfg_err : 1;	/* 10:10 sw=RC hw=RO 0x0  */
		hwint32 sram9_arb_pri_cfg_err : 1;	/* 11:11 sw=RC hw=RO 0x0  */
		hwint32 sram10_arb_pri_cfg_err : 1;	/* 12:12 sw=RC hw=RO 0x0  */
		hwint32 sram11_arb_pri_cfg_err : 1;	/* 13:13 sw=RC hw=RO 0x0  */
		hwint32 sram12_arb_pri_cfg_err : 1;	/* 14:14 sw=RC hw=RO 0x0  */
		hwint32 sram13_arb_pri_cfg_err : 1;	/* 15:15 sw=RC hw=RO 0x0  */
		hwint32 sram14_arb_pri_cfg_err : 1;	/* 16:16 sw=RC hw=RO 0x0  */
		hwint32 sram15_arb_pri_cfg_err : 1;	/* 17:17 sw=RC hw=RO 0x0  */
		hwint32 reserved18 : 14;	/* 18:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_DBG0_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SM_SRAM_TIM_CTRL_s;


typedef struct {
	SM_ARB_CTRL_s  sm_arb_ctrl;
	hwint8 filler0[0xc];
	SM_BBRD_ARB_PRI_s  sm_bbrd_arb_pri;
	SM_BBWR_ARB_PRI_s  sm_bbwr_arb_pri;
	hwint8 filler1[0x28];
	SM_SRAM_ARB_PRI_SRAM0_s  sm_sram_arb_pri_sram0;
	SM_SRAM_ARB_PRI_SRAM1_s  sm_sram_arb_pri_sram1;
	SM_SRAM_ARB_PRI_SRAM2_s  sm_sram_arb_pri_sram2;
	SM_SRAM_ARB_PRI_SRAM3_s  sm_sram_arb_pri_sram3;
	SM_SRAM_ARB_PRI_SRAM4_s  sm_sram_arb_pri_sram4;
	SM_SRAM_ARB_PRI_SRAM5_s  sm_sram_arb_pri_sram5;
	SM_SRAM_ARB_PRI_SRAM6_s  sm_sram_arb_pri_sram6;
	SM_SRAM_ARB_PRI_SRAM7_s  sm_sram_arb_pri_sram7;
	SM_SRAM_ARB_PRI_SRAM8_s  sm_sram_arb_pri_sram8;
	SM_SRAM_ARB_PRI_SRAM9_s  sm_sram_arb_pri_sram9;
	SM_SRAM_ARB_PRI_SRAM10_s  sm_sram_arb_pri_sram10;
	SM_SRAM_ARB_PRI_SRAM11_s  sm_sram_arb_pri_sram11;
	SM_SRAM_ARB_PRI_SRAM12_s  sm_sram_arb_pri_sram12;
	SM_SRAM_ARB_PRI_SRAM13_s  sm_sram_arb_pri_sram13;
	SM_SRAM_ARB_PRI_SRAM14_s  sm_sram_arb_pri_sram14;
	SM_SRAM_ARB_PRI_SRAM15_s  sm_sram_arb_pri_sram15;
	SM_CLKG_CTRL_s  sm_clkg_ctrl;
	SM_SRST_CTRL_s  sm_srst_ctrl;
	hwint8 filler2[0x78];
	SM_DBG0_s  sm_dbg0;
	hwint8 filler3[0x1fc];
	SM_SRAM_TIM_CTRL_s  sm_sram_tim_ctrl;

} SMB_s;

#define SM_ARB_CTRL_READMASK  0xffffffff
#define SM_ARB_CTRL_WRITEMASK  0x3ffff
#define SM_ARB_CTRL_VOLATILEMASK  0x0
#define SM_ARB_CTRL_RESETMASK  0x3ffff
#define SM_ARB_CTRL_DEFAULT  0x0

#define SM_BBRD_ARB_PRI_READMASK  0xffffffff
#define SM_BBRD_ARB_PRI_WRITEMASK  0xffffffff
#define SM_BBRD_ARB_PRI_VOLATILEMASK  0x0
#define SM_BBRD_ARB_PRI_RESETMASK  0xffffffff
#define SM_BBRD_ARB_PRI_DEFAULT  0x0

#define SM_BBWR_ARB_PRI_READMASK  0xffffffff
#define SM_BBWR_ARB_PRI_WRITEMASK  0xffffffff
#define SM_BBWR_ARB_PRI_VOLATILEMASK  0x0
#define SM_BBWR_ARB_PRI_RESETMASK  0xffffffff
#define SM_BBWR_ARB_PRI_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM0_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM0_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM0_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM0_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM0_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM1_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM1_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM1_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM1_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM1_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM2_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM2_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM2_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM2_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM2_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM3_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM3_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM3_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM3_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM3_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM4_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM4_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM4_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM4_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM4_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM5_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM5_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM5_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM5_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM5_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM6_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM6_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM6_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM6_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM6_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM7_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM7_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM7_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM7_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM7_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM8_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM8_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM8_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM8_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM8_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM9_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM9_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM9_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM9_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM9_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM10_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM10_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM10_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM10_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM10_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM11_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM11_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM11_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM11_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM11_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM12_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM12_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM12_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM12_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM12_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM13_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM13_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM13_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM13_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM13_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM14_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM14_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM14_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM14_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM14_DEFAULT  0x0

#define SM_SRAM_ARB_PRI_SRAM15_READMASK  0xffffffff
#define SM_SRAM_ARB_PRI_SRAM15_WRITEMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM15_VOLATILEMASK  0x0
#define SM_SRAM_ARB_PRI_SRAM15_RESETMASK  0xffffff
#define SM_SRAM_ARB_PRI_SRAM15_DEFAULT  0x0

#define SM_CLKG_CTRL_READMASK  0xffffffff
#define SM_CLKG_CTRL_WRITEMASK  0xffff
#define SM_CLKG_CTRL_VOLATILEMASK  0x0
#define SM_CLKG_CTRL_RESETMASK  0xffff
#define SM_CLKG_CTRL_DEFAULT  0x0

#define SM_SRST_CTRL_READMASK  0xffffffff
#define SM_SRST_CTRL_WRITEMASK  0x1
#define SM_SRST_CTRL_VOLATILEMASK  0x0
#define SM_SRST_CTRL_RESETMASK  0x1
#define SM_SRST_CTRL_DEFAULT  0x0

#define SM_DBG0_READMASK  0xffffffff
#define SM_DBG0_WRITEMASK  0x0
#define SM_DBG0_VOLATILEMASK  0x0
#define SM_DBG0_RESETMASK  0x3ffff
#define SM_DBG0_DEFAULT  0x0

#define SM_SRAM_TIM_CTRL_READMASK  0xffffffff
#define SM_SRAM_TIM_CTRL_WRITEMASK  0x7fff
#define SM_SRAM_TIM_CTRL_VOLATILEMASK  0x0
#define SM_SRAM_TIM_CTRL_RESETMASK  0x7fff
#define SM_SRAM_TIM_CTRL_DEFAULT  0x413




/*block :  MISC */
typedef union {
	struct {
		hwint32 alwayson_rsvd0 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL0_s;


typedef union {
	struct {
		hwint32 alwayson_rsvd1 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL1_s;


typedef union {
	struct {
		hwint32 alwayson_rsvd2 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL2_s;


typedef union {
	struct {
		hwint32 alwayson_rsvd3 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL3_s;


typedef union {
	struct {
		hwint32 to_syssynchclampready : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 to_locknsvtor1 : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 to_locknsmpu1 : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 to_tisbypassack : 4;	/* 4:7 sw=RW hw=RO 0x0  */
		hwint32 to_tihsbypass7to4 : 4;	/* 8:11 sw=RW hw=RO 0x0  */
		hwint32 to_todbgensel : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 to_tinidensel : 8;	/* 16:23 sw=RW hw=RO 0x0  */
		hwint32 to_tisbypassin : 8;	/* 24:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL4_s;


typedef union {
	struct {
		hwint32 tahiti_dig_rsvd1 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL5_s;


typedef union {
	struct {
		hwint32 tahiti_dig_rsvd2 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL6_s;


typedef union {
	struct {
		hwint32 tahiti_dig_rsvd3 : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} WRREG_CTRL7_s;


typedef union {
	struct {
		hwint32 to_i3c_inst_id : 4;	/* 0:3 sw=RW hw=RO 0x0  */
		hwint32 to_i3c_static_addr : 7;	/* 4:10 sw=RW hw=RO 0x0  */
		hwint32 to_i3c_static_addr_en : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 to_i3c_pending_int : 4;	/* 12:15 sw=RW hw=RO 0x0  */
		hwint32 to_i3c_act_mode : 2;	/* 16:17 sw=RW hw=RO 0x0  */
		hwint32 to_i3c_mode_i2c : 1;	/* 18:18 sw=RW hw=RO 0x0  */
		hwint32 to_i3c_slv_test_mode : 1;	/* 19:19 sw=RW hw=RO 0x0  */
		hwint32 reserved20 : 12;	/* 20:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I3C_CTRL_s;


typedef union {
	struct {
		hwint32 dac0_src_sel : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 1;	/* 3:3 sw=RO hw=RO 0x0  */
		hwint32 dac1_src_sel : 3;	/* 4:6 sw=RW hw=RO 0x0  */
		hwint32 reserved7 : 1;	/* 7:7 sw=RO hw=RO 0x0  */
		hwint32 elk_tx_port4_src_sel : 3;	/* 8:10 sw=RW hw=RO 0x0  */
		hwint32 reserved11 : 1;	/* 11:11 sw=RO hw=RO 0x0  */
		hwint32 elk_tx_port5_src_sel : 3;	/* 12:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 1;	/* 15:15 sw=RO hw=RO 0x0  */
		hwint32 elk_tx_port6_src_sel : 3;	/* 16:18 sw=RW hw=RO 0x0  */
		hwint32 reserved19 : 1;	/* 19:19 sw=RO hw=RO 0x0  */
		hwint32 elk_tx_port7_src_sel : 3;	/* 20:22 sw=RW hw=RO 0x0  */
		hwint32 reserved23 : 1;	/* 23:23 sw=RO hw=RO 0x0  */
		hwint32 dac_fifo_start_thrd : 5;	/* 24:28 sw=RW hw=RO 0x0  */
		hwint32 reserved29 : 1;	/* 29:29 sw=RO hw=RO 0x0  */
		hwint32 tws_mode : 1;	/* 30:30 sw=RW hw=RO 0x0  */
		hwint32 adma_chnl_sel : 1;	/* 31:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} DMACH_CTRL_s;


typedef union {
	struct {
		hwint32 rm : 4;	/* 0:3 sw=RW hw=RO 0x3  */
		hwint32 rme : 1;	/* 4:4 sw=RW hw=RO 0x1  */
		hwint32 wpulse : 3;	/* 5:7 sw=RW hw=RO 0x0  */
		hwint32 wa : 3;	/* 8:10 sw=RW hw=RO 0x4  */
		hwint32 ls : 1;	/* 11:11 sw=RW hw=RO 0x0  */
		hwint32 ra : 2;	/* 12:13 sw=RW hw=RO 0x0  */
		hwint32 test1 : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I3C_SRAM_TIM_CTRL_s;


typedef union {
	struct {
		hwint32 i3c_dbgl : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} I3C_DBGL_s;


typedef union {
	struct {
		hwint32 i3c_dbgh : 16;	/* 0:15 sw=RO hw=WO 0x0  */
		hwint32 reserved16 : 16;	/* 16:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} I3C_DBGH_s;


typedef union {
	struct {
		hwint32 apb_st : 1;	/* 0:0 sw=RO hw=WO 0x0  */
		hwint32 reserved1 : 31;	/* 1:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} APB_ST_s;


typedef union {
	struct {
		hwint32 from_cpu1trcena : 1;	/* 0:0 sw=RO hw=WO 0x0  */
		hwint32 from_cpu0trcena : 1;	/* 1:1 sw=RO hw=WO 0x0  */
		hwint32 from_syssynchclampofflow : 1;	/* 2:2 sw=RO hw=WO 0x1  */
		hwint32 from_syssynchclampoffhigh : 1;	/* 3:3 sw=RO hw=WO 0x0  */
		hwint32 from_syssynchclampretofflow : 1;	/* 4:4 sw=RO hw=WO 0x1  */
		hwint32 from_syssynchclampretoffhigh : 1;	/* 5:5 sw=RO hw=WO 0x0  */
		hwint32 from_secrespcfg : 1;	/* 6:6 sw=RO hw=WO 0x0  */
		hwint32 ro_tahiti_dig_rsvd00 : 25;	/* 7:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} RO_REG00_s;


typedef union {
	struct {
		hwint32 ro_tahiti_dig_rsvd01 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} RO_REG01_s;


typedef union {
	struct {
		hwint32 ro_tahiti_dig_rsvd01 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} RO_REG02_s;


typedef union {
	struct {
		hwint32 ro_tahiti_dig_rsvd03 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} RO_REG03_s;


typedef union {
	struct {
		hwint32 bond_option : 4;	/* 0:3 sw=RO hw=WO 0x0  */
		hwint32 ro_tahiti_dig_rsvd10 : 28;	/* 4:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} RO_REG10_s;


typedef union {
	struct {
		hwint32 tahiti_version_id : 32;	/* 0:31 sw=RO hw=WO 0x1  */
	} bf;
	hwint32 dw;
} RO_REG11_s;


typedef union {
	struct {
		hwint32 tahiti_device_id : 32;	/* 0:31 sw=RO hw=WO 0x3397  */
	} bf;
	hwint32 dw;
} RO_REG12_s;


typedef union {
	struct {
		hwint32 ro_tahiti_dig_rsvd13 : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} RO_REG13_s;


typedef union {
	struct {
		hwint32 isp_hstart : 16;	/* 0:15 sw=RW hw=RO 0x0  */
		hwint32 isp_hend : 16;	/* 16:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ISP_CTRL0_s;


typedef union {
	struct {
		hwint32 isp_vstart : 16;	/* 0:15 sw=RW hw=RO 0x0  */
		hwint32 isp_vend : 16;	/* 16:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ISP_CTRL1_s;


typedef union {
	struct {
		hwint32 isp_mode : 2;	/* 0:1 sw=RW hw=RO 0x0  */
		hwint32 isp_bitwidth : 2;	/* 2:3 sw=RW hw=RO 0x0  */
		hwint32 isp_bit_order : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 isp_inv_vsync_vde : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 isp_inv_hsync_hde : 1;	/* 6:6 sw=RW hw=RO 0x0  */
		hwint32 isp_enable : 1;	/* 7:7 sw=RW hw=RO 0x0  */
		hwint32 isp_flush_fifo : 1;	/* 8:8 sw=RW hw=RO 0x0  */
		hwint32 isp_flush_sft : 1;	/* 9:9 sw=RW hw=RO 0x0  */
		hwint32 isp_or_i2s : 1;	/* 10:10 sw=RW hw=RO 0x0  */
		hwint32 isp_nibble_order : 2;	/* 11:12 sw=RW hw=RO 0x0  */
		hwint32 isp_byte_order : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 isp_eob_enable : 1;	/* 14:14 sw=RW hw=RO 0x0  */
		hwint32 reserved15 : 17;	/* 15:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ISP_CTRL2_s;


typedef union {
	struct {
		hwint32 isp_frame_num : 16;	/* 0:15 sw=RO hw=RW 0x0  */
		hwint32 isp_bitscnt : 6;	/* 16:21 sw=RO hw=RW 0x0  */
		hwint32 isp_datflush : 1;	/* 22:22 sw=RO hw=RW 0x0  */
		hwint32 isp_shifter_emp : 1;	/* 23:23 sw=RO hw=RW 0x0  */
		hwint32 isp_shifter_full : 1;	/* 24:24 sw=RO hw=RW 0x0  */
		hwint32 isp_rx_fifo_emp : 1;	/* 25:25 sw=RO hw=RW 0x0  */
		hwint32 isp_rx_fifo_full : 1;	/* 26:26 sw=RO hw=RW 0x0  */
		hwint32 isp_frame_end : 1;	/* 27:27 sw=RO hw=RW 0x0  */
		hwint32 reserved28 : 4;	/* 28:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} ISP_STATE_s;


typedef struct {
	WRREG_CTRL0_s  wrreg_ctrl0;
	WRREG_CTRL1_s  wrreg_ctrl1;
	WRREG_CTRL2_s  wrreg_ctrl2;
	WRREG_CTRL3_s  wrreg_ctrl3;
	WRREG_CTRL4_s  wrreg_ctrl4;
	WRREG_CTRL5_s  wrreg_ctrl5;
	WRREG_CTRL6_s  wrreg_ctrl6;
	WRREG_CTRL7_s  wrreg_ctrl7;
	hwint8 filler0[0xe8];
	I3C_CTRL_s  i3c_ctrl;
	DMACH_CTRL_s  dmach_ctrl;
	I3C_SRAM_TIM_CTRL_s  i3c_sram_tim_ctrl;
	hwint8 filler1[0x7c];
	I3C_DBGL_s  i3c_dbgl;
	I3C_DBGH_s  i3c_dbgh;
	hwint8 filler2[0x8];
	APB_ST_s  apb_st;
	RO_REG00_s  ro_reg00;
	RO_REG01_s  ro_reg01;
	RO_REG02_s  ro_reg02;
	RO_REG03_s  ro_reg03;
	RO_REG10_s  ro_reg10;
	RO_REG11_s  ro_reg11;
	RO_REG12_s  ro_reg12;
	RO_REG13_s  ro_reg13;
	hwint8 filler3[0x3c];
	ISP_CTRL0_s  isp_ctrl0;
	hwint8 filler4[0xc];
	ISP_CTRL1_s  isp_ctrl1;
	hwint8 filler5[0xc];
	ISP_CTRL2_s  isp_ctrl2;
	hwint8 filler6[0xc];
	ISP_STATE_s  isp_state;

} MISC_s;

#define WRREG_CTRL0_READMASK  0xffffffff
#define WRREG_CTRL0_WRITEMASK  0xffffffff
#define WRREG_CTRL0_VOLATILEMASK  0x0
#define WRREG_CTRL0_RESETMASK  0xffffffff
#define WRREG_CTRL0_DEFAULT  0x0

#define WRREG_CTRL1_READMASK  0xffffffff
#define WRREG_CTRL1_WRITEMASK  0xffffffff
#define WRREG_CTRL1_VOLATILEMASK  0x0
#define WRREG_CTRL1_RESETMASK  0xffffffff
#define WRREG_CTRL1_DEFAULT  0x0

#define WRREG_CTRL2_READMASK  0xffffffff
#define WRREG_CTRL2_WRITEMASK  0xffffffff
#define WRREG_CTRL2_VOLATILEMASK  0x0
#define WRREG_CTRL2_RESETMASK  0xffffffff
#define WRREG_CTRL2_DEFAULT  0x0

#define WRREG_CTRL3_READMASK  0xffffffff
#define WRREG_CTRL3_WRITEMASK  0xffffffff
#define WRREG_CTRL3_VOLATILEMASK  0x0
#define WRREG_CTRL3_RESETMASK  0xffffffff
#define WRREG_CTRL3_DEFAULT  0x0

#define WRREG_CTRL4_READMASK  0xffffffff
#define WRREG_CTRL4_WRITEMASK  0xfffffff7
#define WRREG_CTRL4_VOLATILEMASK  0x0
#define WRREG_CTRL4_RESETMASK  0xfffffff7
#define WRREG_CTRL4_DEFAULT  0x1

#define WRREG_CTRL5_READMASK  0xffffffff
#define WRREG_CTRL5_WRITEMASK  0xffffffff
#define WRREG_CTRL5_VOLATILEMASK  0x0
#define WRREG_CTRL5_RESETMASK  0xffffffff
#define WRREG_CTRL5_DEFAULT  0x0

#define WRREG_CTRL6_READMASK  0xffffffff
#define WRREG_CTRL6_WRITEMASK  0xffffffff
#define WRREG_CTRL6_VOLATILEMASK  0x0
#define WRREG_CTRL6_RESETMASK  0xffffffff
#define WRREG_CTRL6_DEFAULT  0x0

#define WRREG_CTRL7_READMASK  0xffffffff
#define WRREG_CTRL7_WRITEMASK  0xffffffff
#define WRREG_CTRL7_VOLATILEMASK  0x0
#define WRREG_CTRL7_RESETMASK  0xffffffff
#define WRREG_CTRL7_DEFAULT  0x0

#define I3C_CTRL_READMASK  0xffffffff
#define I3C_CTRL_WRITEMASK  0xfffff
#define I3C_CTRL_VOLATILEMASK  0x0
#define I3C_CTRL_RESETMASK  0xfffff
#define I3C_CTRL_DEFAULT  0x0

#define DMACH_CTRL_READMASK  0xffffffff
#define DMACH_CTRL_WRITEMASK  0xdf777777
#define DMACH_CTRL_VOLATILEMASK  0x0
#define DMACH_CTRL_RESETMASK  0xdf777777
#define DMACH_CTRL_DEFAULT  0x0

#define I3C_SRAM_TIM_CTRL_READMASK  0xffffffff
#define I3C_SRAM_TIM_CTRL_WRITEMASK  0x7fff
#define I3C_SRAM_TIM_CTRL_VOLATILEMASK  0x0
#define I3C_SRAM_TIM_CTRL_RESETMASK  0x7fff
#define I3C_SRAM_TIM_CTRL_DEFAULT  0x413

#define I3C_DBGL_READMASK  0xffffffff
#define I3C_DBGL_WRITEMASK  0x0
#define I3C_DBGL_VOLATILEMASK  0xffffffff
#define I3C_DBGL_RESETMASK  0xffffffff
#define I3C_DBGL_DEFAULT  0x0

#define I3C_DBGH_READMASK  0xffffffff
#define I3C_DBGH_WRITEMASK  0x0
#define I3C_DBGH_VOLATILEMASK  0xffff
#define I3C_DBGH_RESETMASK  0xffff
#define I3C_DBGH_DEFAULT  0x0

#define APB_ST_READMASK  0xffffffff
#define APB_ST_WRITEMASK  0x0
#define APB_ST_VOLATILEMASK  0x1
#define APB_ST_RESETMASK  0x1
#define APB_ST_DEFAULT  0x0

#define RO_REG00_READMASK  0xffffffff
#define RO_REG00_WRITEMASK  0x0
#define RO_REG00_VOLATILEMASK  0xffffffff
#define RO_REG00_RESETMASK  0xffffffff
#define RO_REG00_DEFAULT  0x14

#define RO_REG01_READMASK  0xffffffff
#define RO_REG01_WRITEMASK  0x0
#define RO_REG01_VOLATILEMASK  0xffffffff
#define RO_REG01_RESETMASK  0xffffffff
#define RO_REG01_DEFAULT  0x0

#define RO_REG02_READMASK  0xffffffff
#define RO_REG02_WRITEMASK  0x0
#define RO_REG02_VOLATILEMASK  0xffffffff
#define RO_REG02_RESETMASK  0xffffffff
#define RO_REG02_DEFAULT  0x0

#define RO_REG03_READMASK  0xffffffff
#define RO_REG03_WRITEMASK  0x0
#define RO_REG03_VOLATILEMASK  0xffffffff
#define RO_REG03_RESETMASK  0xffffffff
#define RO_REG03_DEFAULT  0x0

#define RO_REG10_READMASK  0xffffffff
#define RO_REG10_WRITEMASK  0x0
#define RO_REG10_VOLATILEMASK  0xffffffff
#define RO_REG10_RESETMASK  0xffffffff
#define RO_REG10_DEFAULT  0x0

#define RO_REG11_READMASK  0xffffffff
#define RO_REG11_WRITEMASK  0x0
#define RO_REG11_VOLATILEMASK  0xffffffff
#define RO_REG11_RESETMASK  0xffffffff
#define RO_REG11_DEFAULT  0x1

#define RO_REG12_READMASK  0xffffffff
#define RO_REG12_WRITEMASK  0x0
#define RO_REG12_VOLATILEMASK  0xffffffff
#define RO_REG12_RESETMASK  0xffffffff
#define RO_REG12_DEFAULT  0x3397

#define RO_REG13_READMASK  0xffffffff
#define RO_REG13_WRITEMASK  0x0
#define RO_REG13_VOLATILEMASK  0xffffffff
#define RO_REG13_RESETMASK  0xffffffff
#define RO_REG13_DEFAULT  0x0

#define ISP_CTRL0_READMASK  0xffffffff
#define ISP_CTRL0_WRITEMASK  0xffffffff
#define ISP_CTRL0_VOLATILEMASK  0x0
#define ISP_CTRL0_RESETMASK  0xffffffff
#define ISP_CTRL0_DEFAULT  0x0

#define ISP_CTRL1_READMASK  0xffffffff
#define ISP_CTRL1_WRITEMASK  0xffffffff
#define ISP_CTRL1_VOLATILEMASK  0x0
#define ISP_CTRL1_RESETMASK  0xffffffff
#define ISP_CTRL1_DEFAULT  0x0

#define ISP_CTRL2_READMASK  0xffffffff
#define ISP_CTRL2_WRITEMASK  0x7fff
#define ISP_CTRL2_VOLATILEMASK  0x0
#define ISP_CTRL2_RESETMASK  0x7fff
#define ISP_CTRL2_DEFAULT  0x0

#define ISP_STATE_READMASK  0xffffffff
#define ISP_STATE_WRITEMASK  0x0
#define ISP_STATE_VOLATILEMASK  0xfffffff
#define ISP_STATE_RESETMASK  0xfffffff
#define ISP_STATE_DEFAULT  0x0




/*block :  SYNC */
typedef union {
	struct {
		hwint32 cmd : 3;	/* 0:2 sw=RW hw=RO 0x0  */
		hwint32 reserved3 : 29;	/* 3:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMD_s;


typedef union {
	struct {
		hwint32 data : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_DATA_s;


typedef union {
	struct {
		hwint32 free_cnt_snapshoot : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_FREE_CNT_SNAPSHOOT_s;


typedef union {
	struct {
		hwint32 dly : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_DLY_s;


typedef union {
	struct {
		hwint32 dac_fore_event_set : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_fore_event_set : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_fore_event_set : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_fore_event_set : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_fore_event_set : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_fore_event_set : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_fore_event_set : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_fore_event_set : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_fore_event_set : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_fore_event_set : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_FORCE_EVENT_SET_s;


typedef union {
	struct {
		hwint32 dac_event_pulse : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_event_pulse : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 adclp_event_pulse : 5;	/* 2:6 sw=RW hw=RO 0x1f  */
		hwint32 adcll_event_pulse : 5;	/* 7:11 sw=RW hw=RO 0x1f  */
		hwint32 llr0_event_pulse : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 llr1_event_pulse : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 adma_event_pulse : 12;	/* 14:25 sw=RW hw=RO 0xfff  */
		hwint32 i2s0_event_pulse : 1;	/* 26:26 sw=RW hw=RO 0x1  */
		hwint32 i2s1_event_pulse : 1;	/* 27:27 sw=RW hw=RO 0x1  */
		hwint32 cpu_event_pulse : 4;	/* 28:31 sw=RW hw=RO 0xf  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_PULSE_s;


typedef union {
	struct {
		hwint32 dac_event_cdc : 1;	/* 0:0 sw=RW hw=RO 0x1  */
		hwint32 dac_clk_event_cdc : 1;	/* 1:1 sw=RW hw=RO 0x1  */
		hwint32 adclp_event_cdc : 5;	/* 2:6 sw=RW hw=RO 0x1f  */
		hwint32 adcll_event_cdc : 5;	/* 7:11 sw=RW hw=RO 0x1f  */
		hwint32 llr0_event_cdc : 1;	/* 12:12 sw=RW hw=RO 0x1  */
		hwint32 llr1_event_cdc : 1;	/* 13:13 sw=RW hw=RO 0x1  */
		hwint32 adma_event_cdc : 12;	/* 14:25 sw=RW hw=RO 0xfff  */
		hwint32 i2s0_event_cdc : 1;	/* 26:26 sw=RW hw=RO 0x1  */
		hwint32 i2s1_event_cdc : 1;	/* 27:27 sw=RW hw=RO 0x1  */
		hwint32 cpu_event_cdc : 4;	/* 28:31 sw=RW hw=RO 0xf  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_CDC_s;


typedef union {
	struct {
		hwint32 cmp0_mask : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 cmp1_mask : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 cmp2_mask : 1;	/* 2:2 sw=RW hw=RO 0x0  */
		hwint32 cmp3_mask : 1;	/* 3:3 sw=RW hw=RO 0x0  */
		hwint32 cmp4_mask : 1;	/* 4:4 sw=RW hw=RO 0x0  */
		hwint32 cmp5_mask : 1;	/* 5:5 sw=RW hw=RO 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_MASK_s;


typedef union {
	struct {
		hwint32 cmp : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_0_s;


typedef union {
	struct {
		hwint32 cmp : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_1_s;


typedef union {
	struct {
		hwint32 cmp : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_2_s;


typedef union {
	struct {
		hwint32 cmp : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_3_s;


typedef union {
	struct {
		hwint32 cmp : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_4_s;


typedef union {
	struct {
		hwint32 cmp : 32;	/* 0:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_5_s;


typedef union {
	struct {
		hwint32 dac_event_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_event_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_event_en : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_event_en : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_event_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_event_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_event_en : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_event_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_event_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_event_en : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_EN_0_s;


typedef union {
	struct {
		hwint32 dac_event_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_event_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_event_en : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_event_en : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_event_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_event_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_event_en : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_event_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_event_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_event_en : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_EN_1_s;


typedef union {
	struct {
		hwint32 dac_event_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_event_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_event_en : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_event_en : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_event_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_event_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_event_en : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_event_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_event_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_event_en : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_EN_2_s;


typedef union {
	struct {
		hwint32 dac_event_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_event_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_event_en : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_event_en : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_event_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_event_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_event_en : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_event_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_event_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_event_en : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_EN_3_s;


typedef union {
	struct {
		hwint32 dac_event_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_event_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_event_en : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_event_en : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_event_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_event_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_event_en : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_event_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_event_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_event_en : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_EN_4_s;


typedef union {
	struct {
		hwint32 dac_event_en : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_event_en : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_event_en : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_event_en : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_event_en : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_event_en : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_event_en : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_event_en : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_event_en : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_event_en : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_EN_5_s;


typedef union {
	struct {
		hwint32 cmp0_match_flg : 1;	/* 0:0 sw=W1C hw=RO 0x0  */
		hwint32 cmp1_match_flg : 1;	/* 1:1 sw=W1C hw=RO 0x0  */
		hwint32 cmp2_match_flg : 1;	/* 2:2 sw=W1C hw=RO 0x0  */
		hwint32 cmp3_match_flg : 1;	/* 3:3 sw=W1C hw=RO 0x0  */
		hwint32 cmp4_match_flg : 1;	/* 4:4 sw=W1C hw=RO 0x0  */
		hwint32 cmp5_match_flg : 1;	/* 5:5 sw=W1C hw=RO 0x0  */
		hwint32 reserved6 : 26;	/* 6:31 sw=RO hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CMP_MATCH_FLG_s;


typedef union {
	struct {
		hwint32 dac_clr_event_flg : 1;	/* 0:0 sw=RW hw=RO 0x0  */
		hwint32 dac_clk_clr_event_flg : 1;	/* 1:1 sw=RW hw=RO 0x0  */
		hwint32 adclp_clr_event_flg : 5;	/* 2:6 sw=RW hw=RO 0x0  */
		hwint32 adcll_clr_event_flg : 5;	/* 7:11 sw=RW hw=RO 0x0  */
		hwint32 llr0_clr_event_flg : 1;	/* 12:12 sw=RW hw=RO 0x0  */
		hwint32 llr1_clr_event_flg : 1;	/* 13:13 sw=RW hw=RO 0x0  */
		hwint32 adma_clr_event_flg : 12;	/* 14:25 sw=RW hw=RO 0x0  */
		hwint32 i2s0_clr_event_flg : 1;	/* 26:26 sw=RW hw=RO 0x0  */
		hwint32 i2s1_clr_event_flg : 1;	/* 27:27 sw=RW hw=RO 0x0  */
		hwint32 cpu_clr_event_flg : 4;	/* 28:31 sw=RW hw=RO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CLR_EVENT_FLG_s;


typedef union {
	struct {
		hwint32 dac_event_flg : 1;	/* 0:0 sw=RO hw=WO 0x0  */
		hwint32 dac_clk_event_flg : 1;	/* 1:1 sw=RO hw=WO 0x0  */
		hwint32 adclp_event_flg : 5;	/* 2:6 sw=RO hw=WO 0x0  */
		hwint32 adcll_event_flg : 5;	/* 7:11 sw=RO hw=WO 0x0  */
		hwint32 llr0_event_flg : 1;	/* 12:12 sw=RO hw=WO 0x0  */
		hwint32 llr1_event_flg : 1;	/* 13:13 sw=RO hw=WO 0x0  */
		hwint32 adma_event_flg : 12;	/* 14:25 sw=RO hw=WO 0x0  */
		hwint32 i2s0_event_flg : 1;	/* 26:26 sw=RO hw=WO 0x0  */
		hwint32 i2s1_event_flg : 1;	/* 27:27 sw=RO hw=WO 0x0  */
		hwint32 cpu_event_flg : 4;	/* 28:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_EVENT_FLG_s;


typedef union {
	struct {
		hwint32 free_sync_cnt : 32;	/* 0:31 sw=RO hw=WO 0x0  */
	} bf;
	hwint32 dw;
} SYNC_CNT_s;


typedef struct {
	SYNC_CMD_s  sync_cmd;
	SYNC_DATA_s  sync_data;
	SYNC_FREE_CNT_SNAPSHOOT_s  sync_free_cnt_snapshoot;
	SYNC_DLY_s  sync_dly;
	SYNC_FORCE_EVENT_SET_s  sync_force_event_set;
	SYNC_EVENT_PULSE_s  sync_event_pulse;
	SYNC_EVENT_CDC_s  sync_event_cdc;
	SYNC_CMP_MASK_s  sync_cmp_mask;
	SYNC_CMP_0_s  sync_cmp_0;
	SYNC_CMP_1_s  sync_cmp_1;
	SYNC_CMP_2_s  sync_cmp_2;
	SYNC_CMP_3_s  sync_cmp_3;
	SYNC_CMP_4_s  sync_cmp_4;
	SYNC_CMP_5_s  sync_cmp_5;
	hwint8 filler0[0x8];
	SYNC_EVENT_EN_0_s  sync_event_en_0;
	SYNC_EVENT_EN_1_s  sync_event_en_1;
	SYNC_EVENT_EN_2_s  sync_event_en_2;
	SYNC_EVENT_EN_3_s  sync_event_en_3;
	SYNC_EVENT_EN_4_s  sync_event_en_4;
	SYNC_EVENT_EN_5_s  sync_event_en_5;
	hwint8 filler1[0x8];
	SYNC_CMP_MATCH_FLG_s  sync_cmp_match_flg;
	SYNC_CLR_EVENT_FLG_s  sync_clr_event_flg;
	SYNC_EVENT_FLG_s  sync_event_flg;
	SYNC_CNT_s  sync_cnt;

} SYNC_s;

#define SYNC_CMD_READMASK  0xffffffff
#define SYNC_CMD_WRITEMASK  0x7
#define SYNC_CMD_VOLATILEMASK  0x0
#define SYNC_CMD_RESETMASK  0x7
#define SYNC_CMD_DEFAULT  0x0

#define SYNC_DATA_READMASK  0xffffffff
#define SYNC_DATA_WRITEMASK  0xffffffff
#define SYNC_DATA_VOLATILEMASK  0x0
#define SYNC_DATA_RESETMASK  0xffffffff
#define SYNC_DATA_DEFAULT  0x0

#define SYNC_FREE_CNT_SNAPSHOOT_READMASK  0xffffffff
#define SYNC_FREE_CNT_SNAPSHOOT_WRITEMASK  0x0
#define SYNC_FREE_CNT_SNAPSHOOT_VOLATILEMASK  0xffffffff
#define SYNC_FREE_CNT_SNAPSHOOT_RESETMASK  0xffffffff
#define SYNC_FREE_CNT_SNAPSHOOT_DEFAULT  0x0

#define SYNC_DLY_READMASK  0xffffffff
#define SYNC_DLY_WRITEMASK  0xffffffff
#define SYNC_DLY_VOLATILEMASK  0x0
#define SYNC_DLY_RESETMASK  0xffffffff
#define SYNC_DLY_DEFAULT  0x0

#define SYNC_FORCE_EVENT_SET_READMASK  0xffffffff
#define SYNC_FORCE_EVENT_SET_WRITEMASK  0xffffffff
#define SYNC_FORCE_EVENT_SET_VOLATILEMASK  0x0
#define SYNC_FORCE_EVENT_SET_RESETMASK  0xffffffff
#define SYNC_FORCE_EVENT_SET_DEFAULT  0x0

#define SYNC_EVENT_PULSE_READMASK  0xffffffff
#define SYNC_EVENT_PULSE_WRITEMASK  0xffffffff
#define SYNC_EVENT_PULSE_VOLATILEMASK  0x0
#define SYNC_EVENT_PULSE_RESETMASK  0xffffffff
#define SYNC_EVENT_PULSE_DEFAULT  0xffffffff

#define SYNC_EVENT_CDC_READMASK  0xffffffff
#define SYNC_EVENT_CDC_WRITEMASK  0xffffffff
#define SYNC_EVENT_CDC_VOLATILEMASK  0x0
#define SYNC_EVENT_CDC_RESETMASK  0xffffffff
#define SYNC_EVENT_CDC_DEFAULT  0xffffffff

#define SYNC_CMP_MASK_READMASK  0xffffffff
#define SYNC_CMP_MASK_WRITEMASK  0x3f
#define SYNC_CMP_MASK_VOLATILEMASK  0x0
#define SYNC_CMP_MASK_RESETMASK  0x3f
#define SYNC_CMP_MASK_DEFAULT  0x0

#define SYNC_CMP_0_READMASK  0xffffffff
#define SYNC_CMP_0_WRITEMASK  0xffffffff
#define SYNC_CMP_0_VOLATILEMASK  0x0
#define SYNC_CMP_0_RESETMASK  0xffffffff
#define SYNC_CMP_0_DEFAULT  0x0

#define SYNC_CMP_1_READMASK  0xffffffff
#define SYNC_CMP_1_WRITEMASK  0xffffffff
#define SYNC_CMP_1_VOLATILEMASK  0x0
#define SYNC_CMP_1_RESETMASK  0xffffffff
#define SYNC_CMP_1_DEFAULT  0x0

#define SYNC_CMP_2_READMASK  0xffffffff
#define SYNC_CMP_2_WRITEMASK  0xffffffff
#define SYNC_CMP_2_VOLATILEMASK  0x0
#define SYNC_CMP_2_RESETMASK  0xffffffff
#define SYNC_CMP_2_DEFAULT  0x0

#define SYNC_CMP_3_READMASK  0xffffffff
#define SYNC_CMP_3_WRITEMASK  0xffffffff
#define SYNC_CMP_3_VOLATILEMASK  0x0
#define SYNC_CMP_3_RESETMASK  0xffffffff
#define SYNC_CMP_3_DEFAULT  0x0

#define SYNC_CMP_4_READMASK  0xffffffff
#define SYNC_CMP_4_WRITEMASK  0xffffffff
#define SYNC_CMP_4_VOLATILEMASK  0x0
#define SYNC_CMP_4_RESETMASK  0xffffffff
#define SYNC_CMP_4_DEFAULT  0x0

#define SYNC_CMP_5_READMASK  0xffffffff
#define SYNC_CMP_5_WRITEMASK  0xffffffff
#define SYNC_CMP_5_VOLATILEMASK  0x0
#define SYNC_CMP_5_RESETMASK  0xffffffff
#define SYNC_CMP_5_DEFAULT  0x0

#define SYNC_EVENT_EN_0_READMASK  0xffffffff
#define SYNC_EVENT_EN_0_WRITEMASK  0xffffffff
#define SYNC_EVENT_EN_0_VOLATILEMASK  0x0
#define SYNC_EVENT_EN_0_RESETMASK  0xffffffff
#define SYNC_EVENT_EN_0_DEFAULT  0x0

#define SYNC_EVENT_EN_1_READMASK  0xffffffff
#define SYNC_EVENT_EN_1_WRITEMASK  0xffffffff
#define SYNC_EVENT_EN_1_VOLATILEMASK  0x0
#define SYNC_EVENT_EN_1_RESETMASK  0xffffffff
#define SYNC_EVENT_EN_1_DEFAULT  0x0

#define SYNC_EVENT_EN_2_READMASK  0xffffffff
#define SYNC_EVENT_EN_2_WRITEMASK  0xffffffff
#define SYNC_EVENT_EN_2_VOLATILEMASK  0x0
#define SYNC_EVENT_EN_2_RESETMASK  0xffffffff
#define SYNC_EVENT_EN_2_DEFAULT  0x0

#define SYNC_EVENT_EN_3_READMASK  0xffffffff
#define SYNC_EVENT_EN_3_WRITEMASK  0xffffffff
#define SYNC_EVENT_EN_3_VOLATILEMASK  0x0
#define SYNC_EVENT_EN_3_RESETMASK  0xffffffff
#define SYNC_EVENT_EN_3_DEFAULT  0x0

#define SYNC_EVENT_EN_4_READMASK  0xffffffff
#define SYNC_EVENT_EN_4_WRITEMASK  0xffffffff
#define SYNC_EVENT_EN_4_VOLATILEMASK  0x0
#define SYNC_EVENT_EN_4_RESETMASK  0xffffffff
#define SYNC_EVENT_EN_4_DEFAULT  0x0

#define SYNC_EVENT_EN_5_READMASK  0xffffffff
#define SYNC_EVENT_EN_5_WRITEMASK  0xffffffff
#define SYNC_EVENT_EN_5_VOLATILEMASK  0x0
#define SYNC_EVENT_EN_5_RESETMASK  0xffffffff
#define SYNC_EVENT_EN_5_DEFAULT  0x0

#define SYNC_CMP_MATCH_FLG_READMASK  0xffffffc0
#define SYNC_CMP_MATCH_FLG_WRITEMASK  0x3f
#define SYNC_CMP_MATCH_FLG_VOLATILEMASK  0x0
#define SYNC_CMP_MATCH_FLG_RESETMASK  0x3f
#define SYNC_CMP_MATCH_FLG_DEFAULT  0x0

#define SYNC_CLR_EVENT_FLG_READMASK  0xffffffff
#define SYNC_CLR_EVENT_FLG_WRITEMASK  0xffffffff
#define SYNC_CLR_EVENT_FLG_VOLATILEMASK  0x0
#define SYNC_CLR_EVENT_FLG_RESETMASK  0xffffffff
#define SYNC_CLR_EVENT_FLG_DEFAULT  0x0

#define SYNC_EVENT_FLG_READMASK  0xffffffff
#define SYNC_EVENT_FLG_WRITEMASK  0x0
#define SYNC_EVENT_FLG_VOLATILEMASK  0xffffffff
#define SYNC_EVENT_FLG_RESETMASK  0xffffffff
#define SYNC_EVENT_FLG_DEFAULT  0x0

#define SYNC_CNT_READMASK  0xffffffff
#define SYNC_CNT_WRITEMASK  0x0
#define SYNC_CNT_VOLATILEMASK  0xffffffff
#define SYNC_CNT_RESETMASK  0xffffffff
#define SYNC_CNT_DEFAULT  0x0


#define QSPI_s_SIZE  0x58
#define QSPI_CSR_SIZE  0x4
#define TRANSFER_CTL_PRELOAD_SIZE  0x4
#define TRANSFER_CTL_PDMA_SIZE  0x4
#define TRANSFER_CTL_REGXFER_SIZE  0x4
#define TRANSFER_CTL_XIP_SIZE  0x4
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_SIZE  0x4
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_SIZE  0x4
#define QSPI_PROGRAMMED_DMA_LEN_SIZE  0x4
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_SIZE  0x4
#define QSPI_PROGRAMMED_DMA_INT_ADDR_SIZE  0x4
#define QSPI_XIP_XFER_CONFIG_SIZE  0x4
#define QSPI_XIP_W0_EXT_ADDR_SIZE  0x4
#define QSPI_XIP_W0_LEN_SIZE  0x4
#define QSPI_REG_XFER_CONFIG_SIZE  0x4
#define QSPI_REG_XFER_LEN_SIZE  0x4
#define QSPI_REG_XFER_EXT_ADDR_SIZE  0x4
#define QSPI_REG_XFER_DATA_SIZE  0x4
#define QSPI_INT_MSK_SIZE  0x4
#define CRC_EXT_ADDR_SIZE  0x4
#define CRC_DATA_LEN_SIZE  0x4
#define CRC_CSR_SIZE  0x4
#define CRC_FEATURE_CODE_SIZE  0x4
#define UART_s_SIZE  0x40
#define UART_REG_FFBRD_SIZE  0x4
#define UART_REG_IEBRD_SIZE  0x4
#define UART_REG_FFCTL_SIZE  0x4
#define UART_REG_FRCTL_SIZE  0x4
#define UART_REG_STATS_SIZE  0x4
#define UART_REG_IRLVL_SIZE  0x4
#define UART_REG_IRCTL_SIZE  0x4
#define UART_REG_TXSTA_SIZE  0x4
#define UART_REG_RXSTA_SIZE  0x4
#define UART_REG_EXBRD_SIZE  0x4
#define UART_REG_CTRL_SIZE  0x4
#define AES_s_SIZE  0x84
#define AES_CSR_SIZE  0x4
#define AES_IER_SIZE  0x4
#define AES_ISR_SIZE  0x4
#define AES_IMR_SIZE  0x4
#define AES_ISMR_SIZE  0x4
#define AES_DR0_SIZE  0x4
#define AES_DR1_SIZE  0x4
#define AES_DR2_SIZE  0x4
#define AES_DR3_SIZE  0x4
#define AES_KR0_SIZE  0x4
#define AES_KR1_SIZE  0x4
#define AES_KR2_SIZE  0x4
#define AES_KR3_SIZE  0x4
#define AES_IVR0_SIZE  0x4
#define AES_IVR1_SIZE  0x4
#define AES_IVR2_SIZE  0x4
#define AES_IVR3_SIZE  0x4
#define AES_DCR_SIZE  0x4
#define GP_MUX_s_SIZE  0xc8
#define GPIO_INTR_RISE_ENA_SIZE  0x4
#define GPIO_INTR_FALL_ENA_SIZE  0x4
#define GPIO_INTR_ENA_SIZE  0x4
#define GPIO_INTR_CLR_SIZE  0x4
#define GPIO_INTR_STATUS_SIZE  0x4
#define GPIO_IN_SW_SIZE  0x4
#define TAHITI_MODE_SIZE  0x4
#define PADCTRL_GPIO0_SIZE  0x4
#define PADCTRL_GPIO1_SIZE  0x4
#define PADCTRL_GPIO2_SIZE  0x4
#define PADCTRL_GPIO3_SIZE  0x4
#define PADCTRL_GPIO4_SIZE  0x4
#define PADCTRL_GPIO5_SIZE  0x4
#define PADCTRL_GPIO6_SIZE  0x4
#define PADCTRL_I2S1_BCLK_SIZE  0x4
#define PADCTRL_I2S1_TX_DAT_SIZE  0x4
#define PADCTRL_I2S1_RX_DAT_SIZE  0x4
#define PADCTRL_I2S1_TX_WS_SIZE  0x4
#define PADCTRL_I2S1_RX_WS_SIZE  0x4
#define PADCTRL_UART_TX_SIZE  0x4
#define PADCTRL_UART_RX_SIZE  0x4
#define PADCTRL_I3C_I2C_SCK_SIZE  0x4
#define PADCTRL_I3C_I2C_SDA_SIZE  0x4
#define PADCTRL_I2C0_M_SCK_SIZE  0x4
#define PADCTRL_I2C0_M_SDA_SIZE  0x4
#define PADCTRL_I2S0_BCLK_SIZE  0x4
#define PADCTRL_I2S0_TX_WS_SIZE  0x4
#define PADCTRL_I2S0_RX_WS_SIZE  0x4
#define PADCTRL_I2S0_TX_DAT_SIZE  0x4
#define PADCTRL_I2S0_RX_DAT_SIZE  0x4
#define PADCTRL_QSPI_CSN_SIZE  0x4
#define PADCTRL_QSPI_CLK_SIZE  0x4
#define PADCTRL_QSPI_D0_SIZE  0x4
#define PADCTRL_QSPI_D1_SIZE  0x4
#define PADCTRL_QSPI_D2_SIZE  0x4
#define PADCTRL_QSPI_D3_SIZE  0x4
#define JTAG_CTRL_SIZE  0x4
#define PADCTRL_DMIC0_CLK_SIZE  0x4
#define PADCTRL_DMIC1_CLK_SIZE  0x4
#define PADCTRL_DMIC2_CLK_SIZE  0x4
#define PADCTRL_MIC0P_SIZE  0x4
#define PADCTRL_MIC0N_SIZE  0x4
#define PADCTRL_MIC1P_SIZE  0x4
#define PADCTRL_MIC1N_SIZE  0x4
#define PADCTRL_TEMP_SNS_SIZE  0x4
#define PADCTRL_MB_SNS_SIZE  0x4
#define GPTEST_MODE_CTRL_SIZE  0x4
#define ADC_s_SIZE  0x44
#define ADC_CLK_CTRL_SIZE  0x4
#define ADC_RST_CTRL_SIZE  0x4
#define ADC_CTRL_SIZE  0x4
#define ADC_CH0_CTRL0_SIZE  0x4
#define ADC_CH0_CTRL1_SIZE  0x4
#define ADC_CH1_CTRL0_SIZE  0x4
#define ADC_CH1_CTRL1_SIZE  0x4
#define ADC_CH2_CTRL0_SIZE  0x4
#define ADC_CH2_CTRL1_SIZE  0x4
#define ADC_CH3_CTRL0_SIZE  0x4
#define ADC_CH3_CTRL1_SIZE  0x4
#define ADC_CH4_CTRL0_SIZE  0x4
#define ADC_CH4_CTRL1_SIZE  0x4
#define ADC_DMIC_CTRL0_SIZE  0x4
#define ADC_DMIC_CTRL1_SIZE  0x4
#define SIDETONE_CTRL_SIZE  0x4
#define ANC_OUT_CTRL_SIZE  0x4
#define I2S_PCM_s_SIZE  0x78
#define I2S0_PCM_REG1_SIZE  0x4
#define I2S0_PCM_REG2_SIZE  0x4
#define I2S0_PCM_REG3_SIZE  0x4
#define I2S0_PCM_REG4_SIZE  0x4
#define I2S0_PCM_REG5_SIZE  0x4
#define I2S0_PCM_REG6_SIZE  0x4
#define I2S0_PCM_REG8_SIZE  0x4
#define I2S0_PCM_REG9_SIZE  0x4
#define I2S0_PCM_REG10_SIZE  0x4
#define I2S0_PCM_REG12_SIZE  0x4
#define I2S0_PCM_REG13_SIZE  0x4
#define I2S0_PCM_REG14_SIZE  0x4
#define I2S1_PCM_REG1_SIZE  0x4
#define I2S1_PCM_REG2_SIZE  0x4
#define I2S1_PCM_REG3_SIZE  0x4
#define I2S1_PCM_REG4_SIZE  0x4
#define I2S1_PCM_REG5_SIZE  0x4
#define I2S1_PCM_REG6_SIZE  0x4
#define I2S1_PCM_REG8_SIZE  0x4
#define I2S1_PCM_REG9_SIZE  0x4
#define I2S1_PCM_REG10_SIZE  0x4
#define I2S1_PCM_REG11_SIZE  0x4
#define I2S1_PCM_REG12_SIZE  0x4
#define I2S1_PCM_REG13_SIZE  0x4
#define I2S1_PCM_REG14_SIZE  0x4
#define HIFI3_WRAPPER_s_SIZE  0x88
#define HIFI3_WRAPPER_HIFI3_CONTROL_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_SIZE  0x4
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_SIZE  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_SIZE  0x4
#define TIMER_s_SIZE  0x60
#define GPTC0_CONTROL_SIZE  0x4
#define GPTC0_WD_CONTROL_SIZE  0x4
#define GPTC0_INT_STAT_SIZE  0x4
#define GPTC0_TERMINAL_COUNT_SIZE  0x4
#define GPTC0_CURRENT_COUNT_SIZE  0x4
#define WD_OUT_CONTROL_SIZE  0x4
#define GPTC1_CONTROL_SIZE  0x4
#define GPTC1_WD_CONTROL_SIZE  0x4
#define GPTC1_INT_STAT_SIZE  0x4
#define GPTC1_TERMINAL_COUNT_SIZE  0x4
#define GPTC1_CURRENT_COUNT_SIZE  0x4
#define SPTC0_CONTROL_SIZE  0x4
#define SPTC0_INT_STAT_SIZE  0x4
#define SPTC0_TERMINAL_COUNT_SIZE  0x4
#define SPTC0_CURRENT_COUNT_SIZE  0x4
#define SPTC0_MEASUREMENT_COUNT_SIZE  0x4
#define SPTC0_MEASUREMENT_TARGET_SIZE  0x4
#define SPTC0_MEASUREMENT_ACCUM_ERROR_SIZE  0x4
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_SIZE  0x4
#define PMU_s_SIZE  0x24
#define PMU_CURRENT_POWER_STATE_SIZE  0x4
#define PMU_PWR_SEQ_CONTROL_SIZE  0x4
#define PMU_PMU_INTERRUPT_SIZE  0x4
#define PMU_PMU_INTERRUPT_ENABLE_SIZE  0x4
#define PMU_PORITY_CONTROL_SIZE  0x4
#define PMU_WAKE_SRC_STATUS_SIZE  0x4
#define PMU_RCOSC_CONTROL_SIZE  0x4
#define EARLINK_TOP_COM_s_SIZE  0x50
#define EARLINK_TIMING_CTRL0_SIZE  0x4
#define EARLINK_TIMING_CTRL1_SIZE  0x4
#define EARLINK_TIMING_CTRL2_SIZE  0x4
#define EARLINK_TIMING_CTRL3_SIZE  0x4
#define EARLINK_CMD_BUF_CTRL_SIZE  0x4
#define EARLINK_DEVICE_CTRL_SIZE  0x4
#define EARLINK_IRQ_TO_SYS_SIZE  0x4
#define EARLINK_IRQ_TO_SYS_ENABLE_SIZE  0x4
#define EARLINK_PORT_IRQ_TO_SYS_SIZE  0x4
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_SIZE  0x4
#define EARLINK_COMMAND_CTRL_RX_BUF_SIZE  0x4
#define EARLINK_COMMAND_RX_DATA_SIZE  0x4
#define EARLINK_PORT_CLK_ENABLE_CONTROL_SIZE  0x4
#define EARLINK_DEVICE_ENABLE_SIZE  0x4
#define EARLINK_TIMING_UPDATE_SYS_SIZE  0x4
#define EARLINK_PHY_CONIFG0_SIZE  0x4
#define EARLINK_PHY_CONIFG1_SIZE  0x4
#define EARLINK_PHY_TEST_SIZE  0x4
#define EARLINK_TEST_BUS_CFG_SIZE  0x4
#define EARLINK_TOP_SLV_s_SIZE  0x18
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_SIZE  0x4
#define EARLINK_IRQ_TO_MASTER_SIZE  0x4
#define EARLINK_IRQ_TO_MASTER_ENABLE_SIZE  0x4
#define EARLINK_PORT_IRQ_TO_MASTER_SIZE  0x4
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_SIZE  0x4
#define EARLINK_TIMING_UPDATE_MASTER_SIZE  0x4
#define EARLINK_TOP_MST_s_SIZE  0xc
#define EARLINK_COMMAND_CTRL_TX_BUF_SIZE  0x4
#define EARLINK_COMMAND_TX_DATA_SIZE  0x4
#define EARLINK_AUDIO_SYNC_DIVIDER_SIZE  0x4
#define EARLINK_PORT_s_SIZE  0x3f4
#define BANK_SWITCH_REGISTER_PORT0_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT0_SIZE  0x4
#define PORT_CTRL_PORT0_SIZE  0x4
#define PORT_ENABLE_PORT0_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT0_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT0_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT0_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT0_SIZE  0x4
#define BULK_CRC_24B_PORT0_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT0_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT0_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT1_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT1_SIZE  0x4
#define PORT_CTRL_PORT1_SIZE  0x4
#define PORT_ENABLE_PORT1_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT1_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT1_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT1_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT1_SIZE  0x4
#define BULK_CRC_24B_PORT1_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT1_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT1_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT2_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT2_SIZE  0x4
#define PORT_CTRL_PORT2_SIZE  0x4
#define PORT_ENABLE_PORT2_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT2_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT2_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT2_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT2_SIZE  0x4
#define BULK_CRC_24B_PORT2_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT2_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT2_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT3_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT3_SIZE  0x4
#define PORT_CTRL_PORT3_SIZE  0x4
#define PORT_ENABLE_PORT3_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT3_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT3_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT3_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT3_SIZE  0x4
#define BULK_CRC_24B_PORT3_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT3_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT3_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT4_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT4_SIZE  0x4
#define PORT_CTRL_PORT4_SIZE  0x4
#define PORT_ENABLE_PORT4_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT4_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT4_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT4_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT4_SIZE  0x4
#define BULK_CRC_24B_PORT4_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT4_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT4_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT5_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT5_SIZE  0x4
#define PORT_CTRL_PORT5_SIZE  0x4
#define PORT_ENABLE_PORT5_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT5_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT5_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT5_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT5_SIZE  0x4
#define BULK_CRC_24B_PORT5_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT5_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT5_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT6_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT6_SIZE  0x4
#define PORT_CTRL_PORT6_SIZE  0x4
#define PORT_ENABLE_PORT6_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT6_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT6_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT6_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT6_SIZE  0x4
#define BULK_CRC_24B_PORT6_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT6_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT6_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT7_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT7_SIZE  0x4
#define PORT_CTRL_PORT7_SIZE  0x4
#define PORT_ENABLE_PORT7_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT7_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT7_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT7_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT7_SIZE  0x4
#define BULK_CRC_24B_PORT7_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT7_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT7_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT8_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT8_SIZE  0x4
#define PORT_CTRL_PORT8_SIZE  0x4
#define PORT_ENABLE_PORT8_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT8_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT8_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT8_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT8_SIZE  0x4
#define BULK_CRC_24B_PORT8_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT8_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT8_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT9_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT9_SIZE  0x4
#define PORT_CTRL_PORT9_SIZE  0x4
#define PORT_ENABLE_PORT9_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT9_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT9_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT9_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT9_SIZE  0x4
#define BULK_CRC_24B_PORT9_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT9_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT9_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT10_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT10_SIZE  0x4
#define PORT_CTRL_PORT10_SIZE  0x4
#define PORT_ENABLE_PORT10_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT10_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT10_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT10_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT10_SIZE  0x4
#define BULK_CRC_24B_PORT10_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT10_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT10_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT11_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT11_SIZE  0x4
#define PORT_CTRL_PORT11_SIZE  0x4
#define PORT_ENABLE_PORT11_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT11_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT11_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT11_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT11_SIZE  0x4
#define BULK_CRC_24B_PORT11_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT11_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT11_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT12_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT12_SIZE  0x4
#define PORT_CTRL_PORT12_SIZE  0x4
#define PORT_ENABLE_PORT12_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT12_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT12_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT12_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT12_SIZE  0x4
#define BULK_CRC_24B_PORT12_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT12_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT12_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT13_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT13_SIZE  0x4
#define PORT_CTRL_PORT13_SIZE  0x4
#define PORT_ENABLE_PORT13_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT13_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT13_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT13_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT13_SIZE  0x4
#define BULK_CRC_24B_PORT13_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT13_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT13_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT14_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT14_SIZE  0x4
#define PORT_CTRL_PORT14_SIZE  0x4
#define PORT_ENABLE_PORT14_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT14_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT14_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT14_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT14_SIZE  0x4
#define BULK_CRC_24B_PORT14_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT14_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT14_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_SIZE  0x4
#define BANK_SWITCH_REGISTER_PORT15_SIZE  0x4
#define ROW_COLUMN_CTRL_PORT15_SIZE  0x4
#define PORT_CTRL_PORT15_SIZE  0x4
#define PORT_ENABLE_PORT15_SIZE  0x4
#define ROW_COLUMN_CTRL_SHADOW_PORT15_SIZE  0x4
#define PORT_CTRL_SHADOW_PORT15_SIZE  0x4
#define PORT_ENABLE_SHADOW_PORT15_SIZE  0x4
#define PORT_FIFO_FLUSH_PORT15_SIZE  0x4
#define BULK_CRC_24B_PORT15_SIZE  0x4
#define PORT_IRQ_TO_MASTER_PORT15_SIZE  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_SIZE  0x4
#define PORT_IRQ_TO_SYS_PORT15_SIZE  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_SIZE  0x4
#define CLOCK_RESET_PORT_s_SIZE  0xcc
#define CR_RST_SFT_0_SIZE  0x4
#define CR_RST_SFT_1_SIZE  0x4
#define CR_RST_SFT_2_SIZE  0x4
#define CR_RST_CON_0_SIZE  0x4
#define CR_CLK_MAIN_SIZE  0x4
#define CR_CLK_PMU_SIZE  0x4
#define CR_CLK_ARM_32K_SIZE  0x4
#define CR_CLK_EARLINK_SIZE  0x4
#define CR_CLK_I2S0_SIZE  0x4
#define CR_CLK_I2S1_SIZE  0x4
#define CR_CLK_I2S_MST_IO_SIZE  0x4
#define CR_CLK_ADC_SIZE  0x4
#define CR_CLK_DAC_SIZE  0x4
#define CR_CLK_DMIC_SIZE  0x4
#define CR_CLK_DSP_0_SIZE  0x4
#define CR_CLK_HIFI3_SIZE  0x4
#define CR_CLK_SSE200_SIZE  0x4
#define CR_CLK_AHB_APB_SIZE  0x4
#define CR_CLK_DMA_SIZE  0x4
#define CR_CLK_AES_SIZE  0x4
#define CR_CLK_SPI_SIZE  0x4
#define CR_CLK_QSPI_SIZE  0x4
#define CR_CLK_TIMER0_SIZE  0x4
#define CR_CLK_TIMER1_SIZE  0x4
#define CR_CLK_TIMER2_SIZE  0x4
#define CR_CLK_PWM_SIZE  0x4
#define CR_CLK_I2C_SIZE  0x4
#define CR_CLK_MAIL_BOX_SIZE  0x4
#define CR_CLK_I3C_SIZE  0x4
#define CR_CLK_UART_SIZE  0x4
#define CR_CLK_ACL_SIZE  0x4
#define CR_CLK_ADC_ANA_SIZE  0x4
#define CR_CLK_DSP_1_SIZE  0x4
#define CR_DET_I2S_ON_INT_SIZE  0x4
#define CR_DET_I2S_OFF_INT_SIZE  0x4
#define CR_DET_I2S_ON_CFG_SIZE  0x4
#define CR_DET_I2S_OFF_CFG_SIZE  0x4
#define CR_DET_I2S_CFG_SIZE  0x4
#define CR_CLK_MADC_SIZE  0x4
#define CR_FAST_BOOT_SIZE  0x4
#define CR_PSIST_MES_ARM_SIZE  0x4
#define CR_PSIST_MES_ARM_1_SIZE  0x4
#define CR_SOFTBACKDOOR_SIZE  0x4
#define CR_RX_LPOSC_SIZE  0x4
#define CR_CLK_TEST_OBSV_SIZE  0x4
#define CR_RST_ELINK_SIZE  0x4
#define CR_CLK_DIVIDER_EN_SIZE  0x4
#define CR_CLK_ISP_SIZE  0x4
#define DAC_s_SIZE  0x40
#define DAC_CFG_REG0_SIZE  0x4
#define DAC_CFG_REG1_SIZE  0x4
#define DAC_CFG_REG2_SIZE  0x4
#define DAC_CFG_REG3_SIZE  0x4
#define DAC_CFG_REG4_SIZE  0x4
#define DAC_CFG_REG5_SIZE  0x4
#define DAC_CFG_REG6_SIZE  0x4
#define DAC_CFG_REG7_SIZE  0x4
#define DAC_CFG_REG8_SIZE  0x4
#define DAC_CFG_REG9_SIZE  0x4
#define DAC_CFG_REG10_SIZE  0x4
#define DAC_CFG_REG11_SIZE  0x4
#define DAC_CFG_REG12_SIZE  0x4
#define DAC_CFG_REG13_SIZE  0x4
#define DAC_CFG_REG14_SIZE  0x4
#define DAC_CFG_REG15_SIZE  0x4
#define ACL_s_SIZE  0x150
#define ACL_REG0_SIZE  0x4
#define ACL_REG1_SIZE  0x4
#define ACL_REG2_SIZE  0x4
#define ACL_REG3_SIZE  0x4
#define TX_TSTCTRL_1_CORE_SIZE  0x4
#define TX_TSTCTRL_2_CORE_SIZE  0x4
#define TX_TSTCTRL_3_CORE_SIZE  0x4
#define TX_TSTCTRL_4_CORE_SIZE  0x4
#define TX_TSTCTRL_5_CORE_SIZE  0x4
#define E_LINK_PLL_CTRL0_SIZE  0x4
#define E_LINK_PLL_CTRL1_SIZE  0x4
#define SYS_PLL_CTRL0_SIZE  0x4
#define SYS_PLL_CTRL1_SIZE  0x4
#define BGREF_TSTCTRL_1_CORE_SIZE  0x4
#define BGREF_TSTCTRL_2_CORE_SIZE  0x4
#define POWERTOP_TSTCTRL_1_CORE_SIZE  0x4
#define POWERTOP_TSTCTRL_2_CORE_SIZE  0x4
#define POWERTOP_TSTCTRL_3_CORE_SIZE  0x4
#define MADC_TSTCTRL_1_CORE_SIZE  0x4
#define MADC_TSTCTRL_2_CORE_SIZE  0x4
#define TX_RCCAL_OUT_CORE_SIZE  0x4
#define LPRCOSC_FSEL_CORE_SIZE  0x4
#define RX_MIC_RC_TUNING_SIZE  0x4
#define RX_MICBIAS_SET_SIZE  0x4
#define RX_MICBIAS_PDB_HP_CTRL_SIZE  0x4
#define RX_MIC0_TSTCTRL_1_CORE_SIZE  0x4
#define RX_MIC1_TSTCTRL_1_CORE_SIZE  0x4
#define RX_MIC2_TSTCTRL_1_CORE_SIZE  0x4
#define RX_MIC3_TSTCTRL_1_CORE_SIZE  0x4
#define RX_MIC4_TSTCTRL_1_CORE_SIZE  0x4
#define RX_MIC0_TSTCTRL_2_CORE_SIZE  0x4
#define RX_MIC1_TSTCTRL_2_CORE_SIZE  0x4
#define RX_MIC2_TSTCTRL_2_CORE_SIZE  0x4
#define RX_MIC3_TSTCTRL_2_CORE_SIZE  0x4
#define RX_MIC4_TSTCTRL_2_CORE_SIZE  0x4
#define RX_TSTCTRL_1_CORE_SIZE  0x4
#define RX_TSTCTRL_2_CORE_SIZE  0x4
#define RX_TSTCTRL_3_CORE_SIZE  0x4
#define RX_MIC4_SAMPLE_FREQ_SET_SIZE  0x4
#define RX_GAIN_MIC_CORE_SIZE  0x4
#define RX_UNMUTE_MIC_CORE_SIZE  0x4
#define RX_TEST_CORE_R_SIZE  0x4
#define STDRCOSC_CAL_CTRL_SIZE  0x4
#define STDRCOSC_CAL_FORCE_SIZE  0x4
#define STDRCOSC_CAL_VAL_SIZE  0x4
#define PGOOD_STATE_SIZE  0x4
#define POWER_MADC_CTL_SIZE  0x4
#define POWER_MADC_B_STS0_SIZE  0x4
#define POWER_MADC_B_STS1_SIZE  0x4
#define POWER_MADC_B_STS2_SIZE  0x4
#define POWER_MADC_B_STS3_SIZE  0x4
#define POWER_LPRCOSC_TRIM_SW_CTL_SIZE  0x4
#define DSP_GLB_s_SIZE  0x3f4
#define DSP_CORE_GCK_CTL_SIZE  0x4
#define MEM_BANK_CLK_CTRL_SIZE  0x4
#define DSP_RST_CTRL_SIZE  0x4
#define LLR_CONGESTION_ST_SIZE  0x4
#define DSP_ILLEGAL_ACCESS_SIZE  0x4
#define ARM_LOCK_SIZE  0x4
#define HIFI3_LOCK_SIZE  0x4
#define CAPE_A_LOCK_SIZE  0x4
#define CAPE_B_LOCK_SIZE  0x4
#define LLE_A_LOCK_SIZE  0x4
#define LLE_B_LOCK_SIZE  0x4
#define GLOBAL_LOCK_INTR_ENABLE_SIZE  0x4
#define GLOBAL_LOCK_INTR_STS_SIZE  0x4
#define GLOBAL_LOCK_INTR_CLR_SIZE  0x4
#define GLOBAL_LOCK_CFG_SIZE  0x4
#define LLEA_SLEEP_TYPE_OUT_SIZE  0x4
#define LLEB_SLEEP_TYPE_OUT_SIZE  0x4
#define CAPA_SLEEP_TYPE_OUT_SIZE  0x4
#define CAPB_SLEEP_TYPE_OUT_SIZE  0x4
#define CAPEA_RAM0_MISC_CTRL_SIZE  0x4
#define CAPEA_RAM5_MISC_CTRL_SIZE  0x4
#define CAPEB_RAM0_MISC_CTRL_SIZE  0x4
#define CAPEB_RAM6_MISC_CTRL_SIZE  0x4
#define LLEA_RAM0_MISC_CTRL_SIZE  0x4
#define LLEB_RAM0_MISC_CTRL_SIZE  0x4
#define LLEB_RAM4_MISC_CTRL_SIZE  0x4
#define VECT_RAM0_MISC_CTRL_SIZE  0x4
#define ASIP_CORE_ID_SIZE  0x4
#define LLR_ANC_LTCY_CFG1_SIZE  0x4
#define LLR_ANC_LTCY_CFG2_SIZE  0x4
#define LLR_ANC_MIS_SMP_CHAN0_SIZE  0x4
#define LLR_ANC_MIS_SMP_CHAN1_SIZE  0x4
#define LLR_ANC_PLYBCK_SYNC_CTL_SIZE  0x4
#define LLR_ANC_SMP_MIS_INT_SIZE  0x4
#define LLR_LL_DECIM_INT_SIZE  0x4
#define LLR_ELK_IN_INT_SIZE  0x4
#define LLR_ANC_BYPASS_CTRL_SIZE  0x4
#define DSP_LOCK_CTRL_s_SIZE  0x5c
#define GLOBAL_LOCK_SET_AHB_SIZE  0x4
#define GLOBAL_LOCK_SET_HIFI3_SIZE  0x4
#define GLOBAL_LOCK_SET_CAPEA_SIZE  0x4
#define GLOBAL_LOCK_SET_CAPEB_SIZE  0x4
#define GLOBAL_LOCK_SET_LLEA_SIZE  0x4
#define GLOBAL_LOCK_SET_LLEB_SIZE  0x4
#define GLOBAL_LOCK_CLR_AHB_SIZE  0x4
#define GLOBAL_LOCK_CLR_HIFI3_SIZE  0x4
#define GLOBAL_LOCK_CLR_CAPEA_SIZE  0x4
#define GLOBAL_LOCK_CLR_CAPEB_SIZE  0x4
#define GLOBAL_LOCK_CLR_LLEA_SIZE  0x4
#define GLOBAL_LOCK_CLR_LLEB_SIZE  0x4
#define DSP_INT_GLBCTRL_s_SIZE  0x8
#define INT_DIS_REG_L_SIZE  0x4
#define INT_DIS_REG_H_SIZE  0x4
#define DSP_INT_CORECTRL_AHBVIEW_s_SIZE  0x1d4
#define INT_ASSIGN_ASIP_L_LLEA_SIZE  0x4
#define INT_ASSIGN_ASIP_H_LLEA_SIZE  0x4
#define INT_STS_ASIP_L_R_LLEA_SIZE  0x4
#define INT_STS_ASIP_H_R_LLEA_SIZE  0x4
#define INT_EN0_ASIP_L_LLEA_SIZE  0x4
#define INT_EN0_ASIP_H_LLEA_SIZE  0x4
#define INT_EN1_ASIP_L_LLEA_SIZE  0x4
#define INT_EN1_ASIP_H_LLEA_SIZE  0x4
#define INT_EN2_ASIP_L_LLEA_SIZE  0x4
#define INT_EN2_ASIP_H_LLEA_SIZE  0x4
#define INT_EN3_ASIP_L_LLEA_SIZE  0x4
#define INT_EN3_ASIP_H_LLEA_SIZE  0x4
#define SW_WAKEUP_LLEA_SIZE  0x4
#define SW_WAKE_MODE_LLEA_SIZE  0x4
#define DSP_CORE_SFT_INT_LLEA_SIZE  0x4
#define INT_ASSIGN_ASIP_L_LLEB_SIZE  0x4
#define INT_ASSIGN_ASIP_H_LLEB_SIZE  0x4
#define INT_STS_ASIP_L_R_LLEB_SIZE  0x4
#define INT_STS_ASIP_H_R_LLEB_SIZE  0x4
#define INT_EN0_ASIP_L_LLEB_SIZE  0x4
#define INT_EN0_ASIP_H_LLEB_SIZE  0x4
#define INT_EN1_ASIP_L_LLEB_SIZE  0x4
#define INT_EN1_ASIP_H_LLEB_SIZE  0x4
#define INT_EN2_ASIP_L_LLEB_SIZE  0x4
#define INT_EN2_ASIP_H_LLEB_SIZE  0x4
#define INT_EN3_ASIP_L_LLEB_SIZE  0x4
#define INT_EN3_ASIP_H_LLEB_SIZE  0x4
#define SW_WAKEUP_LLEB_SIZE  0x4
#define SW_WAKE_MODE_LLEB_SIZE  0x4
#define DSP_CORE_SFT_INT_LLEB_SIZE  0x4
#define INT_ASSIGN_ASIP_L_CAPEA_SIZE  0x4
#define INT_ASSIGN_ASIP_H_CAPEA_SIZE  0x4
#define INT_STS_ASIP_L_R_CAPEA_SIZE  0x4
#define INT_STS_ASIP_H_R_CAPEA_SIZE  0x4
#define INT_EN0_ASIP_L_CAPEA_SIZE  0x4
#define INT_EN0_ASIP_H_CAPEA_SIZE  0x4
#define INT_EN1_ASIP_L_CAPEA_SIZE  0x4
#define INT_EN1_ASIP_H_CAPEA_SIZE  0x4
#define INT_EN2_ASIP_L_CAPEA_SIZE  0x4
#define INT_EN2_ASIP_H_CAPEA_SIZE  0x4
#define INT_EN3_ASIP_L_CAPEA_SIZE  0x4
#define INT_EN3_ASIP_H_CAPEA_SIZE  0x4
#define SW_WAKEUP_CAPEA_SIZE  0x4
#define SW_WAKE_MODE_CAPEA_SIZE  0x4
#define DSP_CORE_SFT_INT_CAPEA_SIZE  0x4
#define INT_ASSIGN_ASIP_L_CAPEB_SIZE  0x4
#define INT_ASSIGN_ASIP_H_CAPEB_SIZE  0x4
#define INT_STS_ASIP_L_R_CAPEB_SIZE  0x4
#define INT_STS_ASIP_H_R_CAPEB_SIZE  0x4
#define INT_EN0_ASIP_L_CAPEB_SIZE  0x4
#define INT_EN0_ASIP_H_CAPEB_SIZE  0x4
#define INT_EN1_ASIP_L_CAPEB_SIZE  0x4
#define INT_EN1_ASIP_H_CAPEB_SIZE  0x4
#define INT_EN2_ASIP_L_CAPEB_SIZE  0x4
#define INT_EN2_ASIP_H_CAPEB_SIZE  0x4
#define INT_EN3_ASIP_L_CAPEB_SIZE  0x4
#define INT_EN3_ASIP_H_CAPEB_SIZE  0x4
#define SW_WAKEUP_CAPEB_SIZE  0x4
#define SW_WAKE_MODE_CAPEB_SIZE  0x4
#define DSP_CORE_SFT_INT_CAPEB_SIZE  0x4
#define DSP_INT_CORECTRL_ASIPVIEW_s_SIZE  0x54
#define INT_ASSIGN_ASIP_L_SIZE  0x4
#define INT_ASSIGN_ASIP_H_SIZE  0x4
#define INT_STS_ASIP_L_R_SIZE  0x4
#define INT_STS_ASIP_H_R_SIZE  0x4
#define INT_EN0_ASIP_L_SIZE  0x4
#define INT_EN0_ASIP_H_SIZE  0x4
#define INT_EN1_ASIP_L_SIZE  0x4
#define INT_EN1_ASIP_H_SIZE  0x4
#define INT_EN2_ASIP_L_SIZE  0x4
#define INT_EN2_ASIP_H_SIZE  0x4
#define INT_EN3_ASIP_L_SIZE  0x4
#define INT_EN3_ASIP_H_SIZE  0x4
#define SW_WAKEUP_SIZE  0x4
#define SW_WAKE_MODE_SIZE  0x4
#define DSP_CORE_SFT_INT_SIZE  0x4
#define DSP_TIMER_s_SIZE  0xb4
#define TIMER_CLK_CTL_SIZE  0x4
#define TIMER_CTL_SIZE  0x4
#define WTD0_CTL_SIZE  0x4
#define WTD1_CTL_SIZE  0x4
#define WTD2_CTL_SIZE  0x4
#define WTD3_CTL_SIZE  0x4
#define TIMER_CNT0_SIZE  0x4
#define TIMER_LIMT0_SIZE  0x4
#define TIMER_CNT1_SIZE  0x4
#define TIMER_LIMT1_SIZE  0x4
#define TIMER_CNT2_SIZE  0x4
#define TIMER_LIMT2_SIZE  0x4
#define TIMER_CNT3_SIZE  0x4
#define TIMER_LIMT3_SIZE  0x4
#define TIMER_CNT4_SIZE  0x4
#define TIMER_LIMT4_SIZE  0x4
#define TIMER_CNT5_SIZE  0x4
#define TIMER_LIMT5_SIZE  0x4
#define TIMER_CNT6_SIZE  0x4
#define TIMER_LIMT6_SIZE  0x4
#define TIMER_CNT7_SIZE  0x4
#define TIMER_LIMT7_SIZE  0x4
#define TIMER_INTERRUPT_SIZE  0x4
#define DSP_LLR_IO_s_SIZE  0x95
#define ANC_OUT_CH0_SIZE  0x4
#define ANC_OUT_CH1_SIZE  0x4
#define LL_DECIM_IN_CH0_SIZE  0x4
#define LL_DECIM_IN_CH1_SIZE  0x4
#define LL_DECIM_IN_CH2_SIZE  0x4
#define LL_DECIM_IN_CH3_SIZE  0x4
#define LL_INTERPO_IN_CH0_SIZE  0x4
#define LL_INTERPO_IN_CH1_SIZE  0x4
#define LL_ELINK_IN_CH0_SIZE  0x4
#define LL_ELINK_IN_CH1_SIZE  0x4
#define SSE200_MISC_s_SIZE  0x10
#define ARM_MEM_MISC_CTRL0_SIZE  0x4
#define ARM_MEM_MISC_CTRL8_SIZE  0x4
#define QSPI_MISC_OPTION_SIZE  0x4
#define SSE200_PCLK_GATE_SIZE  0x4
#define RRAM_s_SIZE  0x18
#define RRAM_CFG_DATA_L_SIZE  0x4
#define RRAM_CFG_DATA_H_SIZE  0x4
#define I2C_SLAVE_s_SIZE  0x18
#define I2C_SLAVE_BASE_ADDR_SIZE  0x4
#define I2C_SLAVE_LIMIT_ADDR_SIZE  0x4
#define I2C_SLAVE_ZERO_ADDR_SIZE  0x4
#define I2C_SLAVE_LIMIT_INTERRUPT_SIZE  0x4
#define I2C_SLAVE_ADDR_SIZE  0x4
#define I2C_SLAVE_OFFSET_SIZE_SIZE  0x4
#define I2C_MASTER_s_SIZE  0x18
#define RA_I2CM_CTL_SIZE  0x4
#define RA_I2CM_STAT_SIZE  0x4
#define RA_I2CM_NAK_FFLVL_SIZE  0x4
#define RA_I2CM_XFER_SIZE  0x4
#define RA_I2CM_XCNT_SIZE  0x4
#define RA_I2CM_CTL_2_SIZE  0x4
#define FLEXI_DMA0_s_SIZE  0x98
#define FLEXI_DMA0_ENABLE_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH0_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH0_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH0_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH1_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH1_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH1_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH2_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH2_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH2_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH3_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH3_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH3_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH4_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH4_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH4_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH5_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH5_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH5_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH6_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH6_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH6_SIZE  0x4
#define FLEXI_DMA0_SRC_ADDR_CH7_SIZE  0x4
#define FLEXI_DMA0_DST_ADDR_CH7_SIZE  0x4
#define FLEXI_DMA0_CTRL_CH7_SIZE  0x4
#define FLEXI_DMA0_PARIS_SRST_SIZE  0x4
#define FLEXI_DMA0_FIFO_STATUS_SIZE  0x4
#define FLEXI_DMA0_FIFO_s_SIZE  0x3004
#define I2CM_RX_FIFO_SIZE  0x4
#define UART_FIFO_SIZE  0x4
#define I2CM_FIFO_SIZE  0x4
#define I3CM_FIFO_SIZE  0x4
#define FLEXI_DMA1_s_SIZE  0x98
#define FLEXI_DMA1_ENABLE_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH0_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH0_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH0_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH1_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH1_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH1_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH2_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH2_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH2_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH3_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH3_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH3_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH4_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH4_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH4_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH5_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH5_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH5_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH6_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH6_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH6_SIZE  0x4
#define FLEXI_DMA1_SRC_ADDR_CH7_SIZE  0x4
#define FLEXI_DMA1_DST_ADDR_CH7_SIZE  0x4
#define FLEXI_DMA1_CTRL_CH7_SIZE  0x4
#define FLEXI_DMA1_PARIS_SRST_SIZE  0x4
#define FLEXI_DMA1_FIFO_STATUS_SIZE  0x4
#define FLEXI_DMA1_FIFO_s_SIZE  0x1004
#define SPIM_TX_FIFO_SIZE  0x4
#define SPIM_RX_FIFO_SIZE  0x4
#define AES_FIFO_SIZE  0x4
#define SPI_MASTER_s_SIZE  0x18
#define RA_SPIM_CTL_SIZE  0x4
#define RA_SPIM_STAT_SIZE  0x4
#define RA_SPIM_FFLVL_SIZE  0x4
#define RA_SPIM_XFER_SIZE  0x4
#define RA_SPIM_XCNT_SIZE  0x4
#define RA_SPIM_CTRL_2_SIZE  0x4
#define TOP_INTERRUPT_CTRL_s_SIZE  0x108
#define INT_EN0_SIZE  0x4
#define INT_MASK0_SIZE  0x4
#define INT_BYP0_SIZE  0x4
#define INT_ST0_SIZE  0x4
#define INT_EN1_SIZE  0x4
#define INT_MASK1_SIZE  0x4
#define INT_BYP1_SIZE  0x4
#define INT_ST1_SIZE  0x4
#define INT_MERGE_EN_SIZE  0x4
#define INT_MERGE_MASK_SIZE  0x4
#define INT_MERGE_BYP_SIZE  0x4
#define INT_MERGE_ST_SIZE  0x4
#define INT_SOFTSET0_SIZE  0x4
#define INT_SOFTSET1_SIZE  0x4
#define INT_NMI_MASK0_SIZE  0x4
#define INT_NMI_MASK1_SIZE  0x4
#define INT_EXT_EN_SIZE  0x4
#define INT_EXT_CLR_SIZE  0x4
#define AUDIO_DMA_s_SIZE  0x3d8
#define DMA0_CHANNEL_ENABLE_SIZE  0x4
#define DMA0_INTERRUPT_STATUS_SIZE  0x4
#define DMA0_START_ADDRESS_CH0_SIZE  0x4
#define DMA0_CONTROL_CH0_SIZE  0x4
#define DMA0_START_ADDRESS_CH1_SIZE  0x4
#define DMA0_CONTROL_CH1_SIZE  0x4
#define DMA0_START_ADDRESS_CH2_SIZE  0x4
#define DMA0_CONTROL_CH2_SIZE  0x4
#define DMA0_START_ADDRESS_CH3_SIZE  0x4
#define DMA0_CONTROL_CH3_SIZE  0x4
#define DMA0_START_ADDRESS_CH5_SIZE  0x4
#define DMA0_CONTROL_CH5_SIZE  0x4
#define DMA0_START_ADDRESS_CH7_SIZE  0x4
#define DMA0_CONTROL_CH7_SIZE  0x4
#define DMA0_START_ADDRESS_CH9_SIZE  0x4
#define DMA0_CONTROL_CH9_SIZE  0x4
#define DMA0_START_ADDRESS_CH11_SIZE  0x4
#define DMA0_CONTROL_CH11_SIZE  0x4
#define DMA0_START_ADDRESS_CH13_SIZE  0x4
#define DMA0_CONTROL_CH13_SIZE  0x4
#define DMA0_START_ADDRESS_CH15_SIZE  0x4
#define DMA0_CONTROL_CH15_SIZE  0x4
#define DMA0_INTERRUPT_ENABLE_SIZE  0x4
#define DMA0_INTERRUPT_PARING_SIZE  0x4
#define DMA0_INTERRUPPT_GROUPING01_SIZE  0x4
#define DMA0_INTERRUPPT_GROUPING23_SIZE  0x4
#define DMA0_INTERRUPPT_GROUPING45_SIZE  0x4
#define DMA0_INTERRUPPT_GROUPING67_SIZE  0x4
#define DMA0_CHANNEL_ASSIGNMENTS02_SIZE  0x4
#define DMA0_CHANNEL_ASSIGNMENT_1357911_SIZE  0x4
#define DMA0_CHANNEL_ASSIGNMENT_1315_SIZE  0x4
#define DMA0_CONTROL_EXT_CH0_SIZE  0x4
#define DMA0_CONTROL_EXT_CH1_SIZE  0x4
#define DMA0_CONTROL_EXT_CH2_SIZE  0x4
#define DMA0_CONTROL_EXT_CH3_SIZE  0x4
#define DMA0_CONTROL_EXT_CH5_SIZE  0x4
#define DMA0_CONTROL_EXT_CH7_SIZE  0x4
#define DMA0_CONTROL_EXT_CH9_SIZE  0x4
#define DMA0_CONTROL_EXT_CH11_SIZE  0x4
#define DMA0_CONTROL_EXT_CH13_SIZE  0x4
#define DMA0_CONTROL_EXT_CH15_SIZE  0x4
#define DMA3_CHANNEL_ENABLE_SIZE  0x4
#define DMA3_INTERRUPT_STATUS_SIZE  0x4
#define DMA3_START_ADDRESS_CH0_SIZE  0x4
#define DMA3_CONTROL_CH0_SIZE  0x4
#define DMA3_START_ADDRESS_CH1_SIZE  0x4
#define DMA3_CONTROL_CH1_SIZE  0x4
#define DMA3_START_ADDRESS_CH2_SIZE  0x4
#define DMA3_CONTROL_CH2_SIZE  0x4
#define DMA3_START_ADDRESS_CH3_SIZE  0x4
#define DMA3_CONTROL_CH3_SIZE  0x4
#define DMA3_START_ADDRESS_CH4_SIZE  0x4
#define DMA3_CONTROL_CH4_SIZE  0x4
#define DMA3_START_ADDRESS_CH5_SIZE  0x4
#define DMA3_CONTROL_CH5_SIZE  0x4
#define DMA3_START_ADDRESS_CH6_SIZE  0x4
#define DMA3_CONTROL_CH6_SIZE  0x4
#define DMA3_START_ADDRESS_CH7_SIZE  0x4
#define DMA3_CONTROL_CH7_SIZE  0x4
#define DMA3_START_ADDRESS_CH8_SIZE  0x4
#define DMA3_CONTROL_CH8_SIZE  0x4
#define DMA3_START_ADDRESS_CH9_SIZE  0x4
#define DMA3_CONTROL_CH9_SIZE  0x4
#define DMA3_START_ADDRESS_CH10_SIZE  0x4
#define DMA3_CONTROL_CH10_SIZE  0x4
#define DMA3_START_ADDRESS_CH11_SIZE  0x4
#define DMA3_CONTROL_CH11_SIZE  0x4
#define DMA3_START_ADDRESS_CH12_SIZE  0x4
#define DMA3_CONTROL_CH12_SIZE  0x4
#define DMA3_START_ADDRESS_CH13_SIZE  0x4
#define DMA3_CONTROL_CH13_SIZE  0x4
#define DMA3_START_ADDRESS_CH14_SIZE  0x4
#define DMA3_CONTROL_CH14_SIZE  0x4
#define DMA3_START_ADDRESS_CH15_SIZE  0x4
#define DMA3_CONTROL_CH15_SIZE  0x4
#define DMA3_START_ADDRESS_CH16_SIZE  0x4
#define DMA3_CONTROL_CH16_SIZE  0x4
#define DMA3_START_ADDRESS_CH17_SIZE  0x4
#define DMA3_CONTROL_CH17_SIZE  0x4
#define DMA3_START_ADDRESS_CH18_SIZE  0x4
#define DMA3_CONTROL_CH18_SIZE  0x4
#define DMA3_START_ADDRESS_CH19_SIZE  0x4
#define DMA3_CONTROL_CH19_SIZE  0x4
#define DMA3_INTERRUPT_ENABLE_SIZE  0x4
#define DMA3_INTERRUPT_PARING_SIZE  0x4
#define DMA3_INTERRUPPT_GROUPING01_SIZE  0x4
#define DMA3_INTERRUPPT_GROUPING23_SIZE  0x4
#define DMA3_INTERRUPPT_GROUPING45_SIZE  0x4
#define DMA3_INTERRUPPT_GROUPING67_SIZE  0x4
#define DMA3_INTERRUPPT_GROUPING89_SIZE  0x4
#define DMA3_CHANNEL_ASSIGNMENTS0246810_SIZE  0x4
#define DMA3_CHANNEL_ASSIGNMENTS12141618_SIZE  0x4
#define DMA3_CHANNEL_ASSIGNMENT_1357911_SIZE  0x4
#define DMA3_CHANNEL_ASSIGNMENT_13151719_SIZE  0x4
#define DMA3_CONTROL_EXT_CH0_SIZE  0x4
#define DMA3_CONTROL_EXT_CH1_SIZE  0x4
#define DMA3_CONTROL_EXT_CH2_SIZE  0x4
#define DMA3_CONTROL_EXT_CH3_SIZE  0x4
#define DMA3_CONTROL_EXT_CH4_SIZE  0x4
#define DMA3_CONTROL_EXT_CH5_SIZE  0x4
#define DMA3_CONTROL_EXT_CH6_SIZE  0x4
#define DMA3_CONTROL_EXT_CH7_SIZE  0x4
#define DMA3_CONTROL_EXT_CH8_SIZE  0x4
#define DMA3_CONTROL_EXT_CH9_SIZE  0x4
#define DMA3_CONTROL_EXT_CH10_SIZE  0x4
#define DMA3_CONTROL_EXT_CH11_SIZE  0x4
#define DMA3_CONTROL_EXT_CH12_SIZE  0x4
#define DMA3_CONTROL_EXT_CH13_SIZE  0x4
#define DMA3_CONTROL_EXT_CH14_SIZE  0x4
#define DMA3_CONTROL_EXT_CH15_SIZE  0x4
#define DMA3_CONTROL_EXT_CH16_SIZE  0x4
#define DMA3_CONTROL_EXT_CH17_SIZE  0x4
#define DMA3_CONTROL_EXT_CH18_SIZE  0x4
#define DMA3_CONTROL_EXT_CH19_SIZE  0x4
#define DMA_ADDR_STATUS_SELECT_SIZE  0x4
#define DMA_ADDRESS_UPDT_STA_SIZE  0x4
#define DMA0_ADDRESS_STATUS_SIZE  0x4
#define DMA3_ADDRESS_STATUS_SIZE  0x4
#define DMA0_FIFO_STATUS_SIZE  0x4
#define DMA3_FIFO_STATUS_SIZE  0x4
#define OTP_s_SIZE  0x30
#define OTP_FUSE0_CTRL_STA_SIZE  0x4
#define OTP_FUSE0_STATUS_SET_SIZE  0x4
#define OTP_FUSE0_STATUS_CLR_SIZE  0x4
#define OTP_FUSE0_SERAL_DATA_OUTPUT_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_SIZE  0x4
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_SIZE  0x4
#define AHB_FLASH_CACHE_s_SIZE  0x2c
#define CACHE_DATA_RAM0_CFG_SIZE  0x4
#define CACHE_DATA_RAM1_CFG_SIZE  0x4
#define CACHE_USER_CFG_SIZE  0x4
#define PWM_s_SIZE  0x8
#define RA_PWM_CTRL_1_SIZE  0x4
#define RA_PWM_CTRL_2_SIZE  0x4
#define MAILBOX_s_SIZE  0x60
#define MAILBOX_CFG_FIFO0_SIZE  0x4
#define MAILBOX_STATUS_FIFO0_SIZE  0x4
#define MAILBOX_DBG_MSG_FIFO0_SIZE  0x4
#define MAILBOX_FIFO_XFER_FIFO0_SIZE  0x4
#define MAILBOX_CFG_FIFO1_SIZE  0x4
#define MAILBOX_STATUS_FIFO1_SIZE  0x4
#define MAILBOX_DBG_MSG_FIFO1_SIZE  0x4
#define MAILBOX_FIFO_XFER_FIFO1_SIZE  0x4
#define MAILBOX_CFG_FIFO2_SIZE  0x4
#define MAILBOX_STATUS_FIFO2_SIZE  0x4
#define MAILBOX_DBG_MSG_FIFO2_SIZE  0x4
#define MAILBOX_FIFO_XFER_FIFO2_SIZE  0x4
#define MAILBOX_CFG_FIFO3_SIZE  0x4
#define MAILBOX_STATUS_FIFO3_SIZE  0x4
#define MAILBOX_DBG_MSG_FIFO3_SIZE  0x4
#define MAILBOX_FIFO_XFER_FIFO3_SIZE  0x4
#define MAILBOX_CFG_FIFO4_SIZE  0x4
#define MAILBOX_STATUS_FIFO4_SIZE  0x4
#define MAILBOX_DBG_MSG_FIFO4_SIZE  0x4
#define MAILBOX_FIFO_XFER_FIFO4_SIZE  0x4
#define MAILBOX_CFG_FIFO5_SIZE  0x4
#define MAILBOX_STATUS_FIFO5_SIZE  0x4
#define MAILBOX_DBG_MSG_FIFO5_SIZE  0x4
#define MAILBOX_FIFO_XFER_FIFO5_SIZE  0x4
#define FLASH_MPC_s_SIZE  0x1000
#define FLASHMPC_CTRL_SIZE  0x4
#define FLASHMPC_BLK_MAX_SIZE  0x4
#define FLASHMPC_BLK_CFG_SIZE  0x4
#define FLASHMPC_BLK_IDX_SIZE  0x4
#define FLASHMPC_BLK_LUT_SIZE  0x4
#define FLASHMPC_INT_STAT_SIZE  0x4
#define FLASHMPC_INT_CLEAR_SIZE  0x4
#define FLASHMPC_INT_EN_SIZE  0x4
#define FLASHMPC_INT_INFO1_SIZE  0x4
#define FLASHMPC_INT_INFO2_SIZE  0x4
#define FLASHMPC_INT_SET_SIZE  0x4
#define FLASHMPC_PID4_SIZE  0x4
#define FLASHMPC_PID5_SIZE  0x4
#define FLASHMPC_PID6_SIZE  0x4
#define FLASHMPC_PID7_SIZE  0x4
#define FLASHMPC_PID0_SIZE  0x4
#define FLASHMPC_PID1_SIZE  0x4
#define FLASHMPC_PID2_SIZE  0x4
#define FLASHMPC_PID3_SIZE  0x4
#define FLASHMPC_CID0_SIZE  0x4
#define FLASHMPC_CID1_SIZE  0x4
#define FLASHMPC_CID2_SIZE  0x4
#define FLASHMPC_CID3_SIZE  0x4
#define ROM_MPC_s_SIZE  0x1000
#define ROMMPC_CTRL_SIZE  0x4
#define ROMMPC_BLK_MAX_SIZE  0x4
#define ROMMPC_BLK_CFG_SIZE  0x4
#define ROMMPC_BLK_IDX_SIZE  0x4
#define ROMMPC_BLK_LUT_SIZE  0x4
#define ROMMPC_INT_STAT_SIZE  0x4
#define ROMMPC_INT_CLEAR_SIZE  0x4
#define ROMMPC_INT_EN_SIZE  0x4
#define ROMMPC_INT_INFO1_SIZE  0x4
#define ROMMPC_INT_INFO2_SIZE  0x4
#define ROMMPC_INT_SET_SIZE  0x4
#define ROMMPC_PID4_SIZE  0x4
#define ROMMPC_PID5_SIZE  0x4
#define ROMMPC_PID6_SIZE  0x4
#define ROMMPC_PID7_SIZE  0x4
#define ROMMPC_PID0_SIZE  0x4
#define ROMMPC_PID1_SIZE  0x4
#define ROMMPC_PID2_SIZE  0x4
#define ROMMPC_PID3_SIZE  0x4
#define ROMMPC_CID0_SIZE  0x4
#define ROMMPC_CID1_SIZE  0x4
#define ROMMPC_CID2_SIZE  0x4
#define ROMMPC_CID3_SIZE  0x4
#define DSP_MEM_MPC_s_SIZE  0x1000
#define DSPMPC_CTRL_SIZE  0x4
#define DSPMPC_BLK_MAX_SIZE  0x4
#define DSPMPC_BLK_CFG_SIZE  0x4
#define DSPMPC_BLK_IDX_SIZE  0x4
#define DSPMPC_BLK_LUT_SIZE  0x4
#define DSPMPC_INT_STAT_SIZE  0x4
#define DSPMPC_INT_CLEAR_SIZE  0x4
#define DSPMPC_INT_EN_SIZE  0x4
#define DSPMPC_INT_INFO1_SIZE  0x4
#define DSPMPC_INT_INFO2_SIZE  0x4
#define DSPMPC_INT_SET_SIZE  0x4
#define DSPMPC_PID4_SIZE  0x4
#define DSPMPC_PID5_SIZE  0x4
#define DSPMPC_PID6_SIZE  0x4
#define DSPMPC_PID7_SIZE  0x4
#define DSPMPC_PID0_SIZE  0x4
#define DSPMPC_PID1_SIZE  0x4
#define DSPMPC_PID2_SIZE  0x4
#define DSPMPC_PID3_SIZE  0x4
#define DSPMPC_CID0_SIZE  0x4
#define DSPMPC_CID1_SIZE  0x4
#define DSPMPC_CID2_SIZE  0x4
#define DSPMPC_CID3_SIZE  0x4
#define TRUSTZONE_CTRL_s_SIZE  0x210
#define DSP_REGION0_SIZE  0x4
#define DSP_REGION1_SIZE  0x4
#define DSP_REGION2_SIZE  0x4
#define DSP_REGION3_SIZE  0x4
#define DSP_REGION4_SIZE  0x4
#define DSP_REGION5_SIZE  0x4
#define DSP_REGION6_SIZE  0x4
#define DSP_REGION7_SIZE  0x4
#define HIFI3M_REGION0_SIZE  0x4
#define HIFI3M_REGION1_SIZE  0x4
#define HIFI3M_REGION2_SIZE  0x4
#define HIFI3M_REGION3_SIZE  0x4
#define I2CS_REGION0_SIZE  0x4
#define I2CS_REGION1_SIZE  0x4
#define I2CS_REGION2_SIZE  0x4
#define I2CS_REGION3_SIZE  0x4
#define EARLINK_REGION0_SIZE  0x4
#define EARLINK_REGION1_SIZE  0x4
#define EARLINK_REGION2_SIZE  0x4
#define EARLINK_REGION3_SIZE  0x4
#define FDMA0_REGION0_SIZE  0x4
#define FDMA0_REGION1_SIZE  0x4
#define FDMA0_REGION2_SIZE  0x4
#define FDMA0_REGION3_SIZE  0x4
#define FDMA1_REGION0_SIZE  0x4
#define FDMA1_REGION1_SIZE  0x4
#define FDMA1_REGION2_SIZE  0x4
#define FDMA1_REGION3_SIZE  0x4
#define ADMA0_REGION0_SIZE  0x4
#define ADMA0_REGION1_SIZE  0x4
#define ADMA0_REGION2_SIZE  0x4
#define ADMA0_REGION3_SIZE  0x4
#define ADMA1_REGION0_SIZE  0x4
#define ADMA1_REGION1_SIZE  0x4
#define ADMA1_REGION2_SIZE  0x4
#define ADMA1_REGION3_SIZE  0x4
#define QSPI_REGION0_SIZE  0x4
#define QSPI_REGION1_SIZE  0x4
#define QSPI_REGION2_SIZE  0x4
#define QSPI_REGION3_SIZE  0x4
#define CFG_SEC_RESP_SIZE  0x4
#define SEC_WRREG_CTRL0_SIZE  0x4
#define SEC_WRREG_CTRL1_SIZE  0x4
#define SEC_WRREG_CTRL2_SIZE  0x4
#define SEC_WRREG_CTRL3_SIZE  0x4
#define AHB_BUS_PROFILING_s_SIZE  0x30
#define AHB_BUS_PROFILING_CTRL_SIZE  0x4
#define AHB_BUS_TOTAL_CYC_CNT_SIZE  0x4
#define AHB_BUS_RREQ_CNT_SIZE  0x4
#define AHB_BUS_WREQ_CNT_SIZE  0x4
#define AHB_BUS_RSTL_CYC_CNT_SIZE  0x4
#define AHB_BUS_WSTL_CYC_CNT_SIZE  0x4
#define AHB_BUS_RTR_CNT_SIZE  0x4
#define AHB_BUS_WTR_CNT_SIZE  0x4
#define AHB_BUS_RDAT_BYTES_CNT_SIZE  0x4
#define AHB_BUS_WDAT_BYTES_CNT_SIZE  0x4
#define AHB_BUS_BREQ_CYC_CNT_SIZE  0x4
#define AHB_BUS_BGRA_CYC_CNT_SIZE  0x4
#define SSE200_PROFILING_s_SIZE  0x98
#define SSE200_M0_PROFILING_CTRL_SIZE  0x4
#define SSE200_M0_TOTAL_CYC_CNT_SIZE  0x4
#define SSE200_M0_RREQ_CNT_SIZE  0x4
#define SSE200_M0_WREQ_CNT_SIZE  0x4
#define SSE200_M0_RSTL_CYC_CNT_SIZE  0x4
#define SSE200_M0_WSTL_CYC_CNT_SIZE  0x4
#define SSE200_M0_RTR_CNT_SIZE  0x4
#define SSE200_M0_WTR_CNT_SIZE  0x4
#define SSE200_M0_RDAT_BYTES_CNT_SIZE  0x4
#define SSE200_M0_WDAT_BYTES_CNT_SIZE  0x4
#define SSE200_S0_PROFILING_CTRL_SIZE  0x4
#define SSE200_S0_TOTAL_CYC_CNT_SIZE  0x4
#define SSE200_S0_RREQ_CNT_SIZE  0x4
#define SSE200_S0_WREQ_CNT_SIZE  0x4
#define SSE200_S0_RSTL_CYC_CNT_SIZE  0x4
#define SSE200_S0_WSTL_CYC_CNT_SIZE  0x4
#define SSE200_S0_RTR_CNT_SIZE  0x4
#define SSE200_S0_WTR_CNT_SIZE  0x4
#define SSE200_S0_RDAT_BYTES_CNT_SIZE  0x4
#define SSE200_S0_WDAT_BYTES_CNT_SIZE  0x4
#define ASIP_PROFILING_s_SIZE  0xf4
#define ASIP_PROFILING_CTR_SIZE  0x4
#define ASIP_MST_TOTAL_CYC_CNT_SIZE  0x4
#define ASIP_MST_WREQ_CNT_SIZE  0x4
#define ASIP_MST_RREQ_CNT_SIZE  0x4
#define ASIP_MST_WSTL_CYC_CNT_SIZE  0x4
#define ASIP_MST_RSTL_CYC_CNT_SIZE  0x4
#define CAPE_A_SLP_CNT_SIZE  0x4
#define CAPE_B_SLP_CNT_SIZE  0x4
#define LLE_A_SLP_CNT_SIZE  0x4
#define LLE_B_SLP_CNT_SIZE  0x4
#define ASIP_SLV_TOTAL_CYC_CNT_SIZE  0x4
#define ASIP_SLV_WREQ_CNT_SIZE  0x4
#define ASIP_SLV_RREQ_CNT_SIZE  0x4
#define ASIP_SLV_WBLK_CYC_CNT_SIZE  0x4
#define ASIP_SLV_RBLK_CYC_CNT_SIZE  0x4
#define SHARE_MEM_PROFILING_s_SIZE  0xb8
#define SHARE_MEM_PROFILER_CTR_SIZE  0x4
#define SHARE_MEM_TOTAL_CYC_CNT_SIZE  0x4
#define SHARE_MEM_RREQ_CNT_SIZE  0x4
#define SHARE_MEM_WREQ_CNT_SIZE  0x4
#define SHARE_MEM_RBLK_CYC_CNT_SIZE  0x4
#define SHARE_MEM_WBLK_CYC_CNT_SIZE  0x4
#define SMB_s_SIZE  0x304
#define SM_ARB_CTRL_SIZE  0x4
#define SM_BBRD_ARB_PRI_SIZE  0x4
#define SM_BBWR_ARB_PRI_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM0_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM1_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM2_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM3_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM4_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM5_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM6_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM7_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM8_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM9_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM10_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM11_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM12_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM13_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM14_SIZE  0x4
#define SM_SRAM_ARB_PRI_SRAM15_SIZE  0x4
#define SM_CLKG_CTRL_SIZE  0x4
#define SM_SRST_CTRL_SIZE  0x4
#define SM_DBG0_SIZE  0x4
#define SM_SRAM_TIM_CTRL_SIZE  0x4
#define MISC_s_SIZE  0x234
#define WRREG_CTRL0_SIZE  0x4
#define WRREG_CTRL1_SIZE  0x4
#define WRREG_CTRL2_SIZE  0x4
#define WRREG_CTRL3_SIZE  0x4
#define WRREG_CTRL4_SIZE  0x4
#define WRREG_CTRL5_SIZE  0x4
#define WRREG_CTRL6_SIZE  0x4
#define WRREG_CTRL7_SIZE  0x4
#define I3C_CTRL_SIZE  0x4
#define DMACH_CTRL_SIZE  0x4
#define I3C_SRAM_TIM_CTRL_SIZE  0x4
#define I3C_DBGL_SIZE  0x4
#define I3C_DBGH_SIZE  0x4
#define APB_ST_SIZE  0x4
#define RO_REG00_SIZE  0x4
#define RO_REG01_SIZE  0x4
#define RO_REG02_SIZE  0x4
#define RO_REG03_SIZE  0x4
#define RO_REG10_SIZE  0x4
#define RO_REG11_SIZE  0x4
#define RO_REG12_SIZE  0x4
#define RO_REG13_SIZE  0x4
#define ISP_CTRL0_SIZE  0x4
#define ISP_CTRL1_SIZE  0x4
#define ISP_CTRL2_SIZE  0x4
#define ISP_STATE_SIZE  0x4
#define SYNC_s_SIZE  0x70
#define SYNC_CMD_SIZE  0x4
#define SYNC_DATA_SIZE  0x4
#define SYNC_FREE_CNT_SNAPSHOOT_SIZE  0x4
#define SYNC_DLY_SIZE  0x4
#define SYNC_FORCE_EVENT_SET_SIZE  0x4
#define SYNC_EVENT_PULSE_SIZE  0x4
#define SYNC_EVENT_CDC_SIZE  0x4
#define SYNC_CMP_MASK_SIZE  0x4
#define SYNC_CMP_0_SIZE  0x4
#define SYNC_CMP_1_SIZE  0x4
#define SYNC_CMP_2_SIZE  0x4
#define SYNC_CMP_3_SIZE  0x4
#define SYNC_CMP_4_SIZE  0x4
#define SYNC_CMP_5_SIZE  0x4
#define SYNC_EVENT_EN_0_SIZE  0x4
#define SYNC_EVENT_EN_1_SIZE  0x4
#define SYNC_EVENT_EN_2_SIZE  0x4
#define SYNC_EVENT_EN_3_SIZE  0x4
#define SYNC_EVENT_EN_4_SIZE  0x4
#define SYNC_EVENT_EN_5_SIZE  0x4
#define SYNC_CMP_MATCH_FLG_SIZE  0x4
#define SYNC_CLR_EVENT_FLG_SIZE  0x4
#define SYNC_EVENT_FLG_SIZE  0x4
#define SYNC_CNT_SIZE  0x4

#define QSPI_s_OFFSET  0x42021400
#define QSPI_CSR_OFFSET  0x0
#define TRANSFER_CTL_PRELOAD_OFFSET  0x4
#define TRANSFER_CTL_PDMA_OFFSET  0x8
#define TRANSFER_CTL_REGXFER_OFFSET  0xc
#define TRANSFER_CTL_XIP_OFFSET  0x10
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_OFFSET  0x14
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_OFFSET  0x18
#define QSPI_PROGRAMMED_DMA_LEN_OFFSET  0x1c
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_OFFSET  0x20
#define QSPI_PROGRAMMED_DMA_INT_ADDR_OFFSET  0x24
#define QSPI_XIP_XFER_CONFIG_OFFSET  0x28
#define QSPI_XIP_W0_EXT_ADDR_OFFSET  0x2c
#define QSPI_XIP_W0_LEN_OFFSET  0x30
#define QSPI_REG_XFER_CONFIG_OFFSET  0x34
#define QSPI_REG_XFER_LEN_OFFSET  0x38
#define QSPI_REG_XFER_EXT_ADDR_OFFSET  0x3c
#define QSPI_REG_XFER_DATA_OFFSET  0x40
#define QSPI_INT_MSK_OFFSET  0x44
#define CRC_EXT_ADDR_OFFSET  0x48
#define CRC_DATA_LEN_OFFSET  0x4c
#define CRC_CSR_OFFSET  0x50
#define CRC_FEATURE_CODE_OFFSET  0x54
#define UART_s_OFFSET  0x42005c00
#define UART_REG_FFBRD_OFFSET  0x0
#define UART_REG_IEBRD_OFFSET  0x4
#define UART_REG_FFCTL_OFFSET  0x8
#define UART_REG_FRCTL_OFFSET  0xc
#define UART_REG_STATS_OFFSET  0x14
#define UART_REG_IRLVL_OFFSET  0x18
#define UART_REG_IRCTL_OFFSET  0x20
#define UART_REG_TXSTA_OFFSET  0x28
#define UART_REG_RXSTA_OFFSET  0x2c
#define UART_REG_EXBRD_OFFSET  0x30
#define UART_REG_CTRL_OFFSET  0x3c
#define AES_s_OFFSET  0x42007c00
#define AES_CSR_OFFSET  0x0
#define AES_IER_OFFSET  0x10
#define AES_ISR_OFFSET  0x14
#define AES_IMR_OFFSET  0x18
#define AES_ISMR_OFFSET  0x1c
#define AES_DR0_OFFSET  0x20
#define AES_DR1_OFFSET  0x24
#define AES_DR2_OFFSET  0x28
#define AES_DR3_OFFSET  0x2c
#define AES_KR0_OFFSET  0x30
#define AES_KR1_OFFSET  0x34
#define AES_KR2_OFFSET  0x38
#define AES_KR3_OFFSET  0x3c
#define AES_IVR0_OFFSET  0x40
#define AES_IVR1_OFFSET  0x44
#define AES_IVR2_OFFSET  0x48
#define AES_IVR3_OFFSET  0x4c
#define AES_DCR_OFFSET  0x80
#define GP_MUX_s_OFFSET  0x42023400
#define GPIO_INTR_RISE_ENA_OFFSET  0x0
#define GPIO_INTR_FALL_ENA_OFFSET  0x4
#define GPIO_INTR_ENA_OFFSET  0x8
#define GPIO_INTR_CLR_OFFSET  0xc
#define GPIO_INTR_STATUS_OFFSET  0x10
#define GPIO_IN_SW_OFFSET  0x14
#define TAHITI_MODE_OFFSET  0x18
#define PADCTRL_GPIO0_OFFSET  0x20
#define PADCTRL_GPIO1_OFFSET  0x24
#define PADCTRL_GPIO2_OFFSET  0x28
#define PADCTRL_GPIO3_OFFSET  0x2c
#define PADCTRL_GPIO4_OFFSET  0x30
#define PADCTRL_GPIO5_OFFSET  0x34
#define PADCTRL_GPIO6_OFFSET  0x38
#define PADCTRL_I2S1_BCLK_OFFSET  0x3c
#define PADCTRL_I2S1_TX_DAT_OFFSET  0x40
#define PADCTRL_I2S1_RX_DAT_OFFSET  0x44
#define PADCTRL_I2S1_TX_WS_OFFSET  0x48
#define PADCTRL_I2S1_RX_WS_OFFSET  0x4c
#define PADCTRL_UART_TX_OFFSET  0x50
#define PADCTRL_UART_RX_OFFSET  0x54
#define PADCTRL_I3C_I2C_SCK_OFFSET  0x58
#define PADCTRL_I3C_I2C_SDA_OFFSET  0x5c
#define PADCTRL_I2C0_M_SCK_OFFSET  0x60
#define PADCTRL_I2C0_M_SDA_OFFSET  0x64
#define PADCTRL_I2S0_BCLK_OFFSET  0x70
#define PADCTRL_I2S0_TX_WS_OFFSET  0x74
#define PADCTRL_I2S0_RX_WS_OFFSET  0x78
#define PADCTRL_I2S0_TX_DAT_OFFSET  0x7c
#define PADCTRL_I2S0_RX_DAT_OFFSET  0x80
#define PADCTRL_QSPI_CSN_OFFSET  0x84
#define PADCTRL_QSPI_CLK_OFFSET  0x88
#define PADCTRL_QSPI_D0_OFFSET  0x8c
#define PADCTRL_QSPI_D1_OFFSET  0x90
#define PADCTRL_QSPI_D2_OFFSET  0x94
#define PADCTRL_QSPI_D3_OFFSET  0x98
#define JTAG_CTRL_OFFSET  0x9c
#define PADCTRL_DMIC0_CLK_OFFSET  0xa0
#define PADCTRL_DMIC1_CLK_OFFSET  0xa4
#define PADCTRL_DMIC2_CLK_OFFSET  0xa8
#define PADCTRL_MIC0P_OFFSET  0xac
#define PADCTRL_MIC0N_OFFSET  0xb0
#define PADCTRL_MIC1P_OFFSET  0xb4
#define PADCTRL_MIC1N_OFFSET  0xb8
#define PADCTRL_TEMP_SNS_OFFSET  0xbc
#define PADCTRL_MB_SNS_OFFSET  0xc0
#define GPTEST_MODE_CTRL_OFFSET  0xc4
#define ADC_s_OFFSET  0x42023000
#define ADC_CLK_CTRL_OFFSET  0x0
#define ADC_RST_CTRL_OFFSET  0x4
#define ADC_CTRL_OFFSET  0x8
#define ADC_CH0_CTRL0_OFFSET  0xc
#define ADC_CH0_CTRL1_OFFSET  0x10
#define ADC_CH1_CTRL0_OFFSET  0x14
#define ADC_CH1_CTRL1_OFFSET  0x18
#define ADC_CH2_CTRL0_OFFSET  0x1c
#define ADC_CH2_CTRL1_OFFSET  0x20
#define ADC_CH3_CTRL0_OFFSET  0x24
#define ADC_CH3_CTRL1_OFFSET  0x28
#define ADC_CH4_CTRL0_OFFSET  0x2c
#define ADC_CH4_CTRL1_OFFSET  0x30
#define ADC_DMIC_CTRL0_OFFSET  0x34
#define ADC_DMIC_CTRL1_OFFSET  0x38
#define SIDETONE_CTRL_OFFSET  0x3c
#define ANC_OUT_CTRL_OFFSET  0x40
#define I2S_PCM_s_OFFSET  0x42006000
#define I2S0_PCM_REG1_OFFSET  0x0
#define I2S0_PCM_REG2_OFFSET  0x4
#define I2S0_PCM_REG3_OFFSET  0x8
#define I2S0_PCM_REG4_OFFSET  0xc
#define I2S0_PCM_REG5_OFFSET  0x10
#define I2S0_PCM_REG6_OFFSET  0x14
#define I2S0_PCM_REG8_OFFSET  0x1c
#define I2S0_PCM_REG9_OFFSET  0x20
#define I2S0_PCM_REG10_OFFSET  0x24
#define I2S0_PCM_REG12_OFFSET  0x2c
#define I2S0_PCM_REG13_OFFSET  0x30
#define I2S0_PCM_REG14_OFFSET  0x34
#define I2S1_PCM_REG1_OFFSET  0x40
#define I2S1_PCM_REG2_OFFSET  0x44
#define I2S1_PCM_REG3_OFFSET  0x48
#define I2S1_PCM_REG4_OFFSET  0x4c
#define I2S1_PCM_REG5_OFFSET  0x50
#define I2S1_PCM_REG6_OFFSET  0x54
#define I2S1_PCM_REG8_OFFSET  0x5c
#define I2S1_PCM_REG9_OFFSET  0x60
#define I2S1_PCM_REG10_OFFSET  0x64
#define I2S1_PCM_REG11_OFFSET  0x68
#define I2S1_PCM_REG12_OFFSET  0x6c
#define I2S1_PCM_REG13_OFFSET  0x70
#define I2S1_PCM_REG14_OFFSET  0x74
#define HIFI3_WRAPPER_s_OFFSET  0x42006800
#define HIFI3_WRAPPER_HIFI3_CONTROL_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_OFFSET  0x20
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_OFFSET  0x24
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_OFFSET  0x28
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_OFFSET  0x2c
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_OFFSET  0x30
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_OFFSET  0x34
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_OFFSET  0x38
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_OFFSET  0x3c
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_OFFSET  0x40
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_OFFSET  0x44
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_OFFSET  0x60
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_OFFSET  0x64
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_OFFSET  0x68
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_OFFSET  0x6c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_OFFSET  0x70
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_OFFSET  0x74
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_OFFSET  0x78
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_OFFSET  0x7c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_OFFSET  0x80
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_OFFSET  0x84
#define TIMER_s_OFFSET  0x42007000
#define GPTC0_CONTROL_OFFSET  0x0
#define GPTC0_WD_CONTROL_OFFSET  0x4
#define GPTC0_INT_STAT_OFFSET  0x8
#define GPTC0_TERMINAL_COUNT_OFFSET  0xc
#define GPTC0_CURRENT_COUNT_OFFSET  0x10
#define WD_OUT_CONTROL_OFFSET  0x14
#define GPTC1_CONTROL_OFFSET  0x20
#define GPTC1_WD_CONTROL_OFFSET  0x24
#define GPTC1_INT_STAT_OFFSET  0x28
#define GPTC1_TERMINAL_COUNT_OFFSET  0x2c
#define GPTC1_CURRENT_COUNT_OFFSET  0x30
#define SPTC0_CONTROL_OFFSET  0x40
#define SPTC0_INT_STAT_OFFSET  0x44
#define SPTC0_TERMINAL_COUNT_OFFSET  0x48
#define SPTC0_CURRENT_COUNT_OFFSET  0x4c
#define SPTC0_MEASUREMENT_COUNT_OFFSET  0x50
#define SPTC0_MEASUREMENT_TARGET_OFFSET  0x54
#define SPTC0_MEASUREMENT_ACCUM_ERROR_OFFSET  0x58
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_OFFSET  0x5c
#define PMU_s_OFFSET  0x42007400
#define PMU_CURRENT_POWER_STATE_OFFSET  0x0
#define PMU_PWR_SEQ_CONTROL_OFFSET  0x4
#define PMU_PMU_INTERRUPT_OFFSET  0x10
#define PMU_PMU_INTERRUPT_ENABLE_OFFSET  0x14
#define PMU_PORITY_CONTROL_OFFSET  0x18
#define PMU_WAKE_SRC_STATUS_OFFSET  0x1c
#define PMU_RCOSC_CONTROL_OFFSET  0x20
#define EARLINK_TOP_COM_s_OFFSET  0x42020000
#define EARLINK_TIMING_CTRL0_OFFSET  0x0
#define EARLINK_TIMING_CTRL1_OFFSET  0x4
#define EARLINK_TIMING_CTRL2_OFFSET  0x8
#define EARLINK_TIMING_CTRL3_OFFSET  0xc
#define EARLINK_CMD_BUF_CTRL_OFFSET  0x10
#define EARLINK_DEVICE_CTRL_OFFSET  0x14
#define EARLINK_IRQ_TO_SYS_OFFSET  0x18
#define EARLINK_IRQ_TO_SYS_ENABLE_OFFSET  0x1c
#define EARLINK_PORT_IRQ_TO_SYS_OFFSET  0x20
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_OFFSET  0x24
#define EARLINK_COMMAND_CTRL_RX_BUF_OFFSET  0x28
#define EARLINK_COMMAND_RX_DATA_OFFSET  0x2c
#define EARLINK_PORT_CLK_ENABLE_CONTROL_OFFSET  0x30
#define EARLINK_DEVICE_ENABLE_OFFSET  0x34
#define EARLINK_TIMING_UPDATE_SYS_OFFSET  0x38
#define EARLINK_PHY_CONIFG0_OFFSET  0x3c
#define EARLINK_PHY_CONIFG1_OFFSET  0x40
#define EARLINK_PHY_TEST_OFFSET  0x44
#define EARLINK_TEST_BUS_CFG_OFFSET  0x4c
#define EARLINK_TOP_SLV_s_OFFSET  0x42020050
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_OFFSET  0x0
#define EARLINK_IRQ_TO_MASTER_OFFSET  0x4
#define EARLINK_IRQ_TO_MASTER_ENABLE_OFFSET  0x8
#define EARLINK_PORT_IRQ_TO_MASTER_OFFSET  0xc
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_OFFSET  0x10
#define EARLINK_TIMING_UPDATE_MASTER_OFFSET  0x14
#define EARLINK_TOP_MST_s_OFFSET  0x42020070
#define EARLINK_COMMAND_CTRL_TX_BUF_OFFSET  0x0
#define EARLINK_COMMAND_TX_DATA_OFFSET  0x4
#define EARLINK_AUDIO_SYNC_DIVIDER_OFFSET  0x8
#define EARLINK_PORT_s_OFFSET  0x42020100
#define BANK_SWITCH_REGISTER_PORT0_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT0_OFFSET  0x4
#define PORT_CTRL_PORT0_OFFSET  0x8
#define PORT_ENABLE_PORT0_OFFSET  0xc
#define ROW_COLUMN_CTRL_SHADOW_PORT0_OFFSET  0x10
#define PORT_CTRL_SHADOW_PORT0_OFFSET  0x14
#define PORT_ENABLE_SHADOW_PORT0_OFFSET  0x18
#define PORT_FIFO_FLUSH_PORT0_OFFSET  0x1c
#define BULK_CRC_24B_PORT0_OFFSET  0x20
#define PORT_IRQ_TO_MASTER_PORT0_OFFSET  0x24
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_OFFSET  0x28
#define PORT_IRQ_TO_SYS_PORT0_OFFSET  0x2c
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_OFFSET  0x30
#define BANK_SWITCH_REGISTER_PORT1_OFFSET  0x40
#define ROW_COLUMN_CTRL_PORT1_OFFSET  0x44
#define PORT_CTRL_PORT1_OFFSET  0x48
#define PORT_ENABLE_PORT1_OFFSET  0x4c
#define ROW_COLUMN_CTRL_SHADOW_PORT1_OFFSET  0x50
#define PORT_CTRL_SHADOW_PORT1_OFFSET  0x54
#define PORT_ENABLE_SHADOW_PORT1_OFFSET  0x58
#define PORT_FIFO_FLUSH_PORT1_OFFSET  0x5c
#define BULK_CRC_24B_PORT1_OFFSET  0x60
#define PORT_IRQ_TO_MASTER_PORT1_OFFSET  0x64
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_OFFSET  0x68
#define PORT_IRQ_TO_SYS_PORT1_OFFSET  0x6c
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_OFFSET  0x70
#define BANK_SWITCH_REGISTER_PORT2_OFFSET  0x80
#define ROW_COLUMN_CTRL_PORT2_OFFSET  0x84
#define PORT_CTRL_PORT2_OFFSET  0x88
#define PORT_ENABLE_PORT2_OFFSET  0x8c
#define ROW_COLUMN_CTRL_SHADOW_PORT2_OFFSET  0x90
#define PORT_CTRL_SHADOW_PORT2_OFFSET  0x94
#define PORT_ENABLE_SHADOW_PORT2_OFFSET  0x98
#define PORT_FIFO_FLUSH_PORT2_OFFSET  0x9c
#define BULK_CRC_24B_PORT2_OFFSET  0xa0
#define PORT_IRQ_TO_MASTER_PORT2_OFFSET  0xa4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_OFFSET  0xa8
#define PORT_IRQ_TO_SYS_PORT2_OFFSET  0xac
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_OFFSET  0xb0
#define BANK_SWITCH_REGISTER_PORT3_OFFSET  0xc0
#define ROW_COLUMN_CTRL_PORT3_OFFSET  0xc4
#define PORT_CTRL_PORT3_OFFSET  0xc8
#define PORT_ENABLE_PORT3_OFFSET  0xcc
#define ROW_COLUMN_CTRL_SHADOW_PORT3_OFFSET  0xd0
#define PORT_CTRL_SHADOW_PORT3_OFFSET  0xd4
#define PORT_ENABLE_SHADOW_PORT3_OFFSET  0xd8
#define PORT_FIFO_FLUSH_PORT3_OFFSET  0xdc
#define BULK_CRC_24B_PORT3_OFFSET  0xe0
#define PORT_IRQ_TO_MASTER_PORT3_OFFSET  0xe4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_OFFSET  0xe8
#define PORT_IRQ_TO_SYS_PORT3_OFFSET  0xec
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_OFFSET  0xf0
#define BANK_SWITCH_REGISTER_PORT4_OFFSET  0x100
#define ROW_COLUMN_CTRL_PORT4_OFFSET  0x104
#define PORT_CTRL_PORT4_OFFSET  0x108
#define PORT_ENABLE_PORT4_OFFSET  0x10c
#define ROW_COLUMN_CTRL_SHADOW_PORT4_OFFSET  0x110
#define PORT_CTRL_SHADOW_PORT4_OFFSET  0x114
#define PORT_ENABLE_SHADOW_PORT4_OFFSET  0x118
#define PORT_FIFO_FLUSH_PORT4_OFFSET  0x11c
#define BULK_CRC_24B_PORT4_OFFSET  0x120
#define PORT_IRQ_TO_MASTER_PORT4_OFFSET  0x124
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_OFFSET  0x128
#define PORT_IRQ_TO_SYS_PORT4_OFFSET  0x12c
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_OFFSET  0x130
#define BANK_SWITCH_REGISTER_PORT5_OFFSET  0x140
#define ROW_COLUMN_CTRL_PORT5_OFFSET  0x144
#define PORT_CTRL_PORT5_OFFSET  0x148
#define PORT_ENABLE_PORT5_OFFSET  0x14c
#define ROW_COLUMN_CTRL_SHADOW_PORT5_OFFSET  0x150
#define PORT_CTRL_SHADOW_PORT5_OFFSET  0x154
#define PORT_ENABLE_SHADOW_PORT5_OFFSET  0x158
#define PORT_FIFO_FLUSH_PORT5_OFFSET  0x15c
#define BULK_CRC_24B_PORT5_OFFSET  0x160
#define PORT_IRQ_TO_MASTER_PORT5_OFFSET  0x164
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_OFFSET  0x168
#define PORT_IRQ_TO_SYS_PORT5_OFFSET  0x16c
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_OFFSET  0x170
#define BANK_SWITCH_REGISTER_PORT6_OFFSET  0x180
#define ROW_COLUMN_CTRL_PORT6_OFFSET  0x184
#define PORT_CTRL_PORT6_OFFSET  0x188
#define PORT_ENABLE_PORT6_OFFSET  0x18c
#define ROW_COLUMN_CTRL_SHADOW_PORT6_OFFSET  0x190
#define PORT_CTRL_SHADOW_PORT6_OFFSET  0x194
#define PORT_ENABLE_SHADOW_PORT6_OFFSET  0x198
#define PORT_FIFO_FLUSH_PORT6_OFFSET  0x19c
#define BULK_CRC_24B_PORT6_OFFSET  0x1a0
#define PORT_IRQ_TO_MASTER_PORT6_OFFSET  0x1a4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_OFFSET  0x1a8
#define PORT_IRQ_TO_SYS_PORT6_OFFSET  0x1ac
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_OFFSET  0x1b0
#define BANK_SWITCH_REGISTER_PORT7_OFFSET  0x1c0
#define ROW_COLUMN_CTRL_PORT7_OFFSET  0x1c4
#define PORT_CTRL_PORT7_OFFSET  0x1c8
#define PORT_ENABLE_PORT7_OFFSET  0x1cc
#define ROW_COLUMN_CTRL_SHADOW_PORT7_OFFSET  0x1d0
#define PORT_CTRL_SHADOW_PORT7_OFFSET  0x1d4
#define PORT_ENABLE_SHADOW_PORT7_OFFSET  0x1d8
#define PORT_FIFO_FLUSH_PORT7_OFFSET  0x1dc
#define BULK_CRC_24B_PORT7_OFFSET  0x1e0
#define PORT_IRQ_TO_MASTER_PORT7_OFFSET  0x1e4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_OFFSET  0x1e8
#define PORT_IRQ_TO_SYS_PORT7_OFFSET  0x1ec
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_OFFSET  0x1f0
#define BANK_SWITCH_REGISTER_PORT8_OFFSET  0x200
#define ROW_COLUMN_CTRL_PORT8_OFFSET  0x204
#define PORT_CTRL_PORT8_OFFSET  0x208
#define PORT_ENABLE_PORT8_OFFSET  0x20c
#define ROW_COLUMN_CTRL_SHADOW_PORT8_OFFSET  0x210
#define PORT_CTRL_SHADOW_PORT8_OFFSET  0x214
#define PORT_ENABLE_SHADOW_PORT8_OFFSET  0x218
#define PORT_FIFO_FLUSH_PORT8_OFFSET  0x21c
#define BULK_CRC_24B_PORT8_OFFSET  0x220
#define PORT_IRQ_TO_MASTER_PORT8_OFFSET  0x224
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_OFFSET  0x228
#define PORT_IRQ_TO_SYS_PORT8_OFFSET  0x22c
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_OFFSET  0x230
#define BANK_SWITCH_REGISTER_PORT9_OFFSET  0x240
#define ROW_COLUMN_CTRL_PORT9_OFFSET  0x244
#define PORT_CTRL_PORT9_OFFSET  0x248
#define PORT_ENABLE_PORT9_OFFSET  0x24c
#define ROW_COLUMN_CTRL_SHADOW_PORT9_OFFSET  0x250
#define PORT_CTRL_SHADOW_PORT9_OFFSET  0x254
#define PORT_ENABLE_SHADOW_PORT9_OFFSET  0x258
#define PORT_FIFO_FLUSH_PORT9_OFFSET  0x25c
#define BULK_CRC_24B_PORT9_OFFSET  0x260
#define PORT_IRQ_TO_MASTER_PORT9_OFFSET  0x264
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_OFFSET  0x268
#define PORT_IRQ_TO_SYS_PORT9_OFFSET  0x26c
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_OFFSET  0x270
#define BANK_SWITCH_REGISTER_PORT10_OFFSET  0x280
#define ROW_COLUMN_CTRL_PORT10_OFFSET  0x284
#define PORT_CTRL_PORT10_OFFSET  0x288
#define PORT_ENABLE_PORT10_OFFSET  0x28c
#define ROW_COLUMN_CTRL_SHADOW_PORT10_OFFSET  0x290
#define PORT_CTRL_SHADOW_PORT10_OFFSET  0x294
#define PORT_ENABLE_SHADOW_PORT10_OFFSET  0x298
#define PORT_FIFO_FLUSH_PORT10_OFFSET  0x29c
#define BULK_CRC_24B_PORT10_OFFSET  0x2a0
#define PORT_IRQ_TO_MASTER_PORT10_OFFSET  0x2a4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_OFFSET  0x2a8
#define PORT_IRQ_TO_SYS_PORT10_OFFSET  0x2ac
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_OFFSET  0x2b0
#define BANK_SWITCH_REGISTER_PORT11_OFFSET  0x2c0
#define ROW_COLUMN_CTRL_PORT11_OFFSET  0x2c4
#define PORT_CTRL_PORT11_OFFSET  0x2c8
#define PORT_ENABLE_PORT11_OFFSET  0x2cc
#define ROW_COLUMN_CTRL_SHADOW_PORT11_OFFSET  0x2d0
#define PORT_CTRL_SHADOW_PORT11_OFFSET  0x2d4
#define PORT_ENABLE_SHADOW_PORT11_OFFSET  0x2d8
#define PORT_FIFO_FLUSH_PORT11_OFFSET  0x2dc
#define BULK_CRC_24B_PORT11_OFFSET  0x2e0
#define PORT_IRQ_TO_MASTER_PORT11_OFFSET  0x2e4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_OFFSET  0x2e8
#define PORT_IRQ_TO_SYS_PORT11_OFFSET  0x2ec
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_OFFSET  0x2f0
#define BANK_SWITCH_REGISTER_PORT12_OFFSET  0x300
#define ROW_COLUMN_CTRL_PORT12_OFFSET  0x304
#define PORT_CTRL_PORT12_OFFSET  0x308
#define PORT_ENABLE_PORT12_OFFSET  0x30c
#define ROW_COLUMN_CTRL_SHADOW_PORT12_OFFSET  0x310
#define PORT_CTRL_SHADOW_PORT12_OFFSET  0x314
#define PORT_ENABLE_SHADOW_PORT12_OFFSET  0x318
#define PORT_FIFO_FLUSH_PORT12_OFFSET  0x31c
#define BULK_CRC_24B_PORT12_OFFSET  0x320
#define PORT_IRQ_TO_MASTER_PORT12_OFFSET  0x324
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_OFFSET  0x328
#define PORT_IRQ_TO_SYS_PORT12_OFFSET  0x32c
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_OFFSET  0x330
#define BANK_SWITCH_REGISTER_PORT13_OFFSET  0x340
#define ROW_COLUMN_CTRL_PORT13_OFFSET  0x344
#define PORT_CTRL_PORT13_OFFSET  0x348
#define PORT_ENABLE_PORT13_OFFSET  0x34c
#define ROW_COLUMN_CTRL_SHADOW_PORT13_OFFSET  0x350
#define PORT_CTRL_SHADOW_PORT13_OFFSET  0x354
#define PORT_ENABLE_SHADOW_PORT13_OFFSET  0x358
#define PORT_FIFO_FLUSH_PORT13_OFFSET  0x35c
#define BULK_CRC_24B_PORT13_OFFSET  0x360
#define PORT_IRQ_TO_MASTER_PORT13_OFFSET  0x364
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_OFFSET  0x368
#define PORT_IRQ_TO_SYS_PORT13_OFFSET  0x36c
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_OFFSET  0x370
#define BANK_SWITCH_REGISTER_PORT14_OFFSET  0x380
#define ROW_COLUMN_CTRL_PORT14_OFFSET  0x384
#define PORT_CTRL_PORT14_OFFSET  0x388
#define PORT_ENABLE_PORT14_OFFSET  0x38c
#define ROW_COLUMN_CTRL_SHADOW_PORT14_OFFSET  0x390
#define PORT_CTRL_SHADOW_PORT14_OFFSET  0x394
#define PORT_ENABLE_SHADOW_PORT14_OFFSET  0x398
#define PORT_FIFO_FLUSH_PORT14_OFFSET  0x39c
#define BULK_CRC_24B_PORT14_OFFSET  0x3a0
#define PORT_IRQ_TO_MASTER_PORT14_OFFSET  0x3a4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_OFFSET  0x3a8
#define PORT_IRQ_TO_SYS_PORT14_OFFSET  0x3ac
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_OFFSET  0x3b0
#define BANK_SWITCH_REGISTER_PORT15_OFFSET  0x3c0
#define ROW_COLUMN_CTRL_PORT15_OFFSET  0x3c4
#define PORT_CTRL_PORT15_OFFSET  0x3c8
#define PORT_ENABLE_PORT15_OFFSET  0x3cc
#define ROW_COLUMN_CTRL_SHADOW_PORT15_OFFSET  0x3d0
#define PORT_CTRL_SHADOW_PORT15_OFFSET  0x3d4
#define PORT_ENABLE_SHADOW_PORT15_OFFSET  0x3d8
#define PORT_FIFO_FLUSH_PORT15_OFFSET  0x3dc
#define BULK_CRC_24B_PORT15_OFFSET  0x3e0
#define PORT_IRQ_TO_MASTER_PORT15_OFFSET  0x3e4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_OFFSET  0x3e8
#define PORT_IRQ_TO_SYS_PORT15_OFFSET  0x3ec
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_OFFSET  0x3f0
#define CLOCK_RESET_PORT_s_OFFSET  0x42007800
#define CR_RST_SFT_0_OFFSET  0x8
#define CR_RST_SFT_1_OFFSET  0xc
#define CR_RST_SFT_2_OFFSET  0x10
#define CR_RST_CON_0_OFFSET  0x14
#define CR_CLK_MAIN_OFFSET  0x18
#define CR_CLK_PMU_OFFSET  0x1c
#define CR_CLK_ARM_32K_OFFSET  0x20
#define CR_CLK_EARLINK_OFFSET  0x24
#define CR_CLK_I2S0_OFFSET  0x28
#define CR_CLK_I2S1_OFFSET  0x2c
#define CR_CLK_I2S_MST_IO_OFFSET  0x30
#define CR_CLK_ADC_OFFSET  0x34
#define CR_CLK_DAC_OFFSET  0x38
#define CR_CLK_DMIC_OFFSET  0x3c
#define CR_CLK_DSP_0_OFFSET  0x40
#define CR_CLK_HIFI3_OFFSET  0x44
#define CR_CLK_SSE200_OFFSET  0x4c
#define CR_CLK_AHB_APB_OFFSET  0x50
#define CR_CLK_DMA_OFFSET  0x54
#define CR_CLK_AES_OFFSET  0x58
#define CR_CLK_SPI_OFFSET  0x5c
#define CR_CLK_QSPI_OFFSET  0x60
#define CR_CLK_TIMER0_OFFSET  0x64
#define CR_CLK_TIMER1_OFFSET  0x68
#define CR_CLK_TIMER2_OFFSET  0x6c
#define CR_CLK_PWM_OFFSET  0x70
#define CR_CLK_I2C_OFFSET  0x74
#define CR_CLK_MAIL_BOX_OFFSET  0x78
#define CR_CLK_I3C_OFFSET  0x7c
#define CR_CLK_UART_OFFSET  0x80
#define CR_CLK_ACL_OFFSET  0x84
#define CR_CLK_ADC_ANA_OFFSET  0x88
#define CR_CLK_DSP_1_OFFSET  0x8c
#define CR_DET_I2S_ON_INT_OFFSET  0x90
#define CR_DET_I2S_OFF_INT_OFFSET  0x94
#define CR_DET_I2S_ON_CFG_OFFSET  0x98
#define CR_DET_I2S_OFF_CFG_OFFSET  0x9c
#define CR_DET_I2S_CFG_OFFSET  0xa0
#define CR_CLK_MADC_OFFSET  0xa4
#define CR_FAST_BOOT_OFFSET  0xa8
#define CR_PSIST_MES_ARM_OFFSET  0xac
#define CR_PSIST_MES_ARM_1_OFFSET  0xb0
#define CR_SOFTBACKDOOR_OFFSET  0xb4
#define CR_RX_LPOSC_OFFSET  0xb8
#define CR_CLK_TEST_OBSV_OFFSET  0xbc
#define CR_RST_ELINK_OFFSET  0xc0
#define CR_CLK_DIVIDER_EN_OFFSET  0xc4
#define CR_CLK_ISP_OFFSET  0xc8
#define DAC_s_OFFSET  0x42022c00
#define DAC_CFG_REG0_OFFSET  0x0
#define DAC_CFG_REG1_OFFSET  0x4
#define DAC_CFG_REG2_OFFSET  0x8
#define DAC_CFG_REG3_OFFSET  0xc
#define DAC_CFG_REG4_OFFSET  0x10
#define DAC_CFG_REG5_OFFSET  0x14
#define DAC_CFG_REG6_OFFSET  0x18
#define DAC_CFG_REG7_OFFSET  0x1c
#define DAC_CFG_REG8_OFFSET  0x20
#define DAC_CFG_REG9_OFFSET  0x24
#define DAC_CFG_REG10_OFFSET  0x28
#define DAC_CFG_REG11_OFFSET  0x2c
#define DAC_CFG_REG12_OFFSET  0x30
#define DAC_CFG_REG13_OFFSET  0x34
#define DAC_CFG_REG14_OFFSET  0x38
#define DAC_CFG_REG15_OFFSET  0x3c
#define ACL_s_OFFSET  0x42008000
#define ACL_REG0_OFFSET  0x0
#define ACL_REG1_OFFSET  0x4
#define ACL_REG2_OFFSET  0x8
#define ACL_REG3_OFFSET  0xc
#define TX_TSTCTRL_1_CORE_OFFSET  0x10
#define TX_TSTCTRL_2_CORE_OFFSET  0x14
#define TX_TSTCTRL_3_CORE_OFFSET  0x18
#define TX_TSTCTRL_4_CORE_OFFSET  0x1c
#define TX_TSTCTRL_5_CORE_OFFSET  0x20
#define E_LINK_PLL_CTRL0_OFFSET  0x40
#define E_LINK_PLL_CTRL1_OFFSET  0x44
#define SYS_PLL_CTRL0_OFFSET  0x60
#define SYS_PLL_CTRL1_OFFSET  0x64
#define BGREF_TSTCTRL_1_CORE_OFFSET  0x80
#define BGREF_TSTCTRL_2_CORE_OFFSET  0x84
#define POWERTOP_TSTCTRL_1_CORE_OFFSET  0x8c
#define POWERTOP_TSTCTRL_2_CORE_OFFSET  0x90
#define POWERTOP_TSTCTRL_3_CORE_OFFSET  0x94
#define MADC_TSTCTRL_1_CORE_OFFSET  0x98
#define MADC_TSTCTRL_2_CORE_OFFSET  0x9c
#define TX_RCCAL_OUT_CORE_OFFSET  0xa0
#define LPRCOSC_FSEL_CORE_OFFSET  0xa4
#define RX_MIC_RC_TUNING_OFFSET  0xc0
#define RX_MICBIAS_SET_OFFSET  0xc4
#define RX_MICBIAS_PDB_HP_CTRL_OFFSET  0xc8
#define RX_MIC0_TSTCTRL_1_CORE_OFFSET  0xcc
#define RX_MIC1_TSTCTRL_1_CORE_OFFSET  0xd0
#define RX_MIC2_TSTCTRL_1_CORE_OFFSET  0xd4
#define RX_MIC3_TSTCTRL_1_CORE_OFFSET  0xd8
#define RX_MIC4_TSTCTRL_1_CORE_OFFSET  0xdc
#define RX_MIC0_TSTCTRL_2_CORE_OFFSET  0xe0
#define RX_MIC1_TSTCTRL_2_CORE_OFFSET  0xe4
#define RX_MIC2_TSTCTRL_2_CORE_OFFSET  0xe8
#define RX_MIC3_TSTCTRL_2_CORE_OFFSET  0xec
#define RX_MIC4_TSTCTRL_2_CORE_OFFSET  0xf0
#define RX_TSTCTRL_1_CORE_OFFSET  0xf4
#define RX_TSTCTRL_2_CORE_OFFSET  0xf8
#define RX_TSTCTRL_3_CORE_OFFSET  0xfc
#define RX_MIC4_SAMPLE_FREQ_SET_OFFSET  0x100
#define RX_GAIN_MIC_CORE_OFFSET  0x104
#define RX_UNMUTE_MIC_CORE_OFFSET  0x108
#define RX_TEST_CORE_R_OFFSET  0x10c
#define STDRCOSC_CAL_CTRL_OFFSET  0x110
#define STDRCOSC_CAL_FORCE_OFFSET  0x114
#define STDRCOSC_CAL_VAL_OFFSET  0x118
#define PGOOD_STATE_OFFSET  0x11c
#define POWER_MADC_CTL_OFFSET  0x120
#define POWER_MADC_B_STS0_OFFSET  0x124
#define POWER_MADC_B_STS1_OFFSET  0x140
#define POWER_MADC_B_STS2_OFFSET  0x144
#define POWER_MADC_B_STS3_OFFSET  0x148
#define POWER_LPRCOSC_TRIM_SW_CTL_OFFSET  0x14c
#define DSP_GLB_s_OFFSET  0x400000
#define DSP_CORE_GCK_CTL_OFFSET  0x0
#define MEM_BANK_CLK_CTRL_OFFSET  0x4
#define DSP_RST_CTRL_OFFSET  0x8
#define LLR_CONGESTION_ST_OFFSET  0xc
#define DSP_ILLEGAL_ACCESS_OFFSET  0x10
#define ARM_LOCK_OFFSET  0x14
#define HIFI3_LOCK_OFFSET  0x18
#define CAPE_A_LOCK_OFFSET  0x1c
#define CAPE_B_LOCK_OFFSET  0x20
#define LLE_A_LOCK_OFFSET  0x24
#define LLE_B_LOCK_OFFSET  0x28
#define GLOBAL_LOCK_INTR_ENABLE_OFFSET  0x5c
#define GLOBAL_LOCK_INTR_STS_OFFSET  0x60
#define GLOBAL_LOCK_INTR_CLR_OFFSET  0x64
#define GLOBAL_LOCK_CFG_OFFSET  0x68
#define LLEA_SLEEP_TYPE_OUT_OFFSET  0x6c
#define LLEB_SLEEP_TYPE_OUT_OFFSET  0x70
#define CAPA_SLEEP_TYPE_OUT_OFFSET  0x74
#define CAPB_SLEEP_TYPE_OUT_OFFSET  0x78
#define CAPEA_RAM0_MISC_CTRL_OFFSET  0x80
#define CAPEA_RAM5_MISC_CTRL_OFFSET  0x84
#define CAPEB_RAM0_MISC_CTRL_OFFSET  0x88
#define CAPEB_RAM6_MISC_CTRL_OFFSET  0x90
#define LLEA_RAM0_MISC_CTRL_OFFSET  0x94
#define LLEB_RAM0_MISC_CTRL_OFFSET  0x9c
#define LLEB_RAM4_MISC_CTRL_OFFSET  0xa4
#define VECT_RAM0_MISC_CTRL_OFFSET  0xa8
#define ASIP_CORE_ID_OFFSET  0xb0
#define LLR_ANC_LTCY_CFG1_OFFSET  0x3c0
#define LLR_ANC_LTCY_CFG2_OFFSET  0x3c4
#define LLR_ANC_MIS_SMP_CHAN0_OFFSET  0x3c8
#define LLR_ANC_MIS_SMP_CHAN1_OFFSET  0x3cc
#define LLR_ANC_PLYBCK_SYNC_CTL_OFFSET  0x3d0
#define LLR_ANC_SMP_MIS_INT_OFFSET  0x3d8
#define LLR_LL_DECIM_INT_OFFSET  0x3e0
#define LLR_ELK_IN_INT_OFFSET  0x3e8
#define LLR_ANC_BYPASS_CTRL_OFFSET  0x3f0
#define DSP_LOCK_CTRL_s_OFFSET  0x42000000
#define GLOBAL_LOCK_SET_AHB_OFFSET  0x2c
#define GLOBAL_LOCK_SET_HIFI3_OFFSET  0x30
#define GLOBAL_LOCK_SET_CAPEA_OFFSET  0x34
#define GLOBAL_LOCK_SET_CAPEB_OFFSET  0x38
#define GLOBAL_LOCK_SET_LLEA_OFFSET  0x3c
#define GLOBAL_LOCK_SET_LLEB_OFFSET  0x40
#define GLOBAL_LOCK_CLR_AHB_OFFSET  0x44
#define GLOBAL_LOCK_CLR_HIFI3_OFFSET  0x48
#define GLOBAL_LOCK_CLR_CAPEA_OFFSET  0x4c
#define GLOBAL_LOCK_CLR_CAPEB_OFFSET  0x50
#define GLOBAL_LOCK_CLR_LLEA_OFFSET  0x54
#define GLOBAL_LOCK_CLR_LLEB_OFFSET  0x58
#define DSP_INT_GLBCTRL_s_OFFSET  0x400100
#define INT_DIS_REG_L_OFFSET  0x0
#define INT_DIS_REG_H_OFFSET  0x4
#define DSP_INT_CORECTRL_AHBVIEW_s_OFFSET  0x42000100
#define INT_ASSIGN_ASIP_L_LLEA_OFFSET  0x10
#define INT_ASSIGN_ASIP_H_LLEA_OFFSET  0x14
#define INT_STS_ASIP_L_R_LLEA_OFFSET  0x18
#define INT_STS_ASIP_H_R_LLEA_OFFSET  0x1c
#define INT_EN0_ASIP_L_LLEA_OFFSET  0x20
#define INT_EN0_ASIP_H_LLEA_OFFSET  0x24
#define INT_EN1_ASIP_L_LLEA_OFFSET  0x28
#define INT_EN1_ASIP_H_LLEA_OFFSET  0x2c
#define INT_EN2_ASIP_L_LLEA_OFFSET  0x30
#define INT_EN2_ASIP_H_LLEA_OFFSET  0x34
#define INT_EN3_ASIP_L_LLEA_OFFSET  0x38
#define INT_EN3_ASIP_H_LLEA_OFFSET  0x3c
#define SW_WAKEUP_LLEA_OFFSET  0x40
#define SW_WAKE_MODE_LLEA_OFFSET  0x48
#define DSP_CORE_SFT_INT_LLEA_OFFSET  0x50
#define INT_ASSIGN_ASIP_L_LLEB_OFFSET  0x90
#define INT_ASSIGN_ASIP_H_LLEB_OFFSET  0x94
#define INT_STS_ASIP_L_R_LLEB_OFFSET  0x98
#define INT_STS_ASIP_H_R_LLEB_OFFSET  0x9c
#define INT_EN0_ASIP_L_LLEB_OFFSET  0xa0
#define INT_EN0_ASIP_H_LLEB_OFFSET  0xa4
#define INT_EN1_ASIP_L_LLEB_OFFSET  0xa8
#define INT_EN1_ASIP_H_LLEB_OFFSET  0xac
#define INT_EN2_ASIP_L_LLEB_OFFSET  0xb0
#define INT_EN2_ASIP_H_LLEB_OFFSET  0xb4
#define INT_EN3_ASIP_L_LLEB_OFFSET  0xb8
#define INT_EN3_ASIP_H_LLEB_OFFSET  0xbc
#define SW_WAKEUP_LLEB_OFFSET  0xc0
#define SW_WAKE_MODE_LLEB_OFFSET  0xc8
#define DSP_CORE_SFT_INT_LLEB_OFFSET  0xd0
#define INT_ASSIGN_ASIP_L_CAPEA_OFFSET  0x110
#define INT_ASSIGN_ASIP_H_CAPEA_OFFSET  0x114
#define INT_STS_ASIP_L_R_CAPEA_OFFSET  0x118
#define INT_STS_ASIP_H_R_CAPEA_OFFSET  0x11c
#define INT_EN0_ASIP_L_CAPEA_OFFSET  0x120
#define INT_EN0_ASIP_H_CAPEA_OFFSET  0x124
#define INT_EN1_ASIP_L_CAPEA_OFFSET  0x128
#define INT_EN1_ASIP_H_CAPEA_OFFSET  0x12c
#define INT_EN2_ASIP_L_CAPEA_OFFSET  0x130
#define INT_EN2_ASIP_H_CAPEA_OFFSET  0x134
#define INT_EN3_ASIP_L_CAPEA_OFFSET  0x138
#define INT_EN3_ASIP_H_CAPEA_OFFSET  0x13c
#define SW_WAKEUP_CAPEA_OFFSET  0x140
#define SW_WAKE_MODE_CAPEA_OFFSET  0x148
#define DSP_CORE_SFT_INT_CAPEA_OFFSET  0x150
#define INT_ASSIGN_ASIP_L_CAPEB_OFFSET  0x190
#define INT_ASSIGN_ASIP_H_CAPEB_OFFSET  0x194
#define INT_STS_ASIP_L_R_CAPEB_OFFSET  0x198
#define INT_STS_ASIP_H_R_CAPEB_OFFSET  0x19c
#define INT_EN0_ASIP_L_CAPEB_OFFSET  0x1a0
#define INT_EN0_ASIP_H_CAPEB_OFFSET  0x1a4
#define INT_EN1_ASIP_L_CAPEB_OFFSET  0x1a8
#define INT_EN1_ASIP_H_CAPEB_OFFSET  0x1ac
#define INT_EN2_ASIP_L_CAPEB_OFFSET  0x1b0
#define INT_EN2_ASIP_H_CAPEB_OFFSET  0x1b4
#define INT_EN3_ASIP_L_CAPEB_OFFSET  0x1b8
#define INT_EN3_ASIP_H_CAPEB_OFFSET  0x1bc
#define SW_WAKEUP_CAPEB_OFFSET  0x1c0
#define SW_WAKE_MODE_CAPEB_OFFSET  0x1c8
#define DSP_CORE_SFT_INT_CAPEB_OFFSET  0x1d0
#define DSP_INT_CORECTRL_ASIPVIEW_s_OFFSET  0x400100
#define INT_ASSIGN_ASIP_L_OFFSET  0x10
#define INT_ASSIGN_ASIP_H_OFFSET  0x14
#define INT_STS_ASIP_L_R_OFFSET  0x18
#define INT_STS_ASIP_H_R_OFFSET  0x1c
#define INT_EN0_ASIP_L_OFFSET  0x20
#define INT_EN0_ASIP_H_OFFSET  0x24
#define INT_EN1_ASIP_L_OFFSET  0x28
#define INT_EN1_ASIP_H_OFFSET  0x2c
#define INT_EN2_ASIP_L_OFFSET  0x30
#define INT_EN2_ASIP_H_OFFSET  0x34
#define INT_EN3_ASIP_L_OFFSET  0x38
#define INT_EN3_ASIP_H_OFFSET  0x3c
#define SW_WAKEUP_OFFSET  0x40
#define SW_WAKE_MODE_OFFSET  0x48
#define DSP_CORE_SFT_INT_OFFSET  0x50
#define DSP_TIMER_s_OFFSET  0x400300
#define TIMER_CLK_CTL_OFFSET  0x0
#define TIMER_CTL_OFFSET  0x8
#define WTD0_CTL_OFFSET  0x10
#define WTD1_CTL_OFFSET  0x18
#define WTD2_CTL_OFFSET  0x20
#define WTD3_CTL_OFFSET  0x28
#define TIMER_CNT0_OFFSET  0x30
#define TIMER_LIMT0_OFFSET  0x38
#define TIMER_CNT1_OFFSET  0x40
#define TIMER_LIMT1_OFFSET  0x48
#define TIMER_CNT2_OFFSET  0x50
#define TIMER_LIMT2_OFFSET  0x58
#define TIMER_CNT3_OFFSET  0x60
#define TIMER_LIMT3_OFFSET  0x68
#define TIMER_CNT4_OFFSET  0x70
#define TIMER_LIMT4_OFFSET  0x78
#define TIMER_CNT5_OFFSET  0x80
#define TIMER_LIMT5_OFFSET  0x88
#define TIMER_CNT6_OFFSET  0x90
#define TIMER_LIMT6_OFFSET  0x98
#define TIMER_CNT7_OFFSET  0xa0
#define TIMER_LIMT7_OFFSET  0xa8
#define TIMER_INTERRUPT_OFFSET  0xb0
#define DSP_LLR_IO_s_OFFSET  0x300000
#define ANC_OUT_CH0_OFFSET  0x0
#define ANC_OUT_CH1_OFFSET  0x4
#define LL_DECIM_IN_CH0_OFFSET  0x30
#define LL_DECIM_IN_CH1_OFFSET  0x31
#define LL_DECIM_IN_CH2_OFFSET  0x32
#define LL_DECIM_IN_CH3_OFFSET  0x33
#define LL_INTERPO_IN_CH0_OFFSET  0x60
#define LL_INTERPO_IN_CH1_OFFSET  0x61
#define LL_ELINK_IN_CH0_OFFSET  0x90
#define LL_ELINK_IN_CH1_OFFSET  0x91
#define SSE200_MISC_s_OFFSET  0x42033000
#define ARM_MEM_MISC_CTRL0_OFFSET  0x0
#define ARM_MEM_MISC_CTRL8_OFFSET  0x4
#define QSPI_MISC_OPTION_OFFSET  0x8
#define SSE200_PCLK_GATE_OFFSET  0xc
#define RRAM_s_OFFSET  0x42021800
#define RRAM_CFG_DATA_L_OFFSET  0x10
#define RRAM_CFG_DATA_H_OFFSET  0x14
#define I2C_SLAVE_s_OFFSET  0x42001400
#define I2C_SLAVE_BASE_ADDR_OFFSET  0x0
#define I2C_SLAVE_LIMIT_ADDR_OFFSET  0x4
#define I2C_SLAVE_ZERO_ADDR_OFFSET  0x8
#define I2C_SLAVE_LIMIT_INTERRUPT_OFFSET  0xc
#define I2C_SLAVE_ADDR_OFFSET  0x10
#define I2C_SLAVE_OFFSET_SIZE_OFFSET  0x14
#define I2C_MASTER_s_OFFSET  0x42001800
#define RA_I2CM_CTL_OFFSET  0x0
#define RA_I2CM_STAT_OFFSET  0x4
#define RA_I2CM_NAK_FFLVL_OFFSET  0x8
#define RA_I2CM_XFER_OFFSET  0xc
#define RA_I2CM_XCNT_OFFSET  0x10
#define RA_I2CM_CTL_2_OFFSET  0x14
#define FLEXI_DMA0_s_OFFSET  0x42000800
#define FLEXI_DMA0_ENABLE_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH0_OFFSET  0x10
#define FLEXI_DMA0_DST_ADDR_CH0_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH0_OFFSET  0x18
#define FLEXI_DMA0_SRC_ADDR_CH1_OFFSET  0x20
#define FLEXI_DMA0_DST_ADDR_CH1_OFFSET  0x24
#define FLEXI_DMA0_CTRL_CH1_OFFSET  0x28
#define FLEXI_DMA0_SRC_ADDR_CH2_OFFSET  0x30
#define FLEXI_DMA0_DST_ADDR_CH2_OFFSET  0x34
#define FLEXI_DMA0_CTRL_CH2_OFFSET  0x38
#define FLEXI_DMA0_SRC_ADDR_CH3_OFFSET  0x40
#define FLEXI_DMA0_DST_ADDR_CH3_OFFSET  0x44
#define FLEXI_DMA0_CTRL_CH3_OFFSET  0x48
#define FLEXI_DMA0_SRC_ADDR_CH4_OFFSET  0x50
#define FLEXI_DMA0_DST_ADDR_CH4_OFFSET  0x54
#define FLEXI_DMA0_CTRL_CH4_OFFSET  0x58
#define FLEXI_DMA0_SRC_ADDR_CH5_OFFSET  0x60
#define FLEXI_DMA0_DST_ADDR_CH5_OFFSET  0x64
#define FLEXI_DMA0_CTRL_CH5_OFFSET  0x68
#define FLEXI_DMA0_SRC_ADDR_CH6_OFFSET  0x70
#define FLEXI_DMA0_DST_ADDR_CH6_OFFSET  0x74
#define FLEXI_DMA0_CTRL_CH6_OFFSET  0x78
#define FLEXI_DMA0_SRC_ADDR_CH7_OFFSET  0x80
#define FLEXI_DMA0_DST_ADDR_CH7_OFFSET  0x84
#define FLEXI_DMA0_CTRL_CH7_OFFSET  0x88
#define FLEXI_DMA0_PARIS_SRST_OFFSET  0x90
#define FLEXI_DMA0_FIFO_STATUS_OFFSET  0x94
#define FLEXI_DMA0_FIFO_s_OFFSET  0x42040000
#define I2CM_RX_FIFO_OFFSET  0x400
#define UART_FIFO_OFFSET  0x800
#define I2CM_FIFO_OFFSET  0xc00
#define I3CM_FIFO_OFFSET  0x3000
#define FLEXI_DMA1_s_OFFSET  0x42000c00
#define FLEXI_DMA1_ENABLE_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH0_OFFSET  0x10
#define FLEXI_DMA1_DST_ADDR_CH0_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH0_OFFSET  0x18
#define FLEXI_DMA1_SRC_ADDR_CH1_OFFSET  0x20
#define FLEXI_DMA1_DST_ADDR_CH1_OFFSET  0x24
#define FLEXI_DMA1_CTRL_CH1_OFFSET  0x28
#define FLEXI_DMA1_SRC_ADDR_CH2_OFFSET  0x30
#define FLEXI_DMA1_DST_ADDR_CH2_OFFSET  0x34
#define FLEXI_DMA1_CTRL_CH2_OFFSET  0x38
#define FLEXI_DMA1_SRC_ADDR_CH3_OFFSET  0x40
#define FLEXI_DMA1_DST_ADDR_CH3_OFFSET  0x44
#define FLEXI_DMA1_CTRL_CH3_OFFSET  0x48
#define FLEXI_DMA1_SRC_ADDR_CH4_OFFSET  0x50
#define FLEXI_DMA1_DST_ADDR_CH4_OFFSET  0x54
#define FLEXI_DMA1_CTRL_CH4_OFFSET  0x58
#define FLEXI_DMA1_SRC_ADDR_CH5_OFFSET  0x60
#define FLEXI_DMA1_DST_ADDR_CH5_OFFSET  0x64
#define FLEXI_DMA1_CTRL_CH5_OFFSET  0x68
#define FLEXI_DMA1_SRC_ADDR_CH6_OFFSET  0x70
#define FLEXI_DMA1_DST_ADDR_CH6_OFFSET  0x74
#define FLEXI_DMA1_CTRL_CH6_OFFSET  0x78
#define FLEXI_DMA1_SRC_ADDR_CH7_OFFSET  0x80
#define FLEXI_DMA1_DST_ADDR_CH7_OFFSET  0x84
#define FLEXI_DMA1_CTRL_CH7_OFFSET  0x88
#define FLEXI_DMA1_PARIS_SRST_OFFSET  0x90
#define FLEXI_DMA1_FIFO_STATUS_OFFSET  0x94
#define FLEXI_DMA1_FIFO_s_OFFSET  0x42040000
#define SPIM_TX_FIFO_OFFSET  0x0
#define SPIM_RX_FIFO_OFFSET  0x400
#define AES_FIFO_OFFSET  0x1000
#define SPI_MASTER_s_OFFSET  0x42005800
#define RA_SPIM_CTL_OFFSET  0x0
#define RA_SPIM_STAT_OFFSET  0x4
#define RA_SPIM_FFLVL_OFFSET  0x8
#define RA_SPIM_XFER_OFFSET  0xc
#define RA_SPIM_XCNT_OFFSET  0x10
#define RA_SPIM_CTRL_2_OFFSET  0x14
#define TOP_INTERRUPT_CTRL_s_OFFSET  0x42035000
#define INT_EN0_OFFSET  0x0
#define INT_MASK0_OFFSET  0x4
#define INT_BYP0_OFFSET  0x8
#define INT_ST0_OFFSET  0xc
#define INT_EN1_OFFSET  0x10
#define INT_MASK1_OFFSET  0x14
#define INT_BYP1_OFFSET  0x18
#define INT_ST1_OFFSET  0x1c
#define INT_MERGE_EN_OFFSET  0x20
#define INT_MERGE_MASK_OFFSET  0x24
#define INT_MERGE_BYP_OFFSET  0x28
#define INT_MERGE_ST_OFFSET  0x2c
#define INT_SOFTSET0_OFFSET  0x30
#define INT_SOFTSET1_OFFSET  0x34
#define INT_NMI_MASK0_OFFSET  0x38
#define INT_NMI_MASK1_OFFSET  0x3c
#define INT_EXT_EN_OFFSET  0x100
#define INT_EXT_CLR_OFFSET  0x104
#define AUDIO_DMA_s_OFFSET  0x42001000
#define DMA0_CHANNEL_ENABLE_OFFSET  0x0
#define DMA0_INTERRUPT_STATUS_OFFSET  0x4
#define DMA0_START_ADDRESS_CH0_OFFSET  0x8
#define DMA0_CONTROL_CH0_OFFSET  0xc
#define DMA0_START_ADDRESS_CH1_OFFSET  0x10
#define DMA0_CONTROL_CH1_OFFSET  0x14
#define DMA0_START_ADDRESS_CH2_OFFSET  0x18
#define DMA0_CONTROL_CH2_OFFSET  0x1c
#define DMA0_START_ADDRESS_CH3_OFFSET  0x20
#define DMA0_CONTROL_CH3_OFFSET  0x24
#define DMA0_START_ADDRESS_CH5_OFFSET  0x30
#define DMA0_CONTROL_CH5_OFFSET  0x34
#define DMA0_START_ADDRESS_CH7_OFFSET  0x40
#define DMA0_CONTROL_CH7_OFFSET  0x44
#define DMA0_START_ADDRESS_CH9_OFFSET  0x50
#define DMA0_CONTROL_CH9_OFFSET  0x54
#define DMA0_START_ADDRESS_CH11_OFFSET  0x60
#define DMA0_CONTROL_CH11_OFFSET  0x64
#define DMA0_START_ADDRESS_CH13_OFFSET  0x70
#define DMA0_CONTROL_CH13_OFFSET  0x74
#define DMA0_START_ADDRESS_CH15_OFFSET  0x80
#define DMA0_CONTROL_CH15_OFFSET  0x84
#define DMA0_INTERRUPT_ENABLE_OFFSET  0x88
#define DMA0_INTERRUPT_PARING_OFFSET  0x8c
#define DMA0_INTERRUPPT_GROUPING01_OFFSET  0x90
#define DMA0_INTERRUPPT_GROUPING23_OFFSET  0x94
#define DMA0_INTERRUPPT_GROUPING45_OFFSET  0x98
#define DMA0_INTERRUPPT_GROUPING67_OFFSET  0x9c
#define DMA0_CHANNEL_ASSIGNMENTS02_OFFSET  0xa4
#define DMA0_CHANNEL_ASSIGNMENT_1357911_OFFSET  0xa8
#define DMA0_CHANNEL_ASSIGNMENT_1315_OFFSET  0xac
#define DMA0_CONTROL_EXT_CH0_OFFSET  0xb0
#define DMA0_CONTROL_EXT_CH1_OFFSET  0xb4
#define DMA0_CONTROL_EXT_CH2_OFFSET  0xb8
#define DMA0_CONTROL_EXT_CH3_OFFSET  0xbc
#define DMA0_CONTROL_EXT_CH5_OFFSET  0xc0
#define DMA0_CONTROL_EXT_CH7_OFFSET  0xc4
#define DMA0_CONTROL_EXT_CH9_OFFSET  0xc8
#define DMA0_CONTROL_EXT_CH11_OFFSET  0xcc
#define DMA0_CONTROL_EXT_CH13_OFFSET  0xd0
#define DMA0_CONTROL_EXT_CH15_OFFSET  0xd4
#define DMA3_CHANNEL_ENABLE_OFFSET  0x1c0
#define DMA3_INTERRUPT_STATUS_OFFSET  0x1c4
#define DMA3_START_ADDRESS_CH0_OFFSET  0x1c8
#define DMA3_CONTROL_CH0_OFFSET  0x1cc
#define DMA3_START_ADDRESS_CH1_OFFSET  0x1d0
#define DMA3_CONTROL_CH1_OFFSET  0x1d4
#define DMA3_START_ADDRESS_CH2_OFFSET  0x1d8
#define DMA3_CONTROL_CH2_OFFSET  0x1dc
#define DMA3_START_ADDRESS_CH3_OFFSET  0x1e0
#define DMA3_CONTROL_CH3_OFFSET  0x1e4
#define DMA3_START_ADDRESS_CH4_OFFSET  0x1e8
#define DMA3_CONTROL_CH4_OFFSET  0x1ec
#define DMA3_START_ADDRESS_CH5_OFFSET  0x1f0
#define DMA3_CONTROL_CH5_OFFSET  0x1f4
#define DMA3_START_ADDRESS_CH6_OFFSET  0x1f8
#define DMA3_CONTROL_CH6_OFFSET  0x1fc
#define DMA3_START_ADDRESS_CH7_OFFSET  0x200
#define DMA3_CONTROL_CH7_OFFSET  0x204
#define DMA3_START_ADDRESS_CH8_OFFSET  0x208
#define DMA3_CONTROL_CH8_OFFSET  0x20c
#define DMA3_START_ADDRESS_CH9_OFFSET  0x210
#define DMA3_CONTROL_CH9_OFFSET  0x214
#define DMA3_START_ADDRESS_CH10_OFFSET  0x218
#define DMA3_CONTROL_CH10_OFFSET  0x21c
#define DMA3_START_ADDRESS_CH11_OFFSET  0x220
#define DMA3_CONTROL_CH11_OFFSET  0x224
#define DMA3_START_ADDRESS_CH12_OFFSET  0x228
#define DMA3_CONTROL_CH12_OFFSET  0x22c
#define DMA3_START_ADDRESS_CH13_OFFSET  0x230
#define DMA3_CONTROL_CH13_OFFSET  0x234
#define DMA3_START_ADDRESS_CH14_OFFSET  0x238
#define DMA3_CONTROL_CH14_OFFSET  0x23c
#define DMA3_START_ADDRESS_CH15_OFFSET  0x240
#define DMA3_CONTROL_CH15_OFFSET  0x244
#define DMA3_START_ADDRESS_CH16_OFFSET  0x248
#define DMA3_CONTROL_CH16_OFFSET  0x24c
#define DMA3_START_ADDRESS_CH17_OFFSET  0x250
#define DMA3_CONTROL_CH17_OFFSET  0x254
#define DMA3_START_ADDRESS_CH18_OFFSET  0x258
#define DMA3_CONTROL_CH18_OFFSET  0x25c
#define DMA3_START_ADDRESS_CH19_OFFSET  0x260
#define DMA3_CONTROL_CH19_OFFSET  0x264
#define DMA3_INTERRUPT_ENABLE_OFFSET  0x268
#define DMA3_INTERRUPT_PARING_OFFSET  0x26c
#define DMA3_INTERRUPPT_GROUPING01_OFFSET  0x270
#define DMA3_INTERRUPPT_GROUPING23_OFFSET  0x274
#define DMA3_INTERRUPPT_GROUPING45_OFFSET  0x278
#define DMA3_INTERRUPPT_GROUPING67_OFFSET  0x27c
#define DMA3_INTERRUPPT_GROUPING89_OFFSET  0x280
#define DMA3_CHANNEL_ASSIGNMENTS0246810_OFFSET  0x284
#define DMA3_CHANNEL_ASSIGNMENTS12141618_OFFSET  0x288
#define DMA3_CHANNEL_ASSIGNMENT_1357911_OFFSET  0x28c
#define DMA3_CHANNEL_ASSIGNMENT_13151719_OFFSET  0x290
#define DMA3_CONTROL_EXT_CH0_OFFSET  0x294
#define DMA3_CONTROL_EXT_CH1_OFFSET  0x298
#define DMA3_CONTROL_EXT_CH2_OFFSET  0x29c
#define DMA3_CONTROL_EXT_CH3_OFFSET  0x2a0
#define DMA3_CONTROL_EXT_CH4_OFFSET  0x2a4
#define DMA3_CONTROL_EXT_CH5_OFFSET  0x2a8
#define DMA3_CONTROL_EXT_CH6_OFFSET  0x2ac
#define DMA3_CONTROL_EXT_CH7_OFFSET  0x2b0
#define DMA3_CONTROL_EXT_CH8_OFFSET  0x2b4
#define DMA3_CONTROL_EXT_CH9_OFFSET  0x2b8
#define DMA3_CONTROL_EXT_CH10_OFFSET  0x2bc
#define DMA3_CONTROL_EXT_CH11_OFFSET  0x2c0
#define DMA3_CONTROL_EXT_CH12_OFFSET  0x2c4
#define DMA3_CONTROL_EXT_CH13_OFFSET  0x2c8
#define DMA3_CONTROL_EXT_CH14_OFFSET  0x2cc
#define DMA3_CONTROL_EXT_CH15_OFFSET  0x2d0
#define DMA3_CONTROL_EXT_CH16_OFFSET  0x2d4
#define DMA3_CONTROL_EXT_CH17_OFFSET  0x2d8
#define DMA3_CONTROL_EXT_CH18_OFFSET  0x2dc
#define DMA3_CONTROL_EXT_CH19_OFFSET  0x2e0
#define DMA_ADDR_STATUS_SELECT_OFFSET  0x3c0
#define DMA_ADDRESS_UPDT_STA_OFFSET  0x3c4
#define DMA0_ADDRESS_STATUS_OFFSET  0x3c8
#define DMA3_ADDRESS_STATUS_OFFSET  0x3cc
#define DMA0_FIFO_STATUS_OFFSET  0x3d0
#define DMA3_FIFO_STATUS_OFFSET  0x3d4
#define OTP_s_OFFSET  0x42023800
#define OTP_FUSE0_CTRL_STA_OFFSET  0x0
#define OTP_FUSE0_STATUS_SET_OFFSET  0x4
#define OTP_FUSE0_STATUS_CLR_OFFSET  0x8
#define OTP_FUSE0_SERAL_DATA_OUTPUT_OFFSET  0xc
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_OFFSET  0x10
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_OFFSET  0x14
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_OFFSET  0x18
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_OFFSET  0x1c
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_OFFSET  0x20
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_OFFSET  0x24
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_OFFSET  0x28
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_OFFSET  0x2c
#define AHB_FLASH_CACHE_s_OFFSET  0x42024000
#define CACHE_DATA_RAM0_CFG_OFFSET  0x20
#define CACHE_DATA_RAM1_CFG_OFFSET  0x24
#define CACHE_USER_CFG_OFFSET  0x28
#define PWM_s_OFFSET  0x42006500
#define RA_PWM_CTRL_1_OFFSET  0x0
#define RA_PWM_CTRL_2_OFFSET  0x4
#define MAILBOX_s_OFFSET  0x42005000
#define MAILBOX_CFG_FIFO0_OFFSET  0x0
#define MAILBOX_STATUS_FIFO0_OFFSET  0x4
#define MAILBOX_DBG_MSG_FIFO0_OFFSET  0x8
#define MAILBOX_FIFO_XFER_FIFO0_OFFSET  0xc
#define MAILBOX_CFG_FIFO1_OFFSET  0x10
#define MAILBOX_STATUS_FIFO1_OFFSET  0x14
#define MAILBOX_DBG_MSG_FIFO1_OFFSET  0x18
#define MAILBOX_FIFO_XFER_FIFO1_OFFSET  0x1c
#define MAILBOX_CFG_FIFO2_OFFSET  0x20
#define MAILBOX_STATUS_FIFO2_OFFSET  0x24
#define MAILBOX_DBG_MSG_FIFO2_OFFSET  0x28
#define MAILBOX_FIFO_XFER_FIFO2_OFFSET  0x2c
#define MAILBOX_CFG_FIFO3_OFFSET  0x30
#define MAILBOX_STATUS_FIFO3_OFFSET  0x34
#define MAILBOX_DBG_MSG_FIFO3_OFFSET  0x38
#define MAILBOX_FIFO_XFER_FIFO3_OFFSET  0x3c
#define MAILBOX_CFG_FIFO4_OFFSET  0x40
#define MAILBOX_STATUS_FIFO4_OFFSET  0x44
#define MAILBOX_DBG_MSG_FIFO4_OFFSET  0x48
#define MAILBOX_FIFO_XFER_FIFO4_OFFSET  0x4c
#define MAILBOX_CFG_FIFO5_OFFSET  0x50
#define MAILBOX_STATUS_FIFO5_OFFSET  0x54
#define MAILBOX_DBG_MSG_FIFO5_OFFSET  0x58
#define MAILBOX_FIFO_XFER_FIFO5_OFFSET  0x5c
#define FLASH_MPC_s_OFFSET  0x42030000
#define FLASHMPC_CTRL_OFFSET  0x0
#define FLASHMPC_BLK_MAX_OFFSET  0x10
#define FLASHMPC_BLK_CFG_OFFSET  0x14
#define FLASHMPC_BLK_IDX_OFFSET  0x18
#define FLASHMPC_BLK_LUT_OFFSET  0x1c
#define FLASHMPC_INT_STAT_OFFSET  0x20
#define FLASHMPC_INT_CLEAR_OFFSET  0x24
#define FLASHMPC_INT_EN_OFFSET  0x28
#define FLASHMPC_INT_INFO1_OFFSET  0x2c
#define FLASHMPC_INT_INFO2_OFFSET  0x30
#define FLASHMPC_INT_SET_OFFSET  0x34
#define FLASHMPC_PID4_OFFSET  0xfd0
#define FLASHMPC_PID5_OFFSET  0xfd4
#define FLASHMPC_PID6_OFFSET  0xfd8
#define FLASHMPC_PID7_OFFSET  0xfdc
#define FLASHMPC_PID0_OFFSET  0xfe0
#define FLASHMPC_PID1_OFFSET  0xfe4
#define FLASHMPC_PID2_OFFSET  0xfe8
#define FLASHMPC_PID3_OFFSET  0xfec
#define FLASHMPC_CID0_OFFSET  0xff0
#define FLASHMPC_CID1_OFFSET  0xff4
#define FLASHMPC_CID2_OFFSET  0xff8
#define FLASHMPC_CID3_OFFSET  0xffc
#define ROM_MPC_s_OFFSET  0x42031000
#define ROMMPC_CTRL_OFFSET  0x0
#define ROMMPC_BLK_MAX_OFFSET  0x10
#define ROMMPC_BLK_CFG_OFFSET  0x14
#define ROMMPC_BLK_IDX_OFFSET  0x18
#define ROMMPC_BLK_LUT_OFFSET  0x1c
#define ROMMPC_INT_STAT_OFFSET  0x20
#define ROMMPC_INT_CLEAR_OFFSET  0x24
#define ROMMPC_INT_EN_OFFSET  0x28
#define ROMMPC_INT_INFO1_OFFSET  0x2c
#define ROMMPC_INT_INFO2_OFFSET  0x30
#define ROMMPC_INT_SET_OFFSET  0x34
#define ROMMPC_PID4_OFFSET  0xfd0
#define ROMMPC_PID5_OFFSET  0xfd4
#define ROMMPC_PID6_OFFSET  0xfd8
#define ROMMPC_PID7_OFFSET  0xfdc
#define ROMMPC_PID0_OFFSET  0xfe0
#define ROMMPC_PID1_OFFSET  0xfe4
#define ROMMPC_PID2_OFFSET  0xfe8
#define ROMMPC_PID3_OFFSET  0xfec
#define ROMMPC_CID0_OFFSET  0xff0
#define ROMMPC_CID1_OFFSET  0xff4
#define ROMMPC_CID2_OFFSET  0xff8
#define ROMMPC_CID3_OFFSET  0xffc
#define DSP_MEM_MPC_s_OFFSET  0x42032000
#define DSPMPC_CTRL_OFFSET  0x0
#define DSPMPC_BLK_MAX_OFFSET  0x10
#define DSPMPC_BLK_CFG_OFFSET  0x14
#define DSPMPC_BLK_IDX_OFFSET  0x18
#define DSPMPC_BLK_LUT_OFFSET  0x1c
#define DSPMPC_INT_STAT_OFFSET  0x20
#define DSPMPC_INT_CLEAR_OFFSET  0x24
#define DSPMPC_INT_EN_OFFSET  0x28
#define DSPMPC_INT_INFO1_OFFSET  0x2c
#define DSPMPC_INT_INFO2_OFFSET  0x30
#define DSPMPC_INT_SET_OFFSET  0x34
#define DSPMPC_PID4_OFFSET  0xfd0
#define DSPMPC_PID5_OFFSET  0xfd4
#define DSPMPC_PID6_OFFSET  0xfd8
#define DSPMPC_PID7_OFFSET  0xfdc
#define DSPMPC_PID0_OFFSET  0xfe0
#define DSPMPC_PID1_OFFSET  0xfe4
#define DSPMPC_PID2_OFFSET  0xfe8
#define DSPMPC_PID3_OFFSET  0xfec
#define DSPMPC_CID0_OFFSET  0xff0
#define DSPMPC_CID1_OFFSET  0xff4
#define DSPMPC_CID2_OFFSET  0xff8
#define DSPMPC_CID3_OFFSET  0xffc
#define TRUSTZONE_CTRL_s_OFFSET  0x42034000
#define DSP_REGION0_OFFSET  0x0
#define DSP_REGION1_OFFSET  0x4
#define DSP_REGION2_OFFSET  0x8
#define DSP_REGION3_OFFSET  0xc
#define DSP_REGION4_OFFSET  0x10
#define DSP_REGION5_OFFSET  0x14
#define DSP_REGION6_OFFSET  0x18
#define DSP_REGION7_OFFSET  0x1c
#define HIFI3M_REGION0_OFFSET  0x20
#define HIFI3M_REGION1_OFFSET  0x24
#define HIFI3M_REGION2_OFFSET  0x28
#define HIFI3M_REGION3_OFFSET  0x2c
#define I2CS_REGION0_OFFSET  0x40
#define I2CS_REGION1_OFFSET  0x44
#define I2CS_REGION2_OFFSET  0x48
#define I2CS_REGION3_OFFSET  0x4c
#define EARLINK_REGION0_OFFSET  0x60
#define EARLINK_REGION1_OFFSET  0x64
#define EARLINK_REGION2_OFFSET  0x68
#define EARLINK_REGION3_OFFSET  0x6c
#define FDMA0_REGION0_OFFSET  0x80
#define FDMA0_REGION1_OFFSET  0x84
#define FDMA0_REGION2_OFFSET  0x88
#define FDMA0_REGION3_OFFSET  0x8c
#define FDMA1_REGION0_OFFSET  0xa0
#define FDMA1_REGION1_OFFSET  0xa4
#define FDMA1_REGION2_OFFSET  0xa8
#define FDMA1_REGION3_OFFSET  0xac
#define ADMA0_REGION0_OFFSET  0xc0
#define ADMA0_REGION1_OFFSET  0xc4
#define ADMA0_REGION2_OFFSET  0xc8
#define ADMA0_REGION3_OFFSET  0xcc
#define ADMA1_REGION0_OFFSET  0xe0
#define ADMA1_REGION1_OFFSET  0xe4
#define ADMA1_REGION2_OFFSET  0xe8
#define ADMA1_REGION3_OFFSET  0xec
#define QSPI_REGION0_OFFSET  0x100
#define QSPI_REGION1_OFFSET  0x104
#define QSPI_REGION2_OFFSET  0x108
#define QSPI_REGION3_OFFSET  0x10c
#define CFG_SEC_RESP_OFFSET  0x180
#define SEC_WRREG_CTRL0_OFFSET  0x200
#define SEC_WRREG_CTRL1_OFFSET  0x204
#define SEC_WRREG_CTRL2_OFFSET  0x208
#define SEC_WRREG_CTRL3_OFFSET  0x20c
#define AHB_BUS_PROFILING_s_OFFSET  0x42006c00
#define AHB_BUS_PROFILING_CTRL_OFFSET  0x0
#define AHB_BUS_TOTAL_CYC_CNT_OFFSET  0x4
#define AHB_BUS_RREQ_CNT_OFFSET  0x8
#define AHB_BUS_WREQ_CNT_OFFSET  0xc
#define AHB_BUS_RSTL_CYC_CNT_OFFSET  0x10
#define AHB_BUS_WSTL_CYC_CNT_OFFSET  0x14
#define AHB_BUS_RTR_CNT_OFFSET  0x18
#define AHB_BUS_WTR_CNT_OFFSET  0x1c
#define AHB_BUS_RDAT_BYTES_CNT_OFFSET  0x20
#define AHB_BUS_WDAT_BYTES_CNT_OFFSET  0x24
#define AHB_BUS_BREQ_CYC_CNT_OFFSET  0x28
#define AHB_BUS_BGRA_CYC_CNT_OFFSET  0x2c
#define SSE200_PROFILING_s_OFFSET  0x42033000
#define SSE200_M0_PROFILING_CTRL_OFFSET  0x40
#define SSE200_M0_TOTAL_CYC_CNT_OFFSET  0x44
#define SSE200_M0_RREQ_CNT_OFFSET  0x48
#define SSE200_M0_WREQ_CNT_OFFSET  0x4c
#define SSE200_M0_RSTL_CYC_CNT_OFFSET  0x50
#define SSE200_M0_WSTL_CYC_CNT_OFFSET  0x54
#define SSE200_M0_RTR_CNT_OFFSET  0x58
#define SSE200_M0_WTR_CNT_OFFSET  0x5c
#define SSE200_M0_RDAT_BYTES_CNT_OFFSET  0x60
#define SSE200_M0_WDAT_BYTES_CNT_OFFSET  0x64
#define SSE200_S0_PROFILING_CTRL_OFFSET  0x70
#define SSE200_S0_TOTAL_CYC_CNT_OFFSET  0x74
#define SSE200_S0_RREQ_CNT_OFFSET  0x78
#define SSE200_S0_WREQ_CNT_OFFSET  0x7c
#define SSE200_S0_RSTL_CYC_CNT_OFFSET  0x80
#define SSE200_S0_WSTL_CYC_CNT_OFFSET  0x84
#define SSE200_S0_RTR_CNT_OFFSET  0x88
#define SSE200_S0_WTR_CNT_OFFSET  0x8c
#define SSE200_S0_RDAT_BYTES_CNT_OFFSET  0x90
#define SSE200_S0_WDAT_BYTES_CNT_OFFSET  0x94
#define ASIP_PROFILING_s_OFFSET  0x400000
#define ASIP_PROFILING_CTR_OFFSET  0xb8
#define ASIP_MST_TOTAL_CYC_CNT_OFFSET  0xbc
#define ASIP_MST_WREQ_CNT_OFFSET  0xc0
#define ASIP_MST_RREQ_CNT_OFFSET  0xc4
#define ASIP_MST_WSTL_CYC_CNT_OFFSET  0xc8
#define ASIP_MST_RSTL_CYC_CNT_OFFSET  0xcc
#define CAPE_A_SLP_CNT_OFFSET  0xd0
#define CAPE_B_SLP_CNT_OFFSET  0xd4
#define LLE_A_SLP_CNT_OFFSET  0xd8
#define LLE_B_SLP_CNT_OFFSET  0xdc
#define ASIP_SLV_TOTAL_CYC_CNT_OFFSET  0xe0
#define ASIP_SLV_WREQ_CNT_OFFSET  0xe4
#define ASIP_SLV_RREQ_CNT_OFFSET  0xe8
#define ASIP_SLV_WBLK_CYC_CNT_OFFSET  0xec
#define ASIP_SLV_RBLK_CYC_CNT_OFFSET  0xf0
#define SHARE_MEM_PROFILING_s_OFFSET  0x42000400
#define SHARE_MEM_PROFILER_CTR_OFFSET  0xa0
#define SHARE_MEM_TOTAL_CYC_CNT_OFFSET  0xa4
#define SHARE_MEM_RREQ_CNT_OFFSET  0xa8
#define SHARE_MEM_WREQ_CNT_OFFSET  0xac
#define SHARE_MEM_RBLK_CYC_CNT_OFFSET  0xb0
#define SHARE_MEM_WBLK_CYC_CNT_OFFSET  0xb4
#define SMB_s_OFFSET  0x42000400
#define SM_ARB_CTRL_OFFSET  0x0
#define SM_BBRD_ARB_PRI_OFFSET  0x10
#define SM_BBWR_ARB_PRI_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM0_OFFSET  0x40
#define SM_SRAM_ARB_PRI_SRAM1_OFFSET  0x44
#define SM_SRAM_ARB_PRI_SRAM2_OFFSET  0x48
#define SM_SRAM_ARB_PRI_SRAM3_OFFSET  0x4c
#define SM_SRAM_ARB_PRI_SRAM4_OFFSET  0x50
#define SM_SRAM_ARB_PRI_SRAM5_OFFSET  0x54
#define SM_SRAM_ARB_PRI_SRAM6_OFFSET  0x58
#define SM_SRAM_ARB_PRI_SRAM7_OFFSET  0x5c
#define SM_SRAM_ARB_PRI_SRAM8_OFFSET  0x60
#define SM_SRAM_ARB_PRI_SRAM9_OFFSET  0x64
#define SM_SRAM_ARB_PRI_SRAM10_OFFSET  0x68
#define SM_SRAM_ARB_PRI_SRAM11_OFFSET  0x6c
#define SM_SRAM_ARB_PRI_SRAM12_OFFSET  0x70
#define SM_SRAM_ARB_PRI_SRAM13_OFFSET  0x74
#define SM_SRAM_ARB_PRI_SRAM14_OFFSET  0x78
#define SM_SRAM_ARB_PRI_SRAM15_OFFSET  0x7c
#define SM_CLKG_CTRL_OFFSET  0x80
#define SM_SRST_CTRL_OFFSET  0x84
#define SM_DBG0_OFFSET  0x100
#define SM_SRAM_TIM_CTRL_OFFSET  0x300
#define MISC_s_OFFSET  0x42006400
#define WRREG_CTRL0_OFFSET  0x0
#define WRREG_CTRL1_OFFSET  0x4
#define WRREG_CTRL2_OFFSET  0x8
#define WRREG_CTRL3_OFFSET  0xc
#define WRREG_CTRL4_OFFSET  0x10
#define WRREG_CTRL5_OFFSET  0x14
#define WRREG_CTRL6_OFFSET  0x18
#define WRREG_CTRL7_OFFSET  0x1c
#define I3C_CTRL_OFFSET  0x108
#define DMACH_CTRL_OFFSET  0x10c
#define I3C_SRAM_TIM_CTRL_OFFSET  0x110
#define I3C_DBGL_OFFSET  0x190
#define I3C_DBGH_OFFSET  0x194
#define APB_ST_OFFSET  0x1a0
#define RO_REG00_OFFSET  0x1a4
#define RO_REG01_OFFSET  0x1a8
#define RO_REG02_OFFSET  0x1ac
#define RO_REG03_OFFSET  0x1b0
#define RO_REG10_OFFSET  0x1b4
#define RO_REG11_OFFSET  0x1b8
#define RO_REG12_OFFSET  0x1bc
#define RO_REG13_OFFSET  0x1c0
#define ISP_CTRL0_OFFSET  0x200
#define ISP_CTRL1_OFFSET  0x210
#define ISP_CTRL2_OFFSET  0x220
#define ISP_STATE_OFFSET  0x230
#define SYNC_s_OFFSET  0x42005400
#define SYNC_CMD_OFFSET  0x0
#define SYNC_DATA_OFFSET  0x4
#define SYNC_FREE_CNT_SNAPSHOOT_OFFSET  0x8
#define SYNC_DLY_OFFSET  0xc
#define SYNC_FORCE_EVENT_SET_OFFSET  0x10
#define SYNC_EVENT_PULSE_OFFSET  0x14
#define SYNC_EVENT_CDC_OFFSET  0x18
#define SYNC_CMP_MASK_OFFSET  0x1c
#define SYNC_CMP_0_OFFSET  0x20
#define SYNC_CMP_1_OFFSET  0x24
#define SYNC_CMP_2_OFFSET  0x28
#define SYNC_CMP_3_OFFSET  0x2c
#define SYNC_CMP_4_OFFSET  0x30
#define SYNC_CMP_5_OFFSET  0x34
#define SYNC_EVENT_EN_0_OFFSET  0x40
#define SYNC_EVENT_EN_1_OFFSET  0x44
#define SYNC_EVENT_EN_2_OFFSET  0x48
#define SYNC_EVENT_EN_3_OFFSET  0x4c
#define SYNC_EVENT_EN_4_OFFSET  0x50
#define SYNC_EVENT_EN_5_OFFSET  0x54
#define SYNC_CMP_MATCH_FLG_OFFSET  0x60
#define SYNC_CLR_EVENT_FLG_OFFSET  0x64
#define SYNC_EVENT_FLG_OFFSET  0x68
#define SYNC_CNT_OFFSET  0x6c

#define QSPI_CSR_ADDR_LEN_OFFSET  0x2
#define QSPI_CSR_ADDR_LEN_MASK  0xc
#define QSPI_CSR_ADDR_LEN  0xc
#define QSPI_CSR_SPI_MODE_OFFSET  0x0
#define QSPI_CSR_SPI_MODE_MASK  0x3
#define QSPI_CSR_SPI_MODE  0x3
#define TRANSFER_CTL_PRELOAD_PRE_LOAD_RESTART_OFFSET  0x0
#define TRANSFER_CTL_PRELOAD_PRE_LOAD_RESTART_MASK  0x1
#define TRANSFER_CTL_PRELOAD_PRE_LOAD_RESTART  0x1
#define TRANSFER_CTL_PDMA_PROGRAM_DMA_COMPLETE_OFFSET  0x1
#define TRANSFER_CTL_PDMA_PROGRAM_DMA_COMPLETE_MASK  0x2
#define TRANSFER_CTL_PDMA_PROGRAM_DMA_COMPLETE  0x2
#define TRANSFER_CTL_PDMA_PROGRAM_DMA_START_OFFSET  0x0
#define TRANSFER_CTL_PDMA_PROGRAM_DMA_START_MASK  0x1
#define TRANSFER_CTL_PDMA_PROGRAM_DMA_START  0x1
#define TRANSFER_CTL_REGXFER_REGISTER_XFER_COMPLETE_OFFSET  0x1
#define TRANSFER_CTL_REGXFER_REGISTER_XFER_COMPLETE_MASK  0x2
#define TRANSFER_CTL_REGXFER_REGISTER_XFER_COMPLETE  0x2
#define TRANSFER_CTL_REGXFER_REGISTER_XFER_START_OFFSET  0x0
#define TRANSFER_CTL_REGXFER_REGISTER_XFER_START_MASK  0x1
#define TRANSFER_CTL_REGXFER_REGISTER_XFER_START  0x1
#define TRANSFER_CTL_XIP_ENABLE_OFFSET  0x0
#define TRANSFER_CTL_XIP_ENABLE_MASK  0x1
#define TRANSFER_CTL_XIP_ENABLE  0x1
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_DUMMY_CYCLES_OFFSET  0x8
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_DUMMY_CYCLES_MASK  0x3f00
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_DUMMY_CYCLES  0x3f00
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_INSTRUCTION_OFFSET  0x0
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_INSTRUCTION_MASK  0xff
#define QSPI_PRE_LOAD_DMA_XFER_CONFIG_INSTRUCTION  0xff
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_NUM_DATA_LINES_OFFSET  0x1c
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_NUM_DATA_LINES_MASK  0x30000000
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_NUM_DATA_LINES  0x30000000
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_NUM_ADDR_LINES_OFFSET  0x14
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_NUM_ADDR_LINES_MASK  0x300000
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_NUM_ADDR_LINES  0x300000
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_DIRECTION_OFFSET  0x10
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_DIRECTION_MASK  0x10000
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_DIRECTION  0x10000
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_DUMMY_CYCLES_OFFSET  0x8
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_DUMMY_CYCLES_MASK  0x3f00
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_DUMMY_CYCLES  0x3f00
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_INSTRUCTION_OFFSET  0x0
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_INSTRUCTION_MASK  0xff
#define QSPI_PROGRAMMED_DMA_XFER_CONFIG_INSTRUCTION  0xff
#define QSPI_PROGRAMMED_DMA_LEN_LENGTH_OFFSET  0x2
#define QSPI_PROGRAMMED_DMA_LEN_LENGTH_MASK  0xfffffc
#define QSPI_PROGRAMMED_DMA_LEN_LENGTH  0xfffffc
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_ADDR_OFFSET  0x0
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_ADDR_MASK  0xffffffff
#define QSPI_PROGRAMMED_DMA_EXT_ADDR_ADDR  0xffffffff
#define QSPI_PROGRAMMED_DMA_INT_ADDR_ADDR_OFFSET  0x2
#define QSPI_PROGRAMMED_DMA_INT_ADDR_ADDR_MASK  0xfffffffc
#define QSPI_PROGRAMMED_DMA_INT_ADDR_ADDR  0xfffffffc
#define QSPI_XIP_XFER_CONFIG_SKIP_COMMAND_OFFSET  0x1e
#define QSPI_XIP_XFER_CONFIG_SKIP_COMMAND_MASK  0x40000000
#define QSPI_XIP_XFER_CONFIG_SKIP_COMMAND  0x40000000
#define QSPI_XIP_XFER_CONFIG_DUMMY_CYCLES_OFFSET  0x8
#define QSPI_XIP_XFER_CONFIG_DUMMY_CYCLES_MASK  0x3f00
#define QSPI_XIP_XFER_CONFIG_DUMMY_CYCLES  0x3f00
#define QSPI_XIP_XFER_CONFIG_INSTRUCTION_OFFSET  0x0
#define QSPI_XIP_XFER_CONFIG_INSTRUCTION_MASK  0xff
#define QSPI_XIP_XFER_CONFIG_INSTRUCTION  0xff
#define QSPI_XIP_W0_EXT_ADDR_ADDR_OFFSET  0xa
#define QSPI_XIP_W0_EXT_ADDR_ADDR_MASK  0xfffffc00
#define QSPI_XIP_W0_EXT_ADDR_ADDR  0xfffffc00
#define QSPI_XIP_W0_LEN_ADDR_OFFSET  0xa
#define QSPI_XIP_W0_LEN_ADDR_MASK  0x7ffc00
#define QSPI_XIP_W0_LEN_ADDR  0x7ffc00
#define QSPI_REG_XFER_CONFIG_NUM_DATA_LINES_OFFSET  0x1c
#define QSPI_REG_XFER_CONFIG_NUM_DATA_LINES_MASK  0x30000000
#define QSPI_REG_XFER_CONFIG_NUM_DATA_LINES  0x30000000
#define QSPI_REG_XFER_CONFIG_NUM_ADDR_LINES_OFFSET  0x1a
#define QSPI_REG_XFER_CONFIG_NUM_ADDR_LINES_MASK  0xc000000
#define QSPI_REG_XFER_CONFIG_NUM_ADDR_LINES  0xc000000
#define QSPI_REG_XFER_CONFIG_DIRECTION_OFFSET  0x18
#define QSPI_REG_XFER_CONFIG_DIRECTION_MASK  0x1000000
#define QSPI_REG_XFER_CONFIG_DIRECTION  0x1000000
#define QSPI_REG_XFER_CONFIG_SET_XIP_TERMINATE_OFFSET  0x17
#define QSPI_REG_XFER_CONFIG_SET_XIP_TERMINATE_MASK  0x800000
#define QSPI_REG_XFER_CONFIG_SET_XIP_TERMINATE  0x800000
#define QSPI_REG_XFER_CONFIG_DUMMY_CYCLES_OFFSET  0x10
#define QSPI_REG_XFER_CONFIG_DUMMY_CYCLES_MASK  0x3f0000
#define QSPI_REG_XFER_CONFIG_DUMMY_CYCLES  0x3f0000
#define QSPI_REG_XFER_CONFIG_ADDR_LEN_OFFSET  0x8
#define QSPI_REG_XFER_CONFIG_ADDR_LEN_MASK  0x700
#define QSPI_REG_XFER_CONFIG_ADDR_LEN  0x700
#define QSPI_REG_XFER_CONFIG_INSTRUCTION_OFFSET  0x0
#define QSPI_REG_XFER_CONFIG_INSTRUCTION_MASK  0xff
#define QSPI_REG_XFER_CONFIG_INSTRUCTION  0xff
#define QSPI_REG_XFER_LEN_LENGTH_OFFSET  0x0
#define QSPI_REG_XFER_LEN_LENGTH_MASK  0x7
#define QSPI_REG_XFER_LEN_LENGTH  0x7
#define QSPI_REG_XFER_EXT_ADDR_ADDR_OFFSET  0x0
#define QSPI_REG_XFER_EXT_ADDR_ADDR_MASK  0xffffffff
#define QSPI_REG_XFER_EXT_ADDR_ADDR  0xffffffff
#define QSPI_REG_XFER_DATA_DATA_OFFSET  0x0
#define QSPI_REG_XFER_DATA_DATA_MASK  0xffffffff
#define QSPI_REG_XFER_DATA_DATA  0xffffffff
#define QSPI_INT_MSK_CRC_CHECK_DONE_INT_MSK_OFFSET  0x2
#define QSPI_INT_MSK_CRC_CHECK_DONE_INT_MSK_MASK  0x4
#define QSPI_INT_MSK_CRC_CHECK_DONE_INT_MSK  0x4
#define QSPI_INT_MSK_REG_XFER_DONE_INT_MSK_OFFSET  0x1
#define QSPI_INT_MSK_REG_XFER_DONE_INT_MSK_MASK  0x2
#define QSPI_INT_MSK_REG_XFER_DONE_INT_MSK  0x2
#define QSPI_INT_MSK_PROGRAM_DMA_DONE_INT_MSK_OFFSET  0x0
#define QSPI_INT_MSK_PROGRAM_DMA_DONE_INT_MSK_MASK  0x1
#define QSPI_INT_MSK_PROGRAM_DMA_DONE_INT_MSK  0x1
#define CRC_EXT_ADDR_CRC_EXT_ADDR_OFFSET  0x0
#define CRC_EXT_ADDR_CRC_EXT_ADDR_MASK  0xffffffff
#define CRC_EXT_ADDR_CRC_EXT_ADDR  0xffffffff
#define CRC_DATA_LEN_CRC_DATA_LEN_OFFSET  0x2
#define CRC_DATA_LEN_CRC_DATA_LEN_MASK  0xfffffc
#define CRC_DATA_LEN_CRC_DATA_LEN  0xfffffc
#define CRC_CSR_CRC_COMPLETE_OFFSET  0x1
#define CRC_CSR_CRC_COMPLETE_MASK  0x2
#define CRC_CSR_CRC_COMPLETE  0x2
#define CRC_CSR_CRC_START_OFFSET  0x0
#define CRC_CSR_CRC_START_MASK  0x1
#define CRC_CSR_CRC_START  0x1
#define CRC_FEATURE_CODE_CRC_CODE_OFFSET  0x0
#define CRC_FEATURE_CODE_CRC_CODE_MASK  0xffffffff
#define CRC_FEATURE_CODE_CRC_CODE  0xffffffff
#define UART_REG_FFBRD_FCUART_FIFO_BRDL_OFFSET  0x0
#define UART_REG_FFBRD_FCUART_FIFO_BRDL_MASK  0xffffffff
#define UART_REG_FFBRD_FCUART_FIFO_BRDL  0xffffffff
#define UART_REG_IEBRD_RTOE_OFFSET  0x8
#define UART_REG_IEBRD_RTOE_MASK  0x100
#define UART_REG_IEBRD_RTOE  0x100
#define UART_REG_IEBRD_ERFE_OFFSET  0x7
#define UART_REG_IEBRD_ERFE_MASK  0x80
#define UART_REG_IEBRD_ERFE  0x80
#define UART_REG_IEBRD_TIDE_OFFSET  0x6
#define UART_REG_IEBRD_TIDE_MASK  0x40
#define UART_REG_IEBRD_TIDE  0x40
#define UART_REG_IEBRD_TSRE_OFFSET  0x5
#define UART_REG_IEBRD_TSRE_MASK  0x20
#define UART_REG_IEBRD_TSRE  0x20
#define UART_REG_IEBRD_RBKE_OFFSET  0x4
#define UART_REG_IEBRD_RBKE_MASK  0x10
#define UART_REG_IEBRD_RBKE  0x10
#define UART_REG_IEBRD_FREE_OFFSET  0x3
#define UART_REG_IEBRD_FREE_MASK  0x8
#define UART_REG_IEBRD_FREE  0x8
#define UART_REG_IEBRD_PAEE_OFFSET  0x2
#define UART_REG_IEBRD_PAEE_MASK  0x4
#define UART_REG_IEBRD_PAEE  0x4
#define UART_REG_IEBRD_RFOE_OFFSET  0x1
#define UART_REG_IEBRD_RFOE_MASK  0x2
#define UART_REG_IEBRD_RFOE  0x2
#define UART_REG_IEBRD_RSRE_OFFSET  0x0
#define UART_REG_IEBRD_RSRE_MASK  0x1
#define UART_REG_IEBRD_RSRE  0x1
#define UART_REG_FFCTL_RFC_OFFSET  0x7
#define UART_REG_FFCTL_RFC_MASK  0x80
#define UART_REG_FFCTL_RFC  0x80
#define UART_REG_FFCTL_RFT_OFFSET  0x4
#define UART_REG_FFCTL_RFT_MASK  0x70
#define UART_REG_FFCTL_RFT  0x70
#define UART_REG_FFCTL_TFC_OFFSET  0x3
#define UART_REG_FFCTL_TFC_MASK  0x8
#define UART_REG_FFCTL_TFC  0x8
#define UART_REG_FFCTL_TFT_OFFSET  0x0
#define UART_REG_FFCTL_TFT_MASK  0x7
#define UART_REG_FFCTL_TFT  0x7
#define UART_REG_FRCTL_BDS_OFFSET  0x7
#define UART_REG_FRCTL_BDS_MASK  0x80
#define UART_REG_FRCTL_BDS  0x80
#define UART_REG_FRCTL_TBK_OFFSET  0x6
#define UART_REG_FRCTL_TBK_MASK  0x40
#define UART_REG_FRCTL_TBK  0x40
#define UART_REG_FRCTL_POR_OFFSET  0x5
#define UART_REG_FRCTL_POR_MASK  0x20
#define UART_REG_FRCTL_POR  0x20
#define UART_REG_FRCTL_EOP_OFFSET  0x4
#define UART_REG_FRCTL_EOP_MASK  0x10
#define UART_REG_FRCTL_EOP  0x10
#define UART_REG_FRCTL_PEN_OFFSET  0x3
#define UART_REG_FRCTL_PEN_MASK  0x8
#define UART_REG_FRCTL_PEN  0x8
#define UART_REG_FRCTL_SBS_OFFSET  0x2
#define UART_REG_FRCTL_SBS_MASK  0x4
#define UART_REG_FRCTL_SBS  0x4
#define UART_REG_FRCTL_LBM_OFFSET  0x1
#define UART_REG_FRCTL_LBM_MASK  0x2
#define UART_REG_FRCTL_LBM  0x2
#define UART_REG_FRCTL_FRS_OFFSET  0x0
#define UART_REG_FRCTL_FRS_MASK  0x1
#define UART_REG_FRCTL_FRS  0x1
#define UART_REG_STATS_RBK3_OFFSET  0x16
#define UART_REG_STATS_RBK3_MASK  0x400000
#define UART_REG_STATS_RBK3  0x400000
#define UART_REG_STATS_FRE3_OFFSET  0x15
#define UART_REG_STATS_FRE3_MASK  0x200000
#define UART_REG_STATS_FRE3  0x200000
#define UART_REG_STATS_PAE3_OFFSET  0x14
#define UART_REG_STATS_PAE3_MASK  0x100000
#define UART_REG_STATS_PAE3  0x100000
#define UART_REG_STATS_RBK2_OFFSET  0x12
#define UART_REG_STATS_RBK2_MASK  0x40000
#define UART_REG_STATS_RBK2  0x40000
#define UART_REG_STATS_FRE2_OFFSET  0x11
#define UART_REG_STATS_FRE2_MASK  0x20000
#define UART_REG_STATS_FRE2  0x20000
#define UART_REG_STATS_PAE2_OFFSET  0x10
#define UART_REG_STATS_PAE2_MASK  0x10000
#define UART_REG_STATS_PAE2  0x10000
#define UART_REG_STATS_RBK1_OFFSET  0xe
#define UART_REG_STATS_RBK1_MASK  0x4000
#define UART_REG_STATS_RBK1  0x4000
#define UART_REG_STATS_FRE1_OFFSET  0xd
#define UART_REG_STATS_FRE1_MASK  0x2000
#define UART_REG_STATS_FRE1  0x2000
#define UART_REG_STATS_PAE1_OFFSET  0xc
#define UART_REG_STATS_PAE1_MASK  0x1000
#define UART_REG_STATS_PAE1  0x1000
#define UART_REG_STATS_RTO_OFFSET  0x8
#define UART_REG_STATS_RTO_MASK  0x100
#define UART_REG_STATS_RTO  0x100
#define UART_REG_STATS_ERF_OFFSET  0x7
#define UART_REG_STATS_ERF_MASK  0x80
#define UART_REG_STATS_ERF  0x80
#define UART_REG_STATS_TID_OFFSET  0x6
#define UART_REG_STATS_TID_MASK  0x40
#define UART_REG_STATS_TID  0x40
#define UART_REG_STATS_TSR_OFFSET  0x5
#define UART_REG_STATS_TSR_MASK  0x20
#define UART_REG_STATS_TSR  0x20
#define UART_REG_STATS_RBK0_OFFSET  0x4
#define UART_REG_STATS_RBK0_MASK  0x10
#define UART_REG_STATS_RBK0  0x10
#define UART_REG_STATS_FRE0_OFFSET  0x3
#define UART_REG_STATS_FRE0_MASK  0x8
#define UART_REG_STATS_FRE0  0x8
#define UART_REG_STATS_PAE0_OFFSET  0x2
#define UART_REG_STATS_PAE0_MASK  0x4
#define UART_REG_STATS_PAE0  0x4
#define UART_REG_STATS_RFO_OFFSET  0x1
#define UART_REG_STATS_RFO_MASK  0x2
#define UART_REG_STATS_RFO  0x2
#define UART_REG_STATS_RSR_OFFSET  0x0
#define UART_REG_STATS_RSR_MASK  0x1
#define UART_REG_STATS_RSR  0x1
#define UART_REG_IRLVL_IRL_OFFSET  0x0
#define UART_REG_IRLVL_IRL_MASK  0xf
#define UART_REG_IRLVL_IRL  0xf
#define UART_REG_IRCTL_IRDA_OFFSET  0x0
#define UART_REG_IRCTL_IRDA_MASK  0x1
#define UART_REG_IRCTL_IRDA  0x1
#define UART_REG_TXSTA_TXSTA_OFFSET  0x0
#define UART_REG_TXSTA_TXSTA_MASK  0x3f
#define UART_REG_TXSTA_TXSTA  0x3f
#define UART_REG_RXSTA_RFD_OFFSET  0x0
#define UART_REG_RXSTA_RFD_MASK  0x3f
#define UART_REG_RXSTA_RFD  0x3f
#define UART_REG_EXBRD_BRFD_OFFSET  0x0
#define UART_REG_EXBRD_BRFD_MASK  0x3f
#define UART_REG_EXBRD_BRFD  0x3f
#define UART_REG_CTRL_MODE_OFFSET  0x1f
#define UART_REG_CTRL_MODE_MASK  0x80000000
#define UART_REG_CTRL_MODE  0x80000000
#define UART_REG_CTRL_HWDO_OFFSET  0x1e
#define UART_REG_CTRL_HWDO_MASK  0x40000000
#define UART_REG_CTRL_HWDO  0x40000000
#define UART_REG_CTRL_OSP_OFFSET  0x1c
#define UART_REG_CTRL_OSP_MASK  0x10000000
#define UART_REG_CTRL_OSP  0x10000000
#define UART_REG_CTRL_RFPM_OFFSET  0x1b
#define UART_REG_CTRL_RFPM_MASK  0x8000000
#define UART_REG_CTRL_RFPM  0x8000000
#define UART_REG_CTRL_TFPM_OFFSET  0x18
#define UART_REG_CTRL_TFPM_MASK  0x3000000
#define UART_REG_CTRL_TFPM  0x3000000
#define UART_REG_CTRL_RXRST_OFFSET  0x14
#define UART_REG_CTRL_RXRST_MASK  0x100000
#define UART_REG_CTRL_RXRST  0x100000
#define UART_REG_CTRL_DMATRXTR_OFFSET  0x12
#define UART_REG_CTRL_DMATRXTR_MASK  0x40000
#define UART_REG_CTRL_DMATRXTR  0x40000
#define UART_REG_CTRL_DMATX_OFFSET  0x11
#define UART_REG_CTRL_DMATX_MASK  0x20000
#define UART_REG_CTRL_DMATX  0x20000
#define UART_REG_CTRL_DMARX_OFFSET  0x10
#define UART_REG_CTRL_DMARX_MASK  0x10000
#define UART_REG_CTRL_DMARX  0x10000
#define UART_REG_CTRL_TROV_OFFSET  0x8
#define UART_REG_CTRL_TROV_MASK  0x700
#define UART_REG_CTRL_TROV  0x700
#define UART_REG_CTRL_FCEN_OFFSET  0x7
#define UART_REG_CTRL_FCEN_MASK  0x80
#define UART_REG_CTRL_FCEN  0x80
#define UART_REG_CTRL_RTS_OFFSET  0x4
#define UART_REG_CTRL_RTS_MASK  0x10
#define UART_REG_CTRL_RTS  0x10
#define UART_REG_CTRL_RXFC_OFFSET  0x0
#define UART_REG_CTRL_RXFC_MASK  0x7
#define UART_REG_CTRL_RXFC  0x7
#define AES_CSR_Q_HR_FULL_OFFSET  0x16
#define AES_CSR_Q_HR_FULL_MASK  0x400000
#define AES_CSR_Q_HR_FULL  0x400000
#define AES_CSR_AES_STAT_OFFSET  0x10
#define AES_CSR_AES_STAT_MASK  0x3f0000
#define AES_CSR_AES_STAT  0x3f0000
#define AES_CSR_KLOOP_MODE_OFFSET  0xc
#define AES_CSR_KLOOP_MODE_MASK  0x1000
#define AES_CSR_KLOOP_MODE  0x1000
#define AES_CSR_KEY_SELECT_OFFSET  0x8
#define AES_CSR_KEY_SELECT_MASK  0xf00
#define AES_CSR_KEY_SELECT  0xf00
#define AES_CSR_AES_MODE_OFFSET  0x4
#define AES_CSR_AES_MODE_MASK  0x30
#define AES_CSR_AES_MODE  0x30
#define AES_CSR_AES_ENC_MODE_OFFSET  0x3
#define AES_CSR_AES_ENC_MODE_MASK  0x8
#define AES_CSR_AES_ENC_MODE  0x8
#define AES_CSR_AES_SETIKEY_OFFSET  0x2
#define AES_CSR_AES_SETIKEY_MASK  0x4
#define AES_CSR_AES_SETIKEY  0x4
#define AES_CSR_APB_LAST_BLOCK_OFFSET  0x1
#define AES_CSR_APB_LAST_BLOCK_MASK  0x2
#define AES_CSR_APB_LAST_BLOCK  0x2
#define AES_CSR_ENABLE_OFFSET  0x0
#define AES_CSR_ENABLE_MASK  0x1
#define AES_CSR_ENABLE  0x1
#define AES_IER_INT_ENAB_REG_OFFSET  0x0
#define AES_IER_INT_ENAB_REG_MASK  0x7f
#define AES_IER_INT_ENAB_REG  0x7f
#define AES_ISR_INT_STAT_REG_OFFSET  0x0
#define AES_ISR_INT_STAT_REG_MASK  0x7f
#define AES_ISR_INT_STAT_REG  0x7f
#define AES_IMR_INT_MASK_REG_OFFSET  0x0
#define AES_IMR_INT_MASK_REG_MASK  0x7f
#define AES_IMR_INT_MASK_REG  0x7f
#define AES_ISMR_INT_SMASK_REG_OFFSET  0x0
#define AES_ISMR_INT_SMASK_REG_MASK  0x7f
#define AES_ISMR_INT_SMASK_REG  0x7f
#define AES_DR0_AES_Q0_OFFSET  0x0
#define AES_DR0_AES_Q0_MASK  0xffffffff
#define AES_DR0_AES_Q0  0xffffffff
#define AES_DR1_AES_Q1_OFFSET  0x0
#define AES_DR1_AES_Q1_MASK  0xffffffff
#define AES_DR1_AES_Q1  0xffffffff
#define AES_DR2_AES_Q2_OFFSET  0x0
#define AES_DR2_AES_Q2_MASK  0xffffffff
#define AES_DR2_AES_Q2  0xffffffff
#define AES_DR3_AES_Q3_OFFSET  0x0
#define AES_DR3_AES_Q3_MASK  0xffffffff
#define AES_DR3_AES_Q3  0xffffffff
#define AES_KR0_AES_KR0_OFFSET  0x0
#define AES_KR0_AES_KR0_MASK  0xffffffff
#define AES_KR0_AES_KR0  0xffffffff
#define AES_KR1_AES_KR1_OFFSET  0x0
#define AES_KR1_AES_KR1_MASK  0xffffffff
#define AES_KR1_AES_KR1  0xffffffff
#define AES_KR2_AES_KR2_OFFSET  0x0
#define AES_KR2_AES_KR2_MASK  0xffffffff
#define AES_KR2_AES_KR2  0xffffffff
#define AES_KR3_AES_KR3_OFFSET  0x0
#define AES_KR3_AES_KR3_MASK  0xffffffff
#define AES_KR3_AES_KR3  0xffffffff
#define AES_IVR0_AES_IVR0_OFFSET  0x0
#define AES_IVR0_AES_IVR0_MASK  0xffffffff
#define AES_IVR0_AES_IVR0  0xffffffff
#define AES_IVR1_AES_IVR1_OFFSET  0x0
#define AES_IVR1_AES_IVR1_MASK  0xffffffff
#define AES_IVR1_AES_IVR1  0xffffffff
#define AES_IVR2_AES_IVR2_OFFSET  0x0
#define AES_IVR2_AES_IVR2_MASK  0xffffffff
#define AES_IVR2_AES_IVR2  0xffffffff
#define AES_IVR3_AES_IVR3_OFFSET  0x0
#define AES_IVR3_AES_IVR3_MASK  0xffffffff
#define AES_IVR3_AES_IVR3  0xffffffff
#define AES_DCR_DMAC_CTRL_REG_OFFSET  0x0
#define AES_DCR_DMAC_CTRL_REG_MASK  0xffff
#define AES_DCR_DMAC_CTRL_REG  0xffff
#define GPIO_INTR_RISE_ENA_GPIO_INTR_RISE_ENA_OFFSET  0x0
#define GPIO_INTR_RISE_ENA_GPIO_INTR_RISE_ENA_MASK  0x7ffffff
#define GPIO_INTR_RISE_ENA_GPIO_INTR_RISE_ENA  0x7ffffff
#define GPIO_INTR_FALL_ENA_GPIO_INTR_FALL_ENA_OFFSET  0x0
#define GPIO_INTR_FALL_ENA_GPIO_INTR_FALL_ENA_MASK  0x7ffffff
#define GPIO_INTR_FALL_ENA_GPIO_INTR_FALL_ENA  0x7ffffff
#define GPIO_INTR_ENA_GPIO_INTR_ENA_OFFSET  0x0
#define GPIO_INTR_ENA_GPIO_INTR_ENA_MASK  0x7ffffff
#define GPIO_INTR_ENA_GPIO_INTR_ENA  0x7ffffff
#define GPIO_INTR_CLR_GPIO_INTR_CLR_OFFSET  0x0
#define GPIO_INTR_CLR_GPIO_INTR_CLR_MASK  0x7ffffff
#define GPIO_INTR_CLR_GPIO_INTR_CLR  0x7ffffff
#define GPIO_INTR_STATUS_GPIO_INTR_STATUS_OFFSET  0x0
#define GPIO_INTR_STATUS_GPIO_INTR_STATUS_MASK  0x7ffffff
#define GPIO_INTR_STATUS_GPIO_INTR_STATUS  0x7ffffff
#define GPIO_IN_SW_GPIO_IN_SW_OFFSET  0x0
#define GPIO_IN_SW_GPIO_IN_SW_MASK  0x7ffffff
#define GPIO_IN_SW_GPIO_IN_SW  0x7ffffff
#define TAHITI_MODE_TAHITI_MODE_OFFSET  0x0
#define TAHITI_MODE_TAHITI_MODE_MASK  0x1
#define TAHITI_MODE_TAHITI_MODE  0x1
#define PADCTRL_GPIO0_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_GPIO0_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_GPIO0_IO_MUX_SEL1  0x8000
#define PADCTRL_GPIO0_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_GPIO0_MANUAL_MODE_MASK  0x4000
#define PADCTRL_GPIO0_MANUAL_MODE  0x4000
#define PADCTRL_GPIO0_DS1_OFFSET  0xd
#define PADCTRL_GPIO0_DS1_MASK  0x2000
#define PADCTRL_GPIO0_DS1  0x2000
#define PADCTRL_GPIO0_DS0_OFFSET  0xc
#define PADCTRL_GPIO0_DS0_MASK  0x1000
#define PADCTRL_GPIO0_DS0  0x1000
#define PADCTRL_GPIO0_SR_OFFSET  0xb
#define PADCTRL_GPIO0_SR_MASK  0x800
#define PADCTRL_GPIO0_SR  0x800
#define PADCTRL_GPIO0_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_GPIO0_IO_MUX_SEL_MASK  0x200
#define PADCTRL_GPIO0_IO_MUX_SEL  0x200
#define PADCTRL_GPIO0_PS_OFFSET  0x8
#define PADCTRL_GPIO0_PS_MASK  0x100
#define PADCTRL_GPIO0_PS  0x100
#define PADCTRL_GPIO0_PE_OFFSET  0x7
#define PADCTRL_GPIO0_PE_MASK  0x80
#define PADCTRL_GPIO0_PE  0x80
#define PADCTRL_GPIO0_IS_OFFSET  0x5
#define PADCTRL_GPIO0_IS_MASK  0x20
#define PADCTRL_GPIO0_IS  0x20
#define PADCTRL_GPIO0_IE_OFFSET  0x3
#define PADCTRL_GPIO0_IE_MASK  0x8
#define PADCTRL_GPIO0_IE  0x8
#define PADCTRL_GPIO0_OE_OFFSET  0x2
#define PADCTRL_GPIO0_OE_MASK  0x4
#define PADCTRL_GPIO0_OE  0x4
#define PADCTRL_GPIO0_A_OFFSET  0x1
#define PADCTRL_GPIO0_A_MASK  0x2
#define PADCTRL_GPIO0_A  0x2
#define PADCTRL_GPIO1_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_GPIO1_IO_MUX_SEL1_MASK  0x18000
#define PADCTRL_GPIO1_IO_MUX_SEL1  0x18000
#define PADCTRL_GPIO1_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_GPIO1_MANUAL_MODE_MASK  0x4000
#define PADCTRL_GPIO1_MANUAL_MODE  0x4000
#define PADCTRL_GPIO1_DS1_OFFSET  0xd
#define PADCTRL_GPIO1_DS1_MASK  0x2000
#define PADCTRL_GPIO1_DS1  0x2000
#define PADCTRL_GPIO1_DS0_OFFSET  0xc
#define PADCTRL_GPIO1_DS0_MASK  0x1000
#define PADCTRL_GPIO1_DS0  0x1000
#define PADCTRL_GPIO1_SR_OFFSET  0xb
#define PADCTRL_GPIO1_SR_MASK  0x800
#define PADCTRL_GPIO1_SR  0x800
#define PADCTRL_GPIO1_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_GPIO1_IO_MUX_SEL_MASK  0x200
#define PADCTRL_GPIO1_IO_MUX_SEL  0x200
#define PADCTRL_GPIO1_PS_OFFSET  0x8
#define PADCTRL_GPIO1_PS_MASK  0x100
#define PADCTRL_GPIO1_PS  0x100
#define PADCTRL_GPIO1_PE_OFFSET  0x7
#define PADCTRL_GPIO1_PE_MASK  0x80
#define PADCTRL_GPIO1_PE  0x80
#define PADCTRL_GPIO1_IS_OFFSET  0x5
#define PADCTRL_GPIO1_IS_MASK  0x20
#define PADCTRL_GPIO1_IS  0x20
#define PADCTRL_GPIO1_IE_OFFSET  0x3
#define PADCTRL_GPIO1_IE_MASK  0x8
#define PADCTRL_GPIO1_IE  0x8
#define PADCTRL_GPIO1_OE_OFFSET  0x2
#define PADCTRL_GPIO1_OE_MASK  0x4
#define PADCTRL_GPIO1_OE  0x4
#define PADCTRL_GPIO1_A_OFFSET  0x1
#define PADCTRL_GPIO1_A_MASK  0x2
#define PADCTRL_GPIO1_A  0x2
#define PADCTRL_GPIO2_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_GPIO2_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_GPIO2_IO_MUX_SEL1  0x8000
#define PADCTRL_GPIO2_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_GPIO2_MANUAL_MODE_MASK  0x4000
#define PADCTRL_GPIO2_MANUAL_MODE  0x4000
#define PADCTRL_GPIO2_DS1_OFFSET  0xd
#define PADCTRL_GPIO2_DS1_MASK  0x2000
#define PADCTRL_GPIO2_DS1  0x2000
#define PADCTRL_GPIO2_DS0_OFFSET  0xc
#define PADCTRL_GPIO2_DS0_MASK  0x1000
#define PADCTRL_GPIO2_DS0  0x1000
#define PADCTRL_GPIO2_SR_OFFSET  0xb
#define PADCTRL_GPIO2_SR_MASK  0x800
#define PADCTRL_GPIO2_SR  0x800
#define PADCTRL_GPIO2_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_GPIO2_IO_MUX_SEL_MASK  0x600
#define PADCTRL_GPIO2_IO_MUX_SEL  0x600
#define PADCTRL_GPIO2_PS_OFFSET  0x8
#define PADCTRL_GPIO2_PS_MASK  0x100
#define PADCTRL_GPIO2_PS  0x100
#define PADCTRL_GPIO2_PE_OFFSET  0x7
#define PADCTRL_GPIO2_PE_MASK  0x80
#define PADCTRL_GPIO2_PE  0x80
#define PADCTRL_GPIO2_IS_OFFSET  0x5
#define PADCTRL_GPIO2_IS_MASK  0x20
#define PADCTRL_GPIO2_IS  0x20
#define PADCTRL_GPIO2_IE_OFFSET  0x3
#define PADCTRL_GPIO2_IE_MASK  0x8
#define PADCTRL_GPIO2_IE  0x8
#define PADCTRL_GPIO2_OE_OFFSET  0x2
#define PADCTRL_GPIO2_OE_MASK  0x4
#define PADCTRL_GPIO2_OE  0x4
#define PADCTRL_GPIO2_A_OFFSET  0x1
#define PADCTRL_GPIO2_A_MASK  0x2
#define PADCTRL_GPIO2_A  0x2
#define PADCTRL_GPIO3_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_GPIO3_IO_MUX_SEL1_MASK  0x18000
#define PADCTRL_GPIO3_IO_MUX_SEL1  0x18000
#define PADCTRL_GPIO3_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_GPIO3_MANUAL_MODE_MASK  0x4000
#define PADCTRL_GPIO3_MANUAL_MODE  0x4000
#define PADCTRL_GPIO3_DS1_OFFSET  0xd
#define PADCTRL_GPIO3_DS1_MASK  0x2000
#define PADCTRL_GPIO3_DS1  0x2000
#define PADCTRL_GPIO3_DS0_OFFSET  0xc
#define PADCTRL_GPIO3_DS0_MASK  0x1000
#define PADCTRL_GPIO3_DS0  0x1000
#define PADCTRL_GPIO3_SR_OFFSET  0xb
#define PADCTRL_GPIO3_SR_MASK  0x800
#define PADCTRL_GPIO3_SR  0x800
#define PADCTRL_GPIO3_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_GPIO3_IO_MUX_SEL_MASK  0x200
#define PADCTRL_GPIO3_IO_MUX_SEL  0x200
#define PADCTRL_GPIO3_PS_OFFSET  0x8
#define PADCTRL_GPIO3_PS_MASK  0x100
#define PADCTRL_GPIO3_PS  0x100
#define PADCTRL_GPIO3_PE_OFFSET  0x7
#define PADCTRL_GPIO3_PE_MASK  0x80
#define PADCTRL_GPIO3_PE  0x80
#define PADCTRL_GPIO3_IS_OFFSET  0x5
#define PADCTRL_GPIO3_IS_MASK  0x20
#define PADCTRL_GPIO3_IS  0x20
#define PADCTRL_GPIO3_IE_OFFSET  0x3
#define PADCTRL_GPIO3_IE_MASK  0x8
#define PADCTRL_GPIO3_IE  0x8
#define PADCTRL_GPIO3_OE_OFFSET  0x2
#define PADCTRL_GPIO3_OE_MASK  0x4
#define PADCTRL_GPIO3_OE  0x4
#define PADCTRL_GPIO3_A_OFFSET  0x1
#define PADCTRL_GPIO3_A_MASK  0x2
#define PADCTRL_GPIO3_A  0x2
#define PADCTRL_GPIO4_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_GPIO4_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_GPIO4_IO_MUX_SEL1  0x8000
#define PADCTRL_GPIO4_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_GPIO4_MANUAL_MODE_MASK  0x4000
#define PADCTRL_GPIO4_MANUAL_MODE  0x4000
#define PADCTRL_GPIO4_DS1_OFFSET  0xd
#define PADCTRL_GPIO4_DS1_MASK  0x2000
#define PADCTRL_GPIO4_DS1  0x2000
#define PADCTRL_GPIO4_DS0_OFFSET  0xc
#define PADCTRL_GPIO4_DS0_MASK  0x1000
#define PADCTRL_GPIO4_DS0  0x1000
#define PADCTRL_GPIO4_SR_OFFSET  0xb
#define PADCTRL_GPIO4_SR_MASK  0x800
#define PADCTRL_GPIO4_SR  0x800
#define PADCTRL_GPIO4_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_GPIO4_IO_MUX_SEL_MASK  0x200
#define PADCTRL_GPIO4_IO_MUX_SEL  0x200
#define PADCTRL_GPIO4_PS_OFFSET  0x8
#define PADCTRL_GPIO4_PS_MASK  0x100
#define PADCTRL_GPIO4_PS  0x100
#define PADCTRL_GPIO4_PE_OFFSET  0x7
#define PADCTRL_GPIO4_PE_MASK  0x80
#define PADCTRL_GPIO4_PE  0x80
#define PADCTRL_GPIO4_IS_OFFSET  0x5
#define PADCTRL_GPIO4_IS_MASK  0x20
#define PADCTRL_GPIO4_IS  0x20
#define PADCTRL_GPIO4_IE_OFFSET  0x3
#define PADCTRL_GPIO4_IE_MASK  0x8
#define PADCTRL_GPIO4_IE  0x8
#define PADCTRL_GPIO4_OE_OFFSET  0x2
#define PADCTRL_GPIO4_OE_MASK  0x4
#define PADCTRL_GPIO4_OE  0x4
#define PADCTRL_GPIO4_A_OFFSET  0x1
#define PADCTRL_GPIO4_A_MASK  0x2
#define PADCTRL_GPIO4_A  0x2
#define PADCTRL_GPIO5_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_GPIO5_MANUAL_MODE_MASK  0x4000
#define PADCTRL_GPIO5_MANUAL_MODE  0x4000
#define PADCTRL_GPIO5_DS1_OFFSET  0xd
#define PADCTRL_GPIO5_DS1_MASK  0x2000
#define PADCTRL_GPIO5_DS1  0x2000
#define PADCTRL_GPIO5_DS0_OFFSET  0xc
#define PADCTRL_GPIO5_DS0_MASK  0x1000
#define PADCTRL_GPIO5_DS0  0x1000
#define PADCTRL_GPIO5_SR_OFFSET  0xb
#define PADCTRL_GPIO5_SR_MASK  0x800
#define PADCTRL_GPIO5_SR  0x800
#define PADCTRL_GPIO5_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_GPIO5_IO_MUX_SEL_MASK  0x200
#define PADCTRL_GPIO5_IO_MUX_SEL  0x200
#define PADCTRL_GPIO5_PS_OFFSET  0x8
#define PADCTRL_GPIO5_PS_MASK  0x100
#define PADCTRL_GPIO5_PS  0x100
#define PADCTRL_GPIO5_PE_OFFSET  0x7
#define PADCTRL_GPIO5_PE_MASK  0x80
#define PADCTRL_GPIO5_PE  0x80
#define PADCTRL_GPIO5_IS_OFFSET  0x5
#define PADCTRL_GPIO5_IS_MASK  0x20
#define PADCTRL_GPIO5_IS  0x20
#define PADCTRL_GPIO5_IE_OFFSET  0x3
#define PADCTRL_GPIO5_IE_MASK  0x8
#define PADCTRL_GPIO5_IE  0x8
#define PADCTRL_GPIO5_OE_OFFSET  0x2
#define PADCTRL_GPIO5_OE_MASK  0x4
#define PADCTRL_GPIO5_OE  0x4
#define PADCTRL_GPIO5_A_OFFSET  0x1
#define PADCTRL_GPIO5_A_MASK  0x2
#define PADCTRL_GPIO5_A  0x2
#define PADCTRL_GPIO6_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_GPIO6_MANUAL_MODE_MASK  0x4000
#define PADCTRL_GPIO6_MANUAL_MODE  0x4000
#define PADCTRL_GPIO6_DS1_OFFSET  0xd
#define PADCTRL_GPIO6_DS1_MASK  0x2000
#define PADCTRL_GPIO6_DS1  0x2000
#define PADCTRL_GPIO6_DS0_OFFSET  0xc
#define PADCTRL_GPIO6_DS0_MASK  0x1000
#define PADCTRL_GPIO6_DS0  0x1000
#define PADCTRL_GPIO6_SR_OFFSET  0xb
#define PADCTRL_GPIO6_SR_MASK  0x800
#define PADCTRL_GPIO6_SR  0x800
#define PADCTRL_GPIO6_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_GPIO6_IO_MUX_SEL_MASK  0x600
#define PADCTRL_GPIO6_IO_MUX_SEL  0x600
#define PADCTRL_GPIO6_PS_OFFSET  0x8
#define PADCTRL_GPIO6_PS_MASK  0x100
#define PADCTRL_GPIO6_PS  0x100
#define PADCTRL_GPIO6_PE_OFFSET  0x7
#define PADCTRL_GPIO6_PE_MASK  0x80
#define PADCTRL_GPIO6_PE  0x80
#define PADCTRL_GPIO6_IS_OFFSET  0x5
#define PADCTRL_GPIO6_IS_MASK  0x20
#define PADCTRL_GPIO6_IS  0x20
#define PADCTRL_GPIO6_IE_OFFSET  0x3
#define PADCTRL_GPIO6_IE_MASK  0x8
#define PADCTRL_GPIO6_IE  0x8
#define PADCTRL_GPIO6_OE_OFFSET  0x2
#define PADCTRL_GPIO6_OE_MASK  0x4
#define PADCTRL_GPIO6_OE  0x4
#define PADCTRL_GPIO6_A_OFFSET  0x1
#define PADCTRL_GPIO6_A_MASK  0x2
#define PADCTRL_GPIO6_A  0x2
#define PADCTRL_GPIO6_STD_RCOSC_OUT_EN_OFFSET  0x0
#define PADCTRL_GPIO6_STD_RCOSC_OUT_EN_MASK  0x1
#define PADCTRL_GPIO6_STD_RCOSC_OUT_EN  0x1
#define PADCTRL_I2S1_BCLK_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_I2S1_BCLK_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_I2S1_BCLK_IO_MUX_SEL1  0x8000
#define PADCTRL_I2S1_BCLK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S1_BCLK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S1_BCLK_MANUAL_MODE  0x4000
#define PADCTRL_I2S1_BCLK_DS1_OFFSET  0xd
#define PADCTRL_I2S1_BCLK_DS1_MASK  0x2000
#define PADCTRL_I2S1_BCLK_DS1  0x2000
#define PADCTRL_I2S1_BCLK_DS0_OFFSET  0xc
#define PADCTRL_I2S1_BCLK_DS0_MASK  0x1000
#define PADCTRL_I2S1_BCLK_DS0  0x1000
#define PADCTRL_I2S1_BCLK_SR_OFFSET  0xb
#define PADCTRL_I2S1_BCLK_SR_MASK  0x800
#define PADCTRL_I2S1_BCLK_SR  0x800
#define PADCTRL_I2S1_BCLK_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_I2S1_BCLK_IO_MUX_SEL_MASK  0x600
#define PADCTRL_I2S1_BCLK_IO_MUX_SEL  0x600
#define PADCTRL_I2S1_BCLK_PS_OFFSET  0x8
#define PADCTRL_I2S1_BCLK_PS_MASK  0x100
#define PADCTRL_I2S1_BCLK_PS  0x100
#define PADCTRL_I2S1_BCLK_PE_OFFSET  0x7
#define PADCTRL_I2S1_BCLK_PE_MASK  0x80
#define PADCTRL_I2S1_BCLK_PE  0x80
#define PADCTRL_I2S1_BCLK_IS_OFFSET  0x5
#define PADCTRL_I2S1_BCLK_IS_MASK  0x20
#define PADCTRL_I2S1_BCLK_IS  0x20
#define PADCTRL_I2S1_BCLK_IE_OFFSET  0x3
#define PADCTRL_I2S1_BCLK_IE_MASK  0x8
#define PADCTRL_I2S1_BCLK_IE  0x8
#define PADCTRL_I2S1_BCLK_OE_OFFSET  0x2
#define PADCTRL_I2S1_BCLK_OE_MASK  0x4
#define PADCTRL_I2S1_BCLK_OE  0x4
#define PADCTRL_I2S1_BCLK_A_OFFSET  0x1
#define PADCTRL_I2S1_BCLK_A_MASK  0x2
#define PADCTRL_I2S1_BCLK_A  0x2
#define PADCTRL_I2S1_TX_DAT_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_I2S1_TX_DAT_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_I2S1_TX_DAT_IO_MUX_SEL1  0x8000
#define PADCTRL_I2S1_TX_DAT_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S1_TX_DAT_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S1_TX_DAT_MANUAL_MODE  0x4000
#define PADCTRL_I2S1_TX_DAT_DS1_OFFSET  0xd
#define PADCTRL_I2S1_TX_DAT_DS1_MASK  0x2000
#define PADCTRL_I2S1_TX_DAT_DS1  0x2000
#define PADCTRL_I2S1_TX_DAT_DS0_OFFSET  0xc
#define PADCTRL_I2S1_TX_DAT_DS0_MASK  0x1000
#define PADCTRL_I2S1_TX_DAT_DS0  0x1000
#define PADCTRL_I2S1_TX_DAT_SR_OFFSET  0xb
#define PADCTRL_I2S1_TX_DAT_SR_MASK  0x800
#define PADCTRL_I2S1_TX_DAT_SR  0x800
#define PADCTRL_I2S1_TX_DAT_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_I2S1_TX_DAT_IO_MUX_SEL_MASK  0x600
#define PADCTRL_I2S1_TX_DAT_IO_MUX_SEL  0x600
#define PADCTRL_I2S1_TX_DAT_PS_OFFSET  0x8
#define PADCTRL_I2S1_TX_DAT_PS_MASK  0x100
#define PADCTRL_I2S1_TX_DAT_PS  0x100
#define PADCTRL_I2S1_TX_DAT_PE_OFFSET  0x7
#define PADCTRL_I2S1_TX_DAT_PE_MASK  0x80
#define PADCTRL_I2S1_TX_DAT_PE  0x80
#define PADCTRL_I2S1_TX_DAT_IS_OFFSET  0x5
#define PADCTRL_I2S1_TX_DAT_IS_MASK  0x20
#define PADCTRL_I2S1_TX_DAT_IS  0x20
#define PADCTRL_I2S1_TX_DAT_IE_OFFSET  0x3
#define PADCTRL_I2S1_TX_DAT_IE_MASK  0x8
#define PADCTRL_I2S1_TX_DAT_IE  0x8
#define PADCTRL_I2S1_TX_DAT_OE_OFFSET  0x2
#define PADCTRL_I2S1_TX_DAT_OE_MASK  0x4
#define PADCTRL_I2S1_TX_DAT_OE  0x4
#define PADCTRL_I2S1_TX_DAT_A_OFFSET  0x1
#define PADCTRL_I2S1_TX_DAT_A_MASK  0x2
#define PADCTRL_I2S1_TX_DAT_A  0x2
#define PADCTRL_I2S1_RX_DAT_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_I2S1_RX_DAT_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_I2S1_RX_DAT_IO_MUX_SEL1  0x8000
#define PADCTRL_I2S1_RX_DAT_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S1_RX_DAT_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S1_RX_DAT_MANUAL_MODE  0x4000
#define PADCTRL_I2S1_RX_DAT_DS1_OFFSET  0xd
#define PADCTRL_I2S1_RX_DAT_DS1_MASK  0x2000
#define PADCTRL_I2S1_RX_DAT_DS1  0x2000
#define PADCTRL_I2S1_RX_DAT_DS0_OFFSET  0xc
#define PADCTRL_I2S1_RX_DAT_DS0_MASK  0x1000
#define PADCTRL_I2S1_RX_DAT_DS0  0x1000
#define PADCTRL_I2S1_RX_DAT_SR_OFFSET  0xb
#define PADCTRL_I2S1_RX_DAT_SR_MASK  0x800
#define PADCTRL_I2S1_RX_DAT_SR  0x800
#define PADCTRL_I2S1_RX_DAT_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_I2S1_RX_DAT_IO_MUX_SEL_MASK  0x600
#define PADCTRL_I2S1_RX_DAT_IO_MUX_SEL  0x600
#define PADCTRL_I2S1_RX_DAT_PS_OFFSET  0x8
#define PADCTRL_I2S1_RX_DAT_PS_MASK  0x100
#define PADCTRL_I2S1_RX_DAT_PS  0x100
#define PADCTRL_I2S1_RX_DAT_PE_OFFSET  0x7
#define PADCTRL_I2S1_RX_DAT_PE_MASK  0x80
#define PADCTRL_I2S1_RX_DAT_PE  0x80
#define PADCTRL_I2S1_RX_DAT_IS_OFFSET  0x5
#define PADCTRL_I2S1_RX_DAT_IS_MASK  0x20
#define PADCTRL_I2S1_RX_DAT_IS  0x20
#define PADCTRL_I2S1_RX_DAT_IE_OFFSET  0x3
#define PADCTRL_I2S1_RX_DAT_IE_MASK  0x8
#define PADCTRL_I2S1_RX_DAT_IE  0x8
#define PADCTRL_I2S1_RX_DAT_OE_OFFSET  0x2
#define PADCTRL_I2S1_RX_DAT_OE_MASK  0x4
#define PADCTRL_I2S1_RX_DAT_OE  0x4
#define PADCTRL_I2S1_RX_DAT_A_OFFSET  0x1
#define PADCTRL_I2S1_RX_DAT_A_MASK  0x2
#define PADCTRL_I2S1_RX_DAT_A  0x2
#define PADCTRL_I2S1_TX_WS_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_I2S1_TX_WS_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_I2S1_TX_WS_IO_MUX_SEL1  0x8000
#define PADCTRL_I2S1_TX_WS_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S1_TX_WS_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S1_TX_WS_MANUAL_MODE  0x4000
#define PADCTRL_I2S1_TX_WS_DS1_OFFSET  0xd
#define PADCTRL_I2S1_TX_WS_DS1_MASK  0x2000
#define PADCTRL_I2S1_TX_WS_DS1  0x2000
#define PADCTRL_I2S1_TX_WS_DS0_OFFSET  0xc
#define PADCTRL_I2S1_TX_WS_DS0_MASK  0x1000
#define PADCTRL_I2S1_TX_WS_DS0  0x1000
#define PADCTRL_I2S1_TX_WS_SR_OFFSET  0xb
#define PADCTRL_I2S1_TX_WS_SR_MASK  0x800
#define PADCTRL_I2S1_TX_WS_SR  0x800
#define PADCTRL_I2S1_TX_WS_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_I2S1_TX_WS_IO_MUX_SEL_MASK  0x600
#define PADCTRL_I2S1_TX_WS_IO_MUX_SEL  0x600
#define PADCTRL_I2S1_TX_WS_PS_OFFSET  0x8
#define PADCTRL_I2S1_TX_WS_PS_MASK  0x100
#define PADCTRL_I2S1_TX_WS_PS  0x100
#define PADCTRL_I2S1_TX_WS_PE_OFFSET  0x7
#define PADCTRL_I2S1_TX_WS_PE_MASK  0x80
#define PADCTRL_I2S1_TX_WS_PE  0x80
#define PADCTRL_I2S1_TX_WS_IS_OFFSET  0x5
#define PADCTRL_I2S1_TX_WS_IS_MASK  0x20
#define PADCTRL_I2S1_TX_WS_IS  0x20
#define PADCTRL_I2S1_TX_WS_IE_OFFSET  0x3
#define PADCTRL_I2S1_TX_WS_IE_MASK  0x8
#define PADCTRL_I2S1_TX_WS_IE  0x8
#define PADCTRL_I2S1_TX_WS_OE_OFFSET  0x2
#define PADCTRL_I2S1_TX_WS_OE_MASK  0x4
#define PADCTRL_I2S1_TX_WS_OE  0x4
#define PADCTRL_I2S1_TX_WS_A_OFFSET  0x1
#define PADCTRL_I2S1_TX_WS_A_MASK  0x2
#define PADCTRL_I2S1_TX_WS_A  0x2
#define PADCTRL_I2S1_RX_WS_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_I2S1_RX_WS_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_I2S1_RX_WS_IO_MUX_SEL1  0x8000
#define PADCTRL_I2S1_RX_WS_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S1_RX_WS_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S1_RX_WS_MANUAL_MODE  0x4000
#define PADCTRL_I2S1_RX_WS_DS1_OFFSET  0xd
#define PADCTRL_I2S1_RX_WS_DS1_MASK  0x2000
#define PADCTRL_I2S1_RX_WS_DS1  0x2000
#define PADCTRL_I2S1_RX_WS_DS0_OFFSET  0xc
#define PADCTRL_I2S1_RX_WS_DS0_MASK  0x1000
#define PADCTRL_I2S1_RX_WS_DS0  0x1000
#define PADCTRL_I2S1_RX_WS_SR_OFFSET  0xb
#define PADCTRL_I2S1_RX_WS_SR_MASK  0x800
#define PADCTRL_I2S1_RX_WS_SR  0x800
#define PADCTRL_I2S1_RX_WS_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_I2S1_RX_WS_IO_MUX_SEL_MASK  0x600
#define PADCTRL_I2S1_RX_WS_IO_MUX_SEL  0x600
#define PADCTRL_I2S1_RX_WS_PS_OFFSET  0x8
#define PADCTRL_I2S1_RX_WS_PS_MASK  0x100
#define PADCTRL_I2S1_RX_WS_PS  0x100
#define PADCTRL_I2S1_RX_WS_PE_OFFSET  0x7
#define PADCTRL_I2S1_RX_WS_PE_MASK  0x80
#define PADCTRL_I2S1_RX_WS_PE  0x80
#define PADCTRL_I2S1_RX_WS_IS_OFFSET  0x5
#define PADCTRL_I2S1_RX_WS_IS_MASK  0x20
#define PADCTRL_I2S1_RX_WS_IS  0x20
#define PADCTRL_I2S1_RX_WS_IE_OFFSET  0x3
#define PADCTRL_I2S1_RX_WS_IE_MASK  0x8
#define PADCTRL_I2S1_RX_WS_IE  0x8
#define PADCTRL_I2S1_RX_WS_OE_OFFSET  0x2
#define PADCTRL_I2S1_RX_WS_OE_MASK  0x4
#define PADCTRL_I2S1_RX_WS_OE  0x4
#define PADCTRL_I2S1_RX_WS_A_OFFSET  0x1
#define PADCTRL_I2S1_RX_WS_A_MASK  0x2
#define PADCTRL_I2S1_RX_WS_A  0x2
#define PADCTRL_UART_TX_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_UART_TX_MANUAL_MODE_MASK  0x4000
#define PADCTRL_UART_TX_MANUAL_MODE  0x4000
#define PADCTRL_UART_TX_DS1_OFFSET  0xd
#define PADCTRL_UART_TX_DS1_MASK  0x2000
#define PADCTRL_UART_TX_DS1  0x2000
#define PADCTRL_UART_TX_DS0_OFFSET  0xc
#define PADCTRL_UART_TX_DS0_MASK  0x1000
#define PADCTRL_UART_TX_DS0  0x1000
#define PADCTRL_UART_TX_SR_OFFSET  0xb
#define PADCTRL_UART_TX_SR_MASK  0x800
#define PADCTRL_UART_TX_SR  0x800
#define PADCTRL_UART_TX_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_UART_TX_IO_MUX_SEL_MASK  0x600
#define PADCTRL_UART_TX_IO_MUX_SEL  0x600
#define PADCTRL_UART_TX_PS_OFFSET  0x8
#define PADCTRL_UART_TX_PS_MASK  0x100
#define PADCTRL_UART_TX_PS  0x100
#define PADCTRL_UART_TX_PE_OFFSET  0x7
#define PADCTRL_UART_TX_PE_MASK  0x80
#define PADCTRL_UART_TX_PE  0x80
#define PADCTRL_UART_TX_IS_OFFSET  0x5
#define PADCTRL_UART_TX_IS_MASK  0x20
#define PADCTRL_UART_TX_IS  0x20
#define PADCTRL_UART_TX_IE_OFFSET  0x3
#define PADCTRL_UART_TX_IE_MASK  0x8
#define PADCTRL_UART_TX_IE  0x8
#define PADCTRL_UART_TX_OE_OFFSET  0x2
#define PADCTRL_UART_TX_OE_MASK  0x4
#define PADCTRL_UART_TX_OE  0x4
#define PADCTRL_UART_TX_A_OFFSET  0x1
#define PADCTRL_UART_TX_A_MASK  0x2
#define PADCTRL_UART_TX_A  0x2
#define PADCTRL_UART_RX_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_UART_RX_MANUAL_MODE_MASK  0x4000
#define PADCTRL_UART_RX_MANUAL_MODE  0x4000
#define PADCTRL_UART_RX_DS1_OFFSET  0xd
#define PADCTRL_UART_RX_DS1_MASK  0x2000
#define PADCTRL_UART_RX_DS1  0x2000
#define PADCTRL_UART_RX_DS0_OFFSET  0xc
#define PADCTRL_UART_RX_DS0_MASK  0x1000
#define PADCTRL_UART_RX_DS0  0x1000
#define PADCTRL_UART_RX_SR_OFFSET  0xb
#define PADCTRL_UART_RX_SR_MASK  0x800
#define PADCTRL_UART_RX_SR  0x800
#define PADCTRL_UART_RX_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_UART_RX_IO_MUX_SEL_MASK  0x600
#define PADCTRL_UART_RX_IO_MUX_SEL  0x600
#define PADCTRL_UART_RX_PS_OFFSET  0x8
#define PADCTRL_UART_RX_PS_MASK  0x100
#define PADCTRL_UART_RX_PS  0x100
#define PADCTRL_UART_RX_PE_OFFSET  0x7
#define PADCTRL_UART_RX_PE_MASK  0x80
#define PADCTRL_UART_RX_PE  0x80
#define PADCTRL_UART_RX_IS_OFFSET  0x5
#define PADCTRL_UART_RX_IS_MASK  0x20
#define PADCTRL_UART_RX_IS  0x20
#define PADCTRL_UART_RX_IE_OFFSET  0x3
#define PADCTRL_UART_RX_IE_MASK  0x8
#define PADCTRL_UART_RX_IE  0x8
#define PADCTRL_UART_RX_OE_OFFSET  0x2
#define PADCTRL_UART_RX_OE_MASK  0x4
#define PADCTRL_UART_RX_OE  0x4
#define PADCTRL_UART_RX_A_OFFSET  0x1
#define PADCTRL_UART_RX_A_MASK  0x2
#define PADCTRL_UART_RX_A  0x2
#define PADCTRL_I3C_I2C_SCK_HKEEP_OFFSET  0x11
#define PADCTRL_I3C_I2C_SCK_HKEEP_MASK  0x20000
#define PADCTRL_I3C_I2C_SCK_HKEEP  0x20000
#define PADCTRL_I3C_I2C_SCK_PULLUP_EN_OFFSET  0x10
#define PADCTRL_I3C_I2C_SCK_PULLUP_EN_MASK  0x10000
#define PADCTRL_I3C_I2C_SCK_PULLUP_EN  0x10000
#define PADCTRL_I3C_I2C_SCK_I2C_OFFSET  0xf
#define PADCTRL_I3C_I2C_SCK_I2C_MASK  0x8000
#define PADCTRL_I3C_I2C_SCK_I2C  0x8000
#define PADCTRL_I3C_I2C_SCK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I3C_I2C_SCK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I3C_I2C_SCK_MANUAL_MODE  0x4000
#define PADCTRL_I3C_I2C_SCK_DS1_OFFSET  0xd
#define PADCTRL_I3C_I2C_SCK_DS1_MASK  0x2000
#define PADCTRL_I3C_I2C_SCK_DS1  0x2000
#define PADCTRL_I3C_I2C_SCK_DS0_OFFSET  0xc
#define PADCTRL_I3C_I2C_SCK_DS0_MASK  0x1000
#define PADCTRL_I3C_I2C_SCK_DS0  0x1000
#define PADCTRL_I3C_I2C_SCK_IOMUXSEL_OFFSET  0x9
#define PADCTRL_I3C_I2C_SCK_IOMUXSEL_MASK  0x200
#define PADCTRL_I3C_I2C_SCK_IOMUXSEL  0x200
#define PADCTRL_I3C_I2C_SCK_PS_OFFSET  0x8
#define PADCTRL_I3C_I2C_SCK_PS_MASK  0x100
#define PADCTRL_I3C_I2C_SCK_PS  0x100
#define PADCTRL_I3C_I2C_SCK_PE_OFFSET  0x7
#define PADCTRL_I3C_I2C_SCK_PE_MASK  0x80
#define PADCTRL_I3C_I2C_SCK_PE  0x80
#define PADCTRL_I3C_I2C_SCK_IE_OFFSET  0x3
#define PADCTRL_I3C_I2C_SCK_IE_MASK  0x8
#define PADCTRL_I3C_I2C_SCK_IE  0x8
#define PADCTRL_I3C_I2C_SCK_OE_OFFSET  0x2
#define PADCTRL_I3C_I2C_SCK_OE_MASK  0x4
#define PADCTRL_I3C_I2C_SCK_OE  0x4
#define PADCTRL_I3C_I2C_SCK_A_OFFSET  0x1
#define PADCTRL_I3C_I2C_SCK_A_MASK  0x2
#define PADCTRL_I3C_I2C_SCK_A  0x2
#define PADCTRL_I3C_I2C_SDA_HKEEP_OFFSET  0x11
#define PADCTRL_I3C_I2C_SDA_HKEEP_MASK  0x20000
#define PADCTRL_I3C_I2C_SDA_HKEEP  0x20000
#define PADCTRL_I3C_I2C_SDA_PULLUP_EN_OFFSET  0x10
#define PADCTRL_I3C_I2C_SDA_PULLUP_EN_MASK  0x10000
#define PADCTRL_I3C_I2C_SDA_PULLUP_EN  0x10000
#define PADCTRL_I3C_I2C_SDA_I2C_OFFSET  0xf
#define PADCTRL_I3C_I2C_SDA_I2C_MASK  0x8000
#define PADCTRL_I3C_I2C_SDA_I2C  0x8000
#define PADCTRL_I3C_I2C_SDA_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I3C_I2C_SDA_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I3C_I2C_SDA_MANUAL_MODE  0x4000
#define PADCTRL_I3C_I2C_SDA_DS1_OFFSET  0xd
#define PADCTRL_I3C_I2C_SDA_DS1_MASK  0x2000
#define PADCTRL_I3C_I2C_SDA_DS1  0x2000
#define PADCTRL_I3C_I2C_SDA_DS0_OFFSET  0xc
#define PADCTRL_I3C_I2C_SDA_DS0_MASK  0x1000
#define PADCTRL_I3C_I2C_SDA_DS0  0x1000
#define PADCTRL_I3C_I2C_SDA_IOMUXSEL_OFFSET  0x9
#define PADCTRL_I3C_I2C_SDA_IOMUXSEL_MASK  0x200
#define PADCTRL_I3C_I2C_SDA_IOMUXSEL  0x200
#define PADCTRL_I3C_I2C_SDA_PS_OFFSET  0x8
#define PADCTRL_I3C_I2C_SDA_PS_MASK  0x100
#define PADCTRL_I3C_I2C_SDA_PS  0x100
#define PADCTRL_I3C_I2C_SDA_PE_OFFSET  0x7
#define PADCTRL_I3C_I2C_SDA_PE_MASK  0x80
#define PADCTRL_I3C_I2C_SDA_PE  0x80
#define PADCTRL_I3C_I2C_SDA_IE_OFFSET  0x3
#define PADCTRL_I3C_I2C_SDA_IE_MASK  0x8
#define PADCTRL_I3C_I2C_SDA_IE  0x8
#define PADCTRL_I3C_I2C_SDA_OE_OFFSET  0x2
#define PADCTRL_I3C_I2C_SDA_OE_MASK  0x4
#define PADCTRL_I3C_I2C_SDA_OE  0x4
#define PADCTRL_I3C_I2C_SDA_A_OFFSET  0x1
#define PADCTRL_I3C_I2C_SDA_A_MASK  0x2
#define PADCTRL_I3C_I2C_SDA_A  0x2
#define PADCTRL_I2C0_M_SCK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2C0_M_SCK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2C0_M_SCK_MANUAL_MODE  0x4000
#define PADCTRL_I2C0_M_SCK_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_I2C0_M_SCK_IO_MUX_SEL_MASK  0x600
#define PADCTRL_I2C0_M_SCK_IO_MUX_SEL  0x600
#define PADCTRL_I2C0_M_SCK_PS_OFFSET  0x8
#define PADCTRL_I2C0_M_SCK_PS_MASK  0x100
#define PADCTRL_I2C0_M_SCK_PS  0x100
#define PADCTRL_I2C0_M_SCK_PE_OFFSET  0x7
#define PADCTRL_I2C0_M_SCK_PE_MASK  0x80
#define PADCTRL_I2C0_M_SCK_PE  0x80
#define PADCTRL_I2C0_M_SCK_MODE_OFFSET  0x6
#define PADCTRL_I2C0_M_SCK_MODE_MASK  0x40
#define PADCTRL_I2C0_M_SCK_MODE  0x40
#define PADCTRL_I2C0_M_SCK_IS_OFFSET  0x5
#define PADCTRL_I2C0_M_SCK_IS_MASK  0x20
#define PADCTRL_I2C0_M_SCK_IS  0x20
#define PADCTRL_I2C0_M_SCK_DS_OFFSET  0x4
#define PADCTRL_I2C0_M_SCK_DS_MASK  0x10
#define PADCTRL_I2C0_M_SCK_DS  0x10
#define PADCTRL_I2C0_M_SCK_IE_OFFSET  0x3
#define PADCTRL_I2C0_M_SCK_IE_MASK  0x8
#define PADCTRL_I2C0_M_SCK_IE  0x8
#define PADCTRL_I2C0_M_SCK_OE_OFFSET  0x2
#define PADCTRL_I2C0_M_SCK_OE_MASK  0x4
#define PADCTRL_I2C0_M_SCK_OE  0x4
#define PADCTRL_I2C0_M_SCK_A_OFFSET  0x1
#define PADCTRL_I2C0_M_SCK_A_MASK  0x2
#define PADCTRL_I2C0_M_SCK_A  0x2
#define PADCTRL_I2C0_M_SDA_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2C0_M_SDA_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2C0_M_SDA_MANUAL_MODE  0x4000
#define PADCTRL_I2C0_M_SDA_IO_MUX_SEL_OFFSET  0x9
#define PADCTRL_I2C0_M_SDA_IO_MUX_SEL_MASK  0x600
#define PADCTRL_I2C0_M_SDA_IO_MUX_SEL  0x600
#define PADCTRL_I2C0_M_SDA_PS_OFFSET  0x8
#define PADCTRL_I2C0_M_SDA_PS_MASK  0x100
#define PADCTRL_I2C0_M_SDA_PS  0x100
#define PADCTRL_I2C0_M_SDA_PE_OFFSET  0x7
#define PADCTRL_I2C0_M_SDA_PE_MASK  0x80
#define PADCTRL_I2C0_M_SDA_PE  0x80
#define PADCTRL_I2C0_M_SDA_MODE_OFFSET  0x6
#define PADCTRL_I2C0_M_SDA_MODE_MASK  0x40
#define PADCTRL_I2C0_M_SDA_MODE  0x40
#define PADCTRL_I2C0_M_SDA_IS_OFFSET  0x5
#define PADCTRL_I2C0_M_SDA_IS_MASK  0x20
#define PADCTRL_I2C0_M_SDA_IS  0x20
#define PADCTRL_I2C0_M_SDA_DS_OFFSET  0x4
#define PADCTRL_I2C0_M_SDA_DS_MASK  0x10
#define PADCTRL_I2C0_M_SDA_DS  0x10
#define PADCTRL_I2C0_M_SDA_IE_OFFSET  0x3
#define PADCTRL_I2C0_M_SDA_IE_MASK  0x8
#define PADCTRL_I2C0_M_SDA_IE  0x8
#define PADCTRL_I2C0_M_SDA_OE_OFFSET  0x2
#define PADCTRL_I2C0_M_SDA_OE_MASK  0x4
#define PADCTRL_I2C0_M_SDA_OE  0x4
#define PADCTRL_I2C0_M_SDA_A_OFFSET  0x1
#define PADCTRL_I2C0_M_SDA_A_MASK  0x2
#define PADCTRL_I2C0_M_SDA_A  0x2
#define PADCTRL_I2S0_BCLK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S0_BCLK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S0_BCLK_MANUAL_MODE  0x4000
#define PADCTRL_I2S0_BCLK_DS1_OFFSET  0xd
#define PADCTRL_I2S0_BCLK_DS1_MASK  0x2000
#define PADCTRL_I2S0_BCLK_DS1  0x2000
#define PADCTRL_I2S0_BCLK_DS0_OFFSET  0xc
#define PADCTRL_I2S0_BCLK_DS0_MASK  0x1000
#define PADCTRL_I2S0_BCLK_DS0  0x1000
#define PADCTRL_I2S0_BCLK_SR_OFFSET  0xb
#define PADCTRL_I2S0_BCLK_SR_MASK  0x800
#define PADCTRL_I2S0_BCLK_SR  0x800
#define PADCTRL_I2S0_BCLK_PS_OFFSET  0x8
#define PADCTRL_I2S0_BCLK_PS_MASK  0x100
#define PADCTRL_I2S0_BCLK_PS  0x100
#define PADCTRL_I2S0_BCLK_PE_OFFSET  0x7
#define PADCTRL_I2S0_BCLK_PE_MASK  0x80
#define PADCTRL_I2S0_BCLK_PE  0x80
#define PADCTRL_I2S0_BCLK_IS_OFFSET  0x5
#define PADCTRL_I2S0_BCLK_IS_MASK  0x20
#define PADCTRL_I2S0_BCLK_IS  0x20
#define PADCTRL_I2S0_BCLK_IE_OFFSET  0x3
#define PADCTRL_I2S0_BCLK_IE_MASK  0x8
#define PADCTRL_I2S0_BCLK_IE  0x8
#define PADCTRL_I2S0_BCLK_OE_OFFSET  0x2
#define PADCTRL_I2S0_BCLK_OE_MASK  0x4
#define PADCTRL_I2S0_BCLK_OE  0x4
#define PADCTRL_I2S0_BCLK_A_OFFSET  0x1
#define PADCTRL_I2S0_BCLK_A_MASK  0x2
#define PADCTRL_I2S0_BCLK_A  0x2
#define PADCTRL_I2S0_TX_WS_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S0_TX_WS_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S0_TX_WS_MANUAL_MODE  0x4000
#define PADCTRL_I2S0_TX_WS_DS1_OFFSET  0xd
#define PADCTRL_I2S0_TX_WS_DS1_MASK  0x2000
#define PADCTRL_I2S0_TX_WS_DS1  0x2000
#define PADCTRL_I2S0_TX_WS_DS0_OFFSET  0xc
#define PADCTRL_I2S0_TX_WS_DS0_MASK  0x1000
#define PADCTRL_I2S0_TX_WS_DS0  0x1000
#define PADCTRL_I2S0_TX_WS_SR_OFFSET  0xb
#define PADCTRL_I2S0_TX_WS_SR_MASK  0x800
#define PADCTRL_I2S0_TX_WS_SR  0x800
#define PADCTRL_I2S0_TX_WS_PS_OFFSET  0x8
#define PADCTRL_I2S0_TX_WS_PS_MASK  0x100
#define PADCTRL_I2S0_TX_WS_PS  0x100
#define PADCTRL_I2S0_TX_WS_PE_OFFSET  0x7
#define PADCTRL_I2S0_TX_WS_PE_MASK  0x80
#define PADCTRL_I2S0_TX_WS_PE  0x80
#define PADCTRL_I2S0_TX_WS_IS_OFFSET  0x5
#define PADCTRL_I2S0_TX_WS_IS_MASK  0x20
#define PADCTRL_I2S0_TX_WS_IS  0x20
#define PADCTRL_I2S0_TX_WS_IE_OFFSET  0x3
#define PADCTRL_I2S0_TX_WS_IE_MASK  0x8
#define PADCTRL_I2S0_TX_WS_IE  0x8
#define PADCTRL_I2S0_TX_WS_OE_OFFSET  0x2
#define PADCTRL_I2S0_TX_WS_OE_MASK  0x4
#define PADCTRL_I2S0_TX_WS_OE  0x4
#define PADCTRL_I2S0_TX_WS_A_OFFSET  0x1
#define PADCTRL_I2S0_TX_WS_A_MASK  0x2
#define PADCTRL_I2S0_TX_WS_A  0x2
#define PADCTRL_I2S0_RX_WS_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S0_RX_WS_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S0_RX_WS_MANUAL_MODE  0x4000
#define PADCTRL_I2S0_RX_WS_DS1_OFFSET  0xd
#define PADCTRL_I2S0_RX_WS_DS1_MASK  0x2000
#define PADCTRL_I2S0_RX_WS_DS1  0x2000
#define PADCTRL_I2S0_RX_WS_DS0_OFFSET  0xc
#define PADCTRL_I2S0_RX_WS_DS0_MASK  0x1000
#define PADCTRL_I2S0_RX_WS_DS0  0x1000
#define PADCTRL_I2S0_RX_WS_SR_OFFSET  0xb
#define PADCTRL_I2S0_RX_WS_SR_MASK  0x800
#define PADCTRL_I2S0_RX_WS_SR  0x800
#define PADCTRL_I2S0_RX_WS_PS_OFFSET  0x8
#define PADCTRL_I2S0_RX_WS_PS_MASK  0x100
#define PADCTRL_I2S0_RX_WS_PS  0x100
#define PADCTRL_I2S0_RX_WS_PE_OFFSET  0x7
#define PADCTRL_I2S0_RX_WS_PE_MASK  0x80
#define PADCTRL_I2S0_RX_WS_PE  0x80
#define PADCTRL_I2S0_RX_WS_IS_OFFSET  0x5
#define PADCTRL_I2S0_RX_WS_IS_MASK  0x20
#define PADCTRL_I2S0_RX_WS_IS  0x20
#define PADCTRL_I2S0_RX_WS_IE_OFFSET  0x3
#define PADCTRL_I2S0_RX_WS_IE_MASK  0x8
#define PADCTRL_I2S0_RX_WS_IE  0x8
#define PADCTRL_I2S0_RX_WS_OE_OFFSET  0x2
#define PADCTRL_I2S0_RX_WS_OE_MASK  0x4
#define PADCTRL_I2S0_RX_WS_OE  0x4
#define PADCTRL_I2S0_RX_WS_A_OFFSET  0x1
#define PADCTRL_I2S0_RX_WS_A_MASK  0x2
#define PADCTRL_I2S0_RX_WS_A  0x2
#define PADCTRL_I2S0_TX_DAT_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S0_TX_DAT_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S0_TX_DAT_MANUAL_MODE  0x4000
#define PADCTRL_I2S0_TX_DAT_DS1_OFFSET  0xd
#define PADCTRL_I2S0_TX_DAT_DS1_MASK  0x2000
#define PADCTRL_I2S0_TX_DAT_DS1  0x2000
#define PADCTRL_I2S0_TX_DAT_DS0_OFFSET  0xc
#define PADCTRL_I2S0_TX_DAT_DS0_MASK  0x1000
#define PADCTRL_I2S0_TX_DAT_DS0  0x1000
#define PADCTRL_I2S0_TX_DAT_SR_OFFSET  0xb
#define PADCTRL_I2S0_TX_DAT_SR_MASK  0x800
#define PADCTRL_I2S0_TX_DAT_SR  0x800
#define PADCTRL_I2S0_TX_DAT_PS_OFFSET  0x8
#define PADCTRL_I2S0_TX_DAT_PS_MASK  0x100
#define PADCTRL_I2S0_TX_DAT_PS  0x100
#define PADCTRL_I2S0_TX_DAT_PE_OFFSET  0x7
#define PADCTRL_I2S0_TX_DAT_PE_MASK  0x80
#define PADCTRL_I2S0_TX_DAT_PE  0x80
#define PADCTRL_I2S0_TX_DAT_IS_OFFSET  0x5
#define PADCTRL_I2S0_TX_DAT_IS_MASK  0x20
#define PADCTRL_I2S0_TX_DAT_IS  0x20
#define PADCTRL_I2S0_TX_DAT_IE_OFFSET  0x3
#define PADCTRL_I2S0_TX_DAT_IE_MASK  0x8
#define PADCTRL_I2S0_TX_DAT_IE  0x8
#define PADCTRL_I2S0_TX_DAT_OE_OFFSET  0x2
#define PADCTRL_I2S0_TX_DAT_OE_MASK  0x4
#define PADCTRL_I2S0_TX_DAT_OE  0x4
#define PADCTRL_I2S0_TX_DAT_A_OFFSET  0x1
#define PADCTRL_I2S0_TX_DAT_A_MASK  0x2
#define PADCTRL_I2S0_TX_DAT_A  0x2
#define PADCTRL_I2S0_RX_DAT_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_I2S0_RX_DAT_MANUAL_MODE_MASK  0x4000
#define PADCTRL_I2S0_RX_DAT_MANUAL_MODE  0x4000
#define PADCTRL_I2S0_RX_DAT_DS1_OFFSET  0xd
#define PADCTRL_I2S0_RX_DAT_DS1_MASK  0x2000
#define PADCTRL_I2S0_RX_DAT_DS1  0x2000
#define PADCTRL_I2S0_RX_DAT_DS0_OFFSET  0xc
#define PADCTRL_I2S0_RX_DAT_DS0_MASK  0x1000
#define PADCTRL_I2S0_RX_DAT_DS0  0x1000
#define PADCTRL_I2S0_RX_DAT_SR_OFFSET  0xb
#define PADCTRL_I2S0_RX_DAT_SR_MASK  0x800
#define PADCTRL_I2S0_RX_DAT_SR  0x800
#define PADCTRL_I2S0_RX_DAT_PS_OFFSET  0x8
#define PADCTRL_I2S0_RX_DAT_PS_MASK  0x100
#define PADCTRL_I2S0_RX_DAT_PS  0x100
#define PADCTRL_I2S0_RX_DAT_PE_OFFSET  0x7
#define PADCTRL_I2S0_RX_DAT_PE_MASK  0x80
#define PADCTRL_I2S0_RX_DAT_PE  0x80
#define PADCTRL_I2S0_RX_DAT_IS_OFFSET  0x5
#define PADCTRL_I2S0_RX_DAT_IS_MASK  0x20
#define PADCTRL_I2S0_RX_DAT_IS  0x20
#define PADCTRL_I2S0_RX_DAT_IE_OFFSET  0x3
#define PADCTRL_I2S0_RX_DAT_IE_MASK  0x8
#define PADCTRL_I2S0_RX_DAT_IE  0x8
#define PADCTRL_I2S0_RX_DAT_OE_OFFSET  0x2
#define PADCTRL_I2S0_RX_DAT_OE_MASK  0x4
#define PADCTRL_I2S0_RX_DAT_OE  0x4
#define PADCTRL_I2S0_RX_DAT_A_OFFSET  0x1
#define PADCTRL_I2S0_RX_DAT_A_MASK  0x2
#define PADCTRL_I2S0_RX_DAT_A  0x2
#define PADCTRL_QSPI_CSN_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_QSPI_CSN_MANUAL_MODE_MASK  0x4000
#define PADCTRL_QSPI_CSN_MANUAL_MODE  0x4000
#define PADCTRL_QSPI_CSN_DS1_OFFSET  0xd
#define PADCTRL_QSPI_CSN_DS1_MASK  0x2000
#define PADCTRL_QSPI_CSN_DS1  0x2000
#define PADCTRL_QSPI_CSN_DS0_OFFSET  0xc
#define PADCTRL_QSPI_CSN_DS0_MASK  0x1000
#define PADCTRL_QSPI_CSN_DS0  0x1000
#define PADCTRL_QSPI_CSN_SR_OFFSET  0xb
#define PADCTRL_QSPI_CSN_SR_MASK  0x800
#define PADCTRL_QSPI_CSN_SR  0x800
#define PADCTRL_QSPI_CSN_PS_OFFSET  0x8
#define PADCTRL_QSPI_CSN_PS_MASK  0x100
#define PADCTRL_QSPI_CSN_PS  0x100
#define PADCTRL_QSPI_CSN_PE_OFFSET  0x7
#define PADCTRL_QSPI_CSN_PE_MASK  0x80
#define PADCTRL_QSPI_CSN_PE  0x80
#define PADCTRL_QSPI_CSN_IS_OFFSET  0x5
#define PADCTRL_QSPI_CSN_IS_MASK  0x20
#define PADCTRL_QSPI_CSN_IS  0x20
#define PADCTRL_QSPI_CSN_IE_OFFSET  0x3
#define PADCTRL_QSPI_CSN_IE_MASK  0x8
#define PADCTRL_QSPI_CSN_IE  0x8
#define PADCTRL_QSPI_CSN_OE_OFFSET  0x2
#define PADCTRL_QSPI_CSN_OE_MASK  0x4
#define PADCTRL_QSPI_CSN_OE  0x4
#define PADCTRL_QSPI_CSN_A_OFFSET  0x1
#define PADCTRL_QSPI_CSN_A_MASK  0x2
#define PADCTRL_QSPI_CSN_A  0x2
#define PADCTRL_QSPI_CLK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_QSPI_CLK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_QSPI_CLK_MANUAL_MODE  0x4000
#define PADCTRL_QSPI_CLK_DS1_OFFSET  0xd
#define PADCTRL_QSPI_CLK_DS1_MASK  0x2000
#define PADCTRL_QSPI_CLK_DS1  0x2000
#define PADCTRL_QSPI_CLK_DS0_OFFSET  0xc
#define PADCTRL_QSPI_CLK_DS0_MASK  0x1000
#define PADCTRL_QSPI_CLK_DS0  0x1000
#define PADCTRL_QSPI_CLK_SR_OFFSET  0xb
#define PADCTRL_QSPI_CLK_SR_MASK  0x800
#define PADCTRL_QSPI_CLK_SR  0x800
#define PADCTRL_QSPI_CLK_PS_OFFSET  0x8
#define PADCTRL_QSPI_CLK_PS_MASK  0x100
#define PADCTRL_QSPI_CLK_PS  0x100
#define PADCTRL_QSPI_CLK_PE_OFFSET  0x7
#define PADCTRL_QSPI_CLK_PE_MASK  0x80
#define PADCTRL_QSPI_CLK_PE  0x80
#define PADCTRL_QSPI_CLK_IS_OFFSET  0x5
#define PADCTRL_QSPI_CLK_IS_MASK  0x20
#define PADCTRL_QSPI_CLK_IS  0x20
#define PADCTRL_QSPI_CLK_IE_OFFSET  0x3
#define PADCTRL_QSPI_CLK_IE_MASK  0x8
#define PADCTRL_QSPI_CLK_IE  0x8
#define PADCTRL_QSPI_CLK_OE_OFFSET  0x2
#define PADCTRL_QSPI_CLK_OE_MASK  0x4
#define PADCTRL_QSPI_CLK_OE  0x4
#define PADCTRL_QSPI_CLK_A_OFFSET  0x1
#define PADCTRL_QSPI_CLK_A_MASK  0x2
#define PADCTRL_QSPI_CLK_A  0x2
#define PADCTRL_QSPI_D0_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_QSPI_D0_MANUAL_MODE_MASK  0x4000
#define PADCTRL_QSPI_D0_MANUAL_MODE  0x4000
#define PADCTRL_QSPI_D0_DS1_OFFSET  0xd
#define PADCTRL_QSPI_D0_DS1_MASK  0x2000
#define PADCTRL_QSPI_D0_DS1  0x2000
#define PADCTRL_QSPI_D0_DS0_OFFSET  0xc
#define PADCTRL_QSPI_D0_DS0_MASK  0x1000
#define PADCTRL_QSPI_D0_DS0  0x1000
#define PADCTRL_QSPI_D0_SR_OFFSET  0xb
#define PADCTRL_QSPI_D0_SR_MASK  0x800
#define PADCTRL_QSPI_D0_SR  0x800
#define PADCTRL_QSPI_D0_PS_OFFSET  0x8
#define PADCTRL_QSPI_D0_PS_MASK  0x100
#define PADCTRL_QSPI_D0_PS  0x100
#define PADCTRL_QSPI_D0_PE_OFFSET  0x7
#define PADCTRL_QSPI_D0_PE_MASK  0x80
#define PADCTRL_QSPI_D0_PE  0x80
#define PADCTRL_QSPI_D0_IS_OFFSET  0x5
#define PADCTRL_QSPI_D0_IS_MASK  0x20
#define PADCTRL_QSPI_D0_IS  0x20
#define PADCTRL_QSPI_D0_IE_OFFSET  0x3
#define PADCTRL_QSPI_D0_IE_MASK  0x8
#define PADCTRL_QSPI_D0_IE  0x8
#define PADCTRL_QSPI_D0_OE_OFFSET  0x2
#define PADCTRL_QSPI_D0_OE_MASK  0x4
#define PADCTRL_QSPI_D0_OE  0x4
#define PADCTRL_QSPI_D0_A_OFFSET  0x1
#define PADCTRL_QSPI_D0_A_MASK  0x2
#define PADCTRL_QSPI_D0_A  0x2
#define PADCTRL_QSPI_D1_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_QSPI_D1_MANUAL_MODE_MASK  0x4000
#define PADCTRL_QSPI_D1_MANUAL_MODE  0x4000
#define PADCTRL_QSPI_D1_DS1_OFFSET  0xd
#define PADCTRL_QSPI_D1_DS1_MASK  0x2000
#define PADCTRL_QSPI_D1_DS1  0x2000
#define PADCTRL_QSPI_D1_DS0_OFFSET  0xc
#define PADCTRL_QSPI_D1_DS0_MASK  0x1000
#define PADCTRL_QSPI_D1_DS0  0x1000
#define PADCTRL_QSPI_D1_SR_OFFSET  0xb
#define PADCTRL_QSPI_D1_SR_MASK  0x800
#define PADCTRL_QSPI_D1_SR  0x800
#define PADCTRL_QSPI_D1_PS_OFFSET  0x8
#define PADCTRL_QSPI_D1_PS_MASK  0x100
#define PADCTRL_QSPI_D1_PS  0x100
#define PADCTRL_QSPI_D1_PE_OFFSET  0x7
#define PADCTRL_QSPI_D1_PE_MASK  0x80
#define PADCTRL_QSPI_D1_PE  0x80
#define PADCTRL_QSPI_D1_IS_OFFSET  0x5
#define PADCTRL_QSPI_D1_IS_MASK  0x20
#define PADCTRL_QSPI_D1_IS  0x20
#define PADCTRL_QSPI_D1_IE_OFFSET  0x3
#define PADCTRL_QSPI_D1_IE_MASK  0x8
#define PADCTRL_QSPI_D1_IE  0x8
#define PADCTRL_QSPI_D1_OE_OFFSET  0x2
#define PADCTRL_QSPI_D1_OE_MASK  0x4
#define PADCTRL_QSPI_D1_OE  0x4
#define PADCTRL_QSPI_D1_A_OFFSET  0x1
#define PADCTRL_QSPI_D1_A_MASK  0x2
#define PADCTRL_QSPI_D1_A  0x2
#define PADCTRL_QSPI_D2_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_QSPI_D2_MANUAL_MODE_MASK  0x4000
#define PADCTRL_QSPI_D2_MANUAL_MODE  0x4000
#define PADCTRL_QSPI_D2_DS1_OFFSET  0xd
#define PADCTRL_QSPI_D2_DS1_MASK  0x2000
#define PADCTRL_QSPI_D2_DS1  0x2000
#define PADCTRL_QSPI_D2_DS0_OFFSET  0xc
#define PADCTRL_QSPI_D2_DS0_MASK  0x1000
#define PADCTRL_QSPI_D2_DS0  0x1000
#define PADCTRL_QSPI_D2_SR_OFFSET  0xb
#define PADCTRL_QSPI_D2_SR_MASK  0x800
#define PADCTRL_QSPI_D2_SR  0x800
#define PADCTRL_QSPI_D2_PS_OFFSET  0x8
#define PADCTRL_QSPI_D2_PS_MASK  0x100
#define PADCTRL_QSPI_D2_PS  0x100
#define PADCTRL_QSPI_D2_PE_OFFSET  0x7
#define PADCTRL_QSPI_D2_PE_MASK  0x80
#define PADCTRL_QSPI_D2_PE  0x80
#define PADCTRL_QSPI_D2_IS_OFFSET  0x5
#define PADCTRL_QSPI_D2_IS_MASK  0x20
#define PADCTRL_QSPI_D2_IS  0x20
#define PADCTRL_QSPI_D2_IE_OFFSET  0x3
#define PADCTRL_QSPI_D2_IE_MASK  0x8
#define PADCTRL_QSPI_D2_IE  0x8
#define PADCTRL_QSPI_D2_OE_OFFSET  0x2
#define PADCTRL_QSPI_D2_OE_MASK  0x4
#define PADCTRL_QSPI_D2_OE  0x4
#define PADCTRL_QSPI_D2_A_OFFSET  0x1
#define PADCTRL_QSPI_D2_A_MASK  0x2
#define PADCTRL_QSPI_D2_A  0x2
#define PADCTRL_QSPI_D3_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_QSPI_D3_MANUAL_MODE_MASK  0x4000
#define PADCTRL_QSPI_D3_MANUAL_MODE  0x4000
#define PADCTRL_QSPI_D3_DS1_OFFSET  0xd
#define PADCTRL_QSPI_D3_DS1_MASK  0x2000
#define PADCTRL_QSPI_D3_DS1  0x2000
#define PADCTRL_QSPI_D3_DS0_OFFSET  0xc
#define PADCTRL_QSPI_D3_DS0_MASK  0x1000
#define PADCTRL_QSPI_D3_DS0  0x1000
#define PADCTRL_QSPI_D3_SR_OFFSET  0xb
#define PADCTRL_QSPI_D3_SR_MASK  0x800
#define PADCTRL_QSPI_D3_SR  0x800
#define PADCTRL_QSPI_D3_PS_OFFSET  0x8
#define PADCTRL_QSPI_D3_PS_MASK  0x100
#define PADCTRL_QSPI_D3_PS  0x100
#define PADCTRL_QSPI_D3_PE_OFFSET  0x7
#define PADCTRL_QSPI_D3_PE_MASK  0x80
#define PADCTRL_QSPI_D3_PE  0x80
#define PADCTRL_QSPI_D3_IS_OFFSET  0x5
#define PADCTRL_QSPI_D3_IS_MASK  0x20
#define PADCTRL_QSPI_D3_IS  0x20
#define PADCTRL_QSPI_D3_IE_OFFSET  0x3
#define PADCTRL_QSPI_D3_IE_MASK  0x8
#define PADCTRL_QSPI_D3_IE  0x8
#define PADCTRL_QSPI_D3_OE_OFFSET  0x2
#define PADCTRL_QSPI_D3_OE_MASK  0x4
#define PADCTRL_QSPI_D3_OE  0x4
#define PADCTRL_QSPI_D3_A_OFFSET  0x1
#define PADCTRL_QSPI_D3_A_MASK  0x2
#define PADCTRL_QSPI_D3_A  0x2
#define JTAG_CTRL_JTAG_CTRL_OFFSET  0x0
#define JTAG_CTRL_JTAG_CTRL_MASK  0x7
#define JTAG_CTRL_JTAG_CTRL  0x7
#define PADCTRL_DMIC0_CLK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_DMIC0_CLK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_DMIC0_CLK_MANUAL_MODE  0x4000
#define PADCTRL_DMIC0_CLK_DS1_OFFSET  0xd
#define PADCTRL_DMIC0_CLK_DS1_MASK  0x2000
#define PADCTRL_DMIC0_CLK_DS1  0x2000
#define PADCTRL_DMIC0_CLK_DS0_OFFSET  0xc
#define PADCTRL_DMIC0_CLK_DS0_MASK  0x1000
#define PADCTRL_DMIC0_CLK_DS0  0x1000
#define PADCTRL_DMIC0_CLK_SR_OFFSET  0xb
#define PADCTRL_DMIC0_CLK_SR_MASK  0x800
#define PADCTRL_DMIC0_CLK_SR  0x800
#define PADCTRL_DMIC0_CLK_IOMUXSEL_OFFSET  0x9
#define PADCTRL_DMIC0_CLK_IOMUXSEL_MASK  0x200
#define PADCTRL_DMIC0_CLK_IOMUXSEL  0x200
#define PADCTRL_DMIC0_CLK_PS_OFFSET  0x8
#define PADCTRL_DMIC0_CLK_PS_MASK  0x100
#define PADCTRL_DMIC0_CLK_PS  0x100
#define PADCTRL_DMIC0_CLK_PE_OFFSET  0x7
#define PADCTRL_DMIC0_CLK_PE_MASK  0x80
#define PADCTRL_DMIC0_CLK_PE  0x80
#define PADCTRL_DMIC0_CLK_IS_OFFSET  0x5
#define PADCTRL_DMIC0_CLK_IS_MASK  0x20
#define PADCTRL_DMIC0_CLK_IS  0x20
#define PADCTRL_DMIC0_CLK_IE_OFFSET  0x3
#define PADCTRL_DMIC0_CLK_IE_MASK  0x8
#define PADCTRL_DMIC0_CLK_IE  0x8
#define PADCTRL_DMIC0_CLK_OE_OFFSET  0x2
#define PADCTRL_DMIC0_CLK_OE_MASK  0x4
#define PADCTRL_DMIC0_CLK_OE  0x4
#define PADCTRL_DMIC0_CLK_A_OFFSET  0x1
#define PADCTRL_DMIC0_CLK_A_MASK  0x2
#define PADCTRL_DMIC0_CLK_A  0x2
#define PADCTRL_DMIC1_CLK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_DMIC1_CLK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_DMIC1_CLK_MANUAL_MODE  0x4000
#define PADCTRL_DMIC1_CLK_DS1_OFFSET  0xd
#define PADCTRL_DMIC1_CLK_DS1_MASK  0x2000
#define PADCTRL_DMIC1_CLK_DS1  0x2000
#define PADCTRL_DMIC1_CLK_DS0_OFFSET  0xc
#define PADCTRL_DMIC1_CLK_DS0_MASK  0x1000
#define PADCTRL_DMIC1_CLK_DS0  0x1000
#define PADCTRL_DMIC1_CLK_SR_OFFSET  0xb
#define PADCTRL_DMIC1_CLK_SR_MASK  0x800
#define PADCTRL_DMIC1_CLK_SR  0x800
#define PADCTRL_DMIC1_CLK_IOMUXSEL_OFFSET  0x9
#define PADCTRL_DMIC1_CLK_IOMUXSEL_MASK  0x200
#define PADCTRL_DMIC1_CLK_IOMUXSEL  0x200
#define PADCTRL_DMIC1_CLK_PS_OFFSET  0x8
#define PADCTRL_DMIC1_CLK_PS_MASK  0x100
#define PADCTRL_DMIC1_CLK_PS  0x100
#define PADCTRL_DMIC1_CLK_PE_OFFSET  0x7
#define PADCTRL_DMIC1_CLK_PE_MASK  0x80
#define PADCTRL_DMIC1_CLK_PE  0x80
#define PADCTRL_DMIC1_CLK_IS_OFFSET  0x5
#define PADCTRL_DMIC1_CLK_IS_MASK  0x20
#define PADCTRL_DMIC1_CLK_IS  0x20
#define PADCTRL_DMIC1_CLK_IE_OFFSET  0x3
#define PADCTRL_DMIC1_CLK_IE_MASK  0x8
#define PADCTRL_DMIC1_CLK_IE  0x8
#define PADCTRL_DMIC1_CLK_OE_OFFSET  0x2
#define PADCTRL_DMIC1_CLK_OE_MASK  0x4
#define PADCTRL_DMIC1_CLK_OE  0x4
#define PADCTRL_DMIC1_CLK_A_OFFSET  0x1
#define PADCTRL_DMIC1_CLK_A_MASK  0x2
#define PADCTRL_DMIC1_CLK_A  0x2
#define PADCTRL_DMIC2_CLK_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_DMIC2_CLK_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_DMIC2_CLK_IO_MUX_SEL1  0x8000
#define PADCTRL_DMIC2_CLK_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_DMIC2_CLK_MANUAL_MODE_MASK  0x4000
#define PADCTRL_DMIC2_CLK_MANUAL_MODE  0x4000
#define PADCTRL_DMIC2_CLK_DS1_OFFSET  0xd
#define PADCTRL_DMIC2_CLK_DS1_MASK  0x2000
#define PADCTRL_DMIC2_CLK_DS1  0x2000
#define PADCTRL_DMIC2_CLK_DS0_OFFSET  0xc
#define PADCTRL_DMIC2_CLK_DS0_MASK  0x1000
#define PADCTRL_DMIC2_CLK_DS0  0x1000
#define PADCTRL_DMIC2_CLK_SR_OFFSET  0xb
#define PADCTRL_DMIC2_CLK_SR_MASK  0x800
#define PADCTRL_DMIC2_CLK_SR  0x800
#define PADCTRL_DMIC2_CLK_IOMUXSEL_OFFSET  0x9
#define PADCTRL_DMIC2_CLK_IOMUXSEL_MASK  0x200
#define PADCTRL_DMIC2_CLK_IOMUXSEL  0x200
#define PADCTRL_DMIC2_CLK_PS_OFFSET  0x8
#define PADCTRL_DMIC2_CLK_PS_MASK  0x100
#define PADCTRL_DMIC2_CLK_PS  0x100
#define PADCTRL_DMIC2_CLK_PE_OFFSET  0x7
#define PADCTRL_DMIC2_CLK_PE_MASK  0x80
#define PADCTRL_DMIC2_CLK_PE  0x80
#define PADCTRL_DMIC2_CLK_IS_OFFSET  0x5
#define PADCTRL_DMIC2_CLK_IS_MASK  0x20
#define PADCTRL_DMIC2_CLK_IS  0x20
#define PADCTRL_DMIC2_CLK_IE_OFFSET  0x3
#define PADCTRL_DMIC2_CLK_IE_MASK  0x8
#define PADCTRL_DMIC2_CLK_IE  0x8
#define PADCTRL_DMIC2_CLK_OE_OFFSET  0x2
#define PADCTRL_DMIC2_CLK_OE_MASK  0x4
#define PADCTRL_DMIC2_CLK_OE  0x4
#define PADCTRL_DMIC2_CLK_A_OFFSET  0x1
#define PADCTRL_DMIC2_CLK_A_MASK  0x2
#define PADCTRL_DMIC2_CLK_A  0x2
#define PADCTRL_MIC0P_IOMUXSEL_OFFSET  0x9
#define PADCTRL_MIC0P_IOMUXSEL_MASK  0x600
#define PADCTRL_MIC0P_IOMUXSEL  0x600
#define PADCTRL_MIC0P_PS_OFFSET  0x8
#define PADCTRL_MIC0P_PS_MASK  0x100
#define PADCTRL_MIC0P_PS  0x100
#define PADCTRL_MIC0P_PE_OFFSET  0x7
#define PADCTRL_MIC0P_PE_MASK  0x80
#define PADCTRL_MIC0P_PE  0x80
#define PADCTRL_MIC0P_IS_OFFSET  0x5
#define PADCTRL_MIC0P_IS_MASK  0x20
#define PADCTRL_MIC0P_IS  0x20
#define PADCTRL_MIC0P_IE_OFFSET  0x3
#define PADCTRL_MIC0P_IE_MASK  0x8
#define PADCTRL_MIC0P_IE  0x8
#define PADCTRL_MIC0N_IOMUXSEL_OFFSET  0x9
#define PADCTRL_MIC0N_IOMUXSEL_MASK  0x600
#define PADCTRL_MIC0N_IOMUXSEL  0x600
#define PADCTRL_MIC0N_PS_OFFSET  0x8
#define PADCTRL_MIC0N_PS_MASK  0x100
#define PADCTRL_MIC0N_PS  0x100
#define PADCTRL_MIC0N_PE_OFFSET  0x7
#define PADCTRL_MIC0N_PE_MASK  0x80
#define PADCTRL_MIC0N_PE  0x80
#define PADCTRL_MIC0N_IS_OFFSET  0x5
#define PADCTRL_MIC0N_IS_MASK  0x20
#define PADCTRL_MIC0N_IS  0x20
#define PADCTRL_MIC0N_IE_OFFSET  0x3
#define PADCTRL_MIC0N_IE_MASK  0x8
#define PADCTRL_MIC0N_IE  0x8
#define PADCTRL_MIC1P_IOMUXSEL_OFFSET  0x9
#define PADCTRL_MIC1P_IOMUXSEL_MASK  0x600
#define PADCTRL_MIC1P_IOMUXSEL  0x600
#define PADCTRL_MIC1P_PS_OFFSET  0x8
#define PADCTRL_MIC1P_PS_MASK  0x100
#define PADCTRL_MIC1P_PS  0x100
#define PADCTRL_MIC1P_PE_OFFSET  0x7
#define PADCTRL_MIC1P_PE_MASK  0x80
#define PADCTRL_MIC1P_PE  0x80
#define PADCTRL_MIC1P_IS_OFFSET  0x5
#define PADCTRL_MIC1P_IS_MASK  0x20
#define PADCTRL_MIC1P_IS  0x20
#define PADCTRL_MIC1P_IE_OFFSET  0x3
#define PADCTRL_MIC1P_IE_MASK  0x8
#define PADCTRL_MIC1P_IE  0x8
#define PADCTRL_MIC1N_IO_MUX_SEL1_OFFSET  0xa
#define PADCTRL_MIC1N_IO_MUX_SEL1_MASK  0x400
#define PADCTRL_MIC1N_IO_MUX_SEL1  0x400
#define PADCTRL_MIC1N_IOMUXSEL_OFFSET  0x9
#define PADCTRL_MIC1N_IOMUXSEL_MASK  0x200
#define PADCTRL_MIC1N_IOMUXSEL  0x200
#define PADCTRL_MIC1N_PS_OFFSET  0x8
#define PADCTRL_MIC1N_PS_MASK  0x100
#define PADCTRL_MIC1N_PS  0x100
#define PADCTRL_MIC1N_PE_OFFSET  0x7
#define PADCTRL_MIC1N_PE_MASK  0x80
#define PADCTRL_MIC1N_PE  0x80
#define PADCTRL_MIC1N_IS_OFFSET  0x5
#define PADCTRL_MIC1N_IS_MASK  0x20
#define PADCTRL_MIC1N_IS  0x20
#define PADCTRL_MIC1N_IE_OFFSET  0x3
#define PADCTRL_MIC1N_IE_MASK  0x8
#define PADCTRL_MIC1N_IE  0x8
#define PADCTRL_TEMP_SNS_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_TEMP_SNS_MANUAL_MODE_MASK  0x4000
#define PADCTRL_TEMP_SNS_MANUAL_MODE  0x4000
#define PADCTRL_TEMP_SNS_DS1_OFFSET  0xd
#define PADCTRL_TEMP_SNS_DS1_MASK  0x2000
#define PADCTRL_TEMP_SNS_DS1  0x2000
#define PADCTRL_TEMP_SNS_DS0_OFFSET  0xc
#define PADCTRL_TEMP_SNS_DS0_MASK  0x1000
#define PADCTRL_TEMP_SNS_DS0  0x1000
#define PADCTRL_TEMP_SNS_SR_OFFSET  0xb
#define PADCTRL_TEMP_SNS_SR_MASK  0x800
#define PADCTRL_TEMP_SNS_SR  0x800
#define PADCTRL_TEMP_SNS_IOMUXSEL_OFFSET  0x9
#define PADCTRL_TEMP_SNS_IOMUXSEL_MASK  0x200
#define PADCTRL_TEMP_SNS_IOMUXSEL  0x200
#define PADCTRL_TEMP_SNS_PS_OFFSET  0x8
#define PADCTRL_TEMP_SNS_PS_MASK  0x100
#define PADCTRL_TEMP_SNS_PS  0x100
#define PADCTRL_TEMP_SNS_PE_OFFSET  0x7
#define PADCTRL_TEMP_SNS_PE_MASK  0x80
#define PADCTRL_TEMP_SNS_PE  0x80
#define PADCTRL_TEMP_SNS_IS_OFFSET  0x5
#define PADCTRL_TEMP_SNS_IS_MASK  0x20
#define PADCTRL_TEMP_SNS_IS  0x20
#define PADCTRL_TEMP_SNS_IE_OFFSET  0x3
#define PADCTRL_TEMP_SNS_IE_MASK  0x8
#define PADCTRL_TEMP_SNS_IE  0x8
#define PADCTRL_TEMP_SNS_OE_OFFSET  0x2
#define PADCTRL_TEMP_SNS_OE_MASK  0x4
#define PADCTRL_TEMP_SNS_OE  0x4
#define PADCTRL_TEMP_SNS_A_OFFSET  0x1
#define PADCTRL_TEMP_SNS_A_MASK  0x2
#define PADCTRL_TEMP_SNS_A  0x2
#define PADCTRL_MB_SNS_IO_MUX_SEL1_OFFSET  0xf
#define PADCTRL_MB_SNS_IO_MUX_SEL1_MASK  0x8000
#define PADCTRL_MB_SNS_IO_MUX_SEL1  0x8000
#define PADCTRL_MB_SNS_MANUAL_MODE_OFFSET  0xe
#define PADCTRL_MB_SNS_MANUAL_MODE_MASK  0x4000
#define PADCTRL_MB_SNS_MANUAL_MODE  0x4000
#define PADCTRL_MB_SNS_DS1_OFFSET  0xd
#define PADCTRL_MB_SNS_DS1_MASK  0x2000
#define PADCTRL_MB_SNS_DS1  0x2000
#define PADCTRL_MB_SNS_DS0_OFFSET  0xc
#define PADCTRL_MB_SNS_DS0_MASK  0x1000
#define PADCTRL_MB_SNS_DS0  0x1000
#define PADCTRL_MB_SNS_SR_OFFSET  0xb
#define PADCTRL_MB_SNS_SR_MASK  0x800
#define PADCTRL_MB_SNS_SR  0x800
#define PADCTRL_MB_SNS_IOMUXSEL_OFFSET  0x9
#define PADCTRL_MB_SNS_IOMUXSEL_MASK  0x200
#define PADCTRL_MB_SNS_IOMUXSEL  0x200
#define PADCTRL_MB_SNS_PS_OFFSET  0x8
#define PADCTRL_MB_SNS_PS_MASK  0x100
#define PADCTRL_MB_SNS_PS  0x100
#define PADCTRL_MB_SNS_PE_OFFSET  0x7
#define PADCTRL_MB_SNS_PE_MASK  0x80
#define PADCTRL_MB_SNS_PE  0x80
#define PADCTRL_MB_SNS_IS_OFFSET  0x5
#define PADCTRL_MB_SNS_IS_MASK  0x20
#define PADCTRL_MB_SNS_IS  0x20
#define PADCTRL_MB_SNS_IE_OFFSET  0x3
#define PADCTRL_MB_SNS_IE_MASK  0x8
#define PADCTRL_MB_SNS_IE  0x8
#define PADCTRL_MB_SNS_OE_OFFSET  0x2
#define PADCTRL_MB_SNS_OE_MASK  0x4
#define PADCTRL_MB_SNS_OE  0x4
#define PADCTRL_MB_SNS_A_OFFSET  0x1
#define PADCTRL_MB_SNS_A_MASK  0x2
#define PADCTRL_MB_SNS_A  0x2
#define GPTEST_MODE_CTRL_ELINK_RX_MODE_OFFSET  0x13
#define GPTEST_MODE_CTRL_ELINK_RX_MODE_MASK  0x80000
#define GPTEST_MODE_CTRL_ELINK_RX_MODE  0x80000
#define GPTEST_MODE_CTRL_CLK_OBSERVE_MODE_OFFSET  0x12
#define GPTEST_MODE_CTRL_CLK_OBSERVE_MODE_MASK  0x40000
#define GPTEST_MODE_CTRL_CLK_OBSERVE_MODE  0x40000
#define GPTEST_MODE_CTRL_TX_TOP_MODE_OFFSET  0x11
#define GPTEST_MODE_CTRL_TX_TOP_MODE_MASK  0x20000
#define GPTEST_MODE_CTRL_TX_TOP_MODE  0x20000
#define GPTEST_MODE_CTRL_POWER_TOP_MODE_OFFSET  0x10
#define GPTEST_MODE_CTRL_POWER_TOP_MODE_MASK  0x10000
#define GPTEST_MODE_CTRL_POWER_TOP_MODE  0x10000
#define GPTEST_MODE_CTRL_RX_TOP_MODE_OFFSET  0xf
#define GPTEST_MODE_CTRL_RX_TOP_MODE_MASK  0x8000
#define GPTEST_MODE_CTRL_RX_TOP_MODE  0x8000
#define GPTEST_MODE_CTRL_ELINK_TX_MODE_OFFSET  0xe
#define GPTEST_MODE_CTRL_ELINK_TX_MODE_MASK  0x4000
#define GPTEST_MODE_CTRL_ELINK_TX_MODE  0x4000
#define GPTEST_MODE_CTRL_ELINK_TOP_MODE_OFFSET  0xd
#define GPTEST_MODE_CTRL_ELINK_TOP_MODE_MASK  0x2000
#define GPTEST_MODE_CTRL_ELINK_TOP_MODE  0x2000
#define GPTEST_MODE_CTRL_RCOSC_CAL_MODE_OFFSET  0xc
#define GPTEST_MODE_CTRL_RCOSC_CAL_MODE_MASK  0x1000
#define GPTEST_MODE_CTRL_RCOSC_CAL_MODE  0x1000
#define GPTEST_MODE_CTRL_STD_RCOSC_MODE_OFFSET  0xb
#define GPTEST_MODE_CTRL_STD_RCOSC_MODE_MASK  0x800
#define GPTEST_MODE_CTRL_STD_RCOSC_MODE  0x800
#define GPTEST_MODE_CTRL_LP_RCOSC_MODE_OFFSET  0xa
#define GPTEST_MODE_CTRL_LP_RCOSC_MODE_MASK  0x400
#define GPTEST_MODE_CTRL_LP_RCOSC_MODE  0x400
#define GPTEST_MODE_CTRL_DAC_INJECT_R_MODE_OFFSET  0x9
#define GPTEST_MODE_CTRL_DAC_INJECT_R_MODE_MASK  0x200
#define GPTEST_MODE_CTRL_DAC_INJECT_R_MODE  0x200
#define GPTEST_MODE_CTRL_DAC_INJECT_L_MODE_OFFSET  0x8
#define GPTEST_MODE_CTRL_DAC_INJECT_L_MODE_MASK  0x100
#define GPTEST_MODE_CTRL_DAC_INJECT_L_MODE  0x100
#define GPTEST_MODE_CTRL_TESTBUS_MODE_OFFSET  0x7
#define GPTEST_MODE_CTRL_TESTBUS_MODE_MASK  0x80
#define GPTEST_MODE_CTRL_TESTBUS_MODE  0x80
#define GPTEST_MODE_CTRL_TESTBUS_SEL_OFFSET  0x4
#define GPTEST_MODE_CTRL_TESTBUS_SEL_MASK  0x70
#define GPTEST_MODE_CTRL_TESTBUS_SEL  0x70
#define GPTEST_MODE_CTRL_ADC_OBSERVE_MODE_OFFSET  0x3
#define GPTEST_MODE_CTRL_ADC_OBSERVE_MODE_MASK  0x8
#define GPTEST_MODE_CTRL_ADC_OBSERVE_MODE  0x8
#define GPTEST_MODE_CTRL_ADC_OBSERVE_SEL_OFFSET  0x0
#define GPTEST_MODE_CTRL_ADC_OBSERVE_SEL_MASK  0x7
#define GPTEST_MODE_CTRL_ADC_OBSERVE_SEL  0x7
#define ADC_CLK_CTRL_O_DMIC_CLK_EN_OFFSET  0x14
#define ADC_CLK_CTRL_O_DMIC_CLK_EN_MASK  0x700000
#define ADC_CLK_CTRL_O_DMIC_CLK_EN  0x700000
#define ADC_CLK_CTRL_O_ANC_CH4_HPF_CLK_EN_OFFSET  0x13
#define ADC_CLK_CTRL_O_ANC_CH4_HPF_CLK_EN_MASK  0x80000
#define ADC_CLK_CTRL_O_ANC_CH4_HPF_CLK_EN  0x80000
#define ADC_CLK_CTRL_O_ADC_CH4_HPF_CLK_EN_OFFSET  0x12
#define ADC_CLK_CTRL_O_ADC_CH4_HPF_CLK_EN_MASK  0x40000
#define ADC_CLK_CTRL_O_ADC_CH4_HPF_CLK_EN  0x40000
#define ADC_CLK_CTRL_O_ANC_CH4_CLK_EN_OFFSET  0x11
#define ADC_CLK_CTRL_O_ANC_CH4_CLK_EN_MASK  0x20000
#define ADC_CLK_CTRL_O_ANC_CH4_CLK_EN  0x20000
#define ADC_CLK_CTRL_O_ADC_CH4_CLK_EN_OFFSET  0x10
#define ADC_CLK_CTRL_O_ADC_CH4_CLK_EN_MASK  0x10000
#define ADC_CLK_CTRL_O_ADC_CH4_CLK_EN  0x10000
#define ADC_CLK_CTRL_O_ANC_CH3_HPF_CLK_EN_OFFSET  0xf
#define ADC_CLK_CTRL_O_ANC_CH3_HPF_CLK_EN_MASK  0x8000
#define ADC_CLK_CTRL_O_ANC_CH3_HPF_CLK_EN  0x8000
#define ADC_CLK_CTRL_O_ADC_CH3_HPF_CLK_EN_OFFSET  0xe
#define ADC_CLK_CTRL_O_ADC_CH3_HPF_CLK_EN_MASK  0x4000
#define ADC_CLK_CTRL_O_ADC_CH3_HPF_CLK_EN  0x4000
#define ADC_CLK_CTRL_O_ANC_CH3_CLK_EN_OFFSET  0xd
#define ADC_CLK_CTRL_O_ANC_CH3_CLK_EN_MASK  0x2000
#define ADC_CLK_CTRL_O_ANC_CH3_CLK_EN  0x2000
#define ADC_CLK_CTRL_O_ADC_CH3_CLK_EN_OFFSET  0xc
#define ADC_CLK_CTRL_O_ADC_CH3_CLK_EN_MASK  0x1000
#define ADC_CLK_CTRL_O_ADC_CH3_CLK_EN  0x1000
#define ADC_CLK_CTRL_O_ANC_CH2_HPF_CLK_EN_OFFSET  0xb
#define ADC_CLK_CTRL_O_ANC_CH2_HPF_CLK_EN_MASK  0x800
#define ADC_CLK_CTRL_O_ANC_CH2_HPF_CLK_EN  0x800
#define ADC_CLK_CTRL_O_ADC_CH2_HPF_CLK_EN_OFFSET  0xa
#define ADC_CLK_CTRL_O_ADC_CH2_HPF_CLK_EN_MASK  0x400
#define ADC_CLK_CTRL_O_ADC_CH2_HPF_CLK_EN  0x400
#define ADC_CLK_CTRL_O_ANC_CH2_CLK_EN_OFFSET  0x9
#define ADC_CLK_CTRL_O_ANC_CH2_CLK_EN_MASK  0x200
#define ADC_CLK_CTRL_O_ANC_CH2_CLK_EN  0x200
#define ADC_CLK_CTRL_O_ADC_CH2_CLK_EN_OFFSET  0x8
#define ADC_CLK_CTRL_O_ADC_CH2_CLK_EN_MASK  0x100
#define ADC_CLK_CTRL_O_ADC_CH2_CLK_EN  0x100
#define ADC_CLK_CTRL_O_ANC_CH1_HPF_CLK_EN_OFFSET  0x7
#define ADC_CLK_CTRL_O_ANC_CH1_HPF_CLK_EN_MASK  0x80
#define ADC_CLK_CTRL_O_ANC_CH1_HPF_CLK_EN  0x80
#define ADC_CLK_CTRL_O_ADC_CH1_HPF_CLK_EN_OFFSET  0x6
#define ADC_CLK_CTRL_O_ADC_CH1_HPF_CLK_EN_MASK  0x40
#define ADC_CLK_CTRL_O_ADC_CH1_HPF_CLK_EN  0x40
#define ADC_CLK_CTRL_O_ANC_CH1_CLK_EN_OFFSET  0x5
#define ADC_CLK_CTRL_O_ANC_CH1_CLK_EN_MASK  0x20
#define ADC_CLK_CTRL_O_ANC_CH1_CLK_EN  0x20
#define ADC_CLK_CTRL_O_ADC_CH1_CLK_EN_OFFSET  0x4
#define ADC_CLK_CTRL_O_ADC_CH1_CLK_EN_MASK  0x10
#define ADC_CLK_CTRL_O_ADC_CH1_CLK_EN  0x10
#define ADC_CLK_CTRL_O_ANC_CH0_HPF_CLK_EN_OFFSET  0x3
#define ADC_CLK_CTRL_O_ANC_CH0_HPF_CLK_EN_MASK  0x8
#define ADC_CLK_CTRL_O_ANC_CH0_HPF_CLK_EN  0x8
#define ADC_CLK_CTRL_O_ADC_CH0_HPF_CLK_EN_OFFSET  0x2
#define ADC_CLK_CTRL_O_ADC_CH0_HPF_CLK_EN_MASK  0x4
#define ADC_CLK_CTRL_O_ADC_CH0_HPF_CLK_EN  0x4
#define ADC_CLK_CTRL_O_ANC_CH0_CLK_EN_OFFSET  0x1
#define ADC_CLK_CTRL_O_ANC_CH0_CLK_EN_MASK  0x2
#define ADC_CLK_CTRL_O_ANC_CH0_CLK_EN  0x2
#define ADC_CLK_CTRL_O_ADC_CH0_CLK_EN_OFFSET  0x0
#define ADC_CLK_CTRL_O_ADC_CH0_CLK_EN_MASK  0x1
#define ADC_CLK_CTRL_O_ADC_CH0_CLK_EN  0x1
#define ADC_RST_CTRL_O_DMIC_SOFT_RST_OFFSET  0x14
#define ADC_RST_CTRL_O_DMIC_SOFT_RST_MASK  0x700000
#define ADC_RST_CTRL_O_DMIC_SOFT_RST  0x700000
#define ADC_RST_CTRL_O_ANC_CH4_HPF_SOFT_RST_OFFSET  0x13
#define ADC_RST_CTRL_O_ANC_CH4_HPF_SOFT_RST_MASK  0x80000
#define ADC_RST_CTRL_O_ANC_CH4_HPF_SOFT_RST  0x80000
#define ADC_RST_CTRL_O_ADC_CH4_HPF_SOFT_RST_OFFSET  0x12
#define ADC_RST_CTRL_O_ADC_CH4_HPF_SOFT_RST_MASK  0x40000
#define ADC_RST_CTRL_O_ADC_CH4_HPF_SOFT_RST  0x40000
#define ADC_RST_CTRL_O_ANC_CH4_SOFT_RST_OFFSET  0x11
#define ADC_RST_CTRL_O_ANC_CH4_SOFT_RST_MASK  0x20000
#define ADC_RST_CTRL_O_ANC_CH4_SOFT_RST  0x20000
#define ADC_RST_CTRL_O_ADC_CH4_SOFT_RST_OFFSET  0x10
#define ADC_RST_CTRL_O_ADC_CH4_SOFT_RST_MASK  0x10000
#define ADC_RST_CTRL_O_ADC_CH4_SOFT_RST  0x10000
#define ADC_RST_CTRL_O_ANC_CH3_HPF_SOFT_RST_OFFSET  0xf
#define ADC_RST_CTRL_O_ANC_CH3_HPF_SOFT_RST_MASK  0x8000
#define ADC_RST_CTRL_O_ANC_CH3_HPF_SOFT_RST  0x8000
#define ADC_RST_CTRL_O_ADC_CH3_HPF_SOFT_RST_OFFSET  0xe
#define ADC_RST_CTRL_O_ADC_CH3_HPF_SOFT_RST_MASK  0x4000
#define ADC_RST_CTRL_O_ADC_CH3_HPF_SOFT_RST  0x4000
#define ADC_RST_CTRL_O_ANC_CH3_SOFT_RST_OFFSET  0xd
#define ADC_RST_CTRL_O_ANC_CH3_SOFT_RST_MASK  0x2000
#define ADC_RST_CTRL_O_ANC_CH3_SOFT_RST  0x2000
#define ADC_RST_CTRL_O_ADC_CH3_SOFT_RST_OFFSET  0xc
#define ADC_RST_CTRL_O_ADC_CH3_SOFT_RST_MASK  0x1000
#define ADC_RST_CTRL_O_ADC_CH3_SOFT_RST  0x1000
#define ADC_RST_CTRL_O_ANC_CH2_HP_SOFT_RST_OFFSET  0xb
#define ADC_RST_CTRL_O_ANC_CH2_HP_SOFT_RST_MASK  0x800
#define ADC_RST_CTRL_O_ANC_CH2_HP_SOFT_RST  0x800
#define ADC_RST_CTRL_O_ADC_CH2_HPF_SOFT_RST_OFFSET  0xa
#define ADC_RST_CTRL_O_ADC_CH2_HPF_SOFT_RST_MASK  0x400
#define ADC_RST_CTRL_O_ADC_CH2_HPF_SOFT_RST  0x400
#define ADC_RST_CTRL_O_ANC_CH2_SOFT_RST_OFFSET  0x9
#define ADC_RST_CTRL_O_ANC_CH2_SOFT_RST_MASK  0x200
#define ADC_RST_CTRL_O_ANC_CH2_SOFT_RST  0x200
#define ADC_RST_CTRL_O_ADC_CH2_SOFT_RST_OFFSET  0x8
#define ADC_RST_CTRL_O_ADC_CH2_SOFT_RST_MASK  0x100
#define ADC_RST_CTRL_O_ADC_CH2_SOFT_RST  0x100
#define ADC_RST_CTRL_O_ANC_CH1_HPF_SOFT_RST_OFFSET  0x7
#define ADC_RST_CTRL_O_ANC_CH1_HPF_SOFT_RST_MASK  0x80
#define ADC_RST_CTRL_O_ANC_CH1_HPF_SOFT_RST  0x80
#define ADC_RST_CTRL_O_ADC_CH1_HPF_SOFT_RST_OFFSET  0x6
#define ADC_RST_CTRL_O_ADC_CH1_HPF_SOFT_RST_MASK  0x40
#define ADC_RST_CTRL_O_ADC_CH1_HPF_SOFT_RST  0x40
#define ADC_RST_CTRL_O_ANC_CH1_SOFT_RST_OFFSET  0x5
#define ADC_RST_CTRL_O_ANC_CH1_SOFT_RST_MASK  0x20
#define ADC_RST_CTRL_O_ANC_CH1_SOFT_RST  0x20
#define ADC_RST_CTRL_O_ADC_CH1_SOFT_RST_OFFSET  0x4
#define ADC_RST_CTRL_O_ADC_CH1_SOFT_RST_MASK  0x10
#define ADC_RST_CTRL_O_ADC_CH1_SOFT_RST  0x10
#define ADC_RST_CTRL_O_ANC_CH0_HPF_SOFT_RST_OFFSET  0x3
#define ADC_RST_CTRL_O_ANC_CH0_HPF_SOFT_RST_MASK  0x8
#define ADC_RST_CTRL_O_ANC_CH0_HPF_SOFT_RST  0x8
#define ADC_RST_CTRL_O_ADC_CH0_HPF_SOFT_RST_OFFSET  0x2
#define ADC_RST_CTRL_O_ADC_CH0_HPF_SOFT_RST_MASK  0x4
#define ADC_RST_CTRL_O_ADC_CH0_HPF_SOFT_RST  0x4
#define ADC_RST_CTRL_O_ANC_CH0_SOFT_RST_OFFSET  0x1
#define ADC_RST_CTRL_O_ANC_CH0_SOFT_RST_MASK  0x2
#define ADC_RST_CTRL_O_ANC_CH0_SOFT_RST  0x2
#define ADC_RST_CTRL_O_ADC_CH0_SOFT_RST_OFFSET  0x0
#define ADC_RST_CTRL_O_ADC_CH0_SOFT_RST_MASK  0x1
#define ADC_RST_CTRL_O_ADC_CH0_SOFT_RST  0x1
#define ADC_CTRL_O_DMIC_EN_OFFSET  0xc
#define ADC_CTRL_O_DMIC_EN_MASK  0x1f000
#define ADC_CTRL_O_DMIC_EN  0x1f000
#define ADC_CTRL_O_ANC_CH4_EN_OFFSET  0x9
#define ADC_CTRL_O_ANC_CH4_EN_MASK  0x200
#define ADC_CTRL_O_ANC_CH4_EN  0x200
#define ADC_CTRL_O_ADC_CH4_EN_OFFSET  0x8
#define ADC_CTRL_O_ADC_CH4_EN_MASK  0x100
#define ADC_CTRL_O_ADC_CH4_EN  0x100
#define ADC_CTRL_O_ANC_CH3_EN_OFFSET  0x7
#define ADC_CTRL_O_ANC_CH3_EN_MASK  0x80
#define ADC_CTRL_O_ANC_CH3_EN  0x80
#define ADC_CTRL_O_ADC_CH3_EN_OFFSET  0x6
#define ADC_CTRL_O_ADC_CH3_EN_MASK  0x40
#define ADC_CTRL_O_ADC_CH3_EN  0x40
#define ADC_CTRL_O_ANC_CH2_EN_OFFSET  0x5
#define ADC_CTRL_O_ANC_CH2_EN_MASK  0x20
#define ADC_CTRL_O_ANC_CH2_EN  0x20
#define ADC_CTRL_O_ADC_CH2_EN_OFFSET  0x4
#define ADC_CTRL_O_ADC_CH2_EN_MASK  0x10
#define ADC_CTRL_O_ADC_CH2_EN  0x10
#define ADC_CTRL_O_ANC_CH1_EN_OFFSET  0x3
#define ADC_CTRL_O_ANC_CH1_EN_MASK  0x8
#define ADC_CTRL_O_ANC_CH1_EN  0x8
#define ADC_CTRL_O_ADC_CH1_EN_OFFSET  0x2
#define ADC_CTRL_O_ADC_CH1_EN_MASK  0x4
#define ADC_CTRL_O_ADC_CH1_EN  0x4
#define ADC_CTRL_O_ANC_CH0_EN_OFFSET  0x1
#define ADC_CTRL_O_ANC_CH0_EN_MASK  0x2
#define ADC_CTRL_O_ANC_CH0_EN  0x2
#define ADC_CTRL_O_ADC_CH0_EN_OFFSET  0x0
#define ADC_CTRL_O_ADC_CH0_EN_MASK  0x1
#define ADC_CTRL_O_ADC_CH0_EN  0x1
#define ADC_CH0_CTRL0_O_ADC_CH0_HP_LP_SEL_OFFSET  0x1b
#define ADC_CH0_CTRL0_O_ADC_CH0_HP_LP_SEL_MASK  0x8000000
#define ADC_CH0_CTRL0_O_ADC_CH0_HP_LP_SEL  0x8000000
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_BYPASS_OFFSET  0x1a
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_BYPASS_MASK  0x4000000
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_BYPASS  0x4000000
#define ADC_CH0_CTRL0_O_TST_CH0_HPF_SPOLE_OFFSET  0x19
#define ADC_CH0_CTRL0_O_TST_CH0_HPF_SPOLE_MASK  0x2000000
#define ADC_CH0_CTRL0_O_TST_CH0_HPF_SPOLE  0x2000000
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_SEL_K2_OFFSET  0x14
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_SEL_K2_MASK  0x1f00000
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_SEL_K2  0x1f00000
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_SEL_K1_OFFSET  0xc
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_SEL_K1_MASK  0x1f000
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_SEL_K1  0x1f000
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_EN_OFFSET  0xb
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_EN_MASK  0x800
#define ADC_CH0_CTRL0_O_ADC_CH0_HPF_EN  0x800
#define ADC_CH0_CTRL0_O_ANC_CH0_HPF_BYPASS_OFFSET  0x7
#define ADC_CH0_CTRL0_O_ANC_CH0_HPF_BYPASS_MASK  0x80
#define ADC_CH0_CTRL0_O_ANC_CH0_HPF_BYPASS  0x80
#define ADC_CH0_CTRL0_O_ANC_CH0_HPF_EN_OFFSET  0x6
#define ADC_CH0_CTRL0_O_ANC_CH0_HPF_EN_MASK  0x40
#define ADC_CH0_CTRL0_O_ANC_CH0_HPF_EN  0x40
#define ADC_CH0_CTRL0_O_ADC_CH0_DOWN_SAMPLE_RATIO_OFFSET  0x4
#define ADC_CH0_CTRL0_O_ADC_CH0_DOWN_SAMPLE_RATIO_MASK  0x30
#define ADC_CH0_CTRL0_O_ADC_CH0_DOWN_SAMPLE_RATIO  0x30
#define ADC_CH0_CTRL0_O_ANC_CH0_SAMPLE_RATE_OFFSET  0x2
#define ADC_CH0_CTRL0_O_ANC_CH0_SAMPLE_RATE_MASK  0xc
#define ADC_CH0_CTRL0_O_ANC_CH0_SAMPLE_RATE  0xc
#define ADC_CH0_CTRL1_O_ADC_CH0_BOOST_OFFSET  0xc
#define ADC_CH0_CTRL1_O_ADC_CH0_BOOST_MASK  0x7000
#define ADC_CH0_CTRL1_O_ADC_CH0_BOOST  0x7000
#define ADC_CH0_CTRL1_O_CH0_MIC_GAIN_CTRL_OFFSET  0x8
#define ADC_CH0_CTRL1_O_CH0_MIC_GAIN_CTRL_MASK  0xf00
#define ADC_CH0_CTRL1_O_CH0_MIC_GAIN_CTRL  0xf00
#define ADC_CH0_CTRL1_O_CH0_VOLUME_CTRL_OFFSET  0x0
#define ADC_CH0_CTRL1_O_CH0_VOLUME_CTRL_MASK  0xff
#define ADC_CH0_CTRL1_O_CH0_VOLUME_CTRL  0xff
#define ADC_CH1_CTRL0_O_ADC_CH1_HP_LP_SEL_OFFSET  0x1b
#define ADC_CH1_CTRL0_O_ADC_CH1_HP_LP_SEL_MASK  0x8000000
#define ADC_CH1_CTRL0_O_ADC_CH1_HP_LP_SEL  0x8000000
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_BYPASS_OFFSET  0x1a
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_BYPASS_MASK  0x4000000
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_BYPASS  0x4000000
#define ADC_CH1_CTRL0_O_TST_CH1_HPF_SPOLE_OFFSET  0x19
#define ADC_CH1_CTRL0_O_TST_CH1_HPF_SPOLE_MASK  0x2000000
#define ADC_CH1_CTRL0_O_TST_CH1_HPF_SPOLE  0x2000000
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_SEL_K2_OFFSET  0x14
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_SEL_K2_MASK  0x1f00000
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_SEL_K2  0x1f00000
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_SEL_K1_OFFSET  0xc
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_SEL_K1_MASK  0x1f000
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_SEL_K1  0x1f000
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_EN_OFFSET  0xb
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_EN_MASK  0x800
#define ADC_CH1_CTRL0_O_ADC_CH1_HPF_EN  0x800
#define ADC_CH1_CTRL0_O_ANC_CH1_HPF_BYPASS_OFFSET  0x7
#define ADC_CH1_CTRL0_O_ANC_CH1_HPF_BYPASS_MASK  0x80
#define ADC_CH1_CTRL0_O_ANC_CH1_HPF_BYPASS  0x80
#define ADC_CH1_CTRL0_O_ANC_CH1_HPF_EN_OFFSET  0x6
#define ADC_CH1_CTRL0_O_ANC_CH1_HPF_EN_MASK  0x40
#define ADC_CH1_CTRL0_O_ANC_CH1_HPF_EN  0x40
#define ADC_CH1_CTRL0_O_ADC_CH1_DOWN_SAMPLE_RATIO_OFFSET  0x4
#define ADC_CH1_CTRL0_O_ADC_CH1_DOWN_SAMPLE_RATIO_MASK  0x30
#define ADC_CH1_CTRL0_O_ADC_CH1_DOWN_SAMPLE_RATIO  0x30
#define ADC_CH1_CTRL0_O_ANC_CH1_SAMPLE_RATE_OFFSET  0x2
#define ADC_CH1_CTRL0_O_ANC_CH1_SAMPLE_RATE_MASK  0xc
#define ADC_CH1_CTRL0_O_ANC_CH1_SAMPLE_RATE  0xc
#define ADC_CH1_CTRL1_O_ADC_CH1_BOOST_OFFSET  0xc
#define ADC_CH1_CTRL1_O_ADC_CH1_BOOST_MASK  0x7000
#define ADC_CH1_CTRL1_O_ADC_CH1_BOOST  0x7000
#define ADC_CH1_CTRL1_O_CH1_MIC_GAIN_CTRL_OFFSET  0x8
#define ADC_CH1_CTRL1_O_CH1_MIC_GAIN_CTRL_MASK  0xf00
#define ADC_CH1_CTRL1_O_CH1_MIC_GAIN_CTRL  0xf00
#define ADC_CH1_CTRL1_O_CH1_VOLUME_CTRL_OFFSET  0x0
#define ADC_CH1_CTRL1_O_CH1_VOLUME_CTRL_MASK  0xff
#define ADC_CH1_CTRL1_O_CH1_VOLUME_CTRL  0xff
#define ADC_CH2_CTRL0_O_ADC_CH2_HP_LP_SEL_OFFSET  0x1b
#define ADC_CH2_CTRL0_O_ADC_CH2_HP_LP_SEL_MASK  0x8000000
#define ADC_CH2_CTRL0_O_ADC_CH2_HP_LP_SEL  0x8000000
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_BYPASS_OFFSET  0x1a
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_BYPASS_MASK  0x4000000
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_BYPASS  0x4000000
#define ADC_CH2_CTRL0_O_TST_CH2_HPF_SPOLE_OFFSET  0x19
#define ADC_CH2_CTRL0_O_TST_CH2_HPF_SPOLE_MASK  0x2000000
#define ADC_CH2_CTRL0_O_TST_CH2_HPF_SPOLE  0x2000000
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_SEL_K2_OFFSET  0x14
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_SEL_K2_MASK  0x1f00000
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_SEL_K2  0x1f00000
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_SEL_K1_OFFSET  0xc
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_SEL_K1_MASK  0x1f000
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_SEL_K1  0x1f000
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_EN_OFFSET  0xb
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_EN_MASK  0x800
#define ADC_CH2_CTRL0_O_ADC_CH2_HPF_EN  0x800
#define ADC_CH2_CTRL0_O_ANC_CH2_HPF_BYPASS_OFFSET  0x7
#define ADC_CH2_CTRL0_O_ANC_CH2_HPF_BYPASS_MASK  0x80
#define ADC_CH2_CTRL0_O_ANC_CH2_HPF_BYPASS  0x80
#define ADC_CH2_CTRL0_O_ANC_CH2_HPF_EN_OFFSET  0x6
#define ADC_CH2_CTRL0_O_ANC_CH2_HPF_EN_MASK  0x40
#define ADC_CH2_CTRL0_O_ANC_CH2_HPF_EN  0x40
#define ADC_CH2_CTRL0_O_ADC_CH2_DOWN_SAMPLE_RATIO_OFFSET  0x4
#define ADC_CH2_CTRL0_O_ADC_CH2_DOWN_SAMPLE_RATIO_MASK  0x30
#define ADC_CH2_CTRL0_O_ADC_CH2_DOWN_SAMPLE_RATIO  0x30
#define ADC_CH2_CTRL0_O_ANC_CH2_SAMPLE_RATE_OFFSET  0x2
#define ADC_CH2_CTRL0_O_ANC_CH2_SAMPLE_RATE_MASK  0xc
#define ADC_CH2_CTRL0_O_ANC_CH2_SAMPLE_RATE  0xc
#define ADC_CH2_CTRL1_O_ADC_CH2_BOOST_OFFSET  0xc
#define ADC_CH2_CTRL1_O_ADC_CH2_BOOST_MASK  0x7000
#define ADC_CH2_CTRL1_O_ADC_CH2_BOOST  0x7000
#define ADC_CH2_CTRL1_O_CH2_MIC_GAIN_CTRL_OFFSET  0x8
#define ADC_CH2_CTRL1_O_CH2_MIC_GAIN_CTRL_MASK  0xf00
#define ADC_CH2_CTRL1_O_CH2_MIC_GAIN_CTRL  0xf00
#define ADC_CH2_CTRL1_O_CH2_VOLUME_CTRL_OFFSET  0x0
#define ADC_CH2_CTRL1_O_CH2_VOLUME_CTRL_MASK  0xff
#define ADC_CH2_CTRL1_O_CH2_VOLUME_CTRL  0xff
#define ADC_CH3_CTRL0_O_ADC_CH3_HP_LP_SEL_OFFSET  0x1b
#define ADC_CH3_CTRL0_O_ADC_CH3_HP_LP_SEL_MASK  0x8000000
#define ADC_CH3_CTRL0_O_ADC_CH3_HP_LP_SEL  0x8000000
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_BYPASS_OFFSET  0x1a
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_BYPASS_MASK  0x4000000
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_BYPASS  0x4000000
#define ADC_CH3_CTRL0_O_TST_CH3_HPF_SPOLE_OFFSET  0x19
#define ADC_CH3_CTRL0_O_TST_CH3_HPF_SPOLE_MASK  0x2000000
#define ADC_CH3_CTRL0_O_TST_CH3_HPF_SPOLE  0x2000000
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_SEL_K2_OFFSET  0x14
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_SEL_K2_MASK  0x1f00000
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_SEL_K2  0x1f00000
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_SEL_K1_OFFSET  0xc
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_SEL_K1_MASK  0x1f000
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_SEL_K1  0x1f000
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_EN_OFFSET  0xb
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_EN_MASK  0x800
#define ADC_CH3_CTRL0_O_ADC_CH3_HPF_EN  0x800
#define ADC_CH3_CTRL0_O_ANC_CH3_HPF_BYPASS_OFFSET  0x7
#define ADC_CH3_CTRL0_O_ANC_CH3_HPF_BYPASS_MASK  0x80
#define ADC_CH3_CTRL0_O_ANC_CH3_HPF_BYPASS  0x80
#define ADC_CH3_CTRL0_O_ANC_CH3_HPF_EN_OFFSET  0x6
#define ADC_CH3_CTRL0_O_ANC_CH3_HPF_EN_MASK  0x40
#define ADC_CH3_CTRL0_O_ANC_CH3_HPF_EN  0x40
#define ADC_CH3_CTRL0_O_ADC_CH3_DOWN_SAMPLE_RATIO_OFFSET  0x4
#define ADC_CH3_CTRL0_O_ADC_CH3_DOWN_SAMPLE_RATIO_MASK  0x30
#define ADC_CH3_CTRL0_O_ADC_CH3_DOWN_SAMPLE_RATIO  0x30
#define ADC_CH3_CTRL0_O_ANC_CH3_SAMPLE_RATE_OFFSET  0x2
#define ADC_CH3_CTRL0_O_ANC_CH3_SAMPLE_RATE_MASK  0xc
#define ADC_CH3_CTRL0_O_ANC_CH3_SAMPLE_RATE  0xc
#define ADC_CH3_CTRL1_O_ADC_CH3_BOOST_OFFSET  0xc
#define ADC_CH3_CTRL1_O_ADC_CH3_BOOST_MASK  0x7000
#define ADC_CH3_CTRL1_O_ADC_CH3_BOOST  0x7000
#define ADC_CH3_CTRL1_O_CH3_MIC_GAIN_CTRL_OFFSET  0x8
#define ADC_CH3_CTRL1_O_CH3_MIC_GAIN_CTRL_MASK  0xf00
#define ADC_CH3_CTRL1_O_CH3_MIC_GAIN_CTRL  0xf00
#define ADC_CH3_CTRL1_O_CH3_VOLUME_CTRL_OFFSET  0x0
#define ADC_CH3_CTRL1_O_CH3_VOLUME_CTRL_MASK  0xff
#define ADC_CH3_CTRL1_O_CH3_VOLUME_CTRL  0xff
#define ADC_CH4_CTRL0_O_ADC_CH4_HP_LP_SEL_OFFSET  0x1b
#define ADC_CH4_CTRL0_O_ADC_CH4_HP_LP_SEL_MASK  0x8000000
#define ADC_CH4_CTRL0_O_ADC_CH4_HP_LP_SEL  0x8000000
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_BYPASS_OFFSET  0x1a
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_BYPASS_MASK  0x4000000
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_BYPASS  0x4000000
#define ADC_CH4_CTRL0_O_TST_CH4_HPF_SPOLE_OFFSET  0x19
#define ADC_CH4_CTRL0_O_TST_CH4_HPF_SPOLE_MASK  0x2000000
#define ADC_CH4_CTRL0_O_TST_CH4_HPF_SPOLE  0x2000000
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_SEL_K2_OFFSET  0x14
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_SEL_K2_MASK  0x1f00000
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_SEL_K2  0x1f00000
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_SEL_K1_OFFSET  0xc
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_SEL_K1_MASK  0x1f000
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_SEL_K1  0x1f000
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_EN_OFFSET  0xb
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_EN_MASK  0x800
#define ADC_CH4_CTRL0_O_ADC_CH4_HPF_EN  0x800
#define ADC_CH4_CTRL0_O_ANC_CH4_HPF_BYPASS_OFFSET  0x7
#define ADC_CH4_CTRL0_O_ANC_CH4_HPF_BYPASS_MASK  0x80
#define ADC_CH4_CTRL0_O_ANC_CH4_HPF_BYPASS  0x80
#define ADC_CH4_CTRL0_O_ANC_CH4_HPF_EN_OFFSET  0x6
#define ADC_CH4_CTRL0_O_ANC_CH4_HPF_EN_MASK  0x40
#define ADC_CH4_CTRL0_O_ANC_CH4_HPF_EN  0x40
#define ADC_CH4_CTRL0_O_ADC_CH4_DOWN_SAMPLE_RATIO_OFFSET  0x4
#define ADC_CH4_CTRL0_O_ADC_CH4_DOWN_SAMPLE_RATIO_MASK  0x30
#define ADC_CH4_CTRL0_O_ADC_CH4_DOWN_SAMPLE_RATIO  0x30
#define ADC_CH4_CTRL0_O_ANC_CH4_SAMPLE_RATE_OFFSET  0x2
#define ADC_CH4_CTRL0_O_ANC_CH4_SAMPLE_RATE_MASK  0xc
#define ADC_CH4_CTRL0_O_ANC_CH4_SAMPLE_RATE  0xc
#define ADC_CH4_CTRL1_O_ADC_CH4_BOOST_OFFSET  0xc
#define ADC_CH4_CTRL1_O_ADC_CH4_BOOST_MASK  0x7000
#define ADC_CH4_CTRL1_O_ADC_CH4_BOOST  0x7000
#define ADC_CH4_CTRL1_O_CH4_MIC_GAIN_CTRL_OFFSET  0x8
#define ADC_CH4_CTRL1_O_CH4_MIC_GAIN_CTRL_MASK  0xf00
#define ADC_CH4_CTRL1_O_CH4_MIC_GAIN_CTRL  0xf00
#define ADC_CH4_CTRL1_O_CH4_VOLUME_CTRL_OFFSET  0x0
#define ADC_CH4_CTRL1_O_CH4_VOLUME_CTRL_MASK  0xff
#define ADC_CH4_CTRL1_O_CH4_VOLUME_CTRL  0xff
#define ADC_DMIC_CTRL0_O_DMIC_CLK_CHG_EN_OFFSET  0xc
#define ADC_DMIC_CTRL0_O_DMIC_CLK_CHG_EN_MASK  0x7000
#define ADC_DMIC_CTRL0_O_DMIC_CLK_CHG_EN  0x7000
#define ADC_DMIC_CTRL0_O_DMIC_CLK_DIV_OFFSET  0x0
#define ADC_DMIC_CTRL0_O_DMIC_CLK_DIV_MASK  0xfff
#define ADC_DMIC_CTRL0_O_DMIC_CLK_DIV  0xfff
#define ADC_DMIC_CTRL1_O_DMIC_IN_PHASE_OFFSET  0x8
#define ADC_DMIC_CTRL1_O_DMIC_IN_PHASE_MASK  0x700
#define ADC_DMIC_CTRL1_O_DMIC_IN_PHASE  0x700
#define ADC_DMIC_CTRL1_O_DMIC_IF_OUT_CHL_REVS_OFFSET  0x4
#define ADC_DMIC_CTRL1_O_DMIC_IF_OUT_CHL_REVS_MASK  0x70
#define ADC_DMIC_CTRL1_O_DMIC_IF_OUT_CHL_REVS  0x70
#define ADC_DMIC_CTRL1_O_DMIC_IF_OUT_POL_REVS_OFFSET  0x0
#define ADC_DMIC_CTRL1_O_DMIC_IF_OUT_POL_REVS_MASK  0x7
#define ADC_DMIC_CTRL1_O_DMIC_IF_OUT_POL_REVS  0x7
#define SIDETONE_CTRL_O_SIDETONE_CH1_SEL_OFFSET  0x4
#define SIDETONE_CTRL_O_SIDETONE_CH1_SEL_MASK  0x70
#define SIDETONE_CTRL_O_SIDETONE_CH1_SEL  0x70
#define SIDETONE_CTRL_O_SIDETONE_CH0_SEL_OFFSET  0x0
#define SIDETONE_CTRL_O_SIDETONE_CH0_SEL_MASK  0x7
#define SIDETONE_CTRL_O_SIDETONE_CH0_SEL  0x7
#define ANC_OUT_CTRL_O_ANC_OUT_CH3_SEL_OFFSET  0xc
#define ANC_OUT_CTRL_O_ANC_OUT_CH3_SEL_MASK  0x7000
#define ANC_OUT_CTRL_O_ANC_OUT_CH3_SEL  0x7000
#define ANC_OUT_CTRL_O_ANC_OUT_CH2_SEL_OFFSET  0x8
#define ANC_OUT_CTRL_O_ANC_OUT_CH2_SEL_MASK  0x700
#define ANC_OUT_CTRL_O_ANC_OUT_CH2_SEL  0x700
#define ANC_OUT_CTRL_O_ANC_OUT_CH1_SEL_OFFSET  0x4
#define ANC_OUT_CTRL_O_ANC_OUT_CH1_SEL_MASK  0x70
#define ANC_OUT_CTRL_O_ANC_OUT_CH1_SEL  0x70
#define ANC_OUT_CTRL_O_ANC_OUT_CH0_SEL_OFFSET  0x0
#define ANC_OUT_CTRL_O_ANC_OUT_CH0_SEL_MASK  0x7
#define ANC_OUT_CTRL_O_ANC_OUT_CH0_SEL  0x7
#define I2S0_PCM_REG1_RX_LRCK_EN_OFFSET  0x11
#define I2S0_PCM_REG1_RX_LRCK_EN_MASK  0x20000
#define I2S0_PCM_REG1_RX_LRCK_EN  0x20000
#define I2S0_PCM_REG1_RX_LRCK_LOW_FIRST_OFFSET  0x10
#define I2S0_PCM_REG1_RX_LRCK_LOW_FIRST_MASK  0x10000
#define I2S0_PCM_REG1_RX_LRCK_LOW_FIRST  0x10000
#define I2S0_PCM_REG1_RX_SYNC_LNG_OFFSET  0x8
#define I2S0_PCM_REG1_RX_SYNC_LNG_MASK  0xff00
#define I2S0_PCM_REG1_RX_SYNC_LNG  0xff00
#define I2S0_PCM_REG1_RX_CLK_FRAMES_OFFSET  0x0
#define I2S0_PCM_REG1_RX_CLK_FRAMES_MASK  0xff
#define I2S0_PCM_REG1_RX_CLK_FRAMES  0xff
#define I2S0_PCM_REG2_TX_LRCK_EN_OFFSET  0x11
#define I2S0_PCM_REG2_TX_LRCK_EN_MASK  0x20000
#define I2S0_PCM_REG2_TX_LRCK_EN  0x20000
#define I2S0_PCM_REG2_TX_LRCK_LOW_FIRST_OFFSET  0x10
#define I2S0_PCM_REG2_TX_LRCK_LOW_FIRST_MASK  0x10000
#define I2S0_PCM_REG2_TX_LRCK_LOW_FIRST  0x10000
#define I2S0_PCM_REG2_TX_SYNC_LNG_OFFSET  0x8
#define I2S0_PCM_REG2_TX_SYNC_LNG_MASK  0xff00
#define I2S0_PCM_REG2_TX_SYNC_LNG  0xff00
#define I2S0_PCM_REG2_TX_CLK_FRAMES_OFFSET  0x0
#define I2S0_PCM_REG2_TX_CLK_FRAMES_MASK  0xff
#define I2S0_PCM_REG2_TX_CLK_FRAMES  0xff
#define I2S0_PCM_REG3_LRCK_SHARE_WITH_RX_OFFSET  0x3
#define I2S0_PCM_REG3_LRCK_SHARE_WITH_RX_MASK  0x8
#define I2S0_PCM_REG3_LRCK_SHARE_WITH_RX  0x8
#define I2S0_PCM_REG3_LRCK_SHARE_EN_OFFSET  0x2
#define I2S0_PCM_REG3_LRCK_SHARE_EN_MASK  0x4
#define I2S0_PCM_REG3_LRCK_SHARE_EN  0x4
#define I2S0_PCM_REG3_CLK_SHARE_WITH_RX_OFFSET  0x1
#define I2S0_PCM_REG3_CLK_SHARE_WITH_RX_MASK  0x2
#define I2S0_PCM_REG3_CLK_SHARE_WITH_RX  0x2
#define I2S0_PCM_REG3_CLK_SHARE_EN_OFFSET  0x0
#define I2S0_PCM_REG3_CLK_SHARE_EN_MASK  0x1
#define I2S0_PCM_REG3_CLK_SHARE_EN  0x1
#define I2S0_PCM_REG4_RX_SA_WDT_OFFSET  0x7
#define I2S0_PCM_REG4_RX_SA_WDT_MASK  0xf80
#define I2S0_PCM_REG4_RX_SA_WDT  0xf80
#define I2S0_PCM_REG4_RX_LRCK_POL_OFFSET  0x6
#define I2S0_PCM_REG4_RX_LRCK_POL_MASK  0x40
#define I2S0_PCM_REG4_RX_LRCK_POL  0x40
#define I2S0_PCM_REG4_RX_ORDER_OFFSET  0x4
#define I2S0_PCM_REG4_RX_ORDER_MASK  0x10
#define I2S0_PCM_REG4_RX_ORDER  0x10
#define I2S0_PCM_REG4_RX_DSHIFT_SEL_OFFSET  0x3
#define I2S0_PCM_REG4_RX_DSHIFT_SEL_MASK  0x8
#define I2S0_PCM_REG4_RX_DSHIFT_SEL  0x8
#define I2S0_PCM_REG4_RX_DSTART_DLY_OFFSET  0x2
#define I2S0_PCM_REG4_RX_DSTART_DLY_MASK  0x4
#define I2S0_PCM_REG4_RX_DSTART_DLY  0x4
#define I2S0_PCM_REG4_RX_MASTER_OFFSET  0x1
#define I2S0_PCM_REG4_RX_MASTER_MASK  0x2
#define I2S0_PCM_REG4_RX_MASTER  0x2
#define I2S0_PCM_REG4_RX_MODE_OFFSET  0x0
#define I2S0_PCM_REG4_RX_MODE_MASK  0x1
#define I2S0_PCM_REG4_RX_MODE  0x1
#define I2S0_PCM_REG5_RX_SD_SEL_OFFSET  0x0
#define I2S0_PCM_REG5_RX_SD_SEL_MASK  0x3
#define I2S0_PCM_REG5_RX_SD_SEL  0x3
#define I2S0_PCM_REG6_RX_SLOT_OFFSET  0x0
#define I2S0_PCM_REG6_RX_SLOT_MASK  0xffff
#define I2S0_PCM_REG6_RX_SLOT  0xffff
#define I2S0_PCM_REG8_RX_MUTE_OFFSET  0x2
#define I2S0_PCM_REG8_RX_MUTE_MASK  0x4
#define I2S0_PCM_REG8_RX_MUTE  0x4
#define I2S0_PCM_REG8_RX_EN_OFFSET  0x0
#define I2S0_PCM_REG8_RX_EN_MASK  0x3
#define I2S0_PCM_REG8_RX_EN  0x3
#define I2S0_PCM_REG9_TX_SA_WDT_OFFSET  0x9
#define I2S0_PCM_REG9_TX_SA_WDT_MASK  0x3e00
#define I2S0_PCM_REG9_TX_SA_WDT  0x3e00
#define I2S0_PCM_REG9_TDM_BI_OFFSET  0x8
#define I2S0_PCM_REG9_TDM_BI_MASK  0x100
#define I2S0_PCM_REG9_TDM_BI  0x100
#define I2S0_PCM_REG9_TX_OUT_EN_OFFSET  0x7
#define I2S0_PCM_REG9_TX_OUT_EN_MASK  0x80
#define I2S0_PCM_REG9_TX_OUT_EN  0x80
#define I2S0_PCM_REG9_TX_LRCK_POL_OFFSET  0x6
#define I2S0_PCM_REG9_TX_LRCK_POL_MASK  0x40
#define I2S0_PCM_REG9_TX_LRCK_POL  0x40
#define I2S0_PCM_REG9_TX_ORDER_OFFSET  0x4
#define I2S0_PCM_REG9_TX_ORDER_MASK  0x10
#define I2S0_PCM_REG9_TX_ORDER  0x10
#define I2S0_PCM_REG9_TX_DSHIFT_SEL_OFFSET  0x3
#define I2S0_PCM_REG9_TX_DSHIFT_SEL_MASK  0x8
#define I2S0_PCM_REG9_TX_DSHIFT_SEL  0x8
#define I2S0_PCM_REG9_TX_DSTART_DLY_OFFSET  0x2
#define I2S0_PCM_REG9_TX_DSTART_DLY_MASK  0x4
#define I2S0_PCM_REG9_TX_DSTART_DLY  0x4
#define I2S0_PCM_REG9_TX_MASTER_OFFSET  0x1
#define I2S0_PCM_REG9_TX_MASTER_MASK  0x2
#define I2S0_PCM_REG9_TX_MASTER  0x2
#define I2S0_PCM_REG9_TX_MODE_OFFSET  0x0
#define I2S0_PCM_REG9_TX_MODE_MASK  0x1
#define I2S0_PCM_REG9_TX_MODE  0x1
#define I2S0_PCM_REG10_TX_SLOT_OFFSET  0x0
#define I2S0_PCM_REG10_TX_SLOT_MASK  0xffff
#define I2S0_PCM_REG10_TX_SLOT  0xffff
#define I2S0_PCM_REG12_TX_SD_SEL_OFFSET  0x0
#define I2S0_PCM_REG12_TX_SD_SEL_MASK  0x3
#define I2S0_PCM_REG12_TX_SD_SEL  0x3
#define I2S0_PCM_REG13_TX_DISORDER_OFFSET  0x3
#define I2S0_PCM_REG13_TX_DISORDER_MASK  0x8
#define I2S0_PCM_REG13_TX_DISORDER  0x8
#define I2S0_PCM_REG13_TX_MUTE_OFFSET  0x2
#define I2S0_PCM_REG13_TX_MUTE_MASK  0x4
#define I2S0_PCM_REG13_TX_MUTE  0x4
#define I2S0_PCM_REG13_TX_EN_OFFSET  0x0
#define I2S0_PCM_REG13_TX_EN_MASK  0x3
#define I2S0_PCM_REG13_TX_EN  0x3
#define I2S0_PCM_REG14_WS_GEN_DATA_SEL_OFFSET  0x4
#define I2S0_PCM_REG14_WS_GEN_DATA_SEL_MASK  0x70
#define I2S0_PCM_REG14_WS_GEN_DATA_SEL  0x70
#define I2S0_PCM_REG14_WS_GEN_RESET_OFFSET  0x3
#define I2S0_PCM_REG14_WS_GEN_RESET_MASK  0x8
#define I2S0_PCM_REG14_WS_GEN_RESET  0x8
#define I2S0_PCM_REG14_WS_GEN_POLARITY_OFFSET  0x2
#define I2S0_PCM_REG14_WS_GEN_POLARITY_MASK  0x4
#define I2S0_PCM_REG14_WS_GEN_POLARITY  0x4
#define I2S0_PCM_REG14_WS_GEN_ENABLE_OFFSET  0x1
#define I2S0_PCM_REG14_WS_GEN_ENABLE_MASK  0x2
#define I2S0_PCM_REG14_WS_GEN_ENABLE  0x2
#define I2S0_PCM_REG14_WS_GEN_MODE_OFFSET  0x0
#define I2S0_PCM_REG14_WS_GEN_MODE_MASK  0x1
#define I2S0_PCM_REG14_WS_GEN_MODE  0x1
#define I2S1_PCM_REG1_RX_LRCK_EN_OFFSET  0x11
#define I2S1_PCM_REG1_RX_LRCK_EN_MASK  0x20000
#define I2S1_PCM_REG1_RX_LRCK_EN  0x20000
#define I2S1_PCM_REG1_RX_LRCK_LOW_FIRST_OFFSET  0x10
#define I2S1_PCM_REG1_RX_LRCK_LOW_FIRST_MASK  0x10000
#define I2S1_PCM_REG1_RX_LRCK_LOW_FIRST  0x10000
#define I2S1_PCM_REG1_RX_SYNC_LNG_OFFSET  0x8
#define I2S1_PCM_REG1_RX_SYNC_LNG_MASK  0xff00
#define I2S1_PCM_REG1_RX_SYNC_LNG  0xff00
#define I2S1_PCM_REG1_RX_CLK_FRAMES_OFFSET  0x0
#define I2S1_PCM_REG1_RX_CLK_FRAMES_MASK  0xff
#define I2S1_PCM_REG1_RX_CLK_FRAMES  0xff
#define I2S1_PCM_REG2_TX_LRCK_EN_OFFSET  0x11
#define I2S1_PCM_REG2_TX_LRCK_EN_MASK  0x20000
#define I2S1_PCM_REG2_TX_LRCK_EN  0x20000
#define I2S1_PCM_REG2_TX_LRCK_LOW_FIRST_OFFSET  0x10
#define I2S1_PCM_REG2_TX_LRCK_LOW_FIRST_MASK  0x10000
#define I2S1_PCM_REG2_TX_LRCK_LOW_FIRST  0x10000
#define I2S1_PCM_REG2_TX_SYNC_LNG_OFFSET  0x8
#define I2S1_PCM_REG2_TX_SYNC_LNG_MASK  0xff00
#define I2S1_PCM_REG2_TX_SYNC_LNG  0xff00
#define I2S1_PCM_REG2_TX_CLK_FRAMES_OFFSET  0x0
#define I2S1_PCM_REG2_TX_CLK_FRAMES_MASK  0xff
#define I2S1_PCM_REG2_TX_CLK_FRAMES  0xff
#define I2S1_PCM_REG3_LRCK_SHARE_WITH_RX_OFFSET  0x3
#define I2S1_PCM_REG3_LRCK_SHARE_WITH_RX_MASK  0x8
#define I2S1_PCM_REG3_LRCK_SHARE_WITH_RX  0x8
#define I2S1_PCM_REG3_LRCK_SHARE_EN_OFFSET  0x2
#define I2S1_PCM_REG3_LRCK_SHARE_EN_MASK  0x4
#define I2S1_PCM_REG3_LRCK_SHARE_EN  0x4
#define I2S1_PCM_REG3_CLK_SHARE_WITH_RX_OFFSET  0x1
#define I2S1_PCM_REG3_CLK_SHARE_WITH_RX_MASK  0x2
#define I2S1_PCM_REG3_CLK_SHARE_WITH_RX  0x2
#define I2S1_PCM_REG3_CLK_SHARE_EN_OFFSET  0x0
#define I2S1_PCM_REG3_CLK_SHARE_EN_MASK  0x1
#define I2S1_PCM_REG3_CLK_SHARE_EN  0x1
#define I2S1_PCM_REG4_RX_SA_WDT_OFFSET  0x7
#define I2S1_PCM_REG4_RX_SA_WDT_MASK  0xf80
#define I2S1_PCM_REG4_RX_SA_WDT  0xf80
#define I2S1_PCM_REG4_RX_LRCK_POL_OFFSET  0x6
#define I2S1_PCM_REG4_RX_LRCK_POL_MASK  0x40
#define I2S1_PCM_REG4_RX_LRCK_POL  0x40
#define I2S1_PCM_REG4_RX_ORDER_OFFSET  0x4
#define I2S1_PCM_REG4_RX_ORDER_MASK  0x10
#define I2S1_PCM_REG4_RX_ORDER  0x10
#define I2S1_PCM_REG4_RX_DSHIFT_SEL_OFFSET  0x3
#define I2S1_PCM_REG4_RX_DSHIFT_SEL_MASK  0x8
#define I2S1_PCM_REG4_RX_DSHIFT_SEL  0x8
#define I2S1_PCM_REG4_RX_DSTART_DLY_OFFSET  0x2
#define I2S1_PCM_REG4_RX_DSTART_DLY_MASK  0x4
#define I2S1_PCM_REG4_RX_DSTART_DLY  0x4
#define I2S1_PCM_REG4_RX_MASTER_OFFSET  0x1
#define I2S1_PCM_REG4_RX_MASTER_MASK  0x2
#define I2S1_PCM_REG4_RX_MASTER  0x2
#define I2S1_PCM_REG4_RX_MODE_OFFSET  0x0
#define I2S1_PCM_REG4_RX_MODE_MASK  0x1
#define I2S1_PCM_REG4_RX_MODE  0x1
#define I2S1_PCM_REG5_RX_SD_SEL_OFFSET  0x0
#define I2S1_PCM_REG5_RX_SD_SEL_MASK  0x3
#define I2S1_PCM_REG5_RX_SD_SEL  0x3
#define I2S1_PCM_REG6_RX_SLOT_OFFSET  0x0
#define I2S1_PCM_REG6_RX_SLOT_MASK  0xffff
#define I2S1_PCM_REG6_RX_SLOT  0xffff
#define I2S1_PCM_REG8_RX_MUTE_OFFSET  0x2
#define I2S1_PCM_REG8_RX_MUTE_MASK  0x4
#define I2S1_PCM_REG8_RX_MUTE  0x4
#define I2S1_PCM_REG8_RX_EN_OFFSET  0x0
#define I2S1_PCM_REG8_RX_EN_MASK  0x3
#define I2S1_PCM_REG8_RX_EN  0x3
#define I2S1_PCM_REG9_TX_SA_WDT_OFFSET  0x9
#define I2S1_PCM_REG9_TX_SA_WDT_MASK  0x3e00
#define I2S1_PCM_REG9_TX_SA_WDT  0x3e00
#define I2S1_PCM_REG9_TDM_BI_OFFSET  0x8
#define I2S1_PCM_REG9_TDM_BI_MASK  0x100
#define I2S1_PCM_REG9_TDM_BI  0x100
#define I2S1_PCM_REG9_TX_OUT_EN_OFFSET  0x7
#define I2S1_PCM_REG9_TX_OUT_EN_MASK  0x80
#define I2S1_PCM_REG9_TX_OUT_EN  0x80
#define I2S1_PCM_REG9_TX_LRCK_POL_OFFSET  0x6
#define I2S1_PCM_REG9_TX_LRCK_POL_MASK  0x40
#define I2S1_PCM_REG9_TX_LRCK_POL  0x40
#define I2S1_PCM_REG9_TX_ORDER_OFFSET  0x4
#define I2S1_PCM_REG9_TX_ORDER_MASK  0x10
#define I2S1_PCM_REG9_TX_ORDER  0x10
#define I2S1_PCM_REG9_TX_DSHIFT_SEL_OFFSET  0x3
#define I2S1_PCM_REG9_TX_DSHIFT_SEL_MASK  0x8
#define I2S1_PCM_REG9_TX_DSHIFT_SEL  0x8
#define I2S1_PCM_REG9_TX_DSTART_DLY_OFFSET  0x2
#define I2S1_PCM_REG9_TX_DSTART_DLY_MASK  0x4
#define I2S1_PCM_REG9_TX_DSTART_DLY  0x4
#define I2S1_PCM_REG9_TX_MASTER_OFFSET  0x1
#define I2S1_PCM_REG9_TX_MASTER_MASK  0x2
#define I2S1_PCM_REG9_TX_MASTER  0x2
#define I2S1_PCM_REG9_TX_MODE_OFFSET  0x0
#define I2S1_PCM_REG9_TX_MODE_MASK  0x1
#define I2S1_PCM_REG9_TX_MODE  0x1
#define I2S1_PCM_REG10_TX_SLOT_OFFSET  0x0
#define I2S1_PCM_REG10_TX_SLOT_MASK  0xffffffff
#define I2S1_PCM_REG10_TX_SLOT  0xffffffff
#define I2S1_PCM_REG11_TX_SLOT_EX_OFFSET  0x0
#define I2S1_PCM_REG11_TX_SLOT_EX_MASK  0xffff
#define I2S1_PCM_REG11_TX_SLOT_EX  0xffff
#define I2S1_PCM_REG12_TX_SD_SEL_OFFSET  0x0
#define I2S1_PCM_REG12_TX_SD_SEL_MASK  0x3f
#define I2S1_PCM_REG12_TX_SD_SEL  0x3f
#define I2S1_PCM_REG13_TX_DISORDER_OFFSET  0x7
#define I2S1_PCM_REG13_TX_DISORDER_MASK  0x80
#define I2S1_PCM_REG13_TX_DISORDER  0x80
#define I2S1_PCM_REG13_TX_MUTE_OFFSET  0x6
#define I2S1_PCM_REG13_TX_MUTE_MASK  0x40
#define I2S1_PCM_REG13_TX_MUTE  0x40
#define I2S1_PCM_REG13_TX_EN_OFFSET  0x0
#define I2S1_PCM_REG13_TX_EN_MASK  0x3f
#define I2S1_PCM_REG13_TX_EN  0x3f
#define I2S1_PCM_REG14_WS_GEN_DATA_SEL_OFFSET  0x4
#define I2S1_PCM_REG14_WS_GEN_DATA_SEL_MASK  0x70
#define I2S1_PCM_REG14_WS_GEN_DATA_SEL  0x70
#define I2S1_PCM_REG14_WS_GEN_RESET_OFFSET  0x3
#define I2S1_PCM_REG14_WS_GEN_RESET_MASK  0x8
#define I2S1_PCM_REG14_WS_GEN_RESET  0x8
#define I2S1_PCM_REG14_WS_GEN_POLARITY_OFFSET  0x2
#define I2S1_PCM_REG14_WS_GEN_POLARITY_MASK  0x4
#define I2S1_PCM_REG14_WS_GEN_POLARITY  0x4
#define I2S1_PCM_REG14_WS_GEN_ENABLE_OFFSET  0x1
#define I2S1_PCM_REG14_WS_GEN_ENABLE_MASK  0x2
#define I2S1_PCM_REG14_WS_GEN_ENABLE  0x2
#define I2S1_PCM_REG14_WS_GEN_MODE_OFFSET  0x0
#define I2S1_PCM_REG14_WS_GEN_MODE_MASK  0x1
#define I2S1_PCM_REG14_WS_GEN_MODE  0x1
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PRID_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PRID_MASK  0xffff0000
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PRID  0xffff0000
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PRESETN_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PRESETN_MASK  0x1000
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PRESETN  0x1000
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_ATRESETN_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_ATRESETN_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_ATRESETN  0x800
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_JTRST_OFFSET  0xa
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_JTRST_MASK  0x400
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_JTRST  0x400
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_BRESET_OFFSET  0x9
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_BRESET_MASK  0x200
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_BRESET  0x200
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_DRESET_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_DRESET_MASK  0x100
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_DRESET  0x100
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_DEBUGMODE_OFFSET  0x7
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_DEBUGMODE_MASK  0x80
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_DEBUGMODE  0x80
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_XOCDMODE_OFFSET  0x6
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_XOCDMODE_MASK  0x40
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_XOCDMODE  0x40
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PFATAERROR_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PFATAERROR_MASK  0x20
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PFATAERROR  0x20
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PWAITMODE_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PWAITMODE_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PWAITMODE  0x10
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_OCDHALTONRESET_OFFSET  0x3
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_OCDHALTONRESET_MASK  0x8
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_OCDHALTONRESET  0x8
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_STATVECTORSEL_OFFSET  0x2
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_STATVECTORSEL_MASK  0x4
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_STATVECTORSEL  0x4
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_RUNSTALL_OFFSET  0x1
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_RUNSTALL_MASK  0x2
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_RUNSTALL  0x2
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PBCLKEN_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PBCLKEN_MASK  0x1
#define HIFI3_WRAPPER_HIFI3_CONTROL_HIFI3_WRAPPER_PBCLKEN  0x1
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PFAULTINFO_CHANGE_OFFSET  0x3
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PFAULTINFO_CHANGE_MASK  0x8
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PFAULTINFO_CHANGE  0x8
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PFATAERROR_CHANGE_OFFSET  0x2
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PFATAERROR_CHANGE_MASK  0x4
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PFATAERROR_CHANGE  0x4
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_DOUBLEEXCEPTIONERROR_OFFSET  0x1
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_DOUBLEEXCEPTIONERROR_MASK  0x2
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_DOUBLEEXCEPTIONERROR  0x2
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PWAITMODE_CHANGE_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PWAITMODE_CHANGE_MASK  0x1
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_HIFI3_WRAPPER_PWAITMODE_CHANGE  0x1
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PFAULTINFO_CHANGE_ENABLE_OFFSET  0x3
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PFAULTINFO_CHANGE_ENABLE_MASK  0x8
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PFAULTINFO_CHANGE_ENABLE  0x8
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PFATAERROR_CHANGE_ENABLE_OFFSET  0x2
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PFATAERROR_CHANGE_ENABLE_MASK  0x4
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PFATAERROR_CHANGE_ENABLE  0x4
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_DOUBLEEXCEPTIONERROR_ENABLE_OFFSET  0x1
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_DOUBLEEXCEPTIONERROR_ENABLE_MASK  0x2
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_DOUBLEEXCEPTIONERROR_ENABLE  0x2
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PWAITMODE_CHANGE_ENABLE_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PWAITMODE_CHANGE_ENABLE_MASK  0x1
#define HIFI3_WRAPPER_HIFI3_WRAPPER_INT_ENABLE_HIFI3_WRAPPER_PWAITMODE_CHANGE_ENABLE  0x1
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_HIFI3_WRAPPER_PFAULTINFO_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_HIFI3_WRAPPER_PFAULTINFO_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_PFAULTINFO_HIFI3_WRAPPER_PFAULTINFO  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_HIFI3_WRAPPER_IRQ_ALL_ENABLE_0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_HIFI3_WRAPPER_IRQ_ALL_ENABLE_0_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE0_HIFI3_WRAPPER_IRQ_ALL_ENABLE_0  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_HIFI3_WRAPPER_IRQ_ALL_ENABLE_1_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_HIFI3_WRAPPER_IRQ_ALL_ENABLE_1_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_ALL_ENABLE1_HIFI3_WRAPPER_IRQ_ALL_ENABLE_1  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_HIFI3_WRAPPER_IRQ_0_ENABLE_0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_HIFI3_WRAPPER_IRQ_0_ENABLE_0_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE0_HIFI3_WRAPPER_IRQ_0_ENABLE_0  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_HIFI3_WRAPPER_IRQ_0_ENABLE_1_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_HIFI3_WRAPPER_IRQ_0_ENABLE_1_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_0_ENABLE1_HIFI3_WRAPPER_IRQ_0_ENABLE_1  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_HIFI3_WRAPPER_IRQ_1_ENABLE_0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_HIFI3_WRAPPER_IRQ_1_ENABLE_0_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE0_HIFI3_WRAPPER_IRQ_1_ENABLE_0  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_HIFI3_WRAPPER_IRQ_1_ENABLE_1_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_HIFI3_WRAPPER_IRQ_1_ENABLE_1_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_1_ENABLE1_HIFI3_WRAPPER_IRQ_1_ENABLE_1  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_HIFI3_WRAPPER_INPUT_IRQ_STATUS0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_HIFI3_WRAPPER_INPUT_IRQ_STATUS0_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS0_HIFI3_WRAPPER_INPUT_IRQ_STATUS0  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_HIFI3_WRAPPER_INPUT_IRQ_STATUS0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_HIFI3_WRAPPER_INPUT_IRQ_STATUS0_MASK  0xffffffff
#define HIFI3_WRAPPER_HIFI3_IN_IRQ_STATUS1_HIFI3_WRAPPER_INPUT_IRQ_STATUS0  0xffffffff
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_HIFI3_WRAPPER_ALT_RESET_VECTOR_OFFSET  0x0
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_HIFI3_WRAPPER_ALT_RESET_VECTOR_MASK  0xffffffff
#define HIFI3_WRAPPER_ALT_RESET_VECTOR_HIFI3_WRAPPER_ALT_RESET_VECTOR  0xffffffff
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_TEST1_ICACHE_WAY_B_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_TEST1_ICACHE_WAY_B_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_TEST1_ICACHE_WAY_B  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RA_ICACHE_WAY_B_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RA_ICACHE_WAY_B_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RA_ICACHE_WAY_B  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_LS_ICACHE_WAY_B_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_LS_ICACHE_WAY_B_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_LS_ICACHE_WAY_B  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WA_ICACHE_WAY_B_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WA_ICACHE_WAY_B_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WA_ICACHE_WAY_B  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WPULSE_ICACHE_WAY_B_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WPULSE_ICACHE_WAY_B_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WPULSE_ICACHE_WAY_B  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RME_ICACHE_WAY_B_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RME_ICACHE_WAY_B_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RME_ICACHE_WAY_B  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RM_ICACHE_WAY_B_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RM_ICACHE_WAY_B_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RM_ICACHE_WAY_B  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_TEST1_ICACHE_WAY_A_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_TEST1_ICACHE_WAY_A_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_TEST1_ICACHE_WAY_A  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RA_ICACHE_WAY_A_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RA_ICACHE_WAY_A_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RA_ICACHE_WAY_A  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_LS_ICACHE_WAY_A_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_LS_ICACHE_WAY_A_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_LS_ICACHE_WAY_A  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WA_ICACHE_WAY_A_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WA_ICACHE_WAY_A_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WA_ICACHE_WAY_A  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WPULSE_ICACHE_WAY_A_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WPULSE_ICACHE_WAY_A_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_WPULSE_ICACHE_WAY_A  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RME_ICACHE_WAY_A_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RME_ICACHE_WAY_A_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RME_ICACHE_WAY_A  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RM_ICACHE_WAY_A_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RM_ICACHE_WAY_A_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL0_HIFI3_WRAPPER_RM_ICACHE_WAY_A  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_TEST1_DCACHE_WAY_A_BK1_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_TEST1_DCACHE_WAY_A_BK1_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_TEST1_DCACHE_WAY_A_BK1  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RA_DCACHE_WAY_A_BK1_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RA_DCACHE_WAY_A_BK1_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RA_DCACHE_WAY_A_BK1  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_LS_DCACHE_WAY_A_BK1_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_LS_DCACHE_WAY_A_BK1_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_LS_DCACHE_WAY_A_BK1  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WA_DCACHE_WAY_A_BK1_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WA_DCACHE_WAY_A_BK1_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WA_DCACHE_WAY_A_BK1  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_A_BK1_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_A_BK1_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_A_BK1  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RME_DCACHE_WAY_A_BK1_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RME_DCACHE_WAY_A_BK1_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RME_DCACHE_WAY_A_BK1  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RM_DCACHE_WAY_A_BK1_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RM_DCACHE_WAY_A_BK1_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RM_DCACHE_WAY_A_BK1  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_TEST1_DCACHE_WAY_A_BK0_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_TEST1_DCACHE_WAY_A_BK0_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_TEST1_DCACHE_WAY_A_BK0  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RA_DCACHE_WAY_A_BK0_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RA_DCACHE_WAY_A_BK0_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RA_DCACHE_WAY_A_BK0  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_LS_DCACHE_WAY_A_BK0_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_LS_DCACHE_WAY_A_BK0_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_LS_DCACHE_WAY_A_BK0  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WA_DCACHE_WAY_A_BK0_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WA_DCACHE_WAY_A_BK0_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WA_DCACHE_WAY_A_BK0  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_A_BK0_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_A_BK0_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_A_BK0  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RME_DCACHE_WAY_A_BK0_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RME_DCACHE_WAY_A_BK0_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RME_DCACHE_WAY_A_BK0  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RM_DCACHE_WAY_A_BK0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RM_DCACHE_WAY_A_BK0_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL1_HIFI3_WRAPPER_RM_DCACHE_WAY_A_BK0  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_TEST1_DCACHE_WAY_B_BK1_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_TEST1_DCACHE_WAY_B_BK1_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_TEST1_DCACHE_WAY_B_BK1  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RA_DCACHE_WAY_B_BK1_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RA_DCACHE_WAY_B_BK1_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RA_DCACHE_WAY_B_BK1  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_LS_DCACHE_WAY_B_BK1_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_LS_DCACHE_WAY_B_BK1_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_LS_DCACHE_WAY_B_BK1  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WA_DCACHE_WAY_B_BK1_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WA_DCACHE_WAY_B_BK1_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WA_DCACHE_WAY_B_BK1  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_B_BK1_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_B_BK1_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_B_BK1  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RME_DCACHE_WAY_B_BK1_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RME_DCACHE_WAY_B_BK1_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RME_DCACHE_WAY_B_BK1  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RM_DCACHE_WAY_B_BK1_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RM_DCACHE_WAY_B_BK1_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RM_DCACHE_WAY_B_BK1  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_TEST1_DCACHE_WAY_B_BK0_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_TEST1_DCACHE_WAY_B_BK0_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_TEST1_DCACHE_WAY_B_BK0  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RA_DCACHE_WAY_B_BK0_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RA_DCACHE_WAY_B_BK0_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RA_DCACHE_WAY_B_BK0  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_LS_DCACHE_WAY_B_BK0_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_LS_DCACHE_WAY_B_BK0_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_LS_DCACHE_WAY_B_BK0  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WA_DCACHE_WAY_B_BK0_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WA_DCACHE_WAY_B_BK0_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WA_DCACHE_WAY_B_BK0  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_B_BK0_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_B_BK0_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_WPULSE_DCACHE_WAY_B_BK0  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RME_DCACHE_WAY_B_BK0_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RME_DCACHE_WAY_B_BK0_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RME_DCACHE_WAY_B_BK0  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RM_DCACHE_WAY_B_BK0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RM_DCACHE_WAY_B_BK0_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL2_HIFI3_WRAPPER_RM_DCACHE_WAY_B_BK0  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_TEST1_DRAM0_BK1_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_TEST1_DRAM0_BK1_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_TEST1_DRAM0_BK1  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RA_DRAM0_BK1_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RA_DRAM0_BK1_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RA_DRAM0_BK1  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_LS_DRAM0_BK1_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_LS_DRAM0_BK1_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_LS_DRAM0_BK1  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WA_DRAM0_BK1_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WA_DRAM0_BK1_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WA_DRAM0_BK1  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WPULSE_DRAM0_BK1_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WPULSE_DRAM0_BK1_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WPULSE_DRAM0_BK1  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RME_DRAM0_BK1_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RME_DRAM0_BK1_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RME_DRAM0_BK1  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RM_DRAM0_BK1_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RM_DRAM0_BK1_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RM_DRAM0_BK1  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_TEST1_DRAM0_BK0_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_TEST1_DRAM0_BK0_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_TEST1_DRAM0_BK0  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RA_DRAM0_BK0_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RA_DRAM0_BK0_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RA_DRAM0_BK0  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_LS_DRAM0_BK0_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_LS_DRAM0_BK0_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_LS_DRAM0_BK0  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WA_DRAM0_BK0_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WA_DRAM0_BK0_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WA_DRAM0_BK0  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WPULSE_DRAM0_BK0_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WPULSE_DRAM0_BK0_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_WPULSE_DRAM0_BK0  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RME_DRAM0_BK0_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RME_DRAM0_BK0_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RME_DRAM0_BK0  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RM_DRAM0_BK0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RM_DRAM0_BK0_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL3_HIFI3_WRAPPER_RM_DRAM0_BK0  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_TEST1_DRAM1_BK1_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_TEST1_DRAM1_BK1_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_TEST1_DRAM1_BK1  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RA_DRAM1_BK1_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RA_DRAM1_BK1_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RA_DRAM1_BK1  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_LS_DRAM1_BK1_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_LS_DRAM1_BK1_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_LS_DRAM1_BK1  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WA_DRAM1_BK1_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WA_DRAM1_BK1_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WA_DRAM1_BK1  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WPULSE_DRAM1_BK1_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WPULSE_DRAM1_BK1_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WPULSE_DRAM1_BK1  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RME_DRAM1_BK1_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RME_DRAM1_BK1_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RME_DRAM1_BK1  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RM_DRAM1_BK1_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RM_DRAM1_BK1_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RM_DRAM1_BK1  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_TEST1_DRAM1_BK0_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_TEST1_DRAM1_BK0_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_TEST1_DRAM1_BK0  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RA_DRAM1_BK0_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RA_DRAM1_BK0_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RA_DRAM1_BK0  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_LS_DRAM1_BK0_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_LS_DRAM1_BK0_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_LS_DRAM1_BK0  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WA_DRAM1_BK0_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WA_DRAM1_BK0_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WA_DRAM1_BK0  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WPULSE_DRAM1_BK0_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WPULSE_DRAM1_BK0_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_WPULSE_DRAM1_BK0  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RME_DRAM1_BK0_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RME_DRAM1_BK0_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RME_DRAM1_BK0  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RM_DRAM1_BK0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RM_DRAM1_BK0_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL4_HIFI3_WRAPPER_RM_DRAM1_BK0  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_TEST1_DTAG0_WAY_B_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_TEST1_DTAG0_WAY_B_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_TEST1_DTAG0_WAY_B  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RA_DTAG0_WAY_B_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RA_DTAG0_WAY_B_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RA_DTAG0_WAY_B  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_LS_DTAG0_WAY_B_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_LS_DTAG0_WAY_B_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_LS_DTAG0_WAY_B  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WA_DTAG0_WAY_B_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WA_DTAG0_WAY_B_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WA_DTAG0_WAY_B  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WPULSE_DTAG0_WAY_B_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WPULSE_DTAG0_WAY_B_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WPULSE_DTAG0_WAY_B  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RME_DTAG0_WAY_B_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RME_DTAG0_WAY_B_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RME_DTAG0_WAY_B  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RM_DTAG0_WAY_B_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RM_DTAG0_WAY_B_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RM_DTAG0_WAY_B  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_TEST1_DTAG0_WAY_A_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_TEST1_DTAG0_WAY_A_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_TEST1_DTAG0_WAY_A  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RA_DTAG0_WAY_A_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RA_DTAG0_WAY_A_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RA_DTAG0_WAY_A  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_LS_DTAG0_WAY_A_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_LS_DTAG0_WAY_A_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_LS_DTAG0_WAY_A  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WA_DTAG0_WAY_A_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WA_DTAG0_WAY_A_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WA_DTAG0_WAY_A  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WPULSE_DTAG0_WAY_A_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WPULSE_DTAG0_WAY_A_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_WPULSE_DTAG0_WAY_A  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RME_DTAG0_WAY_A_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RME_DTAG0_WAY_A_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RME_DTAG0_WAY_A  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RM_DTAG0_WAY_A_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RM_DTAG0_WAY_A_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL5_HIFI3_WRAPPER_RM_DTAG0_WAY_A  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_TEST1_ITAG_WAY_A_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_TEST1_ITAG_WAY_A_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_TEST1_ITAG_WAY_A  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RA_ITAG_WAY_A_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RA_ITAG_WAY_A_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RA_ITAG_WAY_A  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_LS_ITAG_WAY_A_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_LS_ITAG_WAY_A_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_LS_ITAG_WAY_A  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WA_ITAG_WAY_A_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WA_ITAG_WAY_A_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WA_ITAG_WAY_A  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WPULSE_ITAG_WAY_A_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WPULSE_ITAG_WAY_A_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WPULSE_ITAG_WAY_A  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RME_ITAG_WAY_A_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RME_ITAG_WAY_A_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RME_ITAG_WAY_A  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RM_ITAG_WAY_A_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RM_ITAG_WAY_A_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RM_ITAG_WAY_A  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_TEST1_IRAM_0_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_TEST1_IRAM_0_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_TEST1_IRAM_0  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RA_IRAM_0_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RA_IRAM_0_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RA_IRAM_0  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_LS_IRAM_0_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_LS_IRAM_0_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_LS_IRAM_0  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WA_IRAM_0_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WA_IRAM_0_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WA_IRAM_0  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WPULSE_IRAM_0_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WPULSE_IRAM_0_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_WPULSE_IRAM_0  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RME_IRAM_0_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RME_IRAM_0_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RME_IRAM_0  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RM_IRAM_0_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RM_IRAM_0_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL6_HIFI3_WRAPPER_RM_IRAM_0  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_TEST1_PRETECH_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_TEST1_PRETECH_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_TEST1_PRETECH  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RA_PRETECH_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RA_PRETECH_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RA_PRETECH  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_LS_PRETECH_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_LS_PRETECH_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_LS_PRETECH  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WA_PRETECH_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WA_PRETECH_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WA_PRETECH  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WPULSE_PRETECH_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WPULSE_PRETECH_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WPULSE_PRETECH  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RME_PRETECH_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RME_PRETECH_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RME_PRETECH  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RM_PRETECH_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RM_PRETECH_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RM_PRETECH  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_TEST1_ITAG_WAY_B_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_TEST1_ITAG_WAY_B_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_TEST1_ITAG_WAY_B  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RA_ITAG_WAY_B_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RA_ITAG_WAY_B_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RA_ITAG_WAY_B  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_LS_ITAG_WAY_B_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_LS_ITAG_WAY_B_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_LS_ITAG_WAY_B  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WA_ITAG_WAY_B_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WA_ITAG_WAY_B_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WA_ITAG_WAY_B  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WPULSE_ITAG_WAY_B_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WPULSE_ITAG_WAY_B_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_WPULSE_ITAG_WAY_B  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RME_ITAG_WAY_B_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RME_ITAG_WAY_B_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RME_ITAG_WAY_B  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RM_ITAG_WAY_B_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RM_ITAG_WAY_B_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL7_HIFI3_WRAPPER_RM_ITAG_WAY_B  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_TEST1_TRACEMEM_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_TEST1_TRACEMEM_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_TEST1_TRACEMEM  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RA_TRACEMEM_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RA_TRACEMEM_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RA_TRACEMEM  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_LS_TRACEMEM_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_LS_TRACEMEM_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_LS_TRACEMEM  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_WA_TRACEMEM_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_WA_TRACEMEM_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_WA_TRACEMEM  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_WPULSE_TRACEMEM_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_WPULSE_TRACEMEM_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_WPULSE_TRACEMEM  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RME_TRACEMEM_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RME_TRACEMEM_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RME_TRACEMEM  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RM_TRACEMEM_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RM_TRACEMEM_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL8_HIFI3_WRAPPER_RM_TRACEMEM  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_TEST1_DTAG1_WAY_B_OFFSET  0x1e
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_TEST1_DTAG1_WAY_B_MASK  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_TEST1_DTAG1_WAY_B  0x40000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RA_DTAG1_WAY_B_OFFSET  0x1c
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RA_DTAG1_WAY_B_MASK  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RA_DTAG1_WAY_B  0x30000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_LS_DTAG1_WAY_B_OFFSET  0x1b
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_LS_DTAG1_WAY_B_MASK  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_LS_DTAG1_WAY_B  0x8000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WA_DTAG1_WAY_B_OFFSET  0x18
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WA_DTAG1_WAY_B_MASK  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WA_DTAG1_WAY_B  0x7000000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WPULSE_DTAG1_WAY_B_OFFSET  0x15
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WPULSE_DTAG1_WAY_B_MASK  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WPULSE_DTAG1_WAY_B  0xe00000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RME_DTAG1_WAY_B_OFFSET  0x14
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RME_DTAG1_WAY_B_MASK  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RME_DTAG1_WAY_B  0x100000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RM_DTAG1_WAY_B_OFFSET  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RM_DTAG1_WAY_B_MASK  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RM_DTAG1_WAY_B  0xf0000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_TEST1_DTAG1_WAY_A_OFFSET  0xe
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_TEST1_DTAG1_WAY_A_MASK  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_TEST1_DTAG1_WAY_A  0x4000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RA_DTAG1_WAY_A_OFFSET  0xc
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RA_DTAG1_WAY_A_MASK  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RA_DTAG1_WAY_A  0x3000
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_LS_DTAG1_WAY_A_OFFSET  0xb
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_LS_DTAG1_WAY_A_MASK  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_LS_DTAG1_WAY_A  0x800
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WA_DTAG1_WAY_A_OFFSET  0x8
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WA_DTAG1_WAY_A_MASK  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WA_DTAG1_WAY_A  0x700
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WPULSE_DTAG1_WAY_A_OFFSET  0x5
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WPULSE_DTAG1_WAY_A_MASK  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_WPULSE_DTAG1_WAY_A  0xe0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RME_DTAG1_WAY_A_OFFSET  0x4
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RME_DTAG1_WAY_A_MASK  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RME_DTAG1_WAY_A  0x10
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RM_DTAG1_WAY_A_OFFSET  0x0
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RM_DTAG1_WAY_A_MASK  0xf
#define HIFI3_WRAPPER_HIFI3_MEMORY_CTRL9_HIFI3_WRAPPER_RM_DTAG1_WAY_A  0xf
#define GPTC0_CONTROL_WATCHDOG_MODE_OFFSET  0x1b
#define GPTC0_CONTROL_WATCHDOG_MODE_MASK  0x8000000
#define GPTC0_CONTROL_WATCHDOG_MODE  0x8000000
#define GPTC0_CONTROL_EVENT_PRE_DIVIDE_OFFSET  0x10
#define GPTC0_CONTROL_EVENT_PRE_DIVIDE_MASK  0xff0000
#define GPTC0_CONTROL_EVENT_PRE_DIVIDE  0xff0000
#define GPTC0_CONTROL_EVENT_SELECT_OFFSET  0x8
#define GPTC0_CONTROL_EVENT_SELECT_MASK  0xff00
#define GPTC0_CONTROL_EVENT_SELECT  0xff00
#define GPTC0_CONTROL_EVENT_POLARITY_OFFSET  0x7
#define GPTC0_CONTROL_EVENT_POLARITY_MASK  0x80
#define GPTC0_CONTROL_EVENT_POLARITY  0x80
#define GPTC0_CONTROL_INT_STATUS_OFFSET  0x6
#define GPTC0_CONTROL_INT_STATUS_MASK  0x40
#define GPTC0_CONTROL_INT_STATUS  0x40
#define GPTC0_CONTROL_INT_ENABLE_OFFSET  0x5
#define GPTC0_CONTROL_INT_ENABLE_MASK  0x20
#define GPTC0_CONTROL_INT_ENABLE  0x20
#define GPTC0_CONTROL_CONTINUOUS_OFFSET  0x4
#define GPTC0_CONTROL_CONTINUOUS_MASK  0x10
#define GPTC0_CONTROL_CONTINUOUS  0x10
#define GPTC0_CONTROL_MODE_OFFSET  0x2
#define GPTC0_CONTROL_MODE_MASK  0xc
#define GPTC0_CONTROL_MODE  0xc
#define GPTC0_CONTROL_RUN_OFFSET  0x1
#define GPTC0_CONTROL_RUN_MASK  0x2
#define GPTC0_CONTROL_RUN  0x2
#define GPTC0_CONTROL_ENABLE_OFFSET  0x0
#define GPTC0_CONTROL_ENABLE_MASK  0x1
#define GPTC0_CONTROL_ENABLE  0x1
#define GPTC0_WD_CONTROL_WD_CONTROL_OFFSET  0x0
#define GPTC0_WD_CONTROL_WD_CONTROL_MASK  0xffffffff
#define GPTC0_WD_CONTROL_WD_CONTROL  0xffffffff
#define GPTC0_INT_STAT_INT_STATUS_OFFSET  0x0
#define GPTC0_INT_STAT_INT_STATUS_MASK  0x1
#define GPTC0_INT_STAT_INT_STATUS  0x1
#define GPTC0_TERMINAL_COUNT_TERMINAL_COUNT_OFFSET  0x0
#define GPTC0_TERMINAL_COUNT_TERMINAL_COUNT_MASK  0xffffffff
#define GPTC0_TERMINAL_COUNT_TERMINAL_COUNT  0xffffffff
#define GPTC0_CURRENT_COUNT_CURRENT_COUNT_OFFSET  0x0
#define GPTC0_CURRENT_COUNT_CURRENT_COUNT_MASK  0xffffffff
#define GPTC0_CURRENT_COUNT_CURRENT_COUNT  0xffffffff
#define WD_OUT_CONTROL_WD_OUT_CONTROL_OFFSET  0x0
#define WD_OUT_CONTROL_WD_OUT_CONTROL_MASK  0x1
#define WD_OUT_CONTROL_WD_OUT_CONTROL  0x1
#define GPTC1_CONTROL_WATCHDOG_MODE_OFFSET  0x1b
#define GPTC1_CONTROL_WATCHDOG_MODE_MASK  0x8000000
#define GPTC1_CONTROL_WATCHDOG_MODE  0x8000000
#define GPTC1_CONTROL_EVENT_PRE_DIVIDE_OFFSET  0x10
#define GPTC1_CONTROL_EVENT_PRE_DIVIDE_MASK  0xff0000
#define GPTC1_CONTROL_EVENT_PRE_DIVIDE  0xff0000
#define GPTC1_CONTROL_EVENT_SELECT_OFFSET  0x8
#define GPTC1_CONTROL_EVENT_SELECT_MASK  0xff00
#define GPTC1_CONTROL_EVENT_SELECT  0xff00
#define GPTC1_CONTROL_EVENT_POLARITY_OFFSET  0x7
#define GPTC1_CONTROL_EVENT_POLARITY_MASK  0x80
#define GPTC1_CONTROL_EVENT_POLARITY  0x80
#define GPTC1_CONTROL_INT_STATUS_OFFSET  0x6
#define GPTC1_CONTROL_INT_STATUS_MASK  0x40
#define GPTC1_CONTROL_INT_STATUS  0x40
#define GPTC1_CONTROL_INT_ENABLE_OFFSET  0x5
#define GPTC1_CONTROL_INT_ENABLE_MASK  0x20
#define GPTC1_CONTROL_INT_ENABLE  0x20
#define GPTC1_CONTROL_CONTINUOUS_OFFSET  0x4
#define GPTC1_CONTROL_CONTINUOUS_MASK  0x10
#define GPTC1_CONTROL_CONTINUOUS  0x10
#define GPTC1_CONTROL_MODE_OFFSET  0x2
#define GPTC1_CONTROL_MODE_MASK  0xc
#define GPTC1_CONTROL_MODE  0xc
#define GPTC1_CONTROL_RUN_OFFSET  0x1
#define GPTC1_CONTROL_RUN_MASK  0x2
#define GPTC1_CONTROL_RUN  0x2
#define GPTC1_CONTROL_ENABLE_OFFSET  0x0
#define GPTC1_CONTROL_ENABLE_MASK  0x1
#define GPTC1_CONTROL_ENABLE  0x1
#define GPTC1_WD_CONTROL_WD_CONTROL_OFFSET  0x0
#define GPTC1_WD_CONTROL_WD_CONTROL_MASK  0xffffffff
#define GPTC1_WD_CONTROL_WD_CONTROL  0xffffffff
#define GPTC1_INT_STAT_INT_STATUS_OFFSET  0x0
#define GPTC1_INT_STAT_INT_STATUS_MASK  0x1
#define GPTC1_INT_STAT_INT_STATUS  0x1
#define GPTC1_TERMINAL_COUNT_TERMINAL_COUNT_OFFSET  0x0
#define GPTC1_TERMINAL_COUNT_TERMINAL_COUNT_MASK  0xffffffff
#define GPTC1_TERMINAL_COUNT_TERMINAL_COUNT  0xffffffff
#define GPTC1_CURRENT_COUNT_CURRENT_COUNT_OFFSET  0x0
#define GPTC1_CURRENT_COUNT_CURRENT_COUNT_MASK  0xffffffff
#define GPTC1_CURRENT_COUNT_CURRENT_COUNT  0xffffffff
#define SPTC0_CONTROL_EVENT_PRE_DIVIDE_OFFSET  0x10
#define SPTC0_CONTROL_EVENT_PRE_DIVIDE_MASK  0xff0000
#define SPTC0_CONTROL_EVENT_PRE_DIVIDE  0xff0000
#define SPTC0_CONTROL_EVENT_SELECT_OFFSET  0x8
#define SPTC0_CONTROL_EVENT_SELECT_MASK  0xff00
#define SPTC0_CONTROL_EVENT_SELECT  0xff00
#define SPTC0_CONTROL_EVENT_POLARITY_OFFSET  0x7
#define SPTC0_CONTROL_EVENT_POLARITY_MASK  0x80
#define SPTC0_CONTROL_EVENT_POLARITY  0x80
#define SPTC0_CONTROL_INT_ENABLE_OFFSET  0x5
#define SPTC0_CONTROL_INT_ENABLE_MASK  0x20
#define SPTC0_CONTROL_INT_ENABLE  0x20
#define SPTC0_CONTROL_CONTINUOUS_OFFSET  0x4
#define SPTC0_CONTROL_CONTINUOUS_MASK  0x10
#define SPTC0_CONTROL_CONTINUOUS  0x10
#define SPTC0_CONTROL_MODE_OFFSET  0x2
#define SPTC0_CONTROL_MODE_MASK  0xc
#define SPTC0_CONTROL_MODE  0xc
#define SPTC0_CONTROL_RUN_OFFSET  0x1
#define SPTC0_CONTROL_RUN_MASK  0x2
#define SPTC0_CONTROL_RUN  0x2
#define SPTC0_CONTROL_ENABLE_OFFSET  0x0
#define SPTC0_CONTROL_ENABLE_MASK  0x1
#define SPTC0_CONTROL_ENABLE  0x1
#define SPTC0_INT_STAT_INT_STATUS_OFFSET  0x0
#define SPTC0_INT_STAT_INT_STATUS_MASK  0x1
#define SPTC0_INT_STAT_INT_STATUS  0x1
#define SPTC0_TERMINAL_COUNT_TERMINAL_COUNT_OFFSET  0x0
#define SPTC0_TERMINAL_COUNT_TERMINAL_COUNT_MASK  0xffffffff
#define SPTC0_TERMINAL_COUNT_TERMINAL_COUNT  0xffffffff
#define SPTC0_CURRENT_COUNT_CURRENT_COUNT_OFFSET  0x0
#define SPTC0_CURRENT_COUNT_CURRENT_COUNT_MASK  0xffffffff
#define SPTC0_CURRENT_COUNT_CURRENT_COUNT  0xffffffff
#define SPTC0_MEASUREMENT_COUNT_MEASUREMENT_COUNT_OFFSET  0x0
#define SPTC0_MEASUREMENT_COUNT_MEASUREMENT_COUNT_MASK  0xffffffff
#define SPTC0_MEASUREMENT_COUNT_MEASUREMENT_COUNT  0xffffffff
#define SPTC0_MEASUREMENT_TARGET_MEASUREMENT_TARGET_OFFSET  0x0
#define SPTC0_MEASUREMENT_TARGET_MEASUREMENT_TARGET_MASK  0xffffffff
#define SPTC0_MEASUREMENT_TARGET_MEASUREMENT_TARGET  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_MEASUREMENT_ACCUM_ERROR_OFFSET  0x0
#define SPTC0_MEASUREMENT_ACCUM_ERROR_MEASUREMENT_ACCUM_ERROR_MASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_MEASUREMENT_ACCUM_ERROR  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_MEASUREMENT_ACCUM_ERROR_ADJUST_OFFSET  0x0
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_MEASUREMENT_ACCUM_ERROR_ADJUST_MASK  0xffffffff
#define SPTC0_MEASUREMENT_ACCUM_ERROR_ADJUST_MEASUREMENT_ACCUM_ERROR_ADJUST  0xffffffff
#define PMU_CURRENT_POWER_STATE_PMU_CURRENT_POWER_STATE_OFFSET  0x0
#define PMU_CURRENT_POWER_STATE_PMU_CURRENT_POWER_STATE_MASK  0xffffffff
#define PMU_CURRENT_POWER_STATE_PMU_CURRENT_POWER_STATE  0xffffffff
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_PWR_ACK_OFFSET  0x1f
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_PWR_ACK_MASK  0x80000000
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_PWR_ACK  0x80000000
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_PWR_ACK_OFFSET  0x1e
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_PWR_ACK_MASK  0x40000000
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_PWR_ACK  0x40000000
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_PWR_ACK_OFFSET  0x1d
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_PWR_ACK_MASK  0x20000000
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_PWR_ACK  0x20000000
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_PWR_ACK_OFFSET  0x1c
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_PWR_ACK_MASK  0x10000000
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_PWR_ACK  0x10000000
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_CLK_EN_OFFSET  0xf
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_CLK_EN_MASK  0x8000
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_CLK_EN  0x8000
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_CLK_EN_OFFSET  0xe
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_CLK_EN_MASK  0x4000
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_CLK_EN  0x4000
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_CLK_EN_OFFSET  0xd
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_CLK_EN_MASK  0x2000
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_CLK_EN  0x2000
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_CLK_EN_OFFSET  0xc
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_CLK_EN_MASK  0x1000
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_CLK_EN  0x1000
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_ISOLATN_OFFSET  0xb
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_ISOLATN_MASK  0x800
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_ISOLATN  0x800
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_ISOLATN_OFFSET  0xa
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_ISOLATN_MASK  0x400
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_ISOLATN  0x400
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_ISOLATN_OFFSET  0x9
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_ISOLATN_MASK  0x200
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_ISOLATN  0x200
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_ISOLATN_OFFSET  0x8
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_ISOLATN_MASK  0x100
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_ISOLATN  0x100
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_RST_N_OFFSET  0x7
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_RST_N_MASK  0x80
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_RST_N  0x80
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_RST_N_OFFSET  0x6
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_RST_N_MASK  0x40
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_RST_N  0x40
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_RST_N_OFFSET  0x5
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_RST_N_MASK  0x20
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_RST_N  0x20
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_RST_N_OFFSET  0x4
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_RST_N_MASK  0x10
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_RST_N  0x10
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_PWR_ON_OFFSET  0x3
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_PWR_ON_MASK  0x8
#define PMU_PWR_SEQ_CONTROL_PMU_HIFI3_PWR_ON  0x8
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_PWR_ON_OFFSET  0x2
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_PWR_ON_MASK  0x4
#define PMU_PWR_SEQ_CONTROL_PMU_SHAREMEM_PWR_ON  0x4
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_PWR_ON_OFFSET  0x1
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_PWR_ON_MASK  0x2
#define PMU_PWR_SEQ_CONTROL_PMU_DSP_PWR_ON  0x2
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_PWR_ON_OFFSET  0x0
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_PWR_ON_MASK  0x1
#define PMU_PWR_SEQ_CONTROL_PMU_SSE_PWR_ON  0x1
#define PMU_PMU_INTERRUPT_PMU_GP_WAKE_OFFSET  0x4
#define PMU_PMU_INTERRUPT_PMU_GP_WAKE_MASK  0x7ffffff0
#define PMU_PMU_INTERRUPT_PMU_GP_WAKE  0x7ffffff0
#define PMU_PMU_INTERRUPT_PMU_BUTTON_PRESS_WAKE_OFFSET  0x3
#define PMU_PMU_INTERRUPT_PMU_BUTTON_PRESS_WAKE_MASK  0x8
#define PMU_PMU_INTERRUPT_PMU_BUTTON_PRESS_WAKE  0x8
#define PMU_PMU_INTERRUPT_PMU_ELK_WAKE_OFFSET  0x2
#define PMU_PMU_INTERRUPT_PMU_ELK_WAKE_MASK  0x4
#define PMU_PMU_INTERRUPT_PMU_ELK_WAKE  0x4
#define PMU_PMU_INTERRUPT_PMU_BAT_WAKE_OFFSET  0x1
#define PMU_PMU_INTERRUPT_PMU_BAT_WAKE_MASK  0x2
#define PMU_PMU_INTERRUPT_PMU_BAT_WAKE  0x2
#define PMU_PMU_INTERRUPT_PMU_VAD_WAKE_OFFSET  0x0
#define PMU_PMU_INTERRUPT_PMU_VAD_WAKE_MASK  0x1
#define PMU_PMU_INTERRUPT_PMU_VAD_WAKE  0x1
#define PMU_PMU_INTERRUPT_ENABLE_REG_PMU_ASYNC_WAKE_EN_OFFSET  0x1f
#define PMU_PMU_INTERRUPT_ENABLE_REG_PMU_ASYNC_WAKE_EN_MASK  0x80000000
#define PMU_PMU_INTERRUPT_ENABLE_REG_PMU_ASYNC_WAKE_EN  0x80000000
#define PMU_PMU_INTERRUPT_ENABLE_PMU_GP_ENABLE_OFFSET  0x4
#define PMU_PMU_INTERRUPT_ENABLE_PMU_GP_ENABLE_MASK  0x7ffffff0
#define PMU_PMU_INTERRUPT_ENABLE_PMU_GP_ENABLE  0x7ffffff0
#define PMU_PMU_INTERRUPT_ENABLE_PMU_BUTTON_PRESS_WAKE_ENABLE_OFFSET  0x3
#define PMU_PMU_INTERRUPT_ENABLE_PMU_BUTTON_PRESS_WAKE_ENABLE_MASK  0x8
#define PMU_PMU_INTERRUPT_ENABLE_PMU_BUTTON_PRESS_WAKE_ENABLE  0x8
#define PMU_PMU_INTERRUPT_ENABLE_PMU_ELK_WAKE_ENABLE_OFFSET  0x2
#define PMU_PMU_INTERRUPT_ENABLE_PMU_ELK_WAKE_ENABLE_MASK  0x4
#define PMU_PMU_INTERRUPT_ENABLE_PMU_ELK_WAKE_ENABLE  0x4
#define PMU_PMU_INTERRUPT_ENABLE_PMU_BAT_ENABLE_OFFSET  0x1
#define PMU_PMU_INTERRUPT_ENABLE_PMU_BAT_ENABLE_MASK  0x2
#define PMU_PMU_INTERRUPT_ENABLE_PMU_BAT_ENABLE  0x2
#define PMU_PMU_INTERRUPT_ENABLE_PMU_VAD_ENABLE_OFFSET  0x0
#define PMU_PMU_INTERRUPT_ENABLE_PMU_VAD_ENABLE_MASK  0x1
#define PMU_PMU_INTERRUPT_ENABLE_PMU_VAD_ENABLE  0x1
#define PMU_PORITY_CONTROL_PMU_GPIO_POLARITY_OFFSET  0x4
#define PMU_PORITY_CONTROL_PMU_GPIO_POLARITY_MASK  0x7ffffff0
#define PMU_PORITY_CONTROL_PMU_GPIO_POLARITY  0x7ffffff0
#define PMU_PORITY_CONTROL_PMU_BUTTON_POLARITY_OFFSET  0x3
#define PMU_PORITY_CONTROL_PMU_BUTTON_POLARITY_MASK  0x8
#define PMU_PORITY_CONTROL_PMU_BUTTON_POLARITY  0x8
#define PMU_PORITY_CONTROL_PMU_ELK_POLARITY_OFFSET  0x2
#define PMU_PORITY_CONTROL_PMU_ELK_POLARITY_MASK  0x4
#define PMU_PORITY_CONTROL_PMU_ELK_POLARITY  0x4
#define PMU_PORITY_CONTROL_PMU_BAT_POLARITY_OFFSET  0x1
#define PMU_PORITY_CONTROL_PMU_BAT_POLARITY_MASK  0x2
#define PMU_PORITY_CONTROL_PMU_BAT_POLARITY  0x2
#define PMU_PORITY_CONTROL_PMU_VAD_POLARITY_OFFSET  0x0
#define PMU_PORITY_CONTROL_PMU_VAD_POLARITY_MASK  0x1
#define PMU_PORITY_CONTROL_PMU_VAD_POLARITY  0x1
#define PMU_WAKE_SRC_STATUS_PMU_BUTTON_PRESS_STATUS_OFFSET  0x3
#define PMU_WAKE_SRC_STATUS_PMU_BUTTON_PRESS_STATUS_MASK  0x8
#define PMU_WAKE_SRC_STATUS_PMU_BUTTON_PRESS_STATUS  0x8
#define PMU_WAKE_SRC_STATUS_PMU_ELK_WAKE_SRC_OFFSET  0x2
#define PMU_WAKE_SRC_STATUS_PMU_ELK_WAKE_SRC_MASK  0x4
#define PMU_WAKE_SRC_STATUS_PMU_ELK_WAKE_SRC  0x4
#define PMU_WAKE_SRC_STATUS_PMU_BAT_IS_LOW_OFFSET  0x1
#define PMU_WAKE_SRC_STATUS_PMU_BAT_IS_LOW_MASK  0x2
#define PMU_WAKE_SRC_STATUS_PMU_BAT_IS_LOW  0x2
#define PMU_WAKE_SRC_STATUS_PMU_VAD_DET_OFFSET  0x0
#define PMU_WAKE_SRC_STATUS_PMU_VAD_DET_MASK  0x1
#define PMU_WAKE_SRC_STATUS_PMU_VAD_DET  0x1
#define PMU_RCOSC_CONTROL_REG_PMU_RCOSC_DIS_OFFSET  0x0
#define PMU_RCOSC_CONTROL_REG_PMU_RCOSC_DIS_MASK  0x1
#define PMU_RCOSC_CONTROL_REG_PMU_RCOSC_DIS  0x1
#define EARLINK_TIMING_CTRL0_EARLINK_PLL_MULTIPLIER_OFFSET  0x10
#define EARLINK_TIMING_CTRL0_EARLINK_PLL_MULTIPLIER_MASK  0xff0000
#define EARLINK_TIMING_CTRL0_EARLINK_PLL_MULTIPLIER  0xff0000
#define EARLINK_TIMING_CTRL0_EARLINK_RX_DELAY_OFFSET  0x8
#define EARLINK_TIMING_CTRL0_EARLINK_RX_DELAY_MASK  0xff00
#define EARLINK_TIMING_CTRL0_EARLINK_RX_DELAY  0xff00
#define EARLINK_TIMING_CTRL0_EARLINK_TX_DELAY_OFFSET  0x0
#define EARLINK_TIMING_CTRL0_EARLINK_TX_DELAY_MASK  0xff
#define EARLINK_TIMING_CTRL0_EARLINK_TX_DELAY  0xff
#define EARLINK_TIMING_CTRL1_EARLINK_COMMAND_REPLY_START_OFFSET  0x18
#define EARLINK_TIMING_CTRL1_EARLINK_COMMAND_REPLY_START_MASK  0xff000000
#define EARLINK_TIMING_CTRL1_EARLINK_COMMAND_REPLY_START  0xff000000
#define EARLINK_TIMING_CTRL1_EARLINK_FRAME_SYNC_TRUN_AROUND_1_START_OFFSET  0x10
#define EARLINK_TIMING_CTRL1_EARLINK_FRAME_SYNC_TRUN_AROUND_1_START_MASK  0xff0000
#define EARLINK_TIMING_CTRL1_EARLINK_FRAME_SYNC_TRUN_AROUND_1_START  0xff0000
#define EARLINK_TIMING_CTRL1_EARLINK_ONE_MARKER_START_OFFSET  0x8
#define EARLINK_TIMING_CTRL1_EARLINK_ONE_MARKER_START_MASK  0xff00
#define EARLINK_TIMING_CTRL1_EARLINK_ONE_MARKER_START  0xff00
#define EARLINK_TIMING_CTRL1_EARLINK_ZERO_MARKER_START_OFFSET  0x0
#define EARLINK_TIMING_CTRL1_EARLINK_ZERO_MARKER_START_MASK  0xff
#define EARLINK_TIMING_CTRL1_EARLINK_ZERO_MARKER_START  0xff
#define EARLINK_TIMING_CTRL2_EARLINK_TRUN_AROUND_2_START_OFFSET  0x18
#define EARLINK_TIMING_CTRL2_EARLINK_TRUN_AROUND_2_START_MASK  0xff000000
#define EARLINK_TIMING_CTRL2_EARLINK_TRUN_AROUND_2_START  0xff000000
#define EARLINK_TIMING_CTRL2_EARLINK_FORWARD_DATA_BIT_WIDTH_OFFSET  0x8
#define EARLINK_TIMING_CTRL2_EARLINK_FORWARD_DATA_BIT_WIDTH_MASK  0xff00
#define EARLINK_TIMING_CTRL2_EARLINK_FORWARD_DATA_BIT_WIDTH  0xff00
#define EARLINK_TIMING_CTRL2_EARLINK_FORWARD_DATA_START_OFFSET  0x0
#define EARLINK_TIMING_CTRL2_EARLINK_FORWARD_DATA_START_MASK  0xff
#define EARLINK_TIMING_CTRL2_EARLINK_FORWARD_DATA_START  0xff
#define EARLINK_TIMING_CTRL3_EARLINK_VOID_START_OFFSET  0x18
#define EARLINK_TIMING_CTRL3_EARLINK_VOID_START_MASK  0xff000000
#define EARLINK_TIMING_CTRL3_EARLINK_VOID_START  0xff000000
#define EARLINK_TIMING_CTRL3_EARLINK_BACKWARD_DATA_BIT_WIDTH_OFFSET  0x8
#define EARLINK_TIMING_CTRL3_EARLINK_BACKWARD_DATA_BIT_WIDTH_MASK  0xff00
#define EARLINK_TIMING_CTRL3_EARLINK_BACKWARD_DATA_BIT_WIDTH  0xff00
#define EARLINK_TIMING_CTRL3_EARLINK_BACKWARD_WAVE_START_OFFSET  0x0
#define EARLINK_TIMING_CTRL3_EARLINK_BACKWARD_WAVE_START_MASK  0xff
#define EARLINK_TIMING_CTRL3_EARLINK_BACKWARD_WAVE_START  0xff
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_AFULL_LEVEL_OFFSET  0x1c
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_AFULL_LEVEL_MASK  0xf0000000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_AFULL_LEVEL  0xf0000000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_AEMPTY_LEVEL_OFFSET  0x18
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_AEMPTY_LEVEL_MASK  0xf000000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_AEMPTY_LEVEL  0xf000000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_AFULL_LEVEL_OFFSET  0x14
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_AFULL_LEVEL_MASK  0xf00000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_AFULL_LEVEL  0xf00000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_AEMPTY_LEVEL_OFFSET  0x10
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_AEMPTY_LEVEL_MASK  0xf0000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_AEMPTY_LEVEL  0xf0000
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_ALMOST_EMPTY_OFFSET  0x7
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_ALMOST_EMPTY_MASK  0x80
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_ALMOST_EMPTY  0x80
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_ALMOST_FULL_OFFSET  0x6
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_ALMOST_FULL_MASK  0x40
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_ALMOST_FULL  0x40
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_EMPTY_OFFSET  0x5
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_EMPTY_MASK  0x20
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_EMPTY  0x20
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_FULL_OFFSET  0x4
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_FULL_MASK  0x10
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_RX_BUF_FULL  0x10
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_ALMOST_EMPTY_OFFSET  0x3
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_ALMOST_EMPTY_MASK  0x8
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_ALMOST_EMPTY  0x8
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_ALMOST_FULL_OFFSET  0x2
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_ALMOST_FULL_MASK  0x4
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_ALMOST_FULL  0x4
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_EMPTY_OFFSET  0x1
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_EMPTY_MASK  0x2
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_EMPTY  0x2
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_FULL_OFFSET  0x0
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_FULL_MASK  0x1
#define EARLINK_CMD_BUF_CTRL_EARLINK_CMD_TX_BUF_FULL  0x1
#define EARLINK_DEVICE_CTRL_EARLINK_CHG_SHARE_WIDTH_OFFSET  0x8
#define EARLINK_DEVICE_CTRL_EARLINK_CHG_SHARE_WIDTH_MASK  0x1f00
#define EARLINK_DEVICE_CTRL_EARLINK_CHG_SHARE_WIDTH  0x1f00
#define EARLINK_DEVICE_CTRL_EARLINK_TX_DATA_CHG_SHARE_ENABLE_OFFSET  0x4
#define EARLINK_DEVICE_CTRL_EARLINK_TX_DATA_CHG_SHARE_ENABLE_MASK  0x10
#define EARLINK_DEVICE_CTRL_EARLINK_TX_DATA_CHG_SHARE_ENABLE  0x10
#define EARLINK_DEVICE_CTRL_EARLINK_SLV_OR_MST_OFFSET  0x0
#define EARLINK_DEVICE_CTRL_EARLINK_SLV_OR_MST_MASK  0x1
#define EARLINK_DEVICE_CTRL_EARLINK_SLV_OR_MST  0x1
#define EARLINK_IRQ_TO_SYS_EARLINK_ATTACHED_SYS_UPDATE_OFFSET  0x1f
#define EARLINK_IRQ_TO_SYS_EARLINK_ATTACHED_SYS_UPDATE_MASK  0x80000000
#define EARLINK_IRQ_TO_SYS_EARLINK_ATTACHED_SYS_UPDATE  0x80000000
#define EARLINK_IRQ_TO_SYS_EARLINK_INVALID_COMMAND_SYS_OFFSET  0x1e
#define EARLINK_IRQ_TO_SYS_EARLINK_INVALID_COMMAND_SYS_MASK  0x40000000
#define EARLINK_IRQ_TO_SYS_EARLINK_INVALID_COMMAND_SYS  0x40000000
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_AUTO_STOP_ERR_OFFSET  0x1d
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_AUTO_STOP_ERR_MASK  0x20000000
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_AUTO_STOP_ERR  0x20000000
#define EARLINK_IRQ_TO_SYS_EARLINK_AT_OFFSET  0x1c
#define EARLINK_IRQ_TO_SYS_EARLINK_AT_MASK  0x10000000
#define EARLINK_IRQ_TO_SYS_EARLINK_AT  0x10000000
#define EARLINK_IRQ_TO_SYS_EARLINK_COMMAND_STARTED_OFFSET  0x1b
#define EARLINK_IRQ_TO_SYS_EARLINK_COMMAND_STARTED_MASK  0x8000000
#define EARLINK_IRQ_TO_SYS_EARLINK_COMMAND_STARTED  0x8000000
#define EARLINK_IRQ_TO_SYS_EARLINK_COMMAND_DONE_OFFSET  0x1a
#define EARLINK_IRQ_TO_SYS_EARLINK_COMMAND_DONE_MASK  0x4000000
#define EARLINK_IRQ_TO_SYS_EARLINK_COMMAND_DONE  0x4000000
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_RX_DONE_SYS_OFFSET  0x19
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_RX_DONE_SYS_MASK  0x2000000
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_RX_DONE_SYS  0x2000000
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_TX_DONE_SYS_OFFSET  0x18
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_TX_DONE_SYS_MASK  0x1000000
#define EARLINK_IRQ_TO_SYS_EARLINK_BULK_TX_DONE_SYS  0x1000000
#define EARLINK_IRQ_TO_SYS_EARLINK_CRC_WRONG_OFFSET  0x16
#define EARLINK_IRQ_TO_SYS_EARLINK_CRC_WRONG_MASK  0x400000
#define EARLINK_IRQ_TO_SYS_EARLINK_CRC_WRONG  0x400000
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_ALMOST_EMPTY_OFFSET  0x7
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_ALMOST_EMPTY_MASK  0x80
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_ALMOST_EMPTY  0x80
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_ALMOST_FULL_OFFSET  0x6
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_ALMOST_FULL_MASK  0x40
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_ALMOST_FULL  0x40
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_EMPTY_OFFSET  0x5
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_EMPTY_MASK  0x20
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_EMPTY  0x20
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_FULL_OFFSET  0x4
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_FULL_MASK  0x10
#define EARLINK_IRQ_TO_SYS_EARLINK_RX_BUF_FULL  0x10
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_ALMOST_EMPTY_OFFSET  0x3
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_ALMOST_EMPTY_MASK  0x8
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_ALMOST_EMPTY  0x8
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_ALMOST_FULL_OFFSET  0x2
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_ALMOST_FULL_MASK  0x4
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_ALMOST_FULL  0x4
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_EMPTY_OFFSET  0x1
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_EMPTY_MASK  0x2
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_EMPTY  0x2
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_FULL_OFFSET  0x0
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_FULL_MASK  0x1
#define EARLINK_IRQ_TO_SYS_EARLINK_TX_BUF_FULL  0x1
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_ATTACHED_UPDATE_SYS_ENABLE_OFFSET  0x1f
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_ATTACHED_UPDATE_SYS_ENABLE_MASK  0x80000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_ATTACHED_UPDATE_SYS_ENABLE  0x80000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_INVALID_COMMAND_SYS_ENABLE_OFFSET  0x1e
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_INVALID_COMMAND_SYS_ENABLE_MASK  0x40000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_INVALID_COMMAND_SYS_ENABLE  0x40000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_AUTO_STOP_ERR_ENABLE_OFFSET  0x1d
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_AUTO_STOP_ERR_ENABLE_MASK  0x20000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_AUTO_STOP_ERR_ENABLE  0x20000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_AT_ENABLE_OFFSET  0x1c
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_AT_ENABLE_MASK  0x10000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_AT_ENABLE  0x10000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_COMMAND_STARTED_ENABLE_OFFSET  0x1b
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_COMMAND_STARTED_ENABLE_MASK  0x8000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_COMMAND_STARTED_ENABLE  0x8000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_COMMAND_DONE_ENABLE_OFFSET  0x1a
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_COMMAND_DONE_ENABLE_MASK  0x4000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_COMMAND_DONE_ENABLE  0x4000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_RX_DONE_SYS_ENABLE_OFFSET  0x19
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_RX_DONE_SYS_ENABLE_MASK  0x2000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_RX_DONE_SYS_ENABLE  0x2000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_TX_DONE_SYS_ENABLE_OFFSET  0x18
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_TX_DONE_SYS_ENABLE_MASK  0x1000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_BULK_TX_DONE_SYS_ENABLE  0x1000000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_CRC_WRONG_ENABLE_OFFSET  0x16
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_CRC_WRONG_ENABLE_MASK  0x400000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_CRC_WRONG_ENABLE  0x400000
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_AEMPTY_ENABLE_OFFSET  0x7
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_AEMPTY_ENABLE_MASK  0x80
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_AEMPTY_ENABLE  0x80
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_AFULL_ENABLE_OFFSET  0x6
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_AFULL_ENABLE_MASK  0x40
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_AFULL_ENABLE  0x40
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_EMPTY_ENABLE_OFFSET  0x5
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_EMPTY_ENABLE_MASK  0x20
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_EMPTY_ENABLE  0x20
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_FULL_ENABLE_OFFSET  0x4
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_FULL_ENABLE_MASK  0x10
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_RX_BUF_FULL_ENABLE  0x10
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_AEMPTY_ENABLE_OFFSET  0x3
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_AEMPTY_ENABLE_MASK  0x8
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_AEMPTY_ENABLE  0x8
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_AFULL_ENABLE_OFFSET  0x2
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_AFULL_ENABLE_MASK  0x4
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_AFULL_ENABLE  0x4
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_EMPTY_ENABLE_OFFSET  0x1
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_EMPTY_ENABLE_MASK  0x2
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_EMPTY_ENABLE  0x2
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_FULL_ENABLE_OFFSET  0x0
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_FULL_ENABLE_MASK  0x1
#define EARLINK_IRQ_TO_SYS_ENABLE_EARLINK_TX_BUF_FULL_ENABLE  0x1
#define EARLINK_PORT_IRQ_TO_SYS_EARLINK_PORTX_IRQ_SYS_OFFSET  0x0
#define EARLINK_PORT_IRQ_TO_SYS_EARLINK_PORTX_IRQ_SYS_MASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_EARLINK_PORTX_IRQ_SYS  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_EARLINK_PORT_IRQ_SYS_ENABLE_OFFSET  0x0
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_EARLINK_PORT_IRQ_SYS_ENABLE_MASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_SYS_ENABLE_EARLINK_PORT_IRQ_SYS_ENABLE  0xffffffff
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_CRC_ERR_OFFSET  0x9
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_CRC_ERR_MASK  0x200
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_CRC_ERR  0x200
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_DEST_DEV_ID_RX_OFFSET  0x4
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_DEST_DEV_ID_RX_MASK  0x70
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_DEST_DEV_ID_RX  0x70
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_COMMAND_RX_OFFSET  0x0
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_COMMAND_RX_MASK  0x7
#define EARLINK_COMMAND_CTRL_RX_BUF_EARLINK_COMMAND_RX  0x7
#define EARLINK_COMMAND_RX_DATA_EARLINK_COMMAND_DATA_RX_OFFSET  0x0
#define EARLINK_COMMAND_RX_DATA_EARLINK_COMMAND_DATA_RX_MASK  0xffffffff
#define EARLINK_COMMAND_RX_DATA_EARLINK_COMMAND_DATA_RX  0xffffffff
#define EARLINK_PORT_CLK_ENABLE_CONTROL_EARLINK_PORT_CLK_GATE_OFFSET  0x0
#define EARLINK_PORT_CLK_ENABLE_CONTROL_EARLINK_PORT_CLK_GATE_MASK  0xffffffff
#define EARLINK_PORT_CLK_ENABLE_CONTROL_EARLINK_PORT_CLK_GATE  0xffffffff
#define EARLINK_DEVICE_ENABLE_EARLINK_DEVICE_ENABLE_OFFSET  0x0
#define EARLINK_DEVICE_ENABLE_EARLINK_DEVICE_ENABLE_MASK  0x1
#define EARLINK_DEVICE_ENABLE_EARLINK_DEVICE_ENABLE  0x1
#define EARLINK_TIMING_UPDATE_SYS_EARLINK_UPDATE_LOCK_SYS_OFFSET  0x0
#define EARLINK_TIMING_UPDATE_SYS_EARLINK_UPDATE_LOCK_SYS_MASK  0x1
#define EARLINK_TIMING_UPDATE_SYS_EARLINK_UPDATE_LOCK_SYS  0x1
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_OUT_OK_VCORE_OFFSET  0x1f
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_OUT_OK_VCORE_MASK  0x80000000
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_OUT_OK_VCORE  0x80000000
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_DRV_SLEW_VCORE_OFFSET  0x1c
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_DRV_SLEW_VCORE_MASK  0x30000000
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_DRV_SLEW_VCORE  0x30000000
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_EN_VCORE_OFFSET  0x18
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_EN_VCORE_MASK  0x1000000
#define EARLINK_PHY_CONIFG0_EARLINKPHY_CP_EN_VCORE  0x1000000
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_RTERM_VALUE_VCORE_OFFSET  0x14
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_RTERM_VALUE_VCORE_MASK  0x300000
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_RTERM_VALUE_VCORE  0x300000
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_RX_RTERM_TRIM_VCORE_OFFSET  0x10
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_RX_RTERM_TRIM_VCORE_MASK  0xf0000
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_RX_RTERM_TRIM_VCORE  0xf0000
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_TX_RTERM_TRIM_VCORE_OFFSET  0xc
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_TX_RTERM_TRIM_VCORE_MASK  0xf000
#define EARLINK_PHY_CONIFG0_EARLINK_PHY_TX_RTERM_TRIM_VCORE  0xf000
#define EARLINK_PHY_CONIFG0_EARLINK_RX_HYST_CTRL_VCORE_OFFSET  0x8
#define EARLINK_PHY_CONIFG0_EARLINK_RX_HYST_CTRL_VCORE_MASK  0x300
#define EARLINK_PHY_CONIFG0_EARLINK_RX_HYST_CTRL_VCORE  0x300
#define EARLINK_PHY_CONIFG0_EARLINK_WAKEUP_DTCT_EN_VCORE_OFFSET  0x7
#define EARLINK_PHY_CONIFG0_EARLINK_WAKEUP_DTCT_EN_VCORE_MASK  0x80
#define EARLINK_PHY_CONIFG0_EARLINK_WAKEUP_DTCT_EN_VCORE  0x80
#define EARLINK_PHY_CONIFG0_EARLINK_RX_EN_VCORE_OFFSET  0x6
#define EARLINK_PHY_CONIFG0_EARLINK_RX_EN_VCORE_MASK  0x40
#define EARLINK_PHY_CONIFG0_EARLINK_RX_EN_VCORE  0x40
#define EARLINK_PHY_CONIFG0_EARLINK_PULL_DOWN_EN_VCORE_OFFSET  0x5
#define EARLINK_PHY_CONIFG0_EARLINK_PULL_DOWN_EN_VCORE_MASK  0x20
#define EARLINK_PHY_CONIFG0_EARLINK_PULL_DOWN_EN_VCORE  0x20
#define EARLINK_PHY_CONIFG0_EARLINK_PULL_UP_EN_VCORE_OFFSET  0x4
#define EARLINK_PHY_CONIFG0_EARLINK_PULL_UP_EN_VCORE_MASK  0x10
#define EARLINK_PHY_CONIFG0_EARLINK_PULL_UP_EN_VCORE  0x10
#define EARLINK_PHY_CONIFG0_EARLINK_TX_OUT_LEVEL_VCORE_OFFSET  0x2
#define EARLINK_PHY_CONIFG0_EARLINK_TX_OUT_LEVEL_VCORE_MASK  0xc
#define EARLINK_PHY_CONIFG0_EARLINK_TX_OUT_LEVEL_VCORE  0xc
#define EARLINK_PHY_CONIFG1_EARLINK_TX_OUT_SLEW_VCORE_OFFSET  0x0
#define EARLINK_PHY_CONIFG1_EARLINK_TX_OUT_SLEW_VCORE_MASK  0xf
#define EARLINK_PHY_CONIFG1_EARLINK_TX_OUT_SLEW_VCORE  0xf
#define EARLINK_PHY_TEST_TEST_DPROBE_OUT_OFFSET  0x1e
#define EARLINK_PHY_TEST_TEST_DPROBE_OUT_MASK  0xc0000000
#define EARLINK_PHY_TEST_TEST_DPROBE_OUT  0xc0000000
#define EARLINK_PHY_TEST_EARLINKPHY_RX_DIFFTERM_EN_VCORE_OFFSET  0x18
#define EARLINK_PHY_TEST_EARLINKPHY_RX_DIFFTERM_EN_VCORE_MASK  0x1000000
#define EARLINK_PHY_TEST_EARLINKPHY_RX_DIFFTERM_EN_VCORE  0x1000000
#define EARLINK_PHY_TEST_ELINK_PLL_VCO_BRANCH2_EN_OFFSET  0x17
#define EARLINK_PHY_TEST_ELINK_PLL_VCO_BRANCH2_EN_MASK  0x800000
#define EARLINK_PHY_TEST_ELINK_PLL_VCO_BRANCH2_EN  0x800000
#define EARLINK_PHY_TEST_SYS_PLL_VCO_BRANCH2_EN_OFFSET  0x16
#define EARLINK_PHY_TEST_SYS_PLL_VCO_BRANCH2_EN_MASK  0x400000
#define EARLINK_PHY_TEST_SYS_PLL_VCO_BRANCH2_EN  0x400000
#define EARLINK_PHY_TEST_ELINK_PLL_LRF_MODE_OFFSET  0x15
#define EARLINK_PHY_TEST_ELINK_PLL_LRF_MODE_MASK  0x200000
#define EARLINK_PHY_TEST_ELINK_PLL_LRF_MODE  0x200000
#define EARLINK_PHY_TEST_ELINK_PLL_POST_DIV_OFFSET  0x13
#define EARLINK_PHY_TEST_ELINK_PLL_POST_DIV_MASK  0x180000
#define EARLINK_PHY_TEST_ELINK_PLL_POST_DIV  0x180000
#define EARLINK_PHY_TEST_SYS_PLL_LRF_MODE_OFFSET  0x12
#define EARLINK_PHY_TEST_SYS_PLL_LRF_MODE_MASK  0x40000
#define EARLINK_PHY_TEST_SYS_PLL_LRF_MODE  0x40000
#define EARLINK_PHY_TEST_SYS_PLL_POST_DIV_OFFSET  0x10
#define EARLINK_PHY_TEST_SYS_PLL_POST_DIV_MASK  0x30000
#define EARLINK_PHY_TEST_SYS_PLL_POST_DIV  0x30000
#define EARLINK_PHY_TEST_TEST_DPROBE_SEL1_VCORE_OFFSET  0xc
#define EARLINK_PHY_TEST_TEST_DPROBE_SEL1_VCORE_MASK  0xf000
#define EARLINK_PHY_TEST_TEST_DPROBE_SEL1_VCORE  0xf000
#define EARLINK_PHY_TEST_TEST_DPROBE_SEL0_VCORE_OFFSET  0x8
#define EARLINK_PHY_TEST_TEST_DPROBE_SEL0_VCORE_MASK  0xf00
#define EARLINK_PHY_TEST_TEST_DPROBE_SEL0_VCORE  0xf00
#define EARLINK_PHY_TEST_TEST_APROBE_SEL_VCORE_OFFSET  0x4
#define EARLINK_PHY_TEST_TEST_APROBE_SEL_VCORE_MASK  0xf0
#define EARLINK_PHY_TEST_TEST_APROBE_SEL_VCORE  0xf0
#define EARLINK_PHY_TEST_TEST_PROBE_STROBE_MUX_EN_VCORE_OFFSET  0x0
#define EARLINK_PHY_TEST_TEST_PROBE_STROBE_MUX_EN_VCORE_MASK  0x1
#define EARLINK_PHY_TEST_TEST_PROBE_STROBE_MUX_EN_VCORE  0x1
#define EARLINK_TEST_BUS_CFG_WIDTH_PER_BIT_RX_DATA_OFFSET  0x8
#define EARLINK_TEST_BUS_CFG_WIDTH_PER_BIT_RX_DATA_MASK  0x700
#define EARLINK_TEST_BUS_CFG_WIDTH_PER_BIT_RX_DATA  0x700
#define EARLINK_TEST_BUS_CFG_EXT_CYC_RX_SMPL_OFFSET  0x4
#define EARLINK_TEST_BUS_CFG_EXT_CYC_RX_SMPL_MASK  0x70
#define EARLINK_TEST_BUS_CFG_EXT_CYC_RX_SMPL  0x70
#define EARLINK_TEST_BUS_CFG_TMOD_SEL_OFFSET  0x1
#define EARLINK_TEST_BUS_CFG_TMOD_SEL_MASK  0xe
#define EARLINK_TEST_BUS_CFG_TMOD_SEL  0xe
#define EARLINK_TEST_BUS_CFG_TMOD_EN_OFFSET  0x0
#define EARLINK_TEST_BUS_CFG_TMOD_EN_MASK  0x1
#define EARLINK_TEST_BUS_CFG_TMOD_EN  0x1
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_PLL_TIME_GATE_WIDTH_OFFSET  0x18
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_PLL_TIME_GATE_WIDTH_MASK  0xff000000
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_PLL_TIME_GATE_WIDTH  0xff000000
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_SLAVE_SYSTEM_ADDR_FORMAT_OFFSET  0x8
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_SLAVE_SYSTEM_ADDR_FORMAT_MASK  0x300
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_SLAVE_SYSTEM_ADDR_FORMAT  0x300
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_ATTACHED_OFFSET  0x4
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_ATTACHED_MASK  0x10
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_ATTACHED  0x10
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_DEVICE_ID_OFFSET  0x0
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_DEVICE_ID_MASK  0x7
#define EARLINK_DEVICE_CTRL_SLAVE_ONLY_EARLINK_DEVICE_ID  0x7
#define EARLINK_IRQ_TO_MASTER_EARLINK_ATTACHED_MASTER_UPDATE_OFFSET  0x1f
#define EARLINK_IRQ_TO_MASTER_EARLINK_ATTACHED_MASTER_UPDATE_MASK  0x80000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_ATTACHED_MASTER_UPDATE  0x80000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_INVAILD_COMMAND_MASTER_OFFSET  0x1e
#define EARLINK_IRQ_TO_MASTER_EARLINK_INVAILD_COMMAND_MASTER_MASK  0x40000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_INVAILD_COMMAND_MASTER  0x40000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_BULK_RX_DONE_MASTER_OFFSET  0x19
#define EARLINK_IRQ_TO_MASTER_EARLINK_BULK_RX_DONE_MASTER_MASK  0x2000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_BULK_RX_DONE_MASTER  0x2000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_BULK_TX_DONE_MASTER_OFFSET  0x18
#define EARLINK_IRQ_TO_MASTER_EARLINK_BULK_TX_DONE_MASTER_MASK  0x1000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_BULK_TX_DONE_MASTER  0x1000000
#define EARLINK_IRQ_TO_MASTER_EARLINK_CRC_WRONG_MASTER_OFFSET  0x16
#define EARLINK_IRQ_TO_MASTER_EARLINK_CRC_WRONG_MASTER_MASK  0x400000
#define EARLINK_IRQ_TO_MASTER_EARLINK_CRC_WRONG_MASTER  0x400000
#define EARLINK_IRQ_TO_MASTER_EARLINK_SOFT_IRQ_MASTER_OFFSET  0x15
#define EARLINK_IRQ_TO_MASTER_EARLINK_SOFT_IRQ_MASTER_MASK  0x200000
#define EARLINK_IRQ_TO_MASTER_EARLINK_SOFT_IRQ_MASTER  0x200000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_ATTACHED_UPDATE_MASTER_ENABLE_OFFSET  0x1f
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_ATTACHED_UPDATE_MASTER_ENABLE_MASK  0x80000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_ATTACHED_UPDATE_MASTER_ENABLE  0x80000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_INVALID_COMMAND_MASTER_ENABLE_OFFSET  0x1e
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_INVALID_COMMAND_MASTER_ENABLE_MASK  0x40000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_INVALID_COMMAND_MASTER_ENABLE  0x40000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_BULK_RX_DONE_MASTER_ENABLE_OFFSET  0x19
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_BULK_RX_DONE_MASTER_ENABLE_MASK  0x2000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_BULK_RX_DONE_MASTER_ENABLE  0x2000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_BULK_TX_DONE_MASTER_ENABLE_OFFSET  0x18
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_BULK_TX_DONE_MASTER_ENABLE_MASK  0x1000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_BULK_TX_DONE_MASTER_ENABLE  0x1000000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_WRONG_MASTER_ENABLE_OFFSET  0x16
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_WRONG_MASTER_ENABLE_MASK  0x400000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_WRONG_MASTER_ENABLE  0x400000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_SOFT_IRQ_MASTER_ENABLE_OFFSET  0x15
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_SOFT_IRQ_MASTER_ENABLE_MASK  0x200000
#define EARLINK_IRQ_TO_MASTER_ENABLE_EARLINK_SOFT_IRQ_MASTER_ENABLE  0x200000
#define EARLINK_PORT_IRQ_TO_MASTER_EARLINK_PORTX_IRQ_MASTER_OFFSET  0x0
#define EARLINK_PORT_IRQ_TO_MASTER_EARLINK_PORTX_IRQ_MASTER_MASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_EARLINK_PORTX_IRQ_MASTER  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_EARLINK_PORTX_IRQ_MASTER_ENABLE_OFFSET  0x0
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_EARLINK_PORTX_IRQ_MASTER_ENABLE_MASK  0xffffffff
#define EARLINK_PORT_IRQ_TO_MASTER_ENABLE_EARLINK_PORTX_IRQ_MASTER_ENABLE  0xffffffff
#define EARLINK_TIMING_UPDATE_MASTER_EARLINK_UPDATE_LOCK_MASTER_OFFSET  0x0
#define EARLINK_TIMING_UPDATE_MASTER_EARLINK_UPDATE_LOCK_MASTER_MASK  0x1
#define EARLINK_TIMING_UPDATE_MASTER_EARLINK_UPDATE_LOCK_MASTER  0x1
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_BULK_FRAME_NUM_OFFSET  0x10
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_BULK_FRAME_NUM_MASK  0xff0000
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_BULK_FRAME_NUM  0xff0000
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_COMMAND_STORE_OFFSET  0x8
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_COMMAND_STORE_MASK  0x100
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_COMMAND_STORE  0x100
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_DEST_DEV_ID_OFFSET  0x4
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_DEST_DEV_ID_MASK  0x70
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_DEST_DEV_ID  0x70
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_COMMAND_OFFSET  0x0
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_COMMAND_MASK  0x7
#define EARLINK_COMMAND_CTRL_TX_BUF_EARLINK_COMMAND  0x7
#define EARLINK_COMMAND_TX_DATA_EARLINK_COMMAND_DATA_OFFSET  0x0
#define EARLINK_COMMAND_TX_DATA_EARLINK_COMMAND_DATA_MASK  0xffffffff
#define EARLINK_COMMAND_TX_DATA_EARLINK_COMMAND_DATA  0xffffffff
#define EARLINK_AUDIO_SYNC_DIVIDER_EARLINK_SA_DIVIDE_OFFSET  0x10
#define EARLINK_AUDIO_SYNC_DIVIDER_EARLINK_SA_DIVIDE_MASK  0xffff0000
#define EARLINK_AUDIO_SYNC_DIVIDER_EARLINK_SA_DIVIDE  0xffff0000
#define EARLINK_AUDIO_SYNC_DIVIDER_DEVICEIDFORSYNCCMD_OFFSET  0xc
#define EARLINK_AUDIO_SYNC_DIVIDER_DEVICEIDFORSYNCCMD_MASK  0x7000
#define EARLINK_AUDIO_SYNC_DIVIDER_DEVICEIDFORSYNCCMD  0x7000
#define EARLINK_AUDIO_SYNC_DIVIDER_EARLINK_FA_DIVIDE_OFFSET  0x0
#define EARLINK_AUDIO_SYNC_DIVIDER_EARLINK_FA_DIVIDE_MASK  0xfff
#define EARLINK_AUDIO_SYNC_DIVIDER_EARLINK_FA_DIVIDE  0xfff
#define BANK_SWITCH_REGISTER_PORT0_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT0_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT0_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT0_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT0_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT0_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT0_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT0_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT0_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT0_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT0_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT0_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT0_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT0_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT0_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT0_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT0_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT0_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT0_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT0_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT0_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT0_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT0_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT0_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT0_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT0_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT0_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT0_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT0_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT0_FIRST_ROW  0x3f
#define PORT_CTRL_PORT0_VALID_OFFSET  0x8
#define PORT_CTRL_PORT0_VALID_MASK  0x100
#define PORT_CTRL_PORT0_VALID  0x100
#define PORT_CTRL_PORT0_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT0_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT0_PORT_STATE  0xe0
#define PORT_CTRL_PORT0_BULK_OFFSET  0x4
#define PORT_CTRL_PORT0_BULK_MASK  0x10
#define PORT_CTRL_PORT0_BULK  0x10
#define PORT_CTRL_PORT0_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT0_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT0_DATA_TYPE  0x7
#define PORT_ENABLE_PORT0_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT0_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT0_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT0_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT0_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT0_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT0_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT0_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT0_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT0_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT0_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT0_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT0_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT0_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT0_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT0_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT0_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT0_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT0_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT0_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT0_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT0_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT0_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT0_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT0_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT0_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT0_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT0_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT0_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT0_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT0_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT0_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT0_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT0_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT0_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT0_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT0_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT0_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT0_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT0_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT0_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT0_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT0_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT0_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT0_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT0_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT0_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT0_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT0_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT0_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT0_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT0_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT0_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT1_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT1_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT1_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT1_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT1_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT1_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT1_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT1_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT1_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT1_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT1_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT1_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT1_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT1_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT1_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT1_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT1_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT1_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT1_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT1_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT1_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT1_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT1_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT1_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT1_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT1_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT1_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT1_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT1_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT1_FIRST_ROW  0x3f
#define PORT_CTRL_PORT1_VALID_OFFSET  0x8
#define PORT_CTRL_PORT1_VALID_MASK  0x100
#define PORT_CTRL_PORT1_VALID  0x100
#define PORT_CTRL_PORT1_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT1_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT1_PORT_STATE  0xe0
#define PORT_CTRL_PORT1_BULK_OFFSET  0x4
#define PORT_CTRL_PORT1_BULK_MASK  0x10
#define PORT_CTRL_PORT1_BULK  0x10
#define PORT_CTRL_PORT1_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT1_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT1_DATA_TYPE  0x7
#define PORT_ENABLE_PORT1_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT1_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT1_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT1_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT1_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT1_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT1_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT1_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT1_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT1_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT1_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT1_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT1_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT1_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT1_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT1_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT1_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT1_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT1_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT1_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT1_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT1_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT1_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT1_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT1_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT1_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT1_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT1_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT1_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT1_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT1_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT1_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT1_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT1_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT1_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT1_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT1_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT1_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT1_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT1_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT1_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT1_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT1_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT1_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT1_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT1_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT1_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT1_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT1_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT1_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT1_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT1_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT1_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT2_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT2_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT2_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT2_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT2_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT2_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT2_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT2_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT2_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT2_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT2_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT2_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT2_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT2_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT2_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT2_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT2_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT2_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT2_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT2_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT2_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT2_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT2_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT2_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT2_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT2_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT2_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT2_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT2_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT2_FIRST_ROW  0x3f
#define PORT_CTRL_PORT2_VALID_OFFSET  0x8
#define PORT_CTRL_PORT2_VALID_MASK  0x100
#define PORT_CTRL_PORT2_VALID  0x100
#define PORT_CTRL_PORT2_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT2_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT2_PORT_STATE  0xe0
#define PORT_CTRL_PORT2_BULK_OFFSET  0x4
#define PORT_CTRL_PORT2_BULK_MASK  0x10
#define PORT_CTRL_PORT2_BULK  0x10
#define PORT_CTRL_PORT2_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT2_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT2_DATA_TYPE  0x7
#define PORT_ENABLE_PORT2_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT2_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT2_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT2_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT2_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT2_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT2_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT2_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT2_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT2_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT2_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT2_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT2_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT2_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT2_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT2_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT2_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT2_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT2_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT2_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT2_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT2_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT2_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT2_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT2_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT2_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT2_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT2_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT2_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT2_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT2_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT2_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT2_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT2_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT2_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT2_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT2_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT2_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT2_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT2_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT2_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT2_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT2_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT2_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT2_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT2_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT2_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT2_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT2_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT2_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT2_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT2_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT2_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT3_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT3_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT3_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT3_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT3_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT3_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT3_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT3_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT3_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT3_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT3_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT3_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT3_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT3_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT3_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT3_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT3_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT3_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT3_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT3_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT3_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT3_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT3_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT3_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT3_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT3_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT3_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT3_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT3_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT3_FIRST_ROW  0x3f
#define PORT_CTRL_PORT3_VALID_OFFSET  0x8
#define PORT_CTRL_PORT3_VALID_MASK  0x100
#define PORT_CTRL_PORT3_VALID  0x100
#define PORT_CTRL_PORT3_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT3_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT3_PORT_STATE  0xe0
#define PORT_CTRL_PORT3_BULK_OFFSET  0x4
#define PORT_CTRL_PORT3_BULK_MASK  0x10
#define PORT_CTRL_PORT3_BULK  0x10
#define PORT_CTRL_PORT3_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT3_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT3_DATA_TYPE  0x7
#define PORT_ENABLE_PORT3_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT3_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT3_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT3_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT3_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT3_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT3_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT3_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT3_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT3_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT3_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT3_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT3_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT3_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT3_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT3_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT3_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT3_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT3_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT3_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT3_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT3_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT3_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT3_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT3_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT3_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT3_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT3_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT3_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT3_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT3_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT3_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT3_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT3_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT3_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT3_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT3_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT3_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT3_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT3_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT3_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT3_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT3_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT3_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT3_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT3_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT3_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT3_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT3_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT3_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT3_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT3_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT3_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT4_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT4_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT4_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT4_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT4_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT4_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT4_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT4_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT4_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT4_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT4_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT4_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT4_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT4_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT4_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT4_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT4_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT4_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT4_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT4_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT4_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT4_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT4_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT4_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT4_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT4_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT4_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT4_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT4_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT4_FIRST_ROW  0x3f
#define PORT_CTRL_PORT4_VALID_OFFSET  0x8
#define PORT_CTRL_PORT4_VALID_MASK  0x100
#define PORT_CTRL_PORT4_VALID  0x100
#define PORT_CTRL_PORT4_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT4_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT4_PORT_STATE  0xe0
#define PORT_CTRL_PORT4_BULK_OFFSET  0x4
#define PORT_CTRL_PORT4_BULK_MASK  0x10
#define PORT_CTRL_PORT4_BULK  0x10
#define PORT_CTRL_PORT4_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT4_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT4_DATA_TYPE  0x7
#define PORT_ENABLE_PORT4_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT4_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT4_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT4_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT4_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT4_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT4_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT4_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT4_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT4_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT4_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT4_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT4_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT4_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT4_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT4_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT4_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT4_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT4_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT4_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT4_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT4_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT4_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT4_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT4_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT4_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT4_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT4_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT4_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT4_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT4_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT4_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT4_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT4_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT4_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT4_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT4_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT4_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT4_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT4_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT4_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT4_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT4_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT4_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT4_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT4_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT4_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT4_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT4_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT4_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT4_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT4_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT4_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT5_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT5_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT5_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT5_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT5_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT5_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT5_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT5_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT5_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT5_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT5_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT5_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT5_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT5_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT5_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT5_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT5_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT5_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT5_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT5_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT5_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT5_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT5_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT5_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT5_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT5_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT5_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT5_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT5_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT5_FIRST_ROW  0x3f
#define PORT_CTRL_PORT5_VALID_OFFSET  0x8
#define PORT_CTRL_PORT5_VALID_MASK  0x100
#define PORT_CTRL_PORT5_VALID  0x100
#define PORT_CTRL_PORT5_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT5_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT5_PORT_STATE  0xe0
#define PORT_CTRL_PORT5_BULK_OFFSET  0x4
#define PORT_CTRL_PORT5_BULK_MASK  0x10
#define PORT_CTRL_PORT5_BULK  0x10
#define PORT_CTRL_PORT5_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT5_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT5_DATA_TYPE  0x7
#define PORT_ENABLE_PORT5_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT5_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT5_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT5_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT5_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT5_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT5_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT5_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT5_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT5_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT5_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT5_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT5_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT5_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT5_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT5_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT5_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT5_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT5_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT5_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT5_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT5_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT5_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT5_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT5_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT5_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT5_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT5_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT5_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT5_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT5_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT5_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT5_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT5_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT5_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT5_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT5_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT5_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT5_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT5_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT5_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT5_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT5_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT5_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT5_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT5_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT5_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT5_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT5_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT5_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT5_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT5_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT5_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT6_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT6_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT6_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT6_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT6_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT6_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT6_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT6_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT6_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT6_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT6_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT6_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT6_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT6_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT6_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT6_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT6_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT6_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT6_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT6_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT6_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT6_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT6_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT6_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT6_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT6_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT6_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT6_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT6_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT6_FIRST_ROW  0x3f
#define PORT_CTRL_PORT6_VALID_OFFSET  0x8
#define PORT_CTRL_PORT6_VALID_MASK  0x100
#define PORT_CTRL_PORT6_VALID  0x100
#define PORT_CTRL_PORT6_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT6_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT6_PORT_STATE  0xe0
#define PORT_CTRL_PORT6_BULK_OFFSET  0x4
#define PORT_CTRL_PORT6_BULK_MASK  0x10
#define PORT_CTRL_PORT6_BULK  0x10
#define PORT_CTRL_PORT6_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT6_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT6_DATA_TYPE  0x7
#define PORT_ENABLE_PORT6_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT6_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT6_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT6_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT6_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT6_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT6_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT6_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT6_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT6_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT6_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT6_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT6_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT6_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT6_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT6_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT6_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT6_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT6_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT6_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT6_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT6_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT6_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT6_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT6_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT6_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT6_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT6_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT6_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT6_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT6_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT6_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT6_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT6_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT6_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT6_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT6_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT6_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT6_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT6_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT6_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT6_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT6_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT6_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT6_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT6_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT6_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT6_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT6_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT6_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT6_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT6_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT6_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT7_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT7_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT7_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT7_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT7_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT7_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT7_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT7_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT7_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT7_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT7_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT7_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT7_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT7_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT7_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT7_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT7_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT7_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT7_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT7_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT7_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT7_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT7_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT7_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT7_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT7_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT7_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT7_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT7_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT7_FIRST_ROW  0x3f
#define PORT_CTRL_PORT7_VALID_OFFSET  0x8
#define PORT_CTRL_PORT7_VALID_MASK  0x100
#define PORT_CTRL_PORT7_VALID  0x100
#define PORT_CTRL_PORT7_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT7_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT7_PORT_STATE  0xe0
#define PORT_CTRL_PORT7_BULK_OFFSET  0x4
#define PORT_CTRL_PORT7_BULK_MASK  0x10
#define PORT_CTRL_PORT7_BULK  0x10
#define PORT_CTRL_PORT7_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT7_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT7_DATA_TYPE  0x7
#define PORT_ENABLE_PORT7_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT7_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT7_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT7_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT7_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT7_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT7_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT7_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT7_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT7_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT7_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT7_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT7_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT7_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT7_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT7_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT7_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT7_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT7_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT7_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT7_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT7_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT7_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT7_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT7_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT7_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT7_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT7_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT7_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT7_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT7_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT7_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT7_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT7_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT7_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT7_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT7_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT7_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT7_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT7_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT7_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT7_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT7_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT7_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT7_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT7_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT7_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT7_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT7_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT7_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT7_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT7_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT7_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT8_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT8_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT8_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT8_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT8_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT8_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT8_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT8_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT8_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT8_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT8_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT8_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT8_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT8_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT8_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT8_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT8_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT8_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT8_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT8_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT8_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT8_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT8_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT8_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT8_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT8_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT8_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT8_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT8_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT8_FIRST_ROW  0x3f
#define PORT_CTRL_PORT8_VALID_OFFSET  0x8
#define PORT_CTRL_PORT8_VALID_MASK  0x100
#define PORT_CTRL_PORT8_VALID  0x100
#define PORT_CTRL_PORT8_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT8_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT8_PORT_STATE  0xe0
#define PORT_CTRL_PORT8_BULK_OFFSET  0x4
#define PORT_CTRL_PORT8_BULK_MASK  0x10
#define PORT_CTRL_PORT8_BULK  0x10
#define PORT_CTRL_PORT8_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT8_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT8_DATA_TYPE  0x7
#define PORT_ENABLE_PORT8_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT8_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT8_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT8_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT8_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT8_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT8_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT8_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT8_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT8_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT8_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT8_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT8_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT8_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT8_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT8_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT8_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT8_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT8_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT8_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT8_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT8_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT8_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT8_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT8_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT8_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT8_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT8_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT8_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT8_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT8_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT8_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT8_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT8_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT8_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT8_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT8_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT8_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT8_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT8_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT8_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT8_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT8_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT8_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT8_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT8_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT8_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT8_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT8_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT8_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT8_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT8_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT8_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT9_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT9_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT9_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT9_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT9_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT9_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT9_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT9_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT9_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT9_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT9_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT9_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT9_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT9_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT9_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT9_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT9_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT9_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT9_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT9_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT9_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT9_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT9_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT9_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT9_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT9_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT9_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT9_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT9_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT9_FIRST_ROW  0x3f
#define PORT_CTRL_PORT9_VALID_OFFSET  0x8
#define PORT_CTRL_PORT9_VALID_MASK  0x100
#define PORT_CTRL_PORT9_VALID  0x100
#define PORT_CTRL_PORT9_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT9_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT9_PORT_STATE  0xe0
#define PORT_CTRL_PORT9_BULK_OFFSET  0x4
#define PORT_CTRL_PORT9_BULK_MASK  0x10
#define PORT_CTRL_PORT9_BULK  0x10
#define PORT_CTRL_PORT9_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT9_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT9_DATA_TYPE  0x7
#define PORT_ENABLE_PORT9_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT9_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT9_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT9_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT9_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT9_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT9_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT9_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT9_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT9_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT9_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT9_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT9_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT9_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT9_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT9_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT9_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT9_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT9_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT9_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT9_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT9_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT9_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT9_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT9_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT9_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT9_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT9_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT9_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT9_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT9_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT9_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT9_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT9_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT9_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT9_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT9_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT9_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT9_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT9_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT9_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT9_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT9_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT9_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT9_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT9_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT9_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT9_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT9_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT9_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT9_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT9_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT9_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT10_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT10_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT10_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT10_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT10_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT10_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT10_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT10_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT10_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT10_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT10_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT10_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT10_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT10_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT10_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT10_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT10_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT10_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT10_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT10_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT10_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT10_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT10_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT10_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT10_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT10_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT10_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT10_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT10_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT10_FIRST_ROW  0x3f
#define PORT_CTRL_PORT10_VALID_OFFSET  0x8
#define PORT_CTRL_PORT10_VALID_MASK  0x100
#define PORT_CTRL_PORT10_VALID  0x100
#define PORT_CTRL_PORT10_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT10_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT10_PORT_STATE  0xe0
#define PORT_CTRL_PORT10_BULK_OFFSET  0x4
#define PORT_CTRL_PORT10_BULK_MASK  0x10
#define PORT_CTRL_PORT10_BULK  0x10
#define PORT_CTRL_PORT10_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT10_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT10_DATA_TYPE  0x7
#define PORT_ENABLE_PORT10_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT10_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT10_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT10_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT10_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT10_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT10_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT10_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT10_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT10_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT10_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT10_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT10_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT10_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT10_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT10_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT10_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT10_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT10_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT10_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT10_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT10_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT10_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT10_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT10_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT10_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT10_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT10_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT10_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT10_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT10_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT10_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT10_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT10_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT10_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT10_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT10_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT10_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT10_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT10_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT10_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT10_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT10_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT10_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT10_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT10_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT10_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT10_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT10_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT10_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT10_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT10_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT10_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT11_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT11_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT11_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT11_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT11_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT11_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT11_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT11_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT11_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT11_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT11_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT11_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT11_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT11_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT11_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT11_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT11_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT11_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT11_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT11_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT11_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT11_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT11_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT11_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT11_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT11_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT11_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT11_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT11_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT11_FIRST_ROW  0x3f
#define PORT_CTRL_PORT11_VALID_OFFSET  0x8
#define PORT_CTRL_PORT11_VALID_MASK  0x100
#define PORT_CTRL_PORT11_VALID  0x100
#define PORT_CTRL_PORT11_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT11_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT11_PORT_STATE  0xe0
#define PORT_CTRL_PORT11_BULK_OFFSET  0x4
#define PORT_CTRL_PORT11_BULK_MASK  0x10
#define PORT_CTRL_PORT11_BULK  0x10
#define PORT_CTRL_PORT11_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT11_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT11_DATA_TYPE  0x7
#define PORT_ENABLE_PORT11_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT11_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT11_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT11_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT11_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT11_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT11_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT11_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT11_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT11_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT11_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT11_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT11_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT11_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT11_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT11_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT11_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT11_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT11_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT11_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT11_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT11_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT11_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT11_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT11_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT11_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT11_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT11_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT11_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT11_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT11_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT11_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT11_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT11_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT11_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT11_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT11_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT11_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT11_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT11_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT11_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT11_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT11_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT11_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT11_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT11_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT11_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT11_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT11_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT11_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT11_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT11_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT11_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT12_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT12_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT12_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT12_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT12_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT12_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT12_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT12_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT12_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT12_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT12_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT12_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT12_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT12_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT12_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT12_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT12_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT12_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT12_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT12_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT12_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT12_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT12_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT12_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT12_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT12_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT12_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT12_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT12_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT12_FIRST_ROW  0x3f
#define PORT_CTRL_PORT12_VALID_OFFSET  0x8
#define PORT_CTRL_PORT12_VALID_MASK  0x100
#define PORT_CTRL_PORT12_VALID  0x100
#define PORT_CTRL_PORT12_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT12_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT12_PORT_STATE  0xe0
#define PORT_CTRL_PORT12_BULK_OFFSET  0x4
#define PORT_CTRL_PORT12_BULK_MASK  0x10
#define PORT_CTRL_PORT12_BULK  0x10
#define PORT_CTRL_PORT12_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT12_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT12_DATA_TYPE  0x7
#define PORT_ENABLE_PORT12_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT12_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT12_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT12_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT12_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT12_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT12_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT12_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT12_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT12_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT12_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT12_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT12_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT12_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT12_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT12_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT12_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT12_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT12_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT12_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT12_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT12_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT12_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT12_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT12_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT12_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT12_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT12_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT12_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT12_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT12_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT12_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT12_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT12_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT12_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT12_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT12_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT12_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT12_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT12_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT12_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT12_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT12_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT12_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT12_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT12_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT12_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT12_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT12_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT12_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT12_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT12_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT12_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT13_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT13_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT13_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT13_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT13_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT13_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT13_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT13_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT13_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT13_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT13_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT13_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT13_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT13_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT13_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT13_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT13_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT13_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT13_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT13_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT13_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT13_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT13_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT13_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT13_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT13_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT13_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT13_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT13_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT13_FIRST_ROW  0x3f
#define PORT_CTRL_PORT13_VALID_OFFSET  0x8
#define PORT_CTRL_PORT13_VALID_MASK  0x100
#define PORT_CTRL_PORT13_VALID  0x100
#define PORT_CTRL_PORT13_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT13_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT13_PORT_STATE  0xe0
#define PORT_CTRL_PORT13_BULK_OFFSET  0x4
#define PORT_CTRL_PORT13_BULK_MASK  0x10
#define PORT_CTRL_PORT13_BULK  0x10
#define PORT_CTRL_PORT13_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT13_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT13_DATA_TYPE  0x7
#define PORT_ENABLE_PORT13_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT13_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT13_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT13_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT13_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT13_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT13_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT13_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT13_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT13_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT13_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT13_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT13_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT13_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT13_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT13_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT13_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT13_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT13_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT13_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT13_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT13_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT13_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT13_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT13_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT13_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT13_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT13_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT13_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT13_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT13_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT13_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT13_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT13_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT13_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT13_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT13_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT13_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT13_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT13_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT13_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT13_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT13_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT13_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT13_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT13_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT13_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT13_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT13_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT13_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT13_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT13_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT13_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT14_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT14_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT14_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT14_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT14_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT14_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT14_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT14_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT14_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT14_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT14_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT14_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT14_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT14_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT14_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT14_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT14_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT14_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT14_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT14_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT14_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT14_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT14_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT14_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT14_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT14_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT14_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT14_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT14_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT14_FIRST_ROW  0x3f
#define PORT_CTRL_PORT14_VALID_OFFSET  0x8
#define PORT_CTRL_PORT14_VALID_MASK  0x100
#define PORT_CTRL_PORT14_VALID  0x100
#define PORT_CTRL_PORT14_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT14_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT14_PORT_STATE  0xe0
#define PORT_CTRL_PORT14_BULK_OFFSET  0x4
#define PORT_CTRL_PORT14_BULK_MASK  0x10
#define PORT_CTRL_PORT14_BULK  0x10
#define PORT_CTRL_PORT14_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT14_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT14_DATA_TYPE  0x7
#define PORT_ENABLE_PORT14_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT14_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT14_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT14_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT14_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT14_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT14_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT14_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT14_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT14_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT14_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT14_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT14_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT14_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT14_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT14_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT14_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT14_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT14_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT14_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT14_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT14_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT14_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT14_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT14_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT14_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT14_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT14_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT14_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT14_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT14_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT14_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT14_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT14_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT14_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT14_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT14_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT14_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT14_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT14_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT14_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT14_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT14_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT14_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT14_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT14_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT14_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT14_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT14_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT14_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT14_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT14_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT14_OVF_EN_SYS  0x1
#define BANK_SWITCH_REGISTER_PORT15_BANK_SWITCH_OFFSET  0x0
#define BANK_SWITCH_REGISTER_PORT15_BANK_SWITCH_MASK  0xff
#define BANK_SWITCH_REGISTER_PORT15_BANK_SWITCH  0xff
#define ROW_COLUMN_CTRL_PORT15_WAVE_OFFSET  0x1f
#define ROW_COLUMN_CTRL_PORT15_WAVE_MASK  0x80000000
#define ROW_COLUMN_CTRL_PORT15_WAVE  0x80000000
#define ROW_COLUMN_CTRL_PORT15_FAST_SLOW_AUDIO_SYNC_OFFSET  0x1d
#define ROW_COLUMN_CTRL_PORT15_FAST_SLOW_AUDIO_SYNC_MASK  0x60000000
#define ROW_COLUMN_CTRL_PORT15_FAST_SLOW_AUDIO_SYNC  0x60000000
#define ROW_COLUMN_CTRL_PORT15_LENGTH_OFFSET  0x18
#define ROW_COLUMN_CTRL_PORT15_LENGTH_MASK  0x1f000000
#define ROW_COLUMN_CTRL_PORT15_LENGTH  0x1f000000
#define ROW_COLUMN_CTRL_PORT15_LAST_COLUMN_OFFSET  0x14
#define ROW_COLUMN_CTRL_PORT15_LAST_COLUMN_MASK  0xf00000
#define ROW_COLUMN_CTRL_PORT15_LAST_COLUMN  0xf00000
#define ROW_COLUMN_CTRL_PORT15_FIRST_COLUMN_OFFSET  0x10
#define ROW_COLUMN_CTRL_PORT15_FIRST_COLUMN_MASK  0xf0000
#define ROW_COLUMN_CTRL_PORT15_FIRST_COLUMN  0xf0000
#define ROW_COLUMN_CTRL_PORT15_INCREMENT_MULTIPLIER_OFFSET  0xe
#define ROW_COLUMN_CTRL_PORT15_INCREMENT_MULTIPLIER_MASK  0xc000
#define ROW_COLUMN_CTRL_PORT15_INCREMENT_MULTIPLIER  0xc000
#define ROW_COLUMN_CTRL_PORT15_ROW_INCREMENT_OFFSET  0x8
#define ROW_COLUMN_CTRL_PORT15_ROW_INCREMENT_MASK  0x3f00
#define ROW_COLUMN_CTRL_PORT15_ROW_INCREMENT  0x3f00
#define ROW_COLUMN_CTRL_PORT15_FIRST_ROW_MULTIPLIER_OFFSET  0x6
#define ROW_COLUMN_CTRL_PORT15_FIRST_ROW_MULTIPLIER_MASK  0xc0
#define ROW_COLUMN_CTRL_PORT15_FIRST_ROW_MULTIPLIER  0xc0
#define ROW_COLUMN_CTRL_PORT15_FIRST_ROW_OFFSET  0x0
#define ROW_COLUMN_CTRL_PORT15_FIRST_ROW_MASK  0x3f
#define ROW_COLUMN_CTRL_PORT15_FIRST_ROW  0x3f
#define PORT_CTRL_PORT15_VALID_OFFSET  0x8
#define PORT_CTRL_PORT15_VALID_MASK  0x100
#define PORT_CTRL_PORT15_VALID  0x100
#define PORT_CTRL_PORT15_PORT_STATE_OFFSET  0x5
#define PORT_CTRL_PORT15_PORT_STATE_MASK  0xe0
#define PORT_CTRL_PORT15_PORT_STATE  0xe0
#define PORT_CTRL_PORT15_BULK_OFFSET  0x4
#define PORT_CTRL_PORT15_BULK_MASK  0x10
#define PORT_CTRL_PORT15_BULK  0x10
#define PORT_CTRL_PORT15_DATA_TYPE_OFFSET  0x0
#define PORT_CTRL_PORT15_DATA_TYPE_MASK  0x7
#define PORT_CTRL_PORT15_DATA_TYPE  0x7
#define PORT_ENABLE_PORT15_PORT_ENABLE_OFFSET  0x0
#define PORT_ENABLE_PORT15_PORT_ENABLE_MASK  0x1
#define PORT_ENABLE_PORT15_PORT_ENABLE  0x1
#define ROW_COLUMN_CTRL_SHADOW_PORT15_WAVE_SHADOW_OFFSET  0x1f
#define ROW_COLUMN_CTRL_SHADOW_PORT15_WAVE_SHADOW_MASK  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_WAVE_SHADOW  0x80000000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FAST_SLOW_AUDIO_SYNC_SHADOW_OFFSET  0x1d
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FAST_SLOW_AUDIO_SYNC_SHADOW_MASK  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FAST_SLOW_AUDIO_SYNC_SHADOW  0x60000000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_LENGTH_SHADOW_OFFSET  0x18
#define ROW_COLUMN_CTRL_SHADOW_PORT15_LENGTH_SHADOW_MASK  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_LENGTH_SHADOW  0x1f000000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_LAST_COLUMN_SHADOW_OFFSET  0x14
#define ROW_COLUMN_CTRL_SHADOW_PORT15_LAST_COLUMN_SHADOW_MASK  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_LAST_COLUMN_SHADOW  0xf00000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_COLUMN_SHADOW_OFFSET  0x10
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_COLUMN_SHADOW_MASK  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_COLUMN_SHADOW  0xf0000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_INCREMENT_MULTIPLIER_SHADOW_OFFSET  0xe
#define ROW_COLUMN_CTRL_SHADOW_PORT15_INCREMENT_MULTIPLIER_SHADOW_MASK  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_INCREMENT_MULTIPLIER_SHADOW  0xc000
#define ROW_COLUMN_CTRL_SHADOW_PORT15_ROW_INCREMENT_SHADOW_OFFSET  0x8
#define ROW_COLUMN_CTRL_SHADOW_PORT15_ROW_INCREMENT_SHADOW_MASK  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT15_ROW_INCREMENT_SHADOW  0x3f00
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_ROW_MULTIPLIER_SHADOW_OFFSET  0x6
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_ROW_MULTIPLIER_SHADOW_MASK  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_ROW_MULTIPLIER_SHADOW  0xc0
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_ROW_SHADOW_OFFSET  0x0
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_ROW_SHADOW_MASK  0x3f
#define ROW_COLUMN_CTRL_SHADOW_PORT15_FIRST_ROW_SHADOW  0x3f
#define PORT_CTRL_SHADOW_PORT15_VALID_SHADOW_OFFSET  0x8
#define PORT_CTRL_SHADOW_PORT15_VALID_SHADOW_MASK  0x100
#define PORT_CTRL_SHADOW_PORT15_VALID_SHADOW  0x100
#define PORT_CTRL_SHADOW_PORT15_PORT_STATE_SHADOW_OFFSET  0x5
#define PORT_CTRL_SHADOW_PORT15_PORT_STATE_SHADOW_MASK  0xe0
#define PORT_CTRL_SHADOW_PORT15_PORT_STATE_SHADOW  0xe0
#define PORT_CTRL_SHADOW_PORT15_BULK_SHADOW_OFFSET  0x4
#define PORT_CTRL_SHADOW_PORT15_BULK_SHADOW_MASK  0x10
#define PORT_CTRL_SHADOW_PORT15_BULK_SHADOW  0x10
#define PORT_CTRL_SHADOW_PORT15_DATA_TYPE_SHADOW_OFFSET  0x0
#define PORT_CTRL_SHADOW_PORT15_DATA_TYPE_SHADOW_MASK  0x7
#define PORT_CTRL_SHADOW_PORT15_DATA_TYPE_SHADOW  0x7
#define PORT_ENABLE_SHADOW_PORT15_PORT_ENABLE_SHADOW_OFFSET  0x0
#define PORT_ENABLE_SHADOW_PORT15_PORT_ENABLE_SHADOW_MASK  0x1
#define PORT_ENABLE_SHADOW_PORT15_PORT_ENABLE_SHADOW  0x1
#define PORT_FIFO_FLUSH_PORT15_FIFO_FLUSH_OFFSET  0x0
#define PORT_FIFO_FLUSH_PORT15_FIFO_FLUSH_MASK  0x1
#define PORT_FIFO_FLUSH_PORT15_FIFO_FLUSH  0x1
#define BULK_CRC_24B_PORT15_BULK_CRC_24B_OFFSET  0x0
#define BULK_CRC_24B_PORT15_BULK_CRC_24B_MASK  0xffffff
#define BULK_CRC_24B_PORT15_BULK_CRC_24B  0xffffff
#define PORT_IRQ_TO_MASTER_PORT15_DATA_ERR_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_PORT15_DATA_ERR_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_PORT15_DATA_ERR_MASTER  0x4
#define PORT_IRQ_TO_MASTER_PORT15_UDF_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_PORT15_UDF_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_PORT15_UDF_MASTER  0x2
#define PORT_IRQ_TO_MASTER_PORT15_OVF_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_PORT15_OVF_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_PORT15_OVF_MASTER  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_DATA_ERR_EN_MASTER_OFFSET  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_DATA_ERR_EN_MASTER_MASK  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_DATA_ERR_EN_MASTER  0x4
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_UDF_EN_MASTER_OFFSET  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_UDF_EN_MASTER_MASK  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_UDF_EN_MASTER  0x2
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_OVF_EN_MASTER_OFFSET  0x0
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_OVF_EN_MASTER_MASK  0x1
#define PORT_IRQ_TO_MASTER_ENABLE_PORT15_OVF_EN_MASTER  0x1
#define PORT_IRQ_TO_SYS_PORT15_DATA_ERR_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_PORT15_DATA_ERR_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_PORT15_DATA_ERR_SYS  0x4
#define PORT_IRQ_TO_SYS_PORT15_UDF_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_PORT15_UDF_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_PORT15_UDF_SYS  0x2
#define PORT_IRQ_TO_SYS_PORT15_OVF_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_PORT15_OVF_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_PORT15_OVF_SYS  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_DATA_ERR_EN_SYS_OFFSET  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_DATA_ERR_EN_SYS_MASK  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_DATA_ERR_EN_SYS  0x4
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_UDF_EN_SYS_OFFSET  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_UDF_EN_SYS_MASK  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_UDF_EN_SYS  0x2
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_OVF_EN_SYS_OFFSET  0x0
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_OVF_EN_SYS_MASK  0x1
#define PORT_IRQ_TO_SYS_ENABLE_PORT15_OVF_EN_SYS  0x1
#define CR_RST_SFT_0_SRST_ISP_RX_OFFSET  0xf
#define CR_RST_SFT_0_SRST_ISP_RX_MASK  0x8000
#define CR_RST_SFT_0_SRST_ISP_RX  0x8000
#define CR_RST_SFT_0_SRST_ISP_RX_AHB_OFFSET  0xe
#define CR_RST_SFT_0_SRST_ISP_RX_AHB_MASK  0x4000
#define CR_RST_SFT_0_SRST_ISP_RX_AHB  0x4000
#define CR_RST_SFT_0_SRST_ACL_OFFSET  0xd
#define CR_RST_SFT_0_SRST_ACL_MASK  0x2000
#define CR_RST_SFT_0_SRST_ACL  0x2000
#define CR_RST_SFT_0_SRST_SPI_FIFO_OFFSET  0xc
#define CR_RST_SFT_0_SRST_SPI_FIFO_MASK  0x1000
#define CR_RST_SFT_0_SRST_SPI_FIFO  0x1000
#define CR_RST_SFT_0_SRST_DAC_OFFSET  0xb
#define CR_RST_SFT_0_SRST_DAC_MASK  0x800
#define CR_RST_SFT_0_SRST_DAC  0x800
#define CR_RST_SFT_0_SRST_DMIC_OFFSET  0xa
#define CR_RST_SFT_0_SRST_DMIC_MASK  0x400
#define CR_RST_SFT_0_SRST_DMIC  0x400
#define CR_RST_SFT_0_SRST_ADC_OFFSET  0x9
#define CR_RST_SFT_0_SRST_ADC_MASK  0x200
#define CR_RST_SFT_0_SRST_ADC  0x200
#define CR_RST_SFT_0_SRST_ADC_DAC_OFFSET  0x8
#define CR_RST_SFT_0_SRST_ADC_DAC_MASK  0x100
#define CR_RST_SFT_0_SRST_ADC_DAC  0x100
#define CR_RST_SFT_0_SRST_I2S_ALL_OFFSET  0x7
#define CR_RST_SFT_0_SRST_I2S_ALL_MASK  0x80
#define CR_RST_SFT_0_SRST_I2S_ALL  0x80
#define CR_RST_SFT_0_SRST_I2S1_TX_OFFSET  0x6
#define CR_RST_SFT_0_SRST_I2S1_TX_MASK  0x40
#define CR_RST_SFT_0_SRST_I2S1_TX  0x40
#define CR_RST_SFT_0_SRST_I2S1_RX_OFFSET  0x5
#define CR_RST_SFT_0_SRST_I2S1_RX_MASK  0x20
#define CR_RST_SFT_0_SRST_I2S1_RX  0x20
#define CR_RST_SFT_0_SRST_I2S0_TX_OFFSET  0x4
#define CR_RST_SFT_0_SRST_I2S0_TX_MASK  0x10
#define CR_RST_SFT_0_SRST_I2S0_TX  0x10
#define CR_RST_SFT_0_SRST_I2S0_RX_OFFSET  0x3
#define CR_RST_SFT_0_SRST_I2S0_RX_MASK  0x8
#define CR_RST_SFT_0_SRST_I2S0_RX  0x8
#define CR_RST_SFT_0_SRST_CODEC_OFFSET  0x2
#define CR_RST_SFT_0_SRST_CODEC_MASK  0x4
#define CR_RST_SFT_0_SRST_CODEC  0x4
#define CR_RST_SFT_0_SRST_PMU_OFFSET  0x1
#define CR_RST_SFT_0_SRST_PMU_MASK  0x2
#define CR_RST_SFT_0_SRST_PMU  0x2
#define CR_RST_SFT_0_SRST_EARLINK_OFFSET  0x0
#define CR_RST_SFT_0_SRST_EARLINK_MASK  0x1
#define CR_RST_SFT_0_SRST_EARLINK  0x1
#define CR_RST_SFT_1_SRST_SSE200_SELF_CLEAR_OFFSET  0x1d
#define CR_RST_SFT_1_SRST_SSE200_SELF_CLEAR_MASK  0x20000000
#define CR_RST_SFT_1_SRST_SSE200_SELF_CLEAR  0x20000000
#define CR_RST_SFT_1_SRST_I3C_DMA_OFFSET  0x1c
#define CR_RST_SFT_1_SRST_I3C_DMA_MASK  0x10000000
#define CR_RST_SFT_1_SRST_I3C_DMA  0x10000000
#define CR_RST_SFT_1_SRST_MAIL_BOX_OFFSET  0x1b
#define CR_RST_SFT_1_SRST_MAIL_BOX_MASK  0x8000000
#define CR_RST_SFT_1_SRST_MAIL_BOX  0x8000000
#define CR_RST_SFT_1_SRST_I2C_MST_OFFSET  0x1a
#define CR_RST_SFT_1_SRST_I2C_MST_MASK  0x4000000
#define CR_RST_SFT_1_SRST_I2C_MST  0x4000000
#define CR_RST_SFT_1_SRST_I2C_SLV_OFFSET  0x19
#define CR_RST_SFT_1_SRST_I2C_SLV_MASK  0x2000000
#define CR_RST_SFT_1_SRST_I2C_SLV  0x2000000
#define CR_RST_SFT_1_SRST_PWM_OFFSET  0x18
#define CR_RST_SFT_1_SRST_PWM_MASK  0x1000000
#define CR_RST_SFT_1_SRST_PWM  0x1000000
#define CR_RST_SFT_1_SRST_TIMER2_OFFSET  0x17
#define CR_RST_SFT_1_SRST_TIMER2_MASK  0x800000
#define CR_RST_SFT_1_SRST_TIMER2  0x800000
#define CR_RST_SFT_1_SRST_TIMER1_OFFSET  0x16
#define CR_RST_SFT_1_SRST_TIMER1_MASK  0x400000
#define CR_RST_SFT_1_SRST_TIMER1  0x400000
#define CR_RST_SFT_1_SRST_TIMER0_OFFSET  0x15
#define CR_RST_SFT_1_SRST_TIMER0_MASK  0x200000
#define CR_RST_SFT_1_SRST_TIMER0  0x200000
#define CR_RST_SFT_1_SRST_QSPI_OFFSET  0x14
#define CR_RST_SFT_1_SRST_QSPI_MASK  0x100000
#define CR_RST_SFT_1_SRST_QSPI  0x100000
#define CR_RST_SFT_1_SRST_SPI_OFFSET  0x13
#define CR_RST_SFT_1_SRST_SPI_MASK  0x80000
#define CR_RST_SFT_1_SRST_SPI  0x80000
#define CR_RST_SFT_1_SRST_I2S1_TX_PCLK_OFFSET  0x12
#define CR_RST_SFT_1_SRST_I2S1_TX_PCLK_MASK  0x40000
#define CR_RST_SFT_1_SRST_I2S1_TX_PCLK  0x40000
#define CR_RST_SFT_1_SRST_I2S1_RX_PCLK_OFFSET  0x11
#define CR_RST_SFT_1_SRST_I2S1_RX_PCLK_MASK  0x20000
#define CR_RST_SFT_1_SRST_I2S1_RX_PCLK  0x20000
#define CR_RST_SFT_1_SRST_I2S0_TX_PCLK_OFFSET  0x10
#define CR_RST_SFT_1_SRST_I2S0_TX_PCLK_MASK  0x10000
#define CR_RST_SFT_1_SRST_I2S0_TX_PCLK  0x10000
#define CR_RST_SFT_1_SRST_I2S0_RX_PCLK_OFFSET  0xf
#define CR_RST_SFT_1_SRST_I2S0_RX_PCLK_MASK  0x8000
#define CR_RST_SFT_1_SRST_I2S0_RX_PCLK  0x8000
#define CR_RST_SFT_1_SRST_AES_OFFSET  0xe
#define CR_RST_SFT_1_SRST_AES_MASK  0x4000
#define CR_RST_SFT_1_SRST_AES  0x4000
#define CR_RST_SFT_1_SRST_FLEXI1_DMA_OFFSET  0xd
#define CR_RST_SFT_1_SRST_FLEXI1_DMA_MASK  0x2000
#define CR_RST_SFT_1_SRST_FLEXI1_DMA  0x2000
#define CR_RST_SFT_1_SRST_FLEXI0_DMA_OFFSET  0xc
#define CR_RST_SFT_1_SRST_FLEXI0_DMA_MASK  0x1000
#define CR_RST_SFT_1_SRST_FLEXI0_DMA  0x1000
#define CR_RST_SFT_1_SRST_AUDIO_DMA_OFFSET  0xb
#define CR_RST_SFT_1_SRST_AUDIO_DMA_MASK  0x800
#define CR_RST_SFT_1_SRST_AUDIO_DMA  0x800
#define CR_RST_SFT_1_SRST_UART_OFFSET  0xa
#define CR_RST_SFT_1_SRST_UART_MASK  0x400
#define CR_RST_SFT_1_SRST_UART  0x400
#define CR_RST_SFT_1_SRST_I3C_CORE_OFFSET  0x9
#define CR_RST_SFT_1_SRST_I3C_CORE_MASK  0x200
#define CR_RST_SFT_1_SRST_I3C_CORE  0x200
#define CR_RST_SFT_1_SRST_SSE200_OFFSET  0x8
#define CR_RST_SFT_1_SRST_SSE200_MASK  0x100
#define CR_RST_SFT_1_SRST_SSE200  0x100
#define CR_RST_SFT_1_SRST_HIFI3_OFFSET  0x6
#define CR_RST_SFT_1_SRST_HIFI3_MASK  0x40
#define CR_RST_SFT_1_SRST_HIFI3  0x40
#define CR_RST_SFT_1_SRST_SHARE_MEMORY_OFFSET  0x5
#define CR_RST_SFT_1_SRST_SHARE_MEMORY_MASK  0x20
#define CR_RST_SFT_1_SRST_SHARE_MEMORY  0x20
#define CR_RST_SFT_1_SRST_LLE_B_OFFSET  0x4
#define CR_RST_SFT_1_SRST_LLE_B_MASK  0x10
#define CR_RST_SFT_1_SRST_LLE_B  0x10
#define CR_RST_SFT_1_SRST_LLE_A_OFFSET  0x3
#define CR_RST_SFT_1_SRST_LLE_A_MASK  0x8
#define CR_RST_SFT_1_SRST_LLE_A  0x8
#define CR_RST_SFT_1_SRST_CAPE_B_OFFSET  0x2
#define CR_RST_SFT_1_SRST_CAPE_B_MASK  0x4
#define CR_RST_SFT_1_SRST_CAPE_B  0x4
#define CR_RST_SFT_1_SRST_CAPE_A_OFFSET  0x1
#define CR_RST_SFT_1_SRST_CAPE_A_MASK  0x2
#define CR_RST_SFT_1_SRST_CAPE_A  0x2
#define CR_RST_SFT_1_SRST_DSP_OFFSET  0x0
#define CR_RST_SFT_1_SRST_DSP_MASK  0x1
#define CR_RST_SFT_1_SRST_DSP  0x1
#define CR_RST_SFT_2_SRST_CHIP_SYNC_OFFSET  0xa
#define CR_RST_SFT_2_SRST_CHIP_SYNC_MASK  0x400
#define CR_RST_SFT_2_SRST_CHIP_SYNC  0x400
#define CR_RST_SFT_2_SRST_MADC_OFFSET  0x9
#define CR_RST_SFT_2_SRST_MADC_MASK  0x200
#define CR_RST_SFT_2_SRST_MADC  0x200
#define CR_RST_SFT_2_SRST_RCOSC_ST_CAL_OFFSET  0x8
#define CR_RST_SFT_2_SRST_RCOSC_ST_CAL_MASK  0x100
#define CR_RST_SFT_2_SRST_RCOSC_ST_CAL  0x100
#define CR_RST_SFT_2_SRST_DSP_TIMER7_OFFSET  0x7
#define CR_RST_SFT_2_SRST_DSP_TIMER7_MASK  0x80
#define CR_RST_SFT_2_SRST_DSP_TIMER7  0x80
#define CR_RST_SFT_2_SRST_DSP_TIMER6_OFFSET  0x6
#define CR_RST_SFT_2_SRST_DSP_TIMER6_MASK  0x40
#define CR_RST_SFT_2_SRST_DSP_TIMER6  0x40
#define CR_RST_SFT_2_SRST_DSP_TIMER5_OFFSET  0x5
#define CR_RST_SFT_2_SRST_DSP_TIMER5_MASK  0x20
#define CR_RST_SFT_2_SRST_DSP_TIMER5  0x20
#define CR_RST_SFT_2_SRST_DSP_TIMER4_OFFSET  0x4
#define CR_RST_SFT_2_SRST_DSP_TIMER4_MASK  0x10
#define CR_RST_SFT_2_SRST_DSP_TIMER4  0x10
#define CR_RST_SFT_2_SRST_DSP_TIMER3_OFFSET  0x3
#define CR_RST_SFT_2_SRST_DSP_TIMER3_MASK  0x8
#define CR_RST_SFT_2_SRST_DSP_TIMER3  0x8
#define CR_RST_SFT_2_SRST_DSP_TIMER2_OFFSET  0x2
#define CR_RST_SFT_2_SRST_DSP_TIMER2_MASK  0x4
#define CR_RST_SFT_2_SRST_DSP_TIMER2  0x4
#define CR_RST_SFT_2_SRST_DSP_TIMER1_OFFSET  0x1
#define CR_RST_SFT_2_SRST_DSP_TIMER1_MASK  0x2
#define CR_RST_SFT_2_SRST_DSP_TIMER1  0x2
#define CR_RST_SFT_2_SRST_DSP_TIMER0_OFFSET  0x0
#define CR_RST_SFT_2_SRST_DSP_TIMER0_MASK  0x1
#define CR_RST_SFT_2_SRST_DSP_TIMER0  0x1
#define CR_RST_CON_0_DIS_PMU_WDT_RESET_OFFSET  0x1
#define CR_RST_CON_0_DIS_PMU_WDT_RESET_MASK  0x2
#define CR_RST_CON_0_DIS_PMU_WDT_RESET  0x2
#define CR_RST_CON_0_DIS_WDT_RESET_OFFSET  0x0
#define CR_RST_CON_0_DIS_WDT_RESET_MASK  0x1
#define CR_RST_CON_0_DIS_WDT_RESET  0x1
#define CR_CLK_MAIN_ELINK_PLL_OUT_CLK_DIV_CHNG_OFFSET  0x13
#define CR_CLK_MAIN_ELINK_PLL_OUT_CLK_DIV_CHNG_MASK  0x80000
#define CR_CLK_MAIN_ELINK_PLL_OUT_CLK_DIV_CHNG  0x80000
#define CR_CLK_MAIN_ELINK_PLL_OUT_CLK_DIV_OFFSET  0xb
#define CR_CLK_MAIN_ELINK_PLL_OUT_CLK_DIV_MASK  0x7f800
#define CR_CLK_MAIN_ELINK_PLL_OUT_CLK_DIV  0x7f800
#define CR_CLK_MAIN_PROC_PLL_REF_SEL_OFFSET  0xa
#define CR_CLK_MAIN_PROC_PLL_REF_SEL_MASK  0x400
#define CR_CLK_MAIN_PROC_PLL_REF_SEL  0x400
#define CR_CLK_MAIN_PROC_PLL_SRC_CLK_SEL_OFFSET  0x7
#define CR_CLK_MAIN_PROC_PLL_SRC_CLK_SEL_MASK  0x380
#define CR_CLK_MAIN_PROC_PLL_SRC_CLK_SEL  0x380
#define CR_CLK_MAIN_PROC_SRC_CLK_SEL_OFFSET  0x5
#define CR_CLK_MAIN_PROC_SRC_CLK_SEL_MASK  0x60
#define CR_CLK_MAIN_PROC_SRC_CLK_SEL  0x60
#define CR_CLK_MAIN_CODEC_SRC_CLK_SEL_OFFSET  0x4
#define CR_CLK_MAIN_CODEC_SRC_CLK_SEL_MASK  0x10
#define CR_CLK_MAIN_CODEC_SRC_CLK_SEL  0x10
#define CR_CLK_MAIN_EARLINK_PLL_REF_SEL_OFFSET  0x3
#define CR_CLK_MAIN_EARLINK_PLL_REF_SEL_MASK  0x8
#define CR_CLK_MAIN_EARLINK_PLL_REF_SEL  0x8
#define CR_CLK_MAIN_SRC_CLK_SEL_OFFSET  0x0
#define CR_CLK_MAIN_SRC_CLK_SEL_MASK  0x7
#define CR_CLK_MAIN_SRC_CLK_SEL  0x7
#define CR_CLK_PMU_PMU_CLK_EN_OFFSET  0x9
#define CR_CLK_PMU_PMU_CLK_EN_MASK  0x200
#define CR_CLK_PMU_PMU_CLK_EN  0x200
#define CR_CLK_PMU_PMU_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_PMU_PMU_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_PMU_PMU_CLK_DIV_CHNG  0x100
#define CR_CLK_PMU_PMU_CLK_DIV_OFFSET  0x0
#define CR_CLK_PMU_PMU_CLK_DIV_MASK  0xff
#define CR_CLK_PMU_PMU_CLK_DIV  0xff
#define CR_CLK_ARM_32K_ARM_32K_CLK_EN_OFFSET  0x9
#define CR_CLK_ARM_32K_ARM_32K_CLK_EN_MASK  0x200
#define CR_CLK_ARM_32K_ARM_32K_CLK_EN  0x200
#define CR_CLK_ARM_32K_ARM_32K_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_ARM_32K_ARM_32K_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_ARM_32K_ARM_32K_CLK_DIV_CHNG  0x100
#define CR_CLK_ARM_32K_ARM_32K_CLK_DIV_OFFSET  0x0
#define CR_CLK_ARM_32K_ARM_32K_CLK_DIV_MASK  0xff
#define CR_CLK_ARM_32K_ARM_32K_CLK_DIV  0xff
#define CR_CLK_EARLINK_CHIP_SYNC_CLK_SEL_OFFSET  0x7
#define CR_CLK_EARLINK_CHIP_SYNC_CLK_SEL_MASK  0x80
#define CR_CLK_EARLINK_CHIP_SYNC_CLK_SEL  0x80
#define CR_CLK_EARLINK_CHIP_SYNC_CLK_EN_OFFSET  0x6
#define CR_CLK_EARLINK_CHIP_SYNC_CLK_EN_MASK  0x40
#define CR_CLK_EARLINK_CHIP_SYNC_CLK_EN  0x40
#define CR_CLK_EARLINK_EARLINK_FB_CLK_SEL_OFFSET  0x5
#define CR_CLK_EARLINK_EARLINK_FB_CLK_SEL_MASK  0x20
#define CR_CLK_EARLINK_EARLINK_FB_CLK_SEL  0x20
#define CR_CLK_EARLINK_EARLINK_SLV_CLK_SEL_OFFSET  0x4
#define CR_CLK_EARLINK_EARLINK_SLV_CLK_SEL_MASK  0x10
#define CR_CLK_EARLINK_EARLINK_SLV_CLK_SEL  0x10
#define CR_CLK_EARLINK_EARLINK_APB_CLK_EN_OFFSET  0x3
#define CR_CLK_EARLINK_EARLINK_APB_CLK_EN_MASK  0x8
#define CR_CLK_EARLINK_EARLINK_APB_CLK_EN  0x8
#define CR_CLK_EARLINK_EARLINK_AHB_CLK_EN_OFFSET  0x2
#define CR_CLK_EARLINK_EARLINK_AHB_CLK_EN_MASK  0x4
#define CR_CLK_EARLINK_EARLINK_AHB_CLK_EN  0x4
#define CR_CLK_EARLINK_EARLINK_SLOW_CLK_EN_OFFSET  0x1
#define CR_CLK_EARLINK_EARLINK_SLOW_CLK_EN_MASK  0x2
#define CR_CLK_EARLINK_EARLINK_SLOW_CLK_EN  0x2
#define CR_CLK_EARLINK_EARLINK_CLK_EN_OFFSET  0x0
#define CR_CLK_EARLINK_EARLINK_CLK_EN_MASK  0x1
#define CR_CLK_EARLINK_EARLINK_CLK_EN  0x1
#define CR_CLK_I2S0_I2S0_TX_PCLK_CH1_EN_OFFSET  0x14
#define CR_CLK_I2S0_I2S0_TX_PCLK_CH1_EN_MASK  0x100000
#define CR_CLK_I2S0_I2S0_TX_PCLK_CH1_EN  0x100000
#define CR_CLK_I2S0_I2S0_TX_PCLK_CH0_EN_OFFSET  0x13
#define CR_CLK_I2S0_I2S0_TX_PCLK_CH0_EN_MASK  0x80000
#define CR_CLK_I2S0_I2S0_TX_PCLK_CH0_EN  0x80000
#define CR_CLK_I2S0_I2S0_RX_PCLK_CH1_EN_OFFSET  0x12
#define CR_CLK_I2S0_I2S0_RX_PCLK_CH1_EN_MASK  0x40000
#define CR_CLK_I2S0_I2S0_RX_PCLK_CH1_EN  0x40000
#define CR_CLK_I2S0_I2S0_RX_PCLK_CH0_EN_OFFSET  0x11
#define CR_CLK_I2S0_I2S0_RX_PCLK_CH0_EN_MASK  0x20000
#define CR_CLK_I2S0_I2S0_RX_PCLK_CH0_EN  0x20000
#define CR_CLK_I2S0_I2S0_BCLK_OUT_POL_OFFSET  0x10
#define CR_CLK_I2S0_I2S0_BCLK_OUT_POL_MASK  0x10000
#define CR_CLK_I2S0_I2S0_BCLK_OUT_POL  0x10000
#define CR_CLK_I2S0_I2S0_BCLK_OUT_EN_OFFSET  0xf
#define CR_CLK_I2S0_I2S0_BCLK_OUT_EN_MASK  0x8000
#define CR_CLK_I2S0_I2S0_BCLK_OUT_EN  0x8000
#define CR_CLK_I2S0_I2S0_TX_POL_OFFSET  0xe
#define CR_CLK_I2S0_I2S0_TX_POL_MASK  0x4000
#define CR_CLK_I2S0_I2S0_TX_POL  0x4000
#define CR_CLK_I2S0_I2S0_RX_POL_OFFSET  0xd
#define CR_CLK_I2S0_I2S0_RX_POL_MASK  0x2000
#define CR_CLK_I2S0_I2S0_RX_POL  0x2000
#define CR_CLK_I2S0_I2S0_TX_CLK_EN_OFFSET  0xc
#define CR_CLK_I2S0_I2S0_TX_CLK_EN_MASK  0x1000
#define CR_CLK_I2S0_I2S0_TX_CLK_EN  0x1000
#define CR_CLK_I2S0_I2S0_RX_CLK_EN_OFFSET  0xb
#define CR_CLK_I2S0_I2S0_RX_CLK_EN_MASK  0x800
#define CR_CLK_I2S0_I2S0_RX_CLK_EN  0x800
#define CR_CLK_I2S0_I2S0_MST_CLK_DIV_CHNG_OFFSET  0xa
#define CR_CLK_I2S0_I2S0_MST_CLK_DIV_CHNG_MASK  0x400
#define CR_CLK_I2S0_I2S0_MST_CLK_DIV_CHNG  0x400
#define CR_CLK_I2S0_I2S0_MST_CLK_DIV_OFFSET  0x0
#define CR_CLK_I2S0_I2S0_MST_CLK_DIV_MASK  0x3ff
#define CR_CLK_I2S0_I2S0_MST_CLK_DIV  0x3ff
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH5_EN_OFFSET  0x18
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH5_EN_MASK  0x1000000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH5_EN  0x1000000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH4_EN_OFFSET  0x17
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH4_EN_MASK  0x800000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH4_EN  0x800000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH3_EN_OFFSET  0x16
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH3_EN_MASK  0x400000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH3_EN  0x400000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH2_EN_OFFSET  0x15
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH2_EN_MASK  0x200000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH2_EN  0x200000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH1_EN_OFFSET  0x14
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH1_EN_MASK  0x100000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH1_EN  0x100000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH0_EN_OFFSET  0x13
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH0_EN_MASK  0x80000
#define CR_CLK_I2S1_I2S1_TX_PCLK_CH0_EN  0x80000
#define CR_CLK_I2S1_I2S1_RX_PCLK_CH1_EN_OFFSET  0x12
#define CR_CLK_I2S1_I2S1_RX_PCLK_CH1_EN_MASK  0x40000
#define CR_CLK_I2S1_I2S1_RX_PCLK_CH1_EN  0x40000
#define CR_CLK_I2S1_I2S1_RX_PCLK_CH0_EN_OFFSET  0x11
#define CR_CLK_I2S1_I2S1_RX_PCLK_CH0_EN_MASK  0x20000
#define CR_CLK_I2S1_I2S1_RX_PCLK_CH0_EN  0x20000
#define CR_CLK_I2S1_I2S1_BCLK_OUT_POL_OFFSET  0x10
#define CR_CLK_I2S1_I2S1_BCLK_OUT_POL_MASK  0x10000
#define CR_CLK_I2S1_I2S1_BCLK_OUT_POL  0x10000
#define CR_CLK_I2S1_I2S1_BCLK_OUT_EN_OFFSET  0xf
#define CR_CLK_I2S1_I2S1_BCLK_OUT_EN_MASK  0x8000
#define CR_CLK_I2S1_I2S1_BCLK_OUT_EN  0x8000
#define CR_CLK_I2S1_I2S1_TX_POL_OFFSET  0xe
#define CR_CLK_I2S1_I2S1_TX_POL_MASK  0x4000
#define CR_CLK_I2S1_I2S1_TX_POL  0x4000
#define CR_CLK_I2S1_I2S1_RX_POL_OFFSET  0xd
#define CR_CLK_I2S1_I2S1_RX_POL_MASK  0x2000
#define CR_CLK_I2S1_I2S1_RX_POL  0x2000
#define CR_CLK_I2S1_I2S1_TX_CLK_EN_OFFSET  0xc
#define CR_CLK_I2S1_I2S1_TX_CLK_EN_MASK  0x1000
#define CR_CLK_I2S1_I2S1_TX_CLK_EN  0x1000
#define CR_CLK_I2S1_I2S1_RX_CLK_EN_OFFSET  0xb
#define CR_CLK_I2S1_I2S1_RX_CLK_EN_MASK  0x800
#define CR_CLK_I2S1_I2S1_RX_CLK_EN  0x800
#define CR_CLK_I2S1_I2S1_MST_CLK_DIV_CHNG_OFFSET  0xa
#define CR_CLK_I2S1_I2S1_MST_CLK_DIV_CHNG_MASK  0x400
#define CR_CLK_I2S1_I2S1_MST_CLK_DIV_CHNG  0x400
#define CR_CLK_I2S1_I2S1_MST_CLK_DIV_OFFSET  0x0
#define CR_CLK_I2S1_I2S1_MST_CLK_DIV_MASK  0x3ff
#define CR_CLK_I2S1_I2S1_MST_CLK_DIV  0x3ff
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_POL_OFFSET  0xc
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_POL_MASK  0x1000
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_POL  0x1000
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_EN_OFFSET  0xb
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_EN_MASK  0x800
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_EN  0x800
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_DIV_CHNG_OFFSET  0xa
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_DIV_CHNG_MASK  0x400
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_DIV_CHNG  0x400
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_DIV_OFFSET  0x0
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_DIV_MASK  0x3ff
#define CR_CLK_I2S_MST_IO_I2S_MST_IO_CLK_DIV  0x3ff
#define CR_CLK_ADC_ADC_DIG_LOW_LATENCY_CLK_SEL_OFFSET  0x1f
#define CR_CLK_ADC_ADC_DIG_LOW_LATENCY_CLK_SEL_MASK  0x80000000
#define CR_CLK_ADC_ADC_DIG_LOW_LATENCY_CLK_SEL  0x80000000
#define CR_CLK_ADC_ADC_DIG_LOW_LATENCY_CLK_EN_OFFSET  0x1e
#define CR_CLK_ADC_ADC_DIG_LOW_LATENCY_CLK_EN_MASK  0x40000000
#define CR_CLK_ADC_ADC_DIG_LOW_LATENCY_CLK_EN  0x40000000
#define CR_CLK_ADC_ADC_DIG_3M_4_CLK_EN_OFFSET  0x1d
#define CR_CLK_ADC_ADC_DIG_3M_4_CLK_EN_MASK  0x20000000
#define CR_CLK_ADC_ADC_DIG_3M_4_CLK_EN  0x20000000
#define CR_CLK_ADC_ADC_DIG_3M_3_CLK_EN_OFFSET  0x1c
#define CR_CLK_ADC_ADC_DIG_3M_3_CLK_EN_MASK  0x10000000
#define CR_CLK_ADC_ADC_DIG_3M_3_CLK_EN  0x10000000
#define CR_CLK_ADC_ADC_DIG_3M_2_CLK_EN_OFFSET  0x1b
#define CR_CLK_ADC_ADC_DIG_3M_2_CLK_EN_MASK  0x8000000
#define CR_CLK_ADC_ADC_DIG_3M_2_CLK_EN  0x8000000
#define CR_CLK_ADC_ADC_DIG_3M_1_CLK_EN_OFFSET  0x1a
#define CR_CLK_ADC_ADC_DIG_3M_1_CLK_EN_MASK  0x4000000
#define CR_CLK_ADC_ADC_DIG_3M_1_CLK_EN  0x4000000
#define CR_CLK_ADC_ADC_DIG_3M_0_CLK_EN_OFFSET  0x19
#define CR_CLK_ADC_ADC_DIG_3M_0_CLK_EN_MASK  0x2000000
#define CR_CLK_ADC_ADC_DIG_3M_0_CLK_EN  0x2000000
#define CR_CLK_ADC_ADC_6M_4_CLK_SEL_OFFSET  0x18
#define CR_CLK_ADC_ADC_6M_4_CLK_SEL_MASK  0x1000000
#define CR_CLK_ADC_ADC_6M_4_CLK_SEL  0x1000000
#define CR_CLK_ADC_ADC_6M_3_CLK_SEL_OFFSET  0x17
#define CR_CLK_ADC_ADC_6M_3_CLK_SEL_MASK  0x800000
#define CR_CLK_ADC_ADC_6M_3_CLK_SEL  0x800000
#define CR_CLK_ADC_ADC_6M_2_CLK_SEL_OFFSET  0x16
#define CR_CLK_ADC_ADC_6M_2_CLK_SEL_MASK  0x400000
#define CR_CLK_ADC_ADC_6M_2_CLK_SEL  0x400000
#define CR_CLK_ADC_ADC_6M_1_CLK_SEL_OFFSET  0x15
#define CR_CLK_ADC_ADC_6M_1_CLK_SEL_MASK  0x200000
#define CR_CLK_ADC_ADC_6M_1_CLK_SEL  0x200000
#define CR_CLK_ADC_ADC_6M_0_CLK_SEL_OFFSET  0x14
#define CR_CLK_ADC_ADC_6M_0_CLK_SEL_MASK  0x100000
#define CR_CLK_ADC_ADC_6M_0_CLK_SEL  0x100000
#define CR_CLK_ADC_ADC_CLK_1_EN_OFFSET  0x13
#define CR_CLK_ADC_ADC_CLK_1_EN_MASK  0x80000
#define CR_CLK_ADC_ADC_CLK_1_EN  0x80000
#define CR_CLK_ADC_ADC_CLK_1_DIV_CHNG_OFFSET  0x12
#define CR_CLK_ADC_ADC_CLK_1_DIV_CHNG_MASK  0x40000
#define CR_CLK_ADC_ADC_CLK_1_DIV_CHNG  0x40000
#define CR_CLK_ADC_ADC_CLK_1_DIV_OFFSET  0xa
#define CR_CLK_ADC_ADC_CLK_1_DIV_MASK  0x3fc00
#define CR_CLK_ADC_ADC_CLK_1_DIV  0x3fc00
#define CR_CLK_ADC_ADC_CLK_0_EN_OFFSET  0x9
#define CR_CLK_ADC_ADC_CLK_0_EN_MASK  0x200
#define CR_CLK_ADC_ADC_CLK_0_EN  0x200
#define CR_CLK_ADC_ADC_CLK_0_DIV_CHNG_OFFSET  0x8
#define CR_CLK_ADC_ADC_CLK_0_DIV_CHNG_MASK  0x100
#define CR_CLK_ADC_ADC_CLK_0_DIV_CHNG  0x100
#define CR_CLK_ADC_ADC_CLK_0_DIV_OFFSET  0x0
#define CR_CLK_ADC_ADC_CLK_0_DIV_MASK  0xff
#define CR_CLK_ADC_ADC_CLK_0_DIV  0xff
#define CR_CLK_DAC_CLASSD_SRC_CLK_SEL_OFFSET  0x17
#define CR_CLK_DAC_CLASSD_SRC_CLK_SEL_MASK  0x800000
#define CR_CLK_DAC_CLASSD_SRC_CLK_SEL  0x800000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_DIV_CHNG_OFFSET  0x16
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_DIV_CHNG_MASK  0x400000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_DIV_CHNG  0x400000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_DIV_OFFSET  0xe
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_DIV_MASK  0x3fc000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_DIV  0x3fc000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_POL_OFFSET  0xd
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_POL_MASK  0x2000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_POL  0x2000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_EN_OFFSET  0xc
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_EN_MASK  0x1000
#define CR_CLK_DAC_DAC_ANA_CLASSD_CLK_EN  0x1000
#define CR_CLK_DAC_DAC_CLK_EN_OFFSET  0x9
#define CR_CLK_DAC_DAC_CLK_EN_MASK  0x200
#define CR_CLK_DAC_DAC_CLK_EN  0x200
#define CR_CLK_DAC_DAC_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_DAC_DAC_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_DAC_DAC_CLK_DIV_CHNG  0x100
#define CR_CLK_DAC_DAC_CLK_DIV_OFFSET  0x0
#define CR_CLK_DAC_DAC_CLK_DIV_MASK  0xff
#define CR_CLK_DAC_DAC_CLK_DIV  0xff
#define CR_CLK_DMIC_DMIC_CLK_EN_OFFSET  0x9
#define CR_CLK_DMIC_DMIC_CLK_EN_MASK  0x200
#define CR_CLK_DMIC_DMIC_CLK_EN  0x200
#define CR_CLK_DMIC_DMIC_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_DMIC_DMIC_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_DMIC_DMIC_CLK_DIV_CHNG  0x100
#define CR_CLK_DMIC_DMIC_CLK_DIV_OFFSET  0x0
#define CR_CLK_DMIC_DMIC_CLK_DIV_MASK  0xff
#define CR_CLK_DMIC_DMIC_CLK_DIV  0xff
#define CR_CLK_DSP_0_LLE_B_SMB_CLK_EN_OFFSET  0x1e
#define CR_CLK_DSP_0_LLE_B_SMB_CLK_EN_MASK  0x40000000
#define CR_CLK_DSP_0_LLE_B_SMB_CLK_EN  0x40000000
#define CR_CLK_DSP_0_LLE_A_SMB_CLK_EN_OFFSET  0x1d
#define CR_CLK_DSP_0_LLE_A_SMB_CLK_EN_MASK  0x20000000
#define CR_CLK_DSP_0_LLE_A_SMB_CLK_EN  0x20000000
#define CR_CLK_DSP_0_CAPE_B_SMB_CLK_EN_OFFSET  0x1c
#define CR_CLK_DSP_0_CAPE_B_SMB_CLK_EN_MASK  0x10000000
#define CR_CLK_DSP_0_CAPE_B_SMB_CLK_EN  0x10000000
#define CR_CLK_DSP_0_CAPE_A_SMB_CLK_EN_OFFSET  0x1b
#define CR_CLK_DSP_0_CAPE_A_SMB_CLK_EN_MASK  0x8000000
#define CR_CLK_DSP_0_CAPE_A_SMB_CLK_EN  0x8000000
#define CR_CLK_DSP_0_LLE_GATED_CLK_EN_OFFSET  0x1a
#define CR_CLK_DSP_0_LLE_GATED_CLK_EN_MASK  0x4000000
#define CR_CLK_DSP_0_LLE_GATED_CLK_EN  0x4000000
#define CR_CLK_DSP_0_SHARE_MEMORY_CLK_SEL_OFFSET  0x17
#define CR_CLK_DSP_0_SHARE_MEMORY_CLK_SEL_MASK  0x1800000
#define CR_CLK_DSP_0_SHARE_MEMORY_CLK_SEL  0x1800000
#define CR_CLK_DSP_0_SHARE_MEM_CLK_EN_OFFSET  0x16
#define CR_CLK_DSP_0_SHARE_MEM_CLK_EN_MASK  0x400000
#define CR_CLK_DSP_0_SHARE_MEM_CLK_EN  0x400000
#define CR_CLK_DSP_0_LLE_B_CLK_EN_OFFSET  0x15
#define CR_CLK_DSP_0_LLE_B_CLK_EN_MASK  0x200000
#define CR_CLK_DSP_0_LLE_B_CLK_EN  0x200000
#define CR_CLK_DSP_0_LLE_A_CLK_EN_OFFSET  0x14
#define CR_CLK_DSP_0_LLE_A_CLK_EN_MASK  0x100000
#define CR_CLK_DSP_0_LLE_A_CLK_EN  0x100000
#define CR_CLK_DSP_0_CAPE_B_CLK_EN_OFFSET  0x13
#define CR_CLK_DSP_0_CAPE_B_CLK_EN_MASK  0x80000
#define CR_CLK_DSP_0_CAPE_B_CLK_EN  0x80000
#define CR_CLK_DSP_0_CAPE_A_CLK_EN_OFFSET  0x12
#define CR_CLK_DSP_0_CAPE_A_CLK_EN_MASK  0x40000
#define CR_CLK_DSP_0_CAPE_A_CLK_EN  0x40000
#define CR_CLK_DSP_0_LLE_CLK_DIV_OFFSET  0x9
#define CR_CLK_DSP_0_LLE_CLK_DIV_MASK  0x1fe00
#define CR_CLK_DSP_0_LLE_CLK_DIV  0x1fe00
#define CR_CLK_DSP_0_DSP_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_DSP_0_DSP_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_DSP_0_DSP_CLK_DIV_CHNG  0x100
#define CR_CLK_DSP_0_CAPE_CLK_A_DIV_OFFSET  0x0
#define CR_CLK_DSP_0_CAPE_CLK_A_DIV_MASK  0xff
#define CR_CLK_DSP_0_CAPE_CLK_A_DIV  0xff
#define CR_CLK_HIFI3_HIFI3_CLK_EN_OFFSET  0x9
#define CR_CLK_HIFI3_HIFI3_CLK_EN_MASK  0x200
#define CR_CLK_HIFI3_HIFI3_CLK_EN  0x200
#define CR_CLK_HIFI3_HIFI3_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_HIFI3_HIFI3_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_HIFI3_HIFI3_CLK_DIV_CHNG  0x100
#define CR_CLK_HIFI3_HIFI3_CLK_DIV_OFFSET  0x0
#define CR_CLK_HIFI3_HIFI3_CLK_DIV_MASK  0xff
#define CR_CLK_HIFI3_HIFI3_CLK_DIV  0xff
#define CR_CLK_SSE200_SSE200_APB_CLK_EN_OFFSET  0xa
#define CR_CLK_SSE200_SSE200_APB_CLK_EN_MASK  0x400
#define CR_CLK_SSE200_SSE200_APB_CLK_EN  0x400
#define CR_CLK_SSE200_SSE200_CLK_EN_OFFSET  0x9
#define CR_CLK_SSE200_SSE200_CLK_EN_MASK  0x200
#define CR_CLK_SSE200_SSE200_CLK_EN  0x200
#define CR_CLK_SSE200_SSE200_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_SSE200_SSE200_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_SSE200_SSE200_CLK_DIV_CHNG  0x100
#define CR_CLK_SSE200_SSE200_CLK_DIV_OFFSET  0x0
#define CR_CLK_SSE200_SSE200_CLK_DIV_MASK  0xff
#define CR_CLK_SSE200_SSE200_CLK_DIV  0xff
#define CR_CLK_AHB_APB_APB_CLK_EN_OFFSET  0x9
#define CR_CLK_AHB_APB_APB_CLK_EN_MASK  0x200
#define CR_CLK_AHB_APB_APB_CLK_EN  0x200
#define CR_CLK_AHB_APB_AHB_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_AHB_APB_AHB_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_AHB_APB_AHB_CLK_DIV_CHNG  0x100
#define CR_CLK_AHB_APB_AHB_CLK_DIV_OFFSET  0x0
#define CR_CLK_AHB_APB_AHB_CLK_DIV_MASK  0xff
#define CR_CLK_AHB_APB_AHB_CLK_DIV  0xff
#define CR_CLK_DMA_I3C_DMA_CLK_EN_OFFSET  0x3
#define CR_CLK_DMA_I3C_DMA_CLK_EN_MASK  0x8
#define CR_CLK_DMA_I3C_DMA_CLK_EN  0x8
#define CR_CLK_DMA_FLEXI_DMA1_CLK_EN_OFFSET  0x2
#define CR_CLK_DMA_FLEXI_DMA1_CLK_EN_MASK  0x4
#define CR_CLK_DMA_FLEXI_DMA1_CLK_EN  0x4
#define CR_CLK_DMA_FLEXI_DMA0_CLK_EN_OFFSET  0x1
#define CR_CLK_DMA_FLEXI_DMA0_CLK_EN_MASK  0x2
#define CR_CLK_DMA_FLEXI_DMA0_CLK_EN  0x2
#define CR_CLK_DMA_AUDIO_DMA_CLK_EN_OFFSET  0x0
#define CR_CLK_DMA_AUDIO_DMA_CLK_EN_MASK  0x1
#define CR_CLK_DMA_AUDIO_DMA_CLK_EN  0x1
#define CR_CLK_AES_AES_CLK_EN_OFFSET  0x0
#define CR_CLK_AES_AES_CLK_EN_MASK  0x1
#define CR_CLK_AES_AES_CLK_EN  0x1
#define CR_CLK_SPI_SPI_CLK_EN_OFFSET  0x9
#define CR_CLK_SPI_SPI_CLK_EN_MASK  0x200
#define CR_CLK_SPI_SPI_CLK_EN  0x200
#define CR_CLK_SPI_SPI_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_SPI_SPI_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_SPI_SPI_CLK_DIV_CHNG  0x100
#define CR_CLK_SPI_SPI_CLK_DIV_OFFSET  0x0
#define CR_CLK_SPI_SPI_CLK_DIV_MASK  0xff
#define CR_CLK_SPI_SPI_CLK_DIV  0xff
#define CR_CLK_QSPI_QSPI_CLK_EN_OFFSET  0x9
#define CR_CLK_QSPI_QSPI_CLK_EN_MASK  0x200
#define CR_CLK_QSPI_QSPI_CLK_EN  0x200
#define CR_CLK_QSPI_QSPI_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_QSPI_QSPI_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_QSPI_QSPI_CLK_DIV_CHNG  0x100
#define CR_CLK_QSPI_QSPI_CLK_DIV_OFFSET  0x0
#define CR_CLK_QSPI_QSPI_CLK_DIV_MASK  0xff
#define CR_CLK_QSPI_QSPI_CLK_DIV  0xff
#define CR_CLK_TIMER0_TIMER0_CLK_EN_OFFSET  0x9
#define CR_CLK_TIMER0_TIMER0_CLK_EN_MASK  0x200
#define CR_CLK_TIMER0_TIMER0_CLK_EN  0x200
#define CR_CLK_TIMER0_TIMER0_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_TIMER0_TIMER0_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_TIMER0_TIMER0_CLK_DIV_CHNG  0x100
#define CR_CLK_TIMER0_TIMER0_CLK_DIV_OFFSET  0x0
#define CR_CLK_TIMER0_TIMER0_CLK_DIV_MASK  0xff
#define CR_CLK_TIMER0_TIMER0_CLK_DIV  0xff
#define CR_CLK_TIMER1_TIMER1_CLK_EN_OFFSET  0x9
#define CR_CLK_TIMER1_TIMER1_CLK_EN_MASK  0x200
#define CR_CLK_TIMER1_TIMER1_CLK_EN  0x200
#define CR_CLK_TIMER1_TIMER1_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_TIMER1_TIMER1_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_TIMER1_TIMER1_CLK_DIV_CHNG  0x100
#define CR_CLK_TIMER1_TIMER1_CLK_DIV_OFFSET  0x0
#define CR_CLK_TIMER1_TIMER1_CLK_DIV_MASK  0xff
#define CR_CLK_TIMER1_TIMER1_CLK_DIV  0xff
#define CR_CLK_TIMER2_TIMER2_CLK_EN_OFFSET  0x9
#define CR_CLK_TIMER2_TIMER2_CLK_EN_MASK  0x200
#define CR_CLK_TIMER2_TIMER2_CLK_EN  0x200
#define CR_CLK_TIMER2_TIMER2_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_TIMER2_TIMER2_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_TIMER2_TIMER2_CLK_DIV_CHNG  0x100
#define CR_CLK_TIMER2_TIMER2_CLK_DIV_OFFSET  0x0
#define CR_CLK_TIMER2_TIMER2_CLK_DIV_MASK  0xff
#define CR_CLK_TIMER2_TIMER2_CLK_DIV  0xff
#define CR_CLK_PWM_PWM_CLK_EN_OFFSET  0x9
#define CR_CLK_PWM_PWM_CLK_EN_MASK  0x200
#define CR_CLK_PWM_PWM_CLK_EN  0x200
#define CR_CLK_PWM_PWM_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_PWM_PWM_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_PWM_PWM_CLK_DIV_CHNG  0x100
#define CR_CLK_PWM_PWM_CLK_DIV_OFFSET  0x0
#define CR_CLK_PWM_PWM_CLK_DIV_MASK  0xff
#define CR_CLK_PWM_PWM_CLK_DIV  0xff
#define CR_CLK_I2C_I2C_MST_CLK_EN_OFFSET  0x1
#define CR_CLK_I2C_I2C_MST_CLK_EN_MASK  0x2
#define CR_CLK_I2C_I2C_MST_CLK_EN  0x2
#define CR_CLK_I2C_I2C_SLV_CLK_EN_OFFSET  0x0
#define CR_CLK_I2C_I2C_SLV_CLK_EN_MASK  0x1
#define CR_CLK_I2C_I2C_SLV_CLK_EN  0x1
#define CR_CLK_MAIL_BOX_MAIL_BOX_CLK_EN_OFFSET  0x0
#define CR_CLK_MAIL_BOX_MAIL_BOX_CLK_EN_MASK  0x1
#define CR_CLK_MAIL_BOX_MAIL_BOX_CLK_EN  0x1
#define CR_CLK_I3C_I3C_CORE_CLK_EN_OFFSET  0x9
#define CR_CLK_I3C_I3C_CORE_CLK_EN_MASK  0x200
#define CR_CLK_I3C_I3C_CORE_CLK_EN  0x200
#define CR_CLK_I3C_I3C_CORE_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_I3C_I3C_CORE_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_I3C_I3C_CORE_CLK_DIV_CHNG  0x100
#define CR_CLK_I3C_I3C_CORE_CLK_DIV_OFFSET  0x0
#define CR_CLK_I3C_I3C_CORE_CLK_DIV_MASK  0xff
#define CR_CLK_I3C_I3C_CORE_CLK_DIV  0xff
#define CR_CLK_UART_UART_CLK_EN_OFFSET  0x9
#define CR_CLK_UART_UART_CLK_EN_MASK  0x200
#define CR_CLK_UART_UART_CLK_EN  0x200
#define CR_CLK_UART_UART_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_UART_UART_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_UART_UART_CLK_DIV_CHNG  0x100
#define CR_CLK_UART_UART_CLK_DIV_OFFSET  0x0
#define CR_CLK_UART_UART_CLK_DIV_MASK  0xff
#define CR_CLK_UART_UART_CLK_DIV  0xff
#define CR_CLK_ACL_ACL_CLK_EN_OFFSET  0x9
#define CR_CLK_ACL_ACL_CLK_EN_MASK  0x200
#define CR_CLK_ACL_ACL_CLK_EN  0x200
#define CR_CLK_ACL_ACL_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_ACL_ACL_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_ACL_ACL_CLK_DIV_CHNG  0x100
#define CR_CLK_ACL_ACL_CLK_DIV_OFFSET  0x0
#define CR_CLK_ACL_ACL_CLK_DIV_MASK  0xff
#define CR_CLK_ACL_ACL_CLK_DIV  0xff
#define CR_CLK_ADC_ANA_ADC_3M_4_CLK_SRC_SEL_OFFSET  0x1c
#define CR_CLK_ADC_ANA_ADC_3M_4_CLK_SRC_SEL_MASK  0x10000000
#define CR_CLK_ADC_ANA_ADC_3M_4_CLK_SRC_SEL  0x10000000
#define CR_CLK_ADC_ANA_ADC_3M_3_CLK_SRC_SEL_OFFSET  0x1b
#define CR_CLK_ADC_ANA_ADC_3M_3_CLK_SRC_SEL_MASK  0x8000000
#define CR_CLK_ADC_ANA_ADC_3M_3_CLK_SRC_SEL  0x8000000
#define CR_CLK_ADC_ANA_ADC_3M_2_CLK_SRC_SEL_OFFSET  0x1a
#define CR_CLK_ADC_ANA_ADC_3M_2_CLK_SRC_SEL_MASK  0x4000000
#define CR_CLK_ADC_ANA_ADC_3M_2_CLK_SRC_SEL  0x4000000
#define CR_CLK_ADC_ANA_ADC_3M_1_CLK_SRC_SEL_OFFSET  0x19
#define CR_CLK_ADC_ANA_ADC_3M_1_CLK_SRC_SEL_MASK  0x2000000
#define CR_CLK_ADC_ANA_ADC_3M_1_CLK_SRC_SEL  0x2000000
#define CR_CLK_ADC_ANA_ADC_3M_0_CLK_SRC_SEL_OFFSET  0x18
#define CR_CLK_ADC_ANA_ADC_3M_0_CLK_SRC_SEL_MASK  0x1000000
#define CR_CLK_ADC_ANA_ADC_3M_0_CLK_SRC_SEL  0x1000000
#define CR_CLK_ADC_ANA_ANC_5CH_EN_OFFSET  0x15
#define CR_CLK_ADC_ANA_ANC_5CH_EN_MASK  0x200000
#define CR_CLK_ADC_ANA_ANC_5CH_EN  0x200000
#define CR_CLK_ADC_ANA_ADC_5CH_EN_OFFSET  0x14
#define CR_CLK_ADC_ANA_ADC_5CH_EN_MASK  0x100000
#define CR_CLK_ADC_ANA_ADC_5CH_EN  0x100000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_4_CLK_POL_OFFSET  0x13
#define CR_CLK_ADC_ANA_ADC_ANA_3M_4_CLK_POL_MASK  0x80000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_4_CLK_POL  0x80000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_4_CLK_EN_OFFSET  0x12
#define CR_CLK_ADC_ANA_ADC_ANA_3M_4_CLK_EN_MASK  0x40000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_4_CLK_EN  0x40000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_3_CLK_POL_OFFSET  0x11
#define CR_CLK_ADC_ANA_ADC_ANA_3M_3_CLK_POL_MASK  0x20000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_3_CLK_POL  0x20000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_3_CLK_EN_OFFSET  0x10
#define CR_CLK_ADC_ANA_ADC_ANA_3M_3_CLK_EN_MASK  0x10000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_3_CLK_EN  0x10000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_2_CLK_POL_OFFSET  0xf
#define CR_CLK_ADC_ANA_ADC_ANA_3M_2_CLK_POL_MASK  0x8000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_2_CLK_POL  0x8000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_2_CLK_EN_OFFSET  0xe
#define CR_CLK_ADC_ANA_ADC_ANA_3M_2_CLK_EN_MASK  0x4000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_2_CLK_EN  0x4000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_1_CLK_POL_OFFSET  0xd
#define CR_CLK_ADC_ANA_ADC_ANA_3M_1_CLK_POL_MASK  0x2000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_1_CLK_POL  0x2000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_1_CLK_EN_OFFSET  0xc
#define CR_CLK_ADC_ANA_ADC_ANA_3M_1_CLK_EN_MASK  0x1000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_1_CLK_EN  0x1000
#define CR_CLK_ADC_ANA_ADC_ANA_3M_0_CLK_POL_OFFSET  0xb
#define CR_CLK_ADC_ANA_ADC_ANA_3M_0_CLK_POL_MASK  0x800
#define CR_CLK_ADC_ANA_ADC_ANA_3M_0_CLK_POL  0x800
#define CR_CLK_ADC_ANA_ADC_ANA_3M_0_CLK_EN_OFFSET  0xa
#define CR_CLK_ADC_ANA_ADC_ANA_3M_0_CLK_EN_MASK  0x400
#define CR_CLK_ADC_ANA_ADC_ANA_3M_0_CLK_EN  0x400
#define CR_CLK_ADC_ANA_ADC_ANA_4_CLK_POL_OFFSET  0x9
#define CR_CLK_ADC_ANA_ADC_ANA_4_CLK_POL_MASK  0x200
#define CR_CLK_ADC_ANA_ADC_ANA_4_CLK_POL  0x200
#define CR_CLK_ADC_ANA_ADC_ANA_4_CLK_EN_OFFSET  0x8
#define CR_CLK_ADC_ANA_ADC_ANA_4_CLK_EN_MASK  0x100
#define CR_CLK_ADC_ANA_ADC_ANA_4_CLK_EN  0x100
#define CR_CLK_ADC_ANA_ADC_ANA_3_CLK_POL_OFFSET  0x7
#define CR_CLK_ADC_ANA_ADC_ANA_3_CLK_POL_MASK  0x80
#define CR_CLK_ADC_ANA_ADC_ANA_3_CLK_POL  0x80
#define CR_CLK_ADC_ANA_ADC_ANA_3_CLK_EN_OFFSET  0x6
#define CR_CLK_ADC_ANA_ADC_ANA_3_CLK_EN_MASK  0x40
#define CR_CLK_ADC_ANA_ADC_ANA_3_CLK_EN  0x40
#define CR_CLK_ADC_ANA_ADC_ANA_2_CLK_POL_OFFSET  0x5
#define CR_CLK_ADC_ANA_ADC_ANA_2_CLK_POL_MASK  0x20
#define CR_CLK_ADC_ANA_ADC_ANA_2_CLK_POL  0x20
#define CR_CLK_ADC_ANA_ADC_ANA_2_CLK_EN_OFFSET  0x4
#define CR_CLK_ADC_ANA_ADC_ANA_2_CLK_EN_MASK  0x10
#define CR_CLK_ADC_ANA_ADC_ANA_2_CLK_EN  0x10
#define CR_CLK_ADC_ANA_ADC_ANA_1_CLK_POL_OFFSET  0x3
#define CR_CLK_ADC_ANA_ADC_ANA_1_CLK_POL_MASK  0x8
#define CR_CLK_ADC_ANA_ADC_ANA_1_CLK_POL  0x8
#define CR_CLK_ADC_ANA_ADC_ANA_1_CLK_EN_OFFSET  0x2
#define CR_CLK_ADC_ANA_ADC_ANA_1_CLK_EN_MASK  0x4
#define CR_CLK_ADC_ANA_ADC_ANA_1_CLK_EN  0x4
#define CR_CLK_ADC_ANA_ADC_ANA_0_CLK_POL_OFFSET  0x1
#define CR_CLK_ADC_ANA_ADC_ANA_0_CLK_POL_MASK  0x2
#define CR_CLK_ADC_ANA_ADC_ANA_0_CLK_POL  0x2
#define CR_CLK_ADC_ANA_ADC_ANA_0_CLK_EN_OFFSET  0x0
#define CR_CLK_ADC_ANA_ADC_ANA_0_CLK_EN_MASK  0x1
#define CR_CLK_ADC_ANA_ADC_ANA_0_CLK_EN  0x1
#define CR_CLK_DSP_1_AHB_DSP_BRIDGE_CLK_EN_OFFSET  0x9
#define CR_CLK_DSP_1_AHB_DSP_BRIDGE_CLK_EN_MASK  0x200
#define CR_CLK_DSP_1_AHB_DSP_BRIDGE_CLK_EN  0x200
#define CR_CLK_DSP_1_CAPE_CLK_B_DIV_OFFSET  0x0
#define CR_CLK_DSP_1_CAPE_CLK_B_DIV_MASK  0xff
#define CR_CLK_DSP_1_CAPE_CLK_B_DIV  0xff
#define CR_DET_I2S_ON_INT_INT_MASK_DET_I2S_ON_OFFSET  0x2
#define CR_DET_I2S_ON_INT_INT_MASK_DET_I2S_ON_MASK  0x4
#define CR_DET_I2S_ON_INT_INT_MASK_DET_I2S_ON  0x4
#define CR_DET_I2S_ON_INT_INT_ENAB_DET_I2S_ON_OFFSET  0x1
#define CR_DET_I2S_ON_INT_INT_ENAB_DET_I2S_ON_MASK  0x2
#define CR_DET_I2S_ON_INT_INT_ENAB_DET_I2S_ON  0x2
#define CR_DET_I2S_ON_INT_INT_STAT_DET_I2S_ON_OFFSET  0x0
#define CR_DET_I2S_ON_INT_INT_STAT_DET_I2S_ON_MASK  0x1
#define CR_DET_I2S_ON_INT_INT_STAT_DET_I2S_ON  0x1
#define CR_DET_I2S_OFF_INT_INT_MASK_DET_I2S_OFF_OFFSET  0x2
#define CR_DET_I2S_OFF_INT_INT_MASK_DET_I2S_OFF_MASK  0x4
#define CR_DET_I2S_OFF_INT_INT_MASK_DET_I2S_OFF  0x4
#define CR_DET_I2S_OFF_INT_INT_ENAB_DET_I2S_OFF_OFFSET  0x1
#define CR_DET_I2S_OFF_INT_INT_ENAB_DET_I2S_OFF_MASK  0x2
#define CR_DET_I2S_OFF_INT_INT_ENAB_DET_I2S_OFF  0x2
#define CR_DET_I2S_OFF_INT_INT_STAT_DET_I2S_OFF_OFFSET  0x0
#define CR_DET_I2S_OFF_INT_INT_STAT_DET_I2S_OFF_MASK  0x1
#define CR_DET_I2S_OFF_INT_INT_STAT_DET_I2S_OFF  0x1
#define CR_DET_I2S_ON_CFG_DET_I2S_ON_THRD_OFFSET  0x0
#define CR_DET_I2S_ON_CFG_DET_I2S_ON_THRD_MASK  0xfff
#define CR_DET_I2S_ON_CFG_DET_I2S_ON_THRD  0xfff
#define CR_DET_I2S_OFF_CFG_RCOSC_LP_SAMPLE_INTERVAL_OFFSET  0x0
#define CR_DET_I2S_OFF_CFG_RCOSC_LP_SAMPLE_INTERVAL_MASK  0xff
#define CR_DET_I2S_OFF_CFG_RCOSC_LP_SAMPLE_INTERVAL  0xff
#define CR_DET_I2S_CFG_DET_SRC_SEL_OFFSET  0x5
#define CR_DET_I2S_CFG_DET_SRC_SEL_MASK  0x60
#define CR_DET_I2S_CFG_DET_SRC_SEL  0x60
#define CR_DET_I2S_CFG_DIS_I2S_OFF_AUTO_SWITCH_OFFSET  0x4
#define CR_DET_I2S_CFG_DIS_I2S_OFF_AUTO_SWITCH_MASK  0x10
#define CR_DET_I2S_CFG_DIS_I2S_OFF_AUTO_SWITCH  0x10
#define CR_DET_I2S_CFG_START_DET_I2S_OFF_EN_OFFSET  0x3
#define CR_DET_I2S_CFG_START_DET_I2S_OFF_EN_MASK  0x8
#define CR_DET_I2S_CFG_START_DET_I2S_OFF_EN  0x8
#define CR_DET_I2S_CFG_START_DET_I2S_ON_EN_OFFSET  0x2
#define CR_DET_I2S_CFG_START_DET_I2S_ON_EN_MASK  0x4
#define CR_DET_I2S_CFG_START_DET_I2S_ON_EN  0x4
#define CR_DET_I2S_CFG_DET_I2S_OFF_EN_OFFSET  0x1
#define CR_DET_I2S_CFG_DET_I2S_OFF_EN_MASK  0x2
#define CR_DET_I2S_CFG_DET_I2S_OFF_EN  0x2
#define CR_DET_I2S_CFG_DET_I2S_ON_EN_OFFSET  0x0
#define CR_DET_I2S_CFG_DET_I2S_ON_EN_MASK  0x1
#define CR_DET_I2S_CFG_DET_I2S_ON_EN  0x1
#define CR_CLK_MADC_MADC_CLK_EN_OFFSET  0x9
#define CR_CLK_MADC_MADC_CLK_EN_MASK  0x200
#define CR_CLK_MADC_MADC_CLK_EN  0x200
#define CR_CLK_MADC_MADC_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_MADC_MADC_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_MADC_MADC_CLK_DIV_CHNG  0x100
#define CR_CLK_MADC_MADC_CLK_DIV_OFFSET  0x0
#define CR_CLK_MADC_MADC_CLK_DIV_MASK  0xff
#define CR_CLK_MADC_MADC_CLK_DIV  0xff
#define CR_FAST_BOOT_ARM_FAST_BOOT_OFFSET  0x0
#define CR_FAST_BOOT_ARM_FAST_BOOT_MASK  0xffffffff
#define CR_FAST_BOOT_ARM_FAST_BOOT  0xffffffff
#define CR_PSIST_MES_ARM_MESSAGE_OFFSET  0x0
#define CR_PSIST_MES_ARM_MESSAGE_MASK  0xffffffff
#define CR_PSIST_MES_ARM_MESSAGE  0xffffffff
#define CR_PSIST_MES_ARM_1_MESSAGE1_OFFSET  0x0
#define CR_PSIST_MES_ARM_1_MESSAGE1_MASK  0xffffffff
#define CR_PSIST_MES_ARM_1_MESSAGE1  0xffffffff
#define CR_SOFTBACKDOOR_SOFT_WINDOW_CNT_OFFSET  0x0
#define CR_SOFTBACKDOOR_SOFT_WINDOW_CNT_MASK  0x1
#define CR_SOFTBACKDOOR_SOFT_WINDOW_CNT  0x1
#define CR_RX_LPOSC_RX_LPOSC_CLK_EN_OFFSET  0x0
#define CR_RX_LPOSC_RX_LPOSC_CLK_EN_MASK  0x1
#define CR_RX_LPOSC_RX_LPOSC_CLK_EN  0x1
#define CR_CLK_TEST_OBSV_RCOSC_ST_CAL_CLK_EN_OFFSET  0x17
#define CR_CLK_TEST_OBSV_RCOSC_ST_CAL_CLK_EN_MASK  0x800000
#define CR_CLK_TEST_OBSV_RCOSC_ST_CAL_CLK_EN  0x800000
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_DIV_CHNG_OFFSET  0x16
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_DIV_CHNG_MASK  0x400000
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_DIV_CHNG  0x400000
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_DIV_OFFSET  0xe
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_DIV_MASK  0x3fc000
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_DIV  0x3fc000
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_EN_OFFSET  0xd
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_EN_MASK  0x2000
#define CR_CLK_TEST_OBSV_PROC_PLL_TEST_OBSV_CLK_EN  0x2000
#define CR_CLK_TEST_OBSV_ELINK_PLL_TEST_OBSV_CLK_DIV_CHNG_OFFSET  0xc
#define CR_CLK_TEST_OBSV_ELINK_PLL_TEST_OBSV_CLK_DIV_CHNG_MASK  0x1000
#define CR_CLK_TEST_OBSV_ELINK_PLL_TEST_OBSV_CLK_DIV_CHNG  0x1000
#define CR_CLK_TEST_OBSV_ELINK_PLL_TEST_OBSV_CLK_DIV_OFFSET  0x4
#define CR_CLK_TEST_OBSV_ELINK_PLL_TEST_OBSV_CLK_DIV_MASK  0xff0
#define CR_CLK_TEST_OBSV_ELINK_PLL_TEST_OBSV_CLK_DIV  0xff0
#define CR_CLK_TEST_OBSV_ELINK_ELINK_TEST_OBSV_CLK_EN_OFFSET  0x3
#define CR_CLK_TEST_OBSV_ELINK_ELINK_TEST_OBSV_CLK_EN_MASK  0x8
#define CR_CLK_TEST_OBSV_ELINK_ELINK_TEST_OBSV_CLK_EN  0x8
#define CR_CLK_TEST_OBSV_ST_RCOSC_TEST_OBSV_CLK_EN_OFFSET  0x2
#define CR_CLK_TEST_OBSV_ST_RCOSC_TEST_OBSV_CLK_EN_MASK  0x4
#define CR_CLK_TEST_OBSV_ST_RCOSC_TEST_OBSV_CLK_EN  0x4
#define CR_CLK_TEST_OBSV_GPTEST_STD_RCOSC_BPASS_OFFSET  0x1
#define CR_CLK_TEST_OBSV_GPTEST_STD_RCOSC_BPASS_MASK  0x2
#define CR_CLK_TEST_OBSV_GPTEST_STD_RCOSC_BPASS  0x2
#define CR_CLK_TEST_OBSV_GPTEST_LP_RCOSC_BPASS_OFFSET  0x0
#define CR_CLK_TEST_OBSV_GPTEST_LP_RCOSC_BPASS_MASK  0x1
#define CR_CLK_TEST_OBSV_GPTEST_LP_RCOSC_BPASS  0x1
#define CR_RST_ELINK_DIS_PLL_LOCK_OFFSET  0x0
#define CR_RST_ELINK_DIS_PLL_LOCK_MASK  0x1
#define CR_RST_ELINK_DIS_PLL_LOCK  0x1
#define CR_CLK_DIVIDER_EN_ISP_PREV_CLK_EN_OFFSET  0x18
#define CR_CLK_DIVIDER_EN_ISP_PREV_CLK_EN_MASK  0x1000000
#define CR_CLK_DIVIDER_EN_ISP_PREV_CLK_EN  0x1000000
#define CR_CLK_DIVIDER_EN_QSPI_CLK_DIV_EN_OFFSET  0x17
#define CR_CLK_DIVIDER_EN_QSPI_CLK_DIV_EN_MASK  0x800000
#define CR_CLK_DIVIDER_EN_QSPI_CLK_DIV_EN  0x800000
#define CR_CLK_DIVIDER_EN_UART_CLK_DIV_EN_OFFSET  0x16
#define CR_CLK_DIVIDER_EN_UART_CLK_DIV_EN_MASK  0x400000
#define CR_CLK_DIVIDER_EN_UART_CLK_DIV_EN  0x400000
#define CR_CLK_DIVIDER_EN_I3C_CLK_DIV_EN_OFFSET  0x15
#define CR_CLK_DIVIDER_EN_I3C_CLK_DIV_EN_MASK  0x200000
#define CR_CLK_DIVIDER_EN_I3C_CLK_DIV_EN  0x200000
#define CR_CLK_DIVIDER_EN_TIME2_CLK_DIV_EN_OFFSET  0x14
#define CR_CLK_DIVIDER_EN_TIME2_CLK_DIV_EN_MASK  0x100000
#define CR_CLK_DIVIDER_EN_TIME2_CLK_DIV_EN  0x100000
#define CR_CLK_DIVIDER_EN_TIME1_CLK_DIV_EN_OFFSET  0x13
#define CR_CLK_DIVIDER_EN_TIME1_CLK_DIV_EN_MASK  0x80000
#define CR_CLK_DIVIDER_EN_TIME1_CLK_DIV_EN  0x80000
#define CR_CLK_DIVIDER_EN_TIME0_CLK_DIV_EN_OFFSET  0x12
#define CR_CLK_DIVIDER_EN_TIME0_CLK_DIV_EN_MASK  0x40000
#define CR_CLK_DIVIDER_EN_TIME0_CLK_DIV_EN  0x40000
#define CR_CLK_DIVIDER_EN_SPI_CLK_DIV_EN_OFFSET  0x11
#define CR_CLK_DIVIDER_EN_SPI_CLK_DIV_EN_MASK  0x20000
#define CR_CLK_DIVIDER_EN_SPI_CLK_DIV_EN  0x20000
#define CR_CLK_DIVIDER_EN_AHB_CLK_DIV_EN_OFFSET  0x10
#define CR_CLK_DIVIDER_EN_AHB_CLK_DIV_EN_MASK  0x10000
#define CR_CLK_DIVIDER_EN_AHB_CLK_DIV_EN  0x10000
#define CR_CLK_DIVIDER_EN_SSE200_CLK_DIV_EN_OFFSET  0xf
#define CR_CLK_DIVIDER_EN_SSE200_CLK_DIV_EN_MASK  0x8000
#define CR_CLK_DIVIDER_EN_SSE200_CLK_DIV_EN  0x8000
#define CR_CLK_DIVIDER_EN_HIF3_CLK_DIV_EN_OFFSET  0xd
#define CR_CLK_DIVIDER_EN_HIF3_CLK_DIV_EN_MASK  0x2000
#define CR_CLK_DIVIDER_EN_HIF3_CLK_DIV_EN  0x2000
#define CR_CLK_DIVIDER_EN_LLE_CLK_DIV_EN_OFFSET  0xc
#define CR_CLK_DIVIDER_EN_LLE_CLK_DIV_EN_MASK  0x1000
#define CR_CLK_DIVIDER_EN_LLE_CLK_DIV_EN  0x1000
#define CR_CLK_DIVIDER_EN_CAPEB_CLK_DIV_EN_OFFSET  0xb
#define CR_CLK_DIVIDER_EN_CAPEB_CLK_DIV_EN_MASK  0x800
#define CR_CLK_DIVIDER_EN_CAPEB_CLK_DIV_EN  0x800
#define CR_CLK_DIVIDER_EN_CAPEA_CLK_DIV_EN_OFFSET  0xa
#define CR_CLK_DIVIDER_EN_CAPEA_CLK_DIV_EN_MASK  0x400
#define CR_CLK_DIVIDER_EN_CAPEA_CLK_DIV_EN  0x400
#define CR_CLK_DIVIDER_EN_ACL_CLK_DIV_EN_OFFSET  0x9
#define CR_CLK_DIVIDER_EN_ACL_CLK_DIV_EN_MASK  0x200
#define CR_CLK_DIVIDER_EN_ACL_CLK_DIV_EN  0x200
#define CR_CLK_DIVIDER_EN_CLASSD_CLK_DIV_EN_OFFSET  0x8
#define CR_CLK_DIVIDER_EN_CLASSD_CLK_DIV_EN_MASK  0x100
#define CR_CLK_DIVIDER_EN_CLASSD_CLK_DIV_EN  0x100
#define CR_CLK_DIVIDER_EN_DAC_CLK_DIV_EN_OFFSET  0x7
#define CR_CLK_DIVIDER_EN_DAC_CLK_DIV_EN_MASK  0x80
#define CR_CLK_DIVIDER_EN_DAC_CLK_DIV_EN  0x80
#define CR_CLK_DIVIDER_EN_DMIC_CLK_DIV_EN_OFFSET  0x6
#define CR_CLK_DIVIDER_EN_DMIC_CLK_DIV_EN_MASK  0x40
#define CR_CLK_DIVIDER_EN_DMIC_CLK_DIV_EN  0x40
#define CR_CLK_DIVIDER_EN_ADC1_CLK_DIV_EN_OFFSET  0x5
#define CR_CLK_DIVIDER_EN_ADC1_CLK_DIV_EN_MASK  0x20
#define CR_CLK_DIVIDER_EN_ADC1_CLK_DIV_EN  0x20
#define CR_CLK_DIVIDER_EN_ADC0_CLK_DIV_EN_OFFSET  0x4
#define CR_CLK_DIVIDER_EN_ADC0_CLK_DIV_EN_MASK  0x10
#define CR_CLK_DIVIDER_EN_ADC0_CLK_DIV_EN  0x10
#define CR_CLK_DIVIDER_EN_I2S_MST_IO_CLK_DIV_EN_OFFSET  0x3
#define CR_CLK_DIVIDER_EN_I2S_MST_IO_CLK_DIV_EN_MASK  0x8
#define CR_CLK_DIVIDER_EN_I2S_MST_IO_CLK_DIV_EN  0x8
#define CR_CLK_DIVIDER_EN_I2S1_MST_SRC_CLK_DIV_EN_OFFSET  0x2
#define CR_CLK_DIVIDER_EN_I2S1_MST_SRC_CLK_DIV_EN_MASK  0x4
#define CR_CLK_DIVIDER_EN_I2S1_MST_SRC_CLK_DIV_EN  0x4
#define CR_CLK_DIVIDER_EN_I2S0_MST_SRC_CLK_DIV_EN_OFFSET  0x1
#define CR_CLK_DIVIDER_EN_I2S0_MST_SRC_CLK_DIV_EN_MASK  0x2
#define CR_CLK_DIVIDER_EN_I2S0_MST_SRC_CLK_DIV_EN  0x2
#define CR_CLK_DIVIDER_EN_EARLINK_PLL_OUT_CLK_EN_OFFSET  0x0
#define CR_CLK_DIVIDER_EN_EARLINK_PLL_OUT_CLK_EN_MASK  0x1
#define CR_CLK_DIVIDER_EN_EARLINK_PLL_OUT_CLK_EN  0x1
#define CR_CLK_ISP_ISP_RX_AHB_CLK_EN_OFFSET  0xd
#define CR_CLK_ISP_ISP_RX_AHB_CLK_EN_MASK  0x2000
#define CR_CLK_ISP_ISP_RX_AHB_CLK_EN  0x2000
#define CR_CLK_ISP_ISP_MST_IO_CLK_POL_OFFSET  0xc
#define CR_CLK_ISP_ISP_MST_IO_CLK_POL_MASK  0x1000
#define CR_CLK_ISP_ISP_MST_IO_CLK_POL  0x1000
#define CR_CLK_ISP_ISP_MST_CLK_EN_OFFSET  0xb
#define CR_CLK_ISP_ISP_MST_CLK_EN_MASK  0x800
#define CR_CLK_ISP_ISP_MST_CLK_EN  0x800
#define CR_CLK_ISP_ISP_RX_CLK_POL_OFFSET  0xa
#define CR_CLK_ISP_ISP_RX_CLK_POL_MASK  0x400
#define CR_CLK_ISP_ISP_RX_CLK_POL  0x400
#define CR_CLK_ISP_ISP_RX_CLK_EN_OFFSET  0x9
#define CR_CLK_ISP_ISP_RX_CLK_EN_MASK  0x200
#define CR_CLK_ISP_ISP_RX_CLK_EN  0x200
#define CR_CLK_ISP_ISP_CLK_DIV_CHNG_OFFSET  0x8
#define CR_CLK_ISP_ISP_CLK_DIV_CHNG_MASK  0x100
#define CR_CLK_ISP_ISP_CLK_DIV_CHNG  0x100
#define CR_CLK_ISP_ISP_CLK_DIV_OFFSET  0x0
#define CR_CLK_ISP_ISP_CLK_DIV_MASK  0xff
#define CR_CLK_ISP_ISP_CLK_DIV  0xff
#define DAC_CFG_REG0_DAC_EN_OFFSET  0x1f
#define DAC_CFG_REG0_DAC_EN_MASK  0x80000000
#define DAC_CFG_REG0_DAC_EN  0x80000000
#define DAC_CFG_REG0_DAC_CH0_EN_OFFSET  0x1e
#define DAC_CFG_REG0_DAC_CH0_EN_MASK  0x40000000
#define DAC_CFG_REG0_DAC_CH0_EN  0x40000000
#define DAC_CFG_REG0_DAC_CH1_EN_OFFSET  0x1d
#define DAC_CFG_REG0_DAC_CH1_EN_MASK  0x20000000
#define DAC_CFG_REG0_DAC_CH1_EN  0x20000000
#define DAC_CFG_REG0_ANC_EN_OFFSET  0x1c
#define DAC_CFG_REG0_ANC_EN_MASK  0x10000000
#define DAC_CFG_REG0_ANC_EN  0x10000000
#define DAC_CFG_REG0_HPF_EN_OFFSET  0x1b
#define DAC_CFG_REG0_HPF_EN_MASK  0x8000000
#define DAC_CFG_REG0_HPF_EN  0x8000000
#define DAC_CFG_REG0_SIDETONE_EN_OFFSET  0x18
#define DAC_CFG_REG0_SIDETONE_EN_MASK  0x1000000
#define DAC_CFG_REG0_SIDETONE_EN  0x1000000
#define DAC_CFG_REG0_AUTO_RAMP_STATUS_OFFSET  0x15
#define DAC_CFG_REG0_AUTO_RAMP_STATUS_MASK  0x200000
#define DAC_CFG_REG0_AUTO_RAMP_STATUS  0x200000
#define DAC_CFG_REG0_MUTE_RAMP_DONE_OFFSET  0x14
#define DAC_CFG_REG0_MUTE_RAMP_DONE_MASK  0x100000
#define DAC_CFG_REG0_MUTE_RAMP_DONE  0x100000
#define DAC_CFG_REG0_VOLUME_RAMP_UP_OFFSET  0x13
#define DAC_CFG_REG0_VOLUME_RAMP_UP_MASK  0x80000
#define DAC_CFG_REG0_VOLUME_RAMP_UP  0x80000
#define DAC_CFG_REG0_CLR_MUTE_RAMP_DONE_OFFSET  0x12
#define DAC_CFG_REG0_CLR_MUTE_RAMP_DONE_MASK  0x40000
#define DAC_CFG_REG0_CLR_MUTE_RAMP_DONE  0x40000
#define DAC_CFG_REG0_AUTO_RAMP_EN_OFFSET  0x11
#define DAC_CFG_REG0_AUTO_RAMP_EN_MASK  0x20000
#define DAC_CFG_REG0_AUTO_RAMP_EN  0x20000
#define DAC_CFG_REG0_DAC_CFG_RST_OFFSET  0x10
#define DAC_CFG_REG0_DAC_CFG_RST_MASK  0x10000
#define DAC_CFG_REG0_DAC_CFG_RST  0x10000
#define DAC_CFG_REG0_DAC0_SAMPE_RATE_OFFSET  0xe
#define DAC_CFG_REG0_DAC0_SAMPE_RATE_MASK  0xc000
#define DAC_CFG_REG0_DAC0_SAMPE_RATE  0xc000
#define DAC_CFG_REG0_DAC1_SAMPE_RATE_OFFSET  0xc
#define DAC_CFG_REG0_DAC1_SAMPE_RATE_MASK  0x3000
#define DAC_CFG_REG0_DAC1_SAMPE_RATE  0x3000
#define DAC_CFG_REG0_DAC_LL_TEST_EN_OFFSET  0x9
#define DAC_CFG_REG0_DAC_LL_TEST_EN_MASK  0x200
#define DAC_CFG_REG0_DAC_LL_TEST_EN  0x200
#define DAC_CFG_REG0_SWAP_IN_OFFSET  0x7
#define DAC_CFG_REG0_SWAP_IN_MASK  0x80
#define DAC_CFG_REG0_SWAP_IN  0x80
#define DAC_CFG_REG0_DUMPLICATE_OUTPUT_OFFSET  0x6
#define DAC_CFG_REG0_DUMPLICATE_OUTPUT_MASK  0x40
#define DAC_CFG_REG0_DUMPLICATE_OUTPUT  0x40
#define DAC_CFG_REG0_DAC_SAT_OUT_OFFSET  0x5
#define DAC_CFG_REG0_DAC_SAT_OUT_MASK  0x20
#define DAC_CFG_REG0_DAC_SAT_OUT  0x20
#define DAC_CFG_REG0_DAC0_PERFORMANCE_OFFSET  0x4
#define DAC_CFG_REG0_DAC0_PERFORMANCE_MASK  0x10
#define DAC_CFG_REG0_DAC0_PERFORMANCE  0x10
#define DAC_CFG_REG0_DAC1_PERFORMANCE_OFFSET  0x3
#define DAC_CFG_REG0_DAC1_PERFORMANCE_MASK  0x8
#define DAC_CFG_REG0_DAC1_PERFORMANCE  0x8
#define DAC_CFG_REG0_ANC_ONLY_OFFSET  0x2
#define DAC_CFG_REG0_ANC_ONLY_MASK  0x4
#define DAC_CFG_REG0_ANC_ONLY  0x4
#define DAC_CFG_REG0_DAC_CFG_I2S_DIRECT_DAC_OFFSET  0x0
#define DAC_CFG_REG0_DAC_CFG_I2S_DIRECT_DAC_MASK  0x1
#define DAC_CFG_REG0_DAC_CFG_I2S_DIRECT_DAC  0x1
#define DAC_CFG_REG1_HPF1_SOFT_RST_OFFSET  0x1f
#define DAC_CFG_REG1_HPF1_SOFT_RST_MASK  0x80000000
#define DAC_CFG_REG1_HPF1_SOFT_RST  0x80000000
#define DAC_CFG_REG1_HPF1_BYP_OFFSET  0x1d
#define DAC_CFG_REG1_HPF1_BYP_MASK  0x20000000
#define DAC_CFG_REG1_HPF1_BYP  0x20000000
#define DAC_CFG_REG1_HPF1_ORDER_OFFSET  0x1c
#define DAC_CFG_REG1_HPF1_ORDER_MASK  0x10000000
#define DAC_CFG_REG1_HPF1_ORDER  0x10000000
#define DAC_CFG_REG1_HPF1_CUTOFF_OFFSET  0x17
#define DAC_CFG_REG1_HPF1_CUTOFF_MASK  0xf800000
#define DAC_CFG_REG1_HPF1_CUTOFF  0xf800000
#define DAC_CFG_REG1_HPF1_SHIFT_OFFSET  0x10
#define DAC_CFG_REG1_HPF1_SHIFT_MASK  0x70000
#define DAC_CFG_REG1_HPF1_SHIFT  0x70000
#define DAC_CFG_REG1_HPF0_SOFT_RST_OFFSET  0xf
#define DAC_CFG_REG1_HPF0_SOFT_RST_MASK  0x8000
#define DAC_CFG_REG1_HPF0_SOFT_RST  0x8000
#define DAC_CFG_REG1_HPF0_BYP_OFFSET  0xd
#define DAC_CFG_REG1_HPF0_BYP_MASK  0x2000
#define DAC_CFG_REG1_HPF0_BYP  0x2000
#define DAC_CFG_REG1_HPF0_ORDER_OFFSET  0xc
#define DAC_CFG_REG1_HPF0_ORDER_MASK  0x1000
#define DAC_CFG_REG1_HPF0_ORDER  0x1000
#define DAC_CFG_REG1_HPF0_CUTOFF_OFFSET  0x7
#define DAC_CFG_REG1_HPF0_CUTOFF_MASK  0xf80
#define DAC_CFG_REG1_HPF0_CUTOFF  0xf80
#define DAC_CFG_REG1_HPF0_SHIFT_OFFSET  0x0
#define DAC_CFG_REG1_HPF0_SHIFT_MASK  0x1f
#define DAC_CFG_REG1_HPF0_SHIFT  0x1f
#define DAC_CFG_REG2_DSM_SYM_OFFSET  0x1f
#define DAC_CFG_REG2_DSM_SYM_MASK  0x80000000
#define DAC_CFG_REG2_DSM_SYM  0x80000000
#define DAC_CFG_REG2_DSM_FIX_OFFSET  0x1e
#define DAC_CFG_REG2_DSM_FIX_MASK  0x40000000
#define DAC_CFG_REG2_DSM_FIX  0x40000000
#define DAC_CFG_REG2_DSM0_INJ_OFFSET  0x1d
#define DAC_CFG_REG2_DSM0_INJ_MASK  0x20000000
#define DAC_CFG_REG2_DSM0_INJ  0x20000000
#define DAC_CFG_REG2_DSM0_OBS_OFFSET  0x1c
#define DAC_CFG_REG2_DSM0_OBS_MASK  0x10000000
#define DAC_CFG_REG2_DSM0_OBS  0x10000000
#define DAC_CFG_REG2_DSM1_INJ_OFFSET  0x1b
#define DAC_CFG_REG2_DSM1_INJ_MASK  0x8000000
#define DAC_CFG_REG2_DSM1_INJ  0x8000000
#define DAC_CFG_REG2_DSM1_OBS_OFFSET  0x1a
#define DAC_CFG_REG2_DSM1_OBS_MASK  0x4000000
#define DAC_CFG_REG2_DSM1_OBS  0x4000000
#define DAC_CFG_REG2_DSM0_INV_OFFSET  0x19
#define DAC_CFG_REG2_DSM0_INV_MASK  0x2000000
#define DAC_CFG_REG2_DSM0_INV  0x2000000
#define DAC_CFG_REG2_DSM1_INV_OFFSET  0x18
#define DAC_CFG_REG2_DSM1_INV_MASK  0x1000000
#define DAC_CFG_REG2_DSM1_INV  0x1000000
#define DAC_CFG_REG2_DSM_ORDER_OFFSET  0x0
#define DAC_CFG_REG2_DSM_ORDER_MASK  0x3
#define DAC_CFG_REG2_DSM_ORDER  0x3
#define DAC_CFG_REG3_CH0_VOLUME_OFFSET  0x18
#define DAC_CFG_REG3_CH0_VOLUME_MASK  0xff000000
#define DAC_CFG_REG3_CH0_VOLUME  0xff000000
#define DAC_CFG_REG3_CH0_MUTE_OFFSET  0x15
#define DAC_CFG_REG3_CH0_MUTE_MASK  0x200000
#define DAC_CFG_REG3_CH0_MUTE  0x200000
#define DAC_CFG_REG3_CH1_VOLUME_OFFSET  0x8
#define DAC_CFG_REG3_CH1_VOLUME_MASK  0xff00
#define DAC_CFG_REG3_CH1_VOLUME  0xff00
#define DAC_CFG_REG3_CH1_MUTE_OFFSET  0x5
#define DAC_CFG_REG3_CH1_MUTE_MASK  0x20
#define DAC_CFG_REG3_CH1_MUTE  0x20
#define DAC_CFG_REG4_GAIN_STEP_SIZE_OFFSET  0x10
#define DAC_CFG_REG4_GAIN_STEP_SIZE_MASK  0xffff0000
#define DAC_CFG_REG4_GAIN_STEP_SIZE  0xffff0000
#define DAC_CFG_REG4_GAIN_STEP_RATE_OFFSET  0xd
#define DAC_CFG_REG4_GAIN_STEP_RATE_MASK  0xe000
#define DAC_CFG_REG4_GAIN_STEP_RATE  0xe000
#define DAC_CFG_REG5_SIDETONE_GAIN_OFFSET  0x18
#define DAC_CFG_REG5_SIDETONE_GAIN_MASK  0xff000000
#define DAC_CFG_REG5_SIDETONE_GAIN  0xff000000
#define DAC_CFG_REG5_SIDETONE_RAMPSIZE_OFFSET  0x10
#define DAC_CFG_REG5_SIDETONE_RAMPSIZE_MASK  0xff0000
#define DAC_CFG_REG5_SIDETONE_RAMPSIZE  0xff0000
#define DAC_CFG_REG6_DEM_MUTE_CH1_OFFSET  0x1b
#define DAC_CFG_REG6_DEM_MUTE_CH1_MASK  0x8000000
#define DAC_CFG_REG6_DEM_MUTE_CH1  0x8000000
#define DAC_CFG_REG6_EN_DYNAMIC_PD_CH1_OFFSET  0x1a
#define DAC_CFG_REG6_EN_DYNAMIC_PD_CH1_MASK  0x4000000
#define DAC_CFG_REG6_EN_DYNAMIC_PD_CH1  0x4000000
#define DAC_CFG_REG6_DEM_ED_RLS_TIME_CH1_OFFSET  0x18
#define DAC_CFG_REG6_DEM_ED_RLS_TIME_CH1_MASK  0x3000000
#define DAC_CFG_REG6_DEM_ED_RLS_TIME_CH1  0x3000000
#define DAC_CFG_REG6_DEM_THRESH_SEL_HIGH_CH1_OFFSET  0x14
#define DAC_CFG_REG6_DEM_THRESH_SEL_HIGH_CH1_MASK  0x700000
#define DAC_CFG_REG6_DEM_THRESH_SEL_HIGH_CH1  0x700000
#define DAC_CFG_REG6_DEM_THRESH_SEL_LOW_CH1_OFFSET  0x11
#define DAC_CFG_REG6_DEM_THRESH_SEL_LOW_CH1_MASK  0xe0000
#define DAC_CFG_REG6_DEM_THRESH_SEL_LOW_CH1  0xe0000
#define DAC_CFG_REG6_DEM_ED_ENABLE_CH1_OFFSET  0x10
#define DAC_CFG_REG6_DEM_ED_ENABLE_CH1_MASK  0x10000
#define DAC_CFG_REG6_DEM_ED_ENABLE_CH1  0x10000
#define DAC_CFG_REG6_DEM_MUTE_CH0_OFFSET  0xb
#define DAC_CFG_REG6_DEM_MUTE_CH0_MASK  0x800
#define DAC_CFG_REG6_DEM_MUTE_CH0  0x800
#define DAC_CFG_REG6_EN_DYNAMIC_PD_CH0_OFFSET  0xa
#define DAC_CFG_REG6_EN_DYNAMIC_PD_CH0_MASK  0x400
#define DAC_CFG_REG6_EN_DYNAMIC_PD_CH0  0x400
#define DAC_CFG_REG6_DEM_ED_RLS_TIME_CH0_OFFSET  0x8
#define DAC_CFG_REG6_DEM_ED_RLS_TIME_CH0_MASK  0x300
#define DAC_CFG_REG6_DEM_ED_RLS_TIME_CH0  0x300
#define DAC_CFG_REG6_DEM_THRESH_SEL_HIGH_CH0_OFFSET  0x4
#define DAC_CFG_REG6_DEM_THRESH_SEL_HIGH_CH0_MASK  0x70
#define DAC_CFG_REG6_DEM_THRESH_SEL_HIGH_CH0  0x70
#define DAC_CFG_REG6_DEM_THRESH_SEL_LOW_CH0_OFFSET  0x1
#define DAC_CFG_REG6_DEM_THRESH_SEL_LOW_CH0_MASK  0xe
#define DAC_CFG_REG6_DEM_THRESH_SEL_LOW_CH0  0xe
#define DAC_CFG_REG6_DEM_ED_ENABLE_CH0_OFFSET  0x0
#define DAC_CFG_REG6_DEM_ED_ENABLE_CH0_MASK  0x1
#define DAC_CFG_REG6_DEM_ED_ENABLE_CH0  0x1
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_SEL0_OFFSET  0x1d
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_SEL0_MASK  0xe0000000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_SEL0  0xe0000000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_SEL1_OFFSET  0x1a
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_SEL1_MASK  0x1c000000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_SEL1  0x1c000000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_SEL0_OFFSET  0x17
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_SEL0_MASK  0x3800000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_SEL0  0x3800000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_SEL1_OFFSET  0x14
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_SEL1_MASK  0x700000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_SEL1  0x700000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_ENABLE_OFFSET  0x13
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_ENABLE_MASK  0x80000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH1_ENABLE  0x80000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_ENABLE_OFFSET  0x12
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_ENABLE_MASK  0x40000
#define DAC_CFG_REG7_O_DAC_ED_DSS_CH0_ENABLE  0x40000
#define DAC_CFG_REG7_O_DAC_ED_ZCD_DLY_EN_OFFSET  0xc
#define DAC_CFG_REG7_O_DAC_ED_ZCD_DLY_EN_MASK  0x3f000
#define DAC_CFG_REG7_O_DAC_ED_ZCD_DLY_EN  0x3f000
#define DAC_CFG_REG7_O_DAC_ED_ZCD_EN_OFFSET  0x6
#define DAC_CFG_REG7_O_DAC_ED_ZCD_EN_MASK  0xfc0
#define DAC_CFG_REG7_O_DAC_ED_ZCD_EN  0xfc0
#define DAC_CFG_REG7_O_DAC_ED_EN_OFFSET  0x0
#define DAC_CFG_REG7_O_DAC_ED_EN_MASK  0x3f
#define DAC_CFG_REG7_O_DAC_ED_EN  0x3f
#define DAC_CFG_REG8_O_DAC_ED1_THRESH_SEL_OFFSET  0x18
#define DAC_CFG_REG8_O_DAC_ED1_THRESH_SEL_MASK  0xff000000
#define DAC_CFG_REG8_O_DAC_ED1_THRESH_SEL  0xff000000
#define DAC_CFG_REG8_O_DAC_ED1_RLS_TIME_OFFSET  0x12
#define DAC_CFG_REG8_O_DAC_ED1_RLS_TIME_MASK  0xfc0000
#define DAC_CFG_REG8_O_DAC_ED1_RLS_TIME  0xfc0000
#define DAC_CFG_REG8_O_DAC_ED1_ZCD_DLY_TIME_OFFSET  0x10
#define DAC_CFG_REG8_O_DAC_ED1_ZCD_DLY_TIME_MASK  0x30000
#define DAC_CFG_REG8_O_DAC_ED1_ZCD_DLY_TIME  0x30000
#define DAC_CFG_REG8_O_DAC_ED0_THRESH_SEL_OFFSET  0x8
#define DAC_CFG_REG8_O_DAC_ED0_THRESH_SEL_MASK  0xff00
#define DAC_CFG_REG8_O_DAC_ED0_THRESH_SEL  0xff00
#define DAC_CFG_REG8_O_DAC_ED0_RLS_TIME_OFFSET  0x2
#define DAC_CFG_REG8_O_DAC_ED0_RLS_TIME_MASK  0xfc
#define DAC_CFG_REG8_O_DAC_ED0_RLS_TIME  0xfc
#define DAC_CFG_REG8_O_DAC_ED0_ZCD_DLY_TIME_OFFSET  0x0
#define DAC_CFG_REG8_O_DAC_ED0_ZCD_DLY_TIME_MASK  0x3
#define DAC_CFG_REG8_O_DAC_ED0_ZCD_DLY_TIME  0x3
#define DAC_CFG_REG9_O_DAC_ED3_THRESH_SEL_OFFSET  0x18
#define DAC_CFG_REG9_O_DAC_ED3_THRESH_SEL_MASK  0xff000000
#define DAC_CFG_REG9_O_DAC_ED3_THRESH_SEL  0xff000000
#define DAC_CFG_REG9_O_DAC_ED3_RLS_TIME_OFFSET  0x12
#define DAC_CFG_REG9_O_DAC_ED3_RLS_TIME_MASK  0xfc0000
#define DAC_CFG_REG9_O_DAC_ED3_RLS_TIME  0xfc0000
#define DAC_CFG_REG9_O_DAC_ED3_ZCD_DLY_TIME_OFFSET  0x10
#define DAC_CFG_REG9_O_DAC_ED3_ZCD_DLY_TIME_MASK  0x30000
#define DAC_CFG_REG9_O_DAC_ED3_ZCD_DLY_TIME  0x30000
#define DAC_CFG_REG9_O_DAC_ED2_THRESH_SEL_OFFSET  0x8
#define DAC_CFG_REG9_O_DAC_ED2_THRESH_SEL_MASK  0xff00
#define DAC_CFG_REG9_O_DAC_ED2_THRESH_SEL  0xff00
#define DAC_CFG_REG9_O_DAC_ED2_RLS_TIME_OFFSET  0x2
#define DAC_CFG_REG9_O_DAC_ED2_RLS_TIME_MASK  0xfc
#define DAC_CFG_REG9_O_DAC_ED2_RLS_TIME  0xfc
#define DAC_CFG_REG9_O_DAC_ED2_ZCD_DLY_TIME_OFFSET  0x0
#define DAC_CFG_REG9_O_DAC_ED2_ZCD_DLY_TIME_MASK  0x3
#define DAC_CFG_REG9_O_DAC_ED2_ZCD_DLY_TIME  0x3
#define DAC_CFG_REG10_O_DAC_ED5_THRESH_SEL_OFFSET  0x18
#define DAC_CFG_REG10_O_DAC_ED5_THRESH_SEL_MASK  0xff000000
#define DAC_CFG_REG10_O_DAC_ED5_THRESH_SEL  0xff000000
#define DAC_CFG_REG10_O_DAC_ED5_RLS_TIME_OFFSET  0x12
#define DAC_CFG_REG10_O_DAC_ED5_RLS_TIME_MASK  0xfc0000
#define DAC_CFG_REG10_O_DAC_ED5_RLS_TIME  0xfc0000
#define DAC_CFG_REG10_O_DAC_ED5_ZCD_DLY_TIME_OFFSET  0x10
#define DAC_CFG_REG10_O_DAC_ED5_ZCD_DLY_TIME_MASK  0x30000
#define DAC_CFG_REG10_O_DAC_ED5_ZCD_DLY_TIME  0x30000
#define DAC_CFG_REG10_O_DAC_ED4_THRESH_SEL_OFFSET  0x8
#define DAC_CFG_REG10_O_DAC_ED4_THRESH_SEL_MASK  0xff00
#define DAC_CFG_REG10_O_DAC_ED4_THRESH_SEL  0xff00
#define DAC_CFG_REG10_O_DAC_ED4_RLS_TIME_OFFSET  0x2
#define DAC_CFG_REG10_O_DAC_ED4_RLS_TIME_MASK  0xfc
#define DAC_CFG_REG10_O_DAC_ED4_RLS_TIME  0xfc
#define DAC_CFG_REG10_O_DAC_ED4_ZCD_DLY_TIME_OFFSET  0x0
#define DAC_CFG_REG10_O_DAC_ED4_ZCD_DLY_TIME_MASK  0x3
#define DAC_CFG_REG10_O_DAC_ED4_ZCD_DLY_TIME  0x3
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_DIV1_OFFSET  0x16
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_DIV1_MASK  0xc00000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_DIV1  0xc00000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_DIV0_OFFSET  0x14
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_DIV0_MASK  0x300000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_DIV0  0x300000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_DIV1_OFFSET  0x12
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_DIV1_MASK  0xc0000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_DIV1  0xc0000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_DIV0_OFFSET  0x10
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_DIV0_MASK  0x30000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_DIV0  0x30000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_GAIN1_OFFSET  0xc
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_GAIN1_MASK  0xf000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_GAIN1  0xf000
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_GAIN0_OFFSET  0x8
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_GAIN0_MASK  0xf00
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH1_GAIN0  0xf00
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_GAIN1_OFFSET  0x4
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_GAIN1_MASK  0xf0
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_GAIN1  0xf0
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_GAIN0_OFFSET  0x0
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_GAIN0_MASK  0xf
#define DAC_CFG_REG11_O_DAC_ED_DSS_CH0_GAIN0  0xf
#define DAC_CFG_REG12_AFE_CFG_GAIN0_OFFSET  0x1d
#define DAC_CFG_REG12_AFE_CFG_GAIN0_MASK  0xe0000000
#define DAC_CFG_REG12_AFE_CFG_GAIN0  0xe0000000
#define DAC_CFG_REG12_AFE_CFG_GAIN1_OFFSET  0x1a
#define DAC_CFG_REG12_AFE_CFG_GAIN1_MASK  0x1c000000
#define DAC_CFG_REG12_AFE_CFG_GAIN1  0x1c000000
#define DAC_CFG_REG12_ED_DLBUF_SEL_OFFSET  0x17
#define DAC_CFG_REG12_ED_DLBUF_SEL_MASK  0x3800000
#define DAC_CFG_REG12_ED_DLBUF_SEL  0x3800000
#define DAC_CFG_REG12_O_ED5_SYNC_ZCD_OFFSET  0x11
#define DAC_CFG_REG12_O_ED5_SYNC_ZCD_MASK  0x20000
#define DAC_CFG_REG12_O_ED5_SYNC_ZCD  0x20000
#define DAC_CFG_REG12_O_ED4_SYNC_ZCD_OFFSET  0x10
#define DAC_CFG_REG12_O_ED4_SYNC_ZCD_MASK  0x10000
#define DAC_CFG_REG12_O_ED4_SYNC_ZCD  0x10000
#define DAC_CFG_REG12_O_ED3_SYNC_ZCD_OFFSET  0xf
#define DAC_CFG_REG12_O_ED3_SYNC_ZCD_MASK  0x8000
#define DAC_CFG_REG12_O_ED3_SYNC_ZCD  0x8000
#define DAC_CFG_REG12_O_ED2_SYNC_ZCD_OFFSET  0xe
#define DAC_CFG_REG12_O_ED2_SYNC_ZCD_MASK  0x4000
#define DAC_CFG_REG12_O_ED2_SYNC_ZCD  0x4000
#define DAC_CFG_REG12_O_ED1_SYNC_ZCD_OFFSET  0xd
#define DAC_CFG_REG12_O_ED1_SYNC_ZCD_MASK  0x2000
#define DAC_CFG_REG12_O_ED1_SYNC_ZCD  0x2000
#define DAC_CFG_REG12_O_ED0_SYNC_ZCD_OFFSET  0xc
#define DAC_CFG_REG12_O_ED0_SYNC_ZCD_MASK  0x1000
#define DAC_CFG_REG12_O_ED0_SYNC_ZCD  0x1000
#define DAC_CFG_REG12_O_ED5_FORCE_HIGH_OFFSET  0xb
#define DAC_CFG_REG12_O_ED5_FORCE_HIGH_MASK  0x800
#define DAC_CFG_REG12_O_ED5_FORCE_HIGH  0x800
#define DAC_CFG_REG12_O_ED4_FORCE_HIGH_OFFSET  0xa
#define DAC_CFG_REG12_O_ED4_FORCE_HIGH_MASK  0x400
#define DAC_CFG_REG12_O_ED4_FORCE_HIGH  0x400
#define DAC_CFG_REG12_O_ED3_FORCE_HIGH_OFFSET  0x9
#define DAC_CFG_REG12_O_ED3_FORCE_HIGH_MASK  0x200
#define DAC_CFG_REG12_O_ED3_FORCE_HIGH  0x200
#define DAC_CFG_REG12_O_ED2_FORCE_HIGH_OFFSET  0x8
#define DAC_CFG_REG12_O_ED2_FORCE_HIGH_MASK  0x100
#define DAC_CFG_REG12_O_ED2_FORCE_HIGH  0x100
#define DAC_CFG_REG12_O_ED1_FORCE_HIGH_OFFSET  0x7
#define DAC_CFG_REG12_O_ED1_FORCE_HIGH_MASK  0x80
#define DAC_CFG_REG12_O_ED1_FORCE_HIGH  0x80
#define DAC_CFG_REG12_O_ED0_FORCE_HIGH_OFFSET  0x6
#define DAC_CFG_REG12_O_ED0_FORCE_HIGH_MASK  0x40
#define DAC_CFG_REG12_O_ED0_FORCE_HIGH  0x40
#define DAC_CFG_REG12_O_ED5_FORCE_LOW_OFFSET  0x5
#define DAC_CFG_REG12_O_ED5_FORCE_LOW_MASK  0x20
#define DAC_CFG_REG12_O_ED5_FORCE_LOW  0x20
#define DAC_CFG_REG12_O_ED4_FORCE_LOW_OFFSET  0x4
#define DAC_CFG_REG12_O_ED4_FORCE_LOW_MASK  0x10
#define DAC_CFG_REG12_O_ED4_FORCE_LOW  0x10
#define DAC_CFG_REG12_O_ED3_FORCE_LOW_OFFSET  0x3
#define DAC_CFG_REG12_O_ED3_FORCE_LOW_MASK  0x8
#define DAC_CFG_REG12_O_ED3_FORCE_LOW  0x8
#define DAC_CFG_REG12_O_ED2_FORCE_LOW_OFFSET  0x2
#define DAC_CFG_REG12_O_ED2_FORCE_LOW_MASK  0x4
#define DAC_CFG_REG12_O_ED2_FORCE_LOW  0x4
#define DAC_CFG_REG12_O_ED1_FORCE_LOW_OFFSET  0x1
#define DAC_CFG_REG12_O_ED1_FORCE_LOW_MASK  0x2
#define DAC_CFG_REG12_O_ED1_FORCE_LOW  0x2
#define DAC_CFG_REG12_O_ED0_FORCE_LOW_OFFSET  0x0
#define DAC_CFG_REG12_O_ED0_FORCE_LOW_MASK  0x1
#define DAC_CFG_REG12_O_ED0_FORCE_LOW  0x1
#define DAC_CFG_REG13_CH0_TEST1_OFFSET  0x1f
#define DAC_CFG_REG13_CH0_TEST1_MASK  0x80000000
#define DAC_CFG_REG13_CH0_TEST1  0x80000000
#define DAC_CFG_REG13_CH0_RME_OFFSET  0x1e
#define DAC_CFG_REG13_CH0_RME_MASK  0x40000000
#define DAC_CFG_REG13_CH0_RME  0x40000000
#define DAC_CFG_REG13_CH0_RM_OFFSET  0x1a
#define DAC_CFG_REG13_CH0_RM_MASK  0x3c000000
#define DAC_CFG_REG13_CH0_RM  0x3c000000
#define DAC_CFG_REG13_CH0_RA_OFFSET  0x18
#define DAC_CFG_REG13_CH0_RA_MASK  0x3000000
#define DAC_CFG_REG13_CH0_RA  0x3000000
#define DAC_CFG_REG13_CH0_WA_OFFSET  0x15
#define DAC_CFG_REG13_CH0_WA_MASK  0xe00000
#define DAC_CFG_REG13_CH0_WA  0xe00000
#define DAC_CFG_REG13_CH0_WPULSE_OFFSET  0x12
#define DAC_CFG_REG13_CH0_WPULSE_MASK  0x1c0000
#define DAC_CFG_REG13_CH0_WPULSE  0x1c0000
#define DAC_CFG_REG13_CH0_LS_OFFSET  0x11
#define DAC_CFG_REG13_CH0_LS_MASK  0x20000
#define DAC_CFG_REG13_CH0_LS  0x20000
#define DAC_CFG_REG13_CH1_TEST1_OFFSET  0xf
#define DAC_CFG_REG13_CH1_TEST1_MASK  0x8000
#define DAC_CFG_REG13_CH1_TEST1  0x8000
#define DAC_CFG_REG13_CH1_RME_OFFSET  0xe
#define DAC_CFG_REG13_CH1_RME_MASK  0x4000
#define DAC_CFG_REG13_CH1_RME  0x4000
#define DAC_CFG_REG13_CH1_RM_OFFSET  0xa
#define DAC_CFG_REG13_CH1_RM_MASK  0x3c00
#define DAC_CFG_REG13_CH1_RM  0x3c00
#define DAC_CFG_REG13_CH1_RA_OFFSET  0x8
#define DAC_CFG_REG13_CH1_RA_MASK  0x300
#define DAC_CFG_REG13_CH1_RA  0x300
#define DAC_CFG_REG13_CH1_WA_OFFSET  0x5
#define DAC_CFG_REG13_CH1_WA_MASK  0xe0
#define DAC_CFG_REG13_CH1_WA  0xe0
#define DAC_CFG_REG13_CH1_WPULSE_OFFSET  0x2
#define DAC_CFG_REG13_CH1_WPULSE_MASK  0x1c
#define DAC_CFG_REG13_CH1_WPULSE  0x1c
#define DAC_CFG_REG13_CH1_LS_OFFSET  0x1
#define DAC_CFG_REG13_CH1_LS_MASK  0x2
#define DAC_CFG_REG13_CH1_LS  0x2
#define DAC_CFG_REG14_DAC_CLKOUT_INV_OFFSET  0x1f
#define DAC_CFG_REG14_DAC_CLKOUT_INV_MASK  0x80000000
#define DAC_CFG_REG14_DAC_CLKOUT_INV  0x80000000
#define DAC_CFG_REG15_PREANC_BUFSEL_OFFSET  0x19
#define DAC_CFG_REG15_PREANC_BUFSEL_MASK  0xfe000000
#define DAC_CFG_REG15_PREANC_BUFSEL  0xfe000000
#define DAC_CFG_REG15_ANC_RATE_OFFSET  0x17
#define DAC_CFG_REG15_ANC_RATE_MASK  0x1800000
#define DAC_CFG_REG15_ANC_RATE  0x1800000
#define DAC_CFG_REG15_ANC_POL_OFFSET  0x16
#define DAC_CFG_REG15_ANC_POL_MASK  0x400000
#define DAC_CFG_REG15_ANC_POL  0x400000
#define DAC_CFG_REG15_HARD_LIMIT_COEF0_OFFSET  0x13
#define DAC_CFG_REG15_HARD_LIMIT_COEF0_MASK  0x380000
#define DAC_CFG_REG15_HARD_LIMIT_COEF0  0x380000
#define DAC_CFG_REG15_HARD_LIMIT_COEF1_OFFSET  0x10
#define DAC_CFG_REG15_HARD_LIMIT_COEF1_MASK  0x70000
#define DAC_CFG_REG15_HARD_LIMIT_COEF1  0x70000
#define DAC_CFG_REG15_HARD_LIMIT_EN_OFFSET  0xf
#define DAC_CFG_REG15_HARD_LIMIT_EN_MASK  0x8000
#define DAC_CFG_REG15_HARD_LIMIT_EN  0x8000
#define DAC_CFG_REG15_DAC_CLK_EN_CH0_OFFSET  0xe
#define DAC_CFG_REG15_DAC_CLK_EN_CH0_MASK  0x4000
#define DAC_CFG_REG15_DAC_CLK_EN_CH0  0x4000
#define DAC_CFG_REG15_DAC_CLK_EN_CH1_OFFSET  0xd
#define DAC_CFG_REG15_DAC_CLK_EN_CH1_MASK  0x2000
#define DAC_CFG_REG15_DAC_CLK_EN_CH1  0x2000
#define DAC_CFG_REG15_DAC_CLK_EN_ED0_OFFSET  0xc
#define DAC_CFG_REG15_DAC_CLK_EN_ED0_MASK  0x1000
#define DAC_CFG_REG15_DAC_CLK_EN_ED0  0x1000
#define DAC_CFG_REG15_DAC_CLK_EN_ED1_OFFSET  0xb
#define DAC_CFG_REG15_DAC_CLK_EN_ED1_MASK  0x800
#define DAC_CFG_REG15_DAC_CLK_EN_ED1  0x800
#define DAC_CFG_REG15_DAC_CLK_EN_ED2_OFFSET  0xa
#define DAC_CFG_REG15_DAC_CLK_EN_ED2_MASK  0x400
#define DAC_CFG_REG15_DAC_CLK_EN_ED2  0x400
#define DAC_CFG_REG15_DAC_CLK_EN_HPF0_OFFSET  0x9
#define DAC_CFG_REG15_DAC_CLK_EN_HPF0_MASK  0x200
#define DAC_CFG_REG15_DAC_CLK_EN_HPF0  0x200
#define DAC_CFG_REG15_DAC_CLK_EN_HPF1_OFFSET  0x8
#define DAC_CFG_REG15_DAC_CLK_EN_HPF1_MASK  0x100
#define DAC_CFG_REG15_DAC_CLK_EN_HPF1  0x100
#define DAC_CFG_REG15_DAC_CLK_EN_SIDETONE0_OFFSET  0x7
#define DAC_CFG_REG15_DAC_CLK_EN_SIDETONE0_MASK  0x80
#define DAC_CFG_REG15_DAC_CLK_EN_SIDETONE0  0x80
#define DAC_CFG_REG15_DAC_CLK_EN_SIDETONE1_OFFSET  0x6
#define DAC_CFG_REG15_DAC_CLK_EN_SIDETONE1_MASK  0x40
#define DAC_CFG_REG15_DAC_CLK_EN_SIDETONE1  0x40
#define DAC_CFG_REG15_DAC_CLK_EN_ANC0_OFFSET  0x5
#define DAC_CFG_REG15_DAC_CLK_EN_ANC0_MASK  0x20
#define DAC_CFG_REG15_DAC_CLK_EN_ANC0  0x20
#define DAC_CFG_REG15_DAC_CLK_EN_ANC1_OFFSET  0x4
#define DAC_CFG_REG15_DAC_CLK_EN_ANC1_MASK  0x10
#define DAC_CFG_REG15_DAC_CLK_EN_ANC1  0x10
#define DAC_CFG_REG15_DAC_CLK_EN_ANC0_ONLY_OFFSET  0x3
#define DAC_CFG_REG15_DAC_CLK_EN_ANC0_ONLY_MASK  0x8
#define DAC_CFG_REG15_DAC_CLK_EN_ANC0_ONLY  0x8
#define DAC_CFG_REG15_DAC_CLK_EN_ANC1_ONLY_OFFSET  0x2
#define DAC_CFG_REG15_DAC_CLK_EN_ANC1_ONLY_MASK  0x4
#define DAC_CFG_REG15_DAC_CLK_EN_ANC1_ONLY  0x4
#define DAC_CFG_REG15_DAC_ANA_CLK_POL_OFFSET  0x1
#define DAC_CFG_REG15_DAC_ANA_CLK_POL_MASK  0x2
#define DAC_CFG_REG15_DAC_ANA_CLK_POL  0x2
#define DAC_CFG_REG15_DAC_CLK_EN_OFFSET  0x0
#define DAC_CFG_REG15_DAC_CLK_EN_MASK  0x1
#define DAC_CFG_REG15_DAC_CLK_EN  0x1
#define ACL_REG0_OFFCAL_REG_L_OFFSET  0x18
#define ACL_REG0_OFFCAL_REG_L_MASK  0xff000000
#define ACL_REG0_OFFCAL_REG_L  0xff000000
#define ACL_REG0_OFFCAL_DONE_LAT_L_OFFSET  0x17
#define ACL_REG0_OFFCAL_DONE_LAT_L_MASK  0x800000
#define ACL_REG0_OFFCAL_DONE_LAT_L  0x800000
#define ACL_REG0_OFFCAL_OUT_L_OFFSET  0xf
#define ACL_REG0_OFFCAL_OUT_L_MASK  0x7f8000
#define ACL_REG0_OFFCAL_OUT_L  0x7f8000
#define ACL_REG0_OFFCAL_FORCE_VAL_L_OFFSET  0x7
#define ACL_REG0_OFFCAL_FORCE_VAL_L_MASK  0x7f80
#define ACL_REG0_OFFCAL_FORCE_VAL_L  0x7f80
#define ACL_REG0_OFFCAL_FORCE_L_OFFSET  0x6
#define ACL_REG0_OFFCAL_FORCE_L_MASK  0x40
#define ACL_REG0_OFFCAL_FORCE_L  0x40
#define ACL_REG0_ACL_TX_PDB_L_CORE_FORCE_OFFSET  0x5
#define ACL_REG0_ACL_TX_PDB_L_CORE_FORCE_MASK  0x20
#define ACL_REG0_ACL_TX_PDB_L_CORE_FORCE  0x20
#define ACL_REG0_ACL_TX_PDB_L_CORE_FORCE_VAL_OFFSET  0x4
#define ACL_REG0_ACL_TX_PDB_L_CORE_FORCE_VAL_MASK  0x10
#define ACL_REG0_ACL_TX_PDB_L_CORE_FORCE_VAL  0x10
#define ACL_REG0_ACL_TX_PDB_R_CORE_FORCE_OFFSET  0x3
#define ACL_REG0_ACL_TX_PDB_R_CORE_FORCE_MASK  0x8
#define ACL_REG0_ACL_TX_PDB_R_CORE_FORCE  0x8
#define ACL_REG0_ACL_TX_PDB_R_CORE_FORCE_VAL_OFFSET  0x2
#define ACL_REG0_ACL_TX_PDB_R_CORE_FORCE_VAL_MASK  0x4
#define ACL_REG0_ACL_TX_PDB_R_CORE_FORCE_VAL  0x4
#define ACL_REG0_PGOOD_TX_CORE_BYPASS_OFFSET  0x0
#define ACL_REG0_PGOOD_TX_CORE_BYPASS_MASK  0x1
#define ACL_REG0_PGOOD_TX_CORE_BYPASS  0x1
#define ACL_REG1_OFFCAL_REG_R_OFFSET  0x18
#define ACL_REG1_OFFCAL_REG_R_MASK  0xff000000
#define ACL_REG1_OFFCAL_REG_R  0xff000000
#define ACL_REG1_OFFCAL_DONE_LAT_R_OFFSET  0x17
#define ACL_REG1_OFFCAL_DONE_LAT_R_MASK  0x800000
#define ACL_REG1_OFFCAL_DONE_LAT_R  0x800000
#define ACL_REG1_OFFCAL_OUT_R_OFFSET  0xf
#define ACL_REG1_OFFCAL_OUT_R_MASK  0x7f8000
#define ACL_REG1_OFFCAL_OUT_R  0x7f8000
#define ACL_REG1_OFFCAL_FORCE_VAL_R_OFFSET  0x7
#define ACL_REG1_OFFCAL_FORCE_VAL_R_MASK  0x7f80
#define ACL_REG1_OFFCAL_FORCE_VAL_R  0x7f80
#define ACL_REG1_OFFCAL_FORCE_R_OFFSET  0x6
#define ACL_REG1_OFFCAL_FORCE_R_MASK  0x40
#define ACL_REG1_OFFCAL_FORCE_R  0x40
#define ACL_REG1_ACL_TX_MUTE_L_CORE_FORCE_OFFSET  0x5
#define ACL_REG1_ACL_TX_MUTE_L_CORE_FORCE_MASK  0x20
#define ACL_REG1_ACL_TX_MUTE_L_CORE_FORCE  0x20
#define ACL_REG1_ACL_TX_MUTE_L_CORE_FORCE_VAL_OFFSET  0x4
#define ACL_REG1_ACL_TX_MUTE_L_CORE_FORCE_VAL_MASK  0x10
#define ACL_REG1_ACL_TX_MUTE_L_CORE_FORCE_VAL  0x10
#define ACL_REG1_ACL_TX_MUTE_R_CORE_FORCE_OFFSET  0x3
#define ACL_REG1_ACL_TX_MUTE_R_CORE_FORCE_MASK  0x8
#define ACL_REG1_ACL_TX_MUTE_R_CORE_FORCE  0x8
#define ACL_REG1_ACL_TX_MUTE_R_CORE_FORCE_VAL_OFFSET  0x2
#define ACL_REG1_ACL_TX_MUTE_R_CORE_FORCE_VAL_MASK  0x4
#define ACL_REG1_ACL_TX_MUTE_R_CORE_FORCE_VAL  0x4
#define ACL_REG2_OFFCAL_BYPASS_L_OFFSET  0x1f
#define ACL_REG2_OFFCAL_BYPASS_L_MASK  0x80000000
#define ACL_REG2_OFFCAL_BYPASS_L  0x80000000
#define ACL_REG2_CURRENT_STATE_L_OFFSET  0x19
#define ACL_REG2_CURRENT_STATE_L_MASK  0x1e000000
#define ACL_REG2_CURRENT_STATE_L  0x1e000000
#define ACL_REG2_OFFCAL_INITIAL_CNT_L_OFFSET  0x12
#define ACL_REG2_OFFCAL_INITIAL_CNT_L_MASK  0x1fc0000
#define ACL_REG2_OFFCAL_INITIAL_CNT_L  0x1fc0000
#define ACL_REG2_OFFCAL_BYPASS_R_OFFSET  0x10
#define ACL_REG2_OFFCAL_BYPASS_R_MASK  0x10000
#define ACL_REG2_OFFCAL_BYPASS_R  0x10000
#define ACL_REG2_CURRENT_STATE_R_OFFSET  0xa
#define ACL_REG2_CURRENT_STATE_R_MASK  0x3c00
#define ACL_REG2_CURRENT_STATE_R  0x3c00
#define ACL_REG2_OFFCAL_INITIAL_CNT_R_OFFSET  0x3
#define ACL_REG2_OFFCAL_INITIAL_CNT_R_MASK  0x3f8
#define ACL_REG2_OFFCAL_INITIAL_CNT_R  0x3f8
#define ACL_REG2_ACL_OFFCAL_MANUL_EN_OFFSET  0x1
#define ACL_REG2_ACL_OFFCAL_MANUL_EN_MASK  0x2
#define ACL_REG2_ACL_OFFCAL_MANUL_EN  0x2
#define ACL_REG2_ACL_PORT_CTRL_EN_OFFSET  0x0
#define ACL_REG2_ACL_PORT_CTRL_EN_MASK  0x1
#define ACL_REG2_ACL_PORT_CTRL_EN  0x1
#define ACL_REG3_AFE_DBG_OUT_CORE_OFFSET  0x1c
#define ACL_REG3_AFE_DBG_OUT_CORE_MASK  0xf0000000
#define ACL_REG3_AFE_DBG_OUT_CORE  0xf0000000
#define ACL_REG3_ACL_PORTX_15MS_CNT_L_OFFSET  0xd
#define ACL_REG3_ACL_PORTX_15MS_CNT_L_MASK  0xe000
#define ACL_REG3_ACL_PORTX_15MS_CNT_L  0xe000
#define ACL_REG3_ACL_PORTX_15MS_CNT_R_OFFSET  0xa
#define ACL_REG3_ACL_PORTX_15MS_CNT_R_MASK  0x1c00
#define ACL_REG3_ACL_PORTX_15MS_CNT_R  0x1c00
#define ACL_REG3_ACL_CTRL_CLOCK_EN_OFFSET  0x8
#define ACL_REG3_ACL_CTRL_CLOCK_EN_MASK  0x100
#define ACL_REG3_ACL_CTRL_CLOCK_EN  0x100
#define ACL_REG3_SOFT_RST_OFFSET  0x3
#define ACL_REG3_SOFT_RST_MASK  0x8
#define ACL_REG3_SOFT_RST  0x8
#define ACL_REG3_OFFCAL_CHNG_OFFSET  0x2
#define ACL_REG3_OFFCAL_CHNG_MASK  0x4
#define ACL_REG3_OFFCAL_CHNG  0x4
#define ACL_REG3_OFFCAL_RATE_OFFSET  0x0
#define ACL_REG3_OFFCAL_RATE_MASK  0x3
#define ACL_REG3_OFFCAL_RATE  0x3
#define TX_TSTCTRL_1_CORE_REG_CKPHDIF_LR_11_OFFSET  0x1e
#define TX_TSTCTRL_1_CORE_REG_CKPHDIF_LR_11_MASK  0xc0000000
#define TX_TSTCTRL_1_CORE_REG_CKPHDIF_LR_11  0xc0000000
#define TX_TSTCTRL_1_CORE_INT3_CMC_25_OFFSET  0x1b
#define TX_TSTCTRL_1_CORE_INT3_CMC_25_MASK  0x38000000
#define TX_TSTCTRL_1_CORE_INT3_CMC_25  0x38000000
#define TX_TSTCTRL_1_CORE_INT2_CMC_25_OFFSET  0x1a
#define TX_TSTCTRL_1_CORE_INT2_CMC_25_MASK  0x4000000
#define TX_TSTCTRL_1_CORE_INT2_CMC_25  0x4000000
#define TX_TSTCTRL_1_CORE_INT1_CMC_25_OFFSET  0x19
#define TX_TSTCTRL_1_CORE_INT1_CMC_25_MASK  0x2000000
#define TX_TSTCTRL_1_CORE_INT1_CMC_25  0x2000000
#define TX_TSTCTRL_1_CORE_DGLITCH_BYPASS_25_OFFSET  0x18
#define TX_TSTCTRL_1_CORE_DGLITCH_BYPASS_25_MASK  0x1000000
#define TX_TSTCTRL_1_CORE_DGLITCH_BYPASS_25  0x1000000
#define TX_TSTCTRL_1_CORE_LDO11_OBUF_GMIB_INC1U_25_OFFSET  0x17
#define TX_TSTCTRL_1_CORE_LDO11_OBUF_GMIB_INC1U_25_MASK  0x800000
#define TX_TSTCTRL_1_CORE_LDO11_OBUF_GMIB_INC1U_25  0x800000
#define TX_TSTCTRL_1_CORE_LOOP_IBADJ_25_OFFSET  0x15
#define TX_TSTCTRL_1_CORE_LOOP_IBADJ_25_MASK  0x600000
#define TX_TSTCTRL_1_CORE_LOOP_IBADJ_25  0x600000
#define TX_TSTCTRL_1_CORE_FALPUL_BYPASS_25_OFFSET  0x14
#define TX_TSTCTRL_1_CORE_FALPUL_BYPASS_25_MASK  0x100000
#define TX_TSTCTRL_1_CORE_FALPUL_BYPASS_25  0x100000
#define TX_TSTCTRL_1_CORE_SPARE_OFFSET  0x13
#define TX_TSTCTRL_1_CORE_SPARE_MASK  0x80000
#define TX_TSTCTRL_1_CORE_SPARE  0x80000
#define TX_TSTCTRL_1_CORE_REG_FORCELOW_ASYNC_NODLY_11_OFFSET  0x12
#define TX_TSTCTRL_1_CORE_REG_FORCELOW_ASYNC_NODLY_11_MASK  0x40000
#define TX_TSTCTRL_1_CORE_REG_FORCELOW_ASYNC_NODLY_11  0x40000
#define TX_TSTCTRL_1_CORE_REG_FORCE_TRIGOC_11_OFFSET  0x11
#define TX_TSTCTRL_1_CORE_REG_FORCE_TRIGOC_11_MASK  0x20000
#define TX_TSTCTRL_1_CORE_REG_FORCE_TRIGOC_11  0x20000
#define TX_TSTCTRL_1_CORE_REG_FDRV_ASYNC_ENA_11_OFFSET  0x10
#define TX_TSTCTRL_1_CORE_REG_FDRV_ASYNC_ENA_11_MASK  0x10000
#define TX_TSTCTRL_1_CORE_REG_FDRV_ASYNC_ENA_11  0x10000
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIGH_11_OFFSET  0xf
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIGH_11_MASK  0x8000
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIGH_11  0x8000
#define TX_TSTCTRL_1_CORE_REG_FORCE_LOW_11_OFFSET  0xe
#define TX_TSTCTRL_1_CORE_REG_FORCE_LOW_11_MASK  0x4000
#define TX_TSTCTRL_1_CORE_REG_FORCE_LOW_11  0x4000
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIZ_R_11_OFFSET  0xd
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIZ_R_11_MASK  0x2000
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIZ_R_11  0x2000
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIZ_L_11_OFFSET  0xc
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIZ_L_11_MASK  0x1000
#define TX_TSTCTRL_1_CORE_REG_FORCE_HIZ_L_11  0x1000
#define TX_TSTCTRL_1_CORE_RCCAL_DBG_11_OFFSET  0xb
#define TX_TSTCTRL_1_CORE_RCCAL_DBG_11_MASK  0x800
#define TX_TSTCTRL_1_CORE_RCCAL_DBG_11  0x800
#define TX_TSTCTRL_1_CORE_BYPASS_CLK_DETECT_11_OFFSET  0xa
#define TX_TSTCTRL_1_CORE_BYPASS_CLK_DETECT_11_MASK  0x400
#define TX_TSTCTRL_1_CORE_BYPASS_CLK_DETECT_11  0x400
#define TX_TSTCTRL_1_CORE_LS_IOC_ADJ_11_OFFSET  0x7
#define TX_TSTCTRL_1_CORE_LS_IOC_ADJ_11_MASK  0x380
#define TX_TSTCTRL_1_CORE_LS_IOC_ADJ_11  0x380
#define TX_TSTCTRL_1_CORE_HS_IOC_ADJ_11_OFFSET  0x4
#define TX_TSTCTRL_1_CORE_HS_IOC_ADJ_11_MASK  0x70
#define TX_TSTCTRL_1_CORE_HS_IOC_ADJ_11  0x70
#define TX_TSTCTRL_1_CORE_PWMP_LS_OC_MASK_11_OFFSET  0x3
#define TX_TSTCTRL_1_CORE_PWMP_LS_OC_MASK_11_MASK  0x8
#define TX_TSTCTRL_1_CORE_PWMP_LS_OC_MASK_11  0x8
#define TX_TSTCTRL_1_CORE_PWMP_HS_OC_MASK_11_OFFSET  0x2
#define TX_TSTCTRL_1_CORE_PWMP_HS_OC_MASK_11_MASK  0x4
#define TX_TSTCTRL_1_CORE_PWMP_HS_OC_MASK_11  0x4
#define TX_TSTCTRL_1_CORE_PWMN_LS_OC_MASK_11_OFFSET  0x1
#define TX_TSTCTRL_1_CORE_PWMN_LS_OC_MASK_11_MASK  0x2
#define TX_TSTCTRL_1_CORE_PWMN_LS_OC_MASK_11  0x2
#define TX_TSTCTRL_1_CORE_PWMN_HS_OC_MASK_11_OFFSET  0x0
#define TX_TSTCTRL_1_CORE_PWMN_HS_OC_MASK_11_MASK  0x1
#define TX_TSTCTRL_1_CORE_PWMN_HS_OC_MASK_11  0x1
#define TX_TSTCTRL_2_CORE_D_OTA3_TUNE_OFFSET  0x1c
#define TX_TSTCTRL_2_CORE_D_OTA3_TUNE_MASK  0xf0000000
#define TX_TSTCTRL_2_CORE_D_OTA3_TUNE  0xf0000000
#define TX_TSTCTRL_2_CORE_SPARE_OFFSET  0x1b
#define TX_TSTCTRL_2_CORE_SPARE_MASK  0x8000000
#define TX_TSTCTRL_2_CORE_SPARE  0x8000000
#define TX_TSTCTRL_2_CORE_OFC_VCMBUF_IBADJ_OFFSET  0x19
#define TX_TSTCTRL_2_CORE_OFC_VCMBUF_IBADJ_MASK  0x6000000
#define TX_TSTCTRL_2_CORE_OFC_VCMBUF_IBADJ  0x6000000
#define TX_TSTCTRL_2_CORE_DONT_SHORT_PWMOUT_OFFSET  0x18
#define TX_TSTCTRL_2_CORE_DONT_SHORT_PWMOUT_MASK  0x1000000
#define TX_TSTCTRL_2_CORE_DONT_SHORT_PWMOUT  0x1000000
#define TX_TSTCTRL_2_CORE_DCOC_MODE_OFFSET  0x16
#define TX_TSTCTRL_2_CORE_DCOC_MODE_MASK  0xc00000
#define TX_TSTCTRL_2_CORE_DCOC_MODE  0xc00000
#define TX_TSTCTRL_2_CORE_CARRIERCLK_DLYCTRL_L_OFFSET  0x13
#define TX_TSTCTRL_2_CORE_CARRIERCLK_DLYCTRL_L_MASK  0x380000
#define TX_TSTCTRL_2_CORE_CARRIERCLK_DLYCTRL_L  0x380000
#define TX_TSTCTRL_2_CORE_CARRIERCLK_DLYCTRL_R_OFFSET  0x10
#define TX_TSTCTRL_2_CORE_CARRIERCLK_DLYCTRL_R_MASK  0x70000
#define TX_TSTCTRL_2_CORE_CARRIERCLK_DLYCTRL_R  0x70000
#define TX_TSTCTRL_2_CORE_D_OTA1_OTA2_TUNE_OFFSET  0x8
#define TX_TSTCTRL_2_CORE_D_OTA1_OTA2_TUNE_MASK  0xff00
#define TX_TSTCTRL_2_CORE_D_OTA1_OTA2_TUNE  0xff00
#define TX_TSTCTRL_2_CORE_SLEW_RATE_P_OFFSET  0x0
#define TX_TSTCTRL_2_CORE_SLEW_RATE_P_MASK  0xff
#define TX_TSTCTRL_2_CORE_SLEW_RATE_P  0xff
#define TX_TSTCTRL_3_CORE_REG_DISABLE_LDOAUTOMONO_OFFSET  0x1f
#define TX_TSTCTRL_3_CORE_REG_DISABLE_LDOAUTOMONO_MASK  0x80000000
#define TX_TSTCTRL_3_CORE_REG_DISABLE_LDOAUTOMONO  0x80000000
#define TX_TSTCTRL_3_CORE_REG_BYPASS_FORCELOW_DLY_OFFSET  0x1e
#define TX_TSTCTRL_3_CORE_REG_BYPASS_FORCELOW_DLY_MASK  0x40000000
#define TX_TSTCTRL_3_CORE_REG_BYPASS_FORCELOW_DLY  0x40000000
#define TX_TSTCTRL_3_CORE_REG_FORCELOW_DLYTIME_OFFSET  0x1c
#define TX_TSTCTRL_3_CORE_REG_FORCELOW_DLYTIME_MASK  0x30000000
#define TX_TSTCTRL_3_CORE_REG_FORCELOW_DLYTIME  0x30000000
#define TX_TSTCTRL_3_CORE_REG_STARTUP_SM_TIMER_OFFSET  0x1b
#define TX_TSTCTRL_3_CORE_REG_STARTUP_SM_TIMER_MASK  0x8000000
#define TX_TSTCTRL_3_CORE_REG_STARTUP_SM_TIMER  0x8000000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_HZB_OFFSET  0x1a
#define TX_TSTCTRL_3_CORE_REG_MANUAL_HZB_MASK  0x4000000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_HZB  0x4000000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_RCC_OFFSET  0x19
#define TX_TSTCTRL_3_CORE_REG_MANUAL_RCC_MASK  0x2000000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_RCC  0x2000000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBLDO_OBUF_OFFSET  0x18
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBLDO_OBUF_MASK  0x1000000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBLDO_OBUF  0x1000000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBLDOCLKLF_OFFSET  0x17
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBLDOCLKLF_MASK  0x800000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBLDOCLKLF  0x800000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_RCCALSTART_OFFSET  0x16
#define TX_TSTCTRL_3_CORE_REG_MANUAL_RCCALSTART_MASK  0x400000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_RCCALSTART  0x400000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBBIAS_OFFSET  0x15
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBBIAS_MASK  0x200000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_PDBBIAS  0x200000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_STARTUP_ENA_OFFSET  0x14
#define TX_TSTCTRL_3_CORE_REG_MANUAL_STARTUP_ENA_MASK  0x100000
#define TX_TSTCTRL_3_CORE_REG_MANUAL_STARTUP_ENA  0x100000
#define TX_TSTCTRL_3_CORE_REG_OFFCAL_WI_CMP_OP_OFFSET  0x13
#define TX_TSTCTRL_3_CORE_REG_OFFCAL_WI_CMP_OP_MASK  0x80000
#define TX_TSTCTRL_3_CORE_REG_OFFCAL_WI_CMP_OP  0x80000
#define TX_TSTCTRL_3_CORE_REG_SOFTRST_CLASSD_OFFSET  0x12
#define TX_TSTCTRL_3_CORE_REG_SOFTRST_CLASSD_MASK  0x40000
#define TX_TSTCTRL_3_CORE_REG_SOFTRST_CLASSD  0x40000
#define TX_TSTCTRL_3_CORE_REG_TX_DBG_OUT_SEL_OFFSET  0xe
#define TX_TSTCTRL_3_CORE_REG_TX_DBG_OUT_SEL_MASK  0x3c000
#define TX_TSTCTRL_3_CORE_REG_TX_DBG_OUT_SEL  0x3c000
#define TX_TSTCTRL_3_CORE_O_DBG_PWMDRV_ENA_OFFSET  0xd
#define TX_TSTCTRL_3_CORE_O_DBG_PWMDRV_ENA_MASK  0x2000
#define TX_TSTCTRL_3_CORE_O_DBG_PWMDRV_ENA  0x2000
#define TX_TSTCTRL_3_CORE_REG_OCPSM_DISABLE_OFFSET  0xc
#define TX_TSTCTRL_3_CORE_REG_OCPSM_DISABLE_MASK  0x1000
#define TX_TSTCTRL_3_CORE_REG_OCPSM_DISABLE  0x1000
#define TX_TSTCTRL_3_CORE_REG_SELFRC_TIMES_OFFSET  0xa
#define TX_TSTCTRL_3_CORE_REG_SELFRC_TIMES_MASK  0xc00
#define TX_TSTCTRL_3_CORE_REG_SELFRC_TIMES  0xc00
#define TX_TSTCTRL_3_CORE_REG_SELFRC_INTERVAL_OFFSET  0x7
#define TX_TSTCTRL_3_CORE_REG_SELFRC_INTERVAL_MASK  0x380
#define TX_TSTCTRL_3_CORE_REG_SELFRC_INTERVAL  0x380
#define TX_TSTCTRL_3_CORE_REG_SELFRC_DISABLE_OFFSET  0x6
#define TX_TSTCTRL_3_CORE_REG_SELFRC_DISABLE_MASK  0x40
#define TX_TSTCTRL_3_CORE_REG_SELFRC_DISABLE  0x40
#define TX_TSTCTRL_3_CORE_REG_RCCAL_FORCE_OFFSET  0x5
#define TX_TSTCTRL_3_CORE_REG_RCCAL_FORCE_MASK  0x20
#define TX_TSTCTRL_3_CORE_REG_RCCAL_FORCE  0x20
#define TX_TSTCTRL_3_CORE_REG_RCCAL_FORCE_CODE_OFFSET  0x0
#define TX_TSTCTRL_3_CORE_REG_RCCAL_FORCE_CODE_MASK  0x1f
#define TX_TSTCTRL_3_CORE_REG_RCCAL_FORCE_CODE  0x1f
#define TX_TSTCTRL_4_CORE_FORCE_MUTE_OFFSET  0x1f
#define TX_TSTCTRL_4_CORE_FORCE_MUTE_MASK  0x80000000
#define TX_TSTCTRL_4_CORE_FORCE_MUTE  0x80000000
#define TX_TSTCTRL_4_CORE_DYNCURRENT_SWITCHING_MUX_OFFSET  0x1e
#define TX_TSTCTRL_4_CORE_DYNCURRENT_SWITCHING_MUX_MASK  0x40000000
#define TX_TSTCTRL_4_CORE_DYNCURRENT_SWITCHING_MUX  0x40000000
#define TX_TSTCTRL_4_CORE_CSDAC_GLOBAL_BIAS_CURRENT_CTL_OFFSET  0x1b
#define TX_TSTCTRL_4_CORE_CSDAC_GLOBAL_BIAS_CURRENT_CTL_MASK  0x38000000
#define TX_TSTCTRL_4_CORE_CSDAC_GLOBAL_BIAS_CURRENT_CTL  0x38000000
#define TX_TSTCTRL_4_CORE_FORCE_CSDAC_RIGHT_CHANNEL_OFFSET  0x1a
#define TX_TSTCTRL_4_CORE_FORCE_CSDAC_RIGHT_CHANNEL_MASK  0x4000000
#define TX_TSTCTRL_4_CORE_FORCE_CSDAC_RIGHT_CHANNEL  0x4000000
#define TX_TSTCTRL_4_CORE_FORCE_CSDAC_LEFT_CHANNEL_OFFSET  0x19
#define TX_TSTCTRL_4_CORE_FORCE_CSDAC_LEFT_CHANNEL_MASK  0x2000000
#define TX_TSTCTRL_4_CORE_FORCE_CSDAC_LEFT_CHANNEL  0x2000000
#define TX_TSTCTRL_4_CORE_RIGHT_CHANNEL_CSDAC_HIZ_OFFSET  0x18
#define TX_TSTCTRL_4_CORE_RIGHT_CHANNEL_CSDAC_HIZ_MASK  0x1000000
#define TX_TSTCTRL_4_CORE_RIGHT_CHANNEL_CSDAC_HIZ  0x1000000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_HOLDPULSE_CONTROL_OFFSET  0x16
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_HOLDPULSE_CONTROL_MASK  0xc00000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_HOLDPULSE_CONTROL  0xc00000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_TRANZ_MASTER_BIAS_CONTROL_OFFSET  0x14
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_TRANZ_MASTER_BIAS_CONTROL_MASK  0x300000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_TRANZ_MASTER_BIAS_CONTROL  0x300000
#define TX_TSTCTRL_4_CORE_TRANZ_AMP_OUTPUT_QUIESCENT_CURRENT_CONTROL_OFFSET  0x12
#define TX_TSTCTRL_4_CORE_TRANZ_AMP_OUTPUT_QUIESCENT_CURRENT_CONTROL_MASK  0xc0000
#define TX_TSTCTRL_4_CORE_TRANZ_AMP_OUTPUT_QUIESCENT_CURRENT_CONTROL  0xc0000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_TRANZ_AMP_INPUT_CURRENT_CONTROL_OFFSET  0x10
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_TRANZ_AMP_INPUT_CURRENT_CONTROL_MASK  0x30000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_TRANZ_AMP_INPUT_CURRENT_CONTROL  0x30000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_FORCE_MUTE_OFFSET  0xf
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_FORCE_MUTE_MASK  0x8000
#define TX_TSTCTRL_4_CORE_CSDAC_RIGHT_CHANNEL_FORCE_MUTE  0x8000
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_FORCE_MUTE_OFFSET  0xe
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_FORCE_MUTE_MASK  0x4000
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_FORCE_MUTE  0x4000
#define TX_TSTCTRL_4_CORE_CSDAC_DYN_CCURRENT_LOGIC_FORCE_DISABLE_OFFSET  0xd
#define TX_TSTCTRL_4_CORE_CSDAC_DYN_CCURRENT_LOGIC_FORCE_DISABLE_MASK  0x2000
#define TX_TSTCTRL_4_CORE_CSDAC_DYN_CCURRENT_LOGIC_FORCE_DISABLE  0x2000
#define TX_TSTCTRL_4_CORE_CSDAC_TRANZ_AMP_COMP_CAP_PROGRAMMING_OFFSET  0xc
#define TX_TSTCTRL_4_CORE_CSDAC_TRANZ_AMP_COMP_CAP_PROGRAMMING_MASK  0x1000
#define TX_TSTCTRL_4_CORE_CSDAC_TRANZ_AMP_COMP_CAP_PROGRAMMING  0x1000
#define TX_TSTCTRL_4_CORE_CSDAC_DYNAMIC_CURRENT_SWITCHING_FORCE_ENABLE_OFFSET  0xb
#define TX_TSTCTRL_4_CORE_CSDAC_DYNAMIC_CURRENT_SWITCHING_FORCE_ENABLE_MASK  0x800
#define TX_TSTCTRL_4_CORE_CSDAC_DYNAMIC_CURRENT_SWITCHING_FORCE_ENABLE  0x800
#define TX_TSTCTRL_4_CORE_GAIN_FF_BYPASS_OFFSET  0xa
#define TX_TSTCTRL_4_CORE_GAIN_FF_BYPASS_MASK  0x400
#define TX_TSTCTRL_4_CORE_GAIN_FF_BYPASS  0x400
#define TX_TSTCTRL_4_CORE_CSDAC_ENABLE_ISI_FREE_OFFSET  0x9
#define TX_TSTCTRL_4_CORE_CSDAC_ENABLE_ISI_FREE_MASK  0x200
#define TX_TSTCTRL_4_CORE_CSDAC_ENABLE_ISI_FREE  0x200
#define TX_TSTCTRL_4_CORE_LEFT_CHANNEL_CSDAC_HIZ_OFFSET  0x8
#define TX_TSTCTRL_4_CORE_LEFT_CHANNEL_CSDAC_HIZ_MASK  0x100
#define TX_TSTCTRL_4_CORE_LEFT_CHANNEL_CSDAC_HIZ  0x100
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_HOLD_PULSE_CONTROL_OFFSET  0x6
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_HOLD_PULSE_CONTROL_MASK  0xc0
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_HOLD_PULSE_CONTROL  0xc0
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_MASTER_BIAS_CONTROL_OFFSET  0x4
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_MASTER_BIAS_CONTROL_MASK  0x30
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_MASTER_BIAS_CONTROL  0x30
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_TRANZ_AMP_OUTPUT_QUIESCENT_CURRENT_CONTROL_OFFSET  0x2
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_TRANZ_AMP_OUTPUT_QUIESCENT_CURRENT_CONTROL_MASK  0xc
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_TRANZ_AMP_OUTPUT_QUIESCENT_CURRENT_CONTROL  0xc
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_TRANZ_AMP_INPUT_CURRENT_CONTROL_OFFSET  0x0
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_TRANZ_AMP_INPUT_CURRENT_CONTROL_MASK  0x3
#define TX_TSTCTRL_4_CORE_CSDAC_LEFT_CHANNEL_TRANZ_AMP_INPUT_CURRENT_CONTROL  0x3
#define TX_TSTCTRL_5_CORE_LDO11_ITH_OCP_OFFSET  0x1e
#define TX_TSTCTRL_5_CORE_LDO11_ITH_OCP_MASK  0xc0000000
#define TX_TSTCTRL_5_CORE_LDO11_ITH_OCP  0xc0000000
#define TX_TSTCTRL_5_CORE_OC_DETECT_WIN_OFFSET  0x1c
#define TX_TSTCTRL_5_CORE_OC_DETECT_WIN_MASK  0x30000000
#define TX_TSTCTRL_5_CORE_OC_DETECT_WIN  0x30000000
#define TX_TSTCTRL_5_CORE_SLEW_RATE_N_OFFSET  0x14
#define TX_TSTCTRL_5_CORE_SLEW_RATE_N_MASK  0xff00000
#define TX_TSTCTRL_5_CORE_SLEW_RATE_N  0xff00000
#define TX_TSTCTRL_5_CORE_SPARE_OFFSET  0x12
#define TX_TSTCTRL_5_CORE_SPARE_MASK  0xc0000
#define TX_TSTCTRL_5_CORE_SPARE  0xc0000
#define TX_TSTCTRL_5_CORE_SHORT_CLASSD_INPUT_OFFSET  0x11
#define TX_TSTCTRL_5_CORE_SHORT_CLASSD_INPUT_MASK  0x20000
#define TX_TSTCTRL_5_CORE_SHORT_CLASSD_INPUT  0x20000
#define TX_TSTCTRL_5_CORE_SET_CLASSD_GAIN0DB_OFFSET  0x10
#define TX_TSTCTRL_5_CORE_SET_CLASSD_GAIN0DB_MASK  0x10000
#define TX_TSTCTRL_5_CORE_SET_CLASSD_GAIN0DB  0x10000
#define TX_TSTCTRL_5_CORE_LDO25_VFBSEL_OFFSET  0xc
#define TX_TSTCTRL_5_CORE_LDO25_VFBSEL_MASK  0xf000
#define TX_TSTCTRL_5_CORE_LDO25_VFBSEL  0xf000
#define TX_TSTCTRL_5_CORE_LDO11_VBGSEL_OFFSET  0x8
#define TX_TSTCTRL_5_CORE_LDO11_VBGSEL_MASK  0xf00
#define TX_TSTCTRL_5_CORE_LDO11_VBGSEL  0xf00
#define TX_TSTCTRL_5_CORE_OFFCALMODE_OFFSET  0x6
#define TX_TSTCTRL_5_CORE_OFFCALMODE_MASK  0xc0
#define TX_TSTCTRL_5_CORE_OFFCALMODE  0xc0
#define TX_TSTCTRL_5_CORE_LDO_MODE_OFFSET  0x3
#define TX_TSTCTRL_5_CORE_LDO_MODE_MASK  0x38
#define TX_TSTCTRL_5_CORE_LDO_MODE  0x38
#define TX_TSTCTRL_5_CORE_RST_INT3_OFFSET  0x2
#define TX_TSTCTRL_5_CORE_RST_INT3_MASK  0x4
#define TX_TSTCTRL_5_CORE_RST_INT3  0x4
#define TX_TSTCTRL_5_CORE_RST_INT2_OFFSET  0x1
#define TX_TSTCTRL_5_CORE_RST_INT2_MASK  0x2
#define TX_TSTCTRL_5_CORE_RST_INT2  0x2
#define TX_TSTCTRL_5_CORE_RST_INT1_OFFSET  0x0
#define TX_TSTCTRL_5_CORE_RST_INT1_MASK  0x1
#define TX_TSTCTRL_5_CORE_RST_INT1  0x1
#define E_LINK_PLL_CTRL0_EARLINK_PLL_LPF_BW_RES_CTL_VCORE_OFFSET  0x1c
#define E_LINK_PLL_CTRL0_EARLINK_PLL_LPF_BW_RES_CTL_VCORE_MASK  0x70000000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_LPF_BW_RES_CTL_VCORE  0x70000000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_LPF_RC3_CTL_VCORE_OFFSET  0x18
#define E_LINK_PLL_CTRL0_EARLINK_PLL_LPF_RC3_CTL_VCORE_MASK  0x7000000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_LPF_RC3_CTL_VCORE  0x7000000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_PFD_DEL_CTL_VCORE_OFFSET  0x14
#define E_LINK_PLL_CTRL0_EARLINK_PLL_PFD_DEL_CTL_VCORE_MASK  0x300000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_PFD_DEL_CTL_VCORE  0x300000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CP_CURR_SEL_VCORE_OFFSET  0x10
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CP_CURR_SEL_VCORE_MASK  0xf0000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CP_CURR_SEL_VCORE  0xf0000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_PRE_DIV_VCORE_OFFSET  0xc
#define E_LINK_PLL_CTRL0_EARLINK_PLL_PRE_DIV_VCORE_MASK  0xf000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_PRE_DIV_VCORE  0xf000
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CTRL_VCORE_OFFSET  0x8
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CTRL_VCORE_MASK  0xf00
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CTRL_VCORE  0xf00
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CAPMULT_EN_VCORE_OFFSET  0x7
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CAPMULT_EN_VCORE_MASK  0x80
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CAPMULT_EN_VCORE  0x80
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CLK_DETECT_BYPASS_VCORE_OFFSET  0x6
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CLK_DETECT_BYPASS_VCORE_MASK  0x40
#define E_LINK_PLL_CTRL0_EARLINK_PLL_CLK_DETECT_BYPASS_VCORE  0x40
#define E_LINK_PLL_CTRL0_EARLINK_PLL_RC3_ENABLE_VCORE_OFFSET  0x4
#define E_LINK_PLL_CTRL0_EARLINK_PLL_RC3_ENABLE_VCORE_MASK  0x10
#define E_LINK_PLL_CTRL0_EARLINK_PLL_RC3_ENABLE_VCORE  0x10
#define E_LINK_PLL_CTRL0_EARLINK_PLL_DSM_DITHER_EN_VCORE_OFFSET  0x3
#define E_LINK_PLL_CTRL0_EARLINK_PLL_DSM_DITHER_EN_VCORE_MASK  0x8
#define E_LINK_PLL_CTRL0_EARLINK_PLL_DSM_DITHER_EN_VCORE  0x8
#define E_LINK_PLL_CTRL0_EARLINK_PLL_INT_DIV_MODE_VCORE_OFFSET  0x2
#define E_LINK_PLL_CTRL0_EARLINK_PLL_INT_DIV_MODE_VCORE_MASK  0x4
#define E_LINK_PLL_CTRL0_EARLINK_PLL_INT_DIV_MODE_VCORE  0x4
#define E_LINK_PLL_CTRL0_EARLINK_PLL_RESET_N_VCORE_OFFSET  0x1
#define E_LINK_PLL_CTRL0_EARLINK_PLL_RESET_N_VCORE_MASK  0x2
#define E_LINK_PLL_CTRL0_EARLINK_PLL_RESET_N_VCORE  0x2
#define E_LINK_PLL_CTRL0_EARLINK_PLL_EN_VCORE_OFFSET  0x0
#define E_LINK_PLL_CTRL0_EARLINK_PLL_EN_VCORE_MASK  0x1
#define E_LINK_PLL_CTRL0_EARLINK_PLL_EN_VCORE  0x1
#define E_LINK_PLL_CTRL1_EARLINK_PLL_LOCK_SYNC_OFFSET  0x1f
#define E_LINK_PLL_CTRL1_EARLINK_PLL_LOCK_SYNC_MASK  0x80000000
#define E_LINK_PLL_CTRL1_EARLINK_PLL_LOCK_SYNC  0x80000000
#define E_LINK_PLL_CTRL1_EARLINK_PLL_CLKDETECT_VCORE_SYNC_OFFSET  0x1e
#define E_LINK_PLL_CTRL1_EARLINK_PLL_CLKDETECT_VCORE_SYNC_MASK  0x40000000
#define E_LINK_PLL_CTRL1_EARLINK_PLL_CLKDETECT_VCORE_SYNC  0x40000000
#define E_LINK_PLL_CTRL1_EARLINK_PLL_INT_DIV_VCORE_OFFSET  0x14
#define E_LINK_PLL_CTRL1_EARLINK_PLL_INT_DIV_VCORE_MASK  0x1ff00000
#define E_LINK_PLL_CTRL1_EARLINK_PLL_INT_DIV_VCORE  0x1ff00000
#define E_LINK_PLL_CTRL1_EARLINK_PLL_FRAC_DIV_VCORE_OFFSET  0x0
#define E_LINK_PLL_CTRL1_EARLINK_PLL_FRAC_DIV_VCORE_MASK  0xfffff
#define E_LINK_PLL_CTRL1_EARLINK_PLL_FRAC_DIV_VCORE  0xfffff
#define SYS_PLL_CTRL0_SYS_PLL_CP_CURR_SEL_VCORE_OFFSET  0x1c
#define SYS_PLL_CTRL0_SYS_PLL_CP_CURR_SEL_VCORE_MASK  0xf0000000
#define SYS_PLL_CTRL0_SYS_PLL_CP_CURR_SEL_VCORE  0xf0000000
#define SYS_PLL_CTRL0_SYS_PLL_PFD_DEL_CTL_VCORE_OFFSET  0x18
#define SYS_PLL_CTRL0_SYS_PLL_PFD_DEL_CTL_VCORE_MASK  0x3000000
#define SYS_PLL_CTRL0_SYS_PLL_PFD_DEL_CTL_VCORE  0x3000000
#define SYS_PLL_CTRL0_SYS_PLL_IPTAT_TRIM_VCORE_OFFSET  0x14
#define SYS_PLL_CTRL0_SYS_PLL_IPTAT_TRIM_VCORE_MASK  0xf00000
#define SYS_PLL_CTRL0_SYS_PLL_IPTAT_TRIM_VCORE  0xf00000
#define SYS_PLL_CTRL0_SYS_PLL_PRE_DIV_VCORE_OFFSET  0x10
#define SYS_PLL_CTRL0_SYS_PLL_PRE_DIV_VCORE_MASK  0xf0000
#define SYS_PLL_CTRL0_SYS_PLL_PRE_DIV_VCORE  0xf0000
#define SYS_PLL_CTRL0_SYS_PLL_LPF_BW_RES_CTL_VCORE_OFFSET  0xc
#define SYS_PLL_CTRL0_SYS_PLL_LPF_BW_RES_CTL_VCORE_MASK  0x7000
#define SYS_PLL_CTRL0_SYS_PLL_LPF_BW_RES_CTL_VCORE  0x7000
#define SYS_PLL_CTRL0_SYS_PLL_LPF_RC3_CTL_VCORE_OFFSET  0x8
#define SYS_PLL_CTRL0_SYS_PLL_LPF_RC3_CTL_VCORE_MASK  0x700
#define SYS_PLL_CTRL0_SYS_PLL_LPF_RC3_CTL_VCORE  0x700
#define SYS_PLL_CTRL0_SYS_PLL_CAPMULT_EN_VCORE_OFFSET  0x5
#define SYS_PLL_CTRL0_SYS_PLL_CAPMULT_EN_VCORE_MASK  0x20
#define SYS_PLL_CTRL0_SYS_PLL_CAPMULT_EN_VCORE  0x20
#define SYS_PLL_CTRL0_SYS_PLL_CLK_DETECT_BYPASS_VCORE_OFFSET  0x4
#define SYS_PLL_CTRL0_SYS_PLL_CLK_DETECT_BYPASS_VCORE_MASK  0x10
#define SYS_PLL_CTRL0_SYS_PLL_CLK_DETECT_BYPASS_VCORE  0x10
#define SYS_PLL_CTRL0_SYS_PLL_RC3_ENABLE_VCORE_OFFSET  0x3
#define SYS_PLL_CTRL0_SYS_PLL_RC3_ENABLE_VCORE_MASK  0x8
#define SYS_PLL_CTRL0_SYS_PLL_RC3_ENABLE_VCORE  0x8
#define SYS_PLL_CTRL0_SYS_PLL_INT_DIV_MODE_VCORE_OFFSET  0x2
#define SYS_PLL_CTRL0_SYS_PLL_INT_DIV_MODE_VCORE_MASK  0x4
#define SYS_PLL_CTRL0_SYS_PLL_INT_DIV_MODE_VCORE  0x4
#define SYS_PLL_CTRL0_SYS_PLL_RESET_N_VCORE_OFFSET  0x1
#define SYS_PLL_CTRL0_SYS_PLL_RESET_N_VCORE_MASK  0x2
#define SYS_PLL_CTRL0_SYS_PLL_RESET_N_VCORE  0x2
#define SYS_PLL_CTRL0_SYS_PLL_EN_VCORE_OFFSET  0x0
#define SYS_PLL_CTRL0_SYS_PLL_EN_VCORE_MASK  0x1
#define SYS_PLL_CTRL0_SYS_PLL_EN_VCORE  0x1
#define SYS_PLL_CTRL1_SYS_PLL_CLKDETECT_VCORE_SYNC_OFFSET  0x12
#define SYS_PLL_CTRL1_SYS_PLL_CLKDETECT_VCORE_SYNC_MASK  0x40000
#define SYS_PLL_CTRL1_SYS_PLL_CLKDETECT_VCORE_SYNC  0x40000
#define SYS_PLL_CTRL1_SYS_PLL_LOCK_VCORE_SYNC_OFFSET  0x11
#define SYS_PLL_CTRL1_SYS_PLL_LOCK_VCORE_SYNC_MASK  0x20000
#define SYS_PLL_CTRL1_SYS_PLL_LOCK_VCORE_SYNC  0x20000
#define SYS_PLL_CTRL1_SYS_PLL_INT_DIV_VCORE_OFFSET  0x8
#define SYS_PLL_CTRL1_SYS_PLL_INT_DIV_VCORE_MASK  0x1ff00
#define SYS_PLL_CTRL1_SYS_PLL_INT_DIV_VCORE  0x1ff00
#define SYS_PLL_CTRL1_SPARE_IN_VCORE_OFFSET  0x4
#define SYS_PLL_CTRL1_SPARE_IN_VCORE_MASK  0xf0
#define SYS_PLL_CTRL1_SPARE_IN_VCORE  0xf0
#define SYS_PLL_CTRL1_SYS_PLL_LOCKDET_DLY_CTRL_MSB_OFFSET  0x2
#define SYS_PLL_CTRL1_SYS_PLL_LOCKDET_DLY_CTRL_MSB_MASK  0xc
#define SYS_PLL_CTRL1_SYS_PLL_LOCKDET_DLY_CTRL_MSB  0xc
#define SYS_PLL_CTRL1_ELINK_PLL_LOCKDET_DLY_CTRL_MSB_OFFSET  0x0
#define SYS_PLL_CTRL1_ELINK_PLL_LOCKDET_DLY_CTRL_MSB_MASK  0x3
#define SYS_PLL_CTRL1_ELINK_PLL_LOCKDET_DLY_CTRL_MSB  0x3
#define BGREF_TSTCTRL_1_CORE_CTRL_IBG_DIS_CORE_OFFSET  0x1f
#define BGREF_TSTCTRL_1_CORE_CTRL_IBG_DIS_CORE_MASK  0x80000000
#define BGREF_TSTCTRL_1_CORE_CTRL_IBG_DIS_CORE  0x80000000
#define BGREF_TSTCTRL_1_CORE_CTRL_ELREF_OFFSET  0x1c
#define BGREF_TSTCTRL_1_CORE_CTRL_ELREF_MASK  0x70000000
#define BGREF_TSTCTRL_1_CORE_CTRL_ELREF  0x70000000
#define BGREF_TSTCTRL_1_CORE_CTRL_TX_VBG_REF_OFFSET  0x18
#define BGREF_TSTCTRL_1_CORE_CTRL_TX_VBG_REF_MASK  0x3000000
#define BGREF_TSTCTRL_1_CORE_CTRL_TX_VBG_REF  0x3000000
#define BGREF_TSTCTRL_1_CORE_CTRL_PGOOD11REF_OFFSET  0x16
#define BGREF_TSTCTRL_1_CORE_CTRL_PGOOD11REF_MASK  0xc00000
#define BGREF_TSTCTRL_1_CORE_CTRL_PGOOD11REF  0xc00000
#define BGREF_TSTCTRL_1_CORE_CTRL_PGOODCOREREF_OFFSET  0x14
#define BGREF_TSTCTRL_1_CORE_CTRL_PGOODCOREREF_MASK  0x300000
#define BGREF_TSTCTRL_1_CORE_CTRL_PGOODCOREREF  0x300000
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO25REF_OFFSET  0x10
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO25REF_MASK  0xf0000
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO25REF  0xf0000
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO18REF_OFFSET  0xc
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO18REF_MASK  0x7000
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO18REF  0x7000
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO11REF_OFFSET  0x8
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO11REF_MASK  0xf00
#define BGREF_TSTCTRL_1_CORE_CTRL_LDO11REF  0xf00
#define BGREF_TSTCTRL_1_CORE_CTRL_LDOCOREREF_OFFSET  0x3
#define BGREF_TSTCTRL_1_CORE_CTRL_LDOCOREREF_MASK  0xf8
#define BGREF_TSTCTRL_1_CORE_CTRL_LDOCOREREF  0xf8
#define BGREF_TSTCTRL_1_CORE_EN_TXNRX_REF_BUFFER_OFFSET  0x2
#define BGREF_TSTCTRL_1_CORE_EN_TXNRX_REF_BUFFER_MASK  0x4
#define BGREF_TSTCTRL_1_CORE_EN_TXNRX_REF_BUFFER  0x4
#define BGREF_TSTCTRL_1_CORE_EN_EL_BUFFER_OFFSET  0x1
#define BGREF_TSTCTRL_1_CORE_EN_EL_BUFFER_MASK  0x2
#define BGREF_TSTCTRL_1_CORE_EN_EL_BUFFER  0x2
#define BGREF_TSTCTRL_1_CORE_EN_TX_BUFFER_OFFSET  0x0
#define BGREF_TSTCTRL_1_CORE_EN_TX_BUFFER_MASK  0x1
#define BGREF_TSTCTRL_1_CORE_EN_TX_BUFFER  0x1
#define BGREF_TSTCTRL_2_CORE_CTRL_IBGTRIM_OFFSET  0xc
#define BGREF_TSTCTRL_2_CORE_CTRL_IBGTRIM_MASK  0xf000
#define BGREF_TSTCTRL_2_CORE_CTRL_IBGTRIM  0xf000
#define BGREF_TSTCTRL_2_CORE_IBG_CALID_TST_EN_OFFSET  0xb
#define BGREF_TSTCTRL_2_CORE_IBG_CALID_TST_EN_MASK  0x800
#define BGREF_TSTCTRL_2_CORE_IBG_CALID_TST_EN  0x800
#define BGREF_TSTCTRL_2_CORE_CTRL_VBGTRIM_OFFSET  0x4
#define BGREF_TSTCTRL_2_CORE_CTRL_VBGTRIM_MASK  0x3f0
#define BGREF_TSTCTRL_2_CORE_CTRL_VBGTRIM  0x3f0
#define BGREF_TSTCTRL_2_CORE_EN_VB1P23_BUFFER_OFFSET  0x3
#define BGREF_TSTCTRL_2_CORE_EN_VB1P23_BUFFER_MASK  0x8
#define BGREF_TSTCTRL_2_CORE_EN_VB1P23_BUFFER  0x8
#define BGREF_TSTCTRL_2_CORE_CTRL_VBATBRWNOUTREF_OFFSET  0x0
#define BGREF_TSTCTRL_2_CORE_CTRL_VBATBRWNOUTREF_MASK  0x7
#define BGREF_TSTCTRL_2_CORE_CTRL_VBATBRWNOUTREF  0x7
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE1_OFFSET  0x1e
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE1_MASK  0xc0000000
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE1  0xc0000000
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE2_OFFSET  0x1c
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE2_MASK  0x30000000
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE2  0x30000000
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE3_OFFSET  0x1b
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE3_MASK  0x8000000
#define POWERTOP_TSTCTRL_1_CORE_HFRCOSC_MODE3  0x8000000
#define POWERTOP_TSTCTRL_1_CORE_POWERTOP_TSTCTRL_1_CORE_26TO10_OFFSET  0xa
#define POWERTOP_TSTCTRL_1_CORE_POWERTOP_TSTCTRL_1_CORE_26TO10_MASK  0x7fffc00
#define POWERTOP_TSTCTRL_1_CORE_POWERTOP_TSTCTRL_1_CORE_26TO10  0x7fffc00
#define POWERTOP_TSTCTRL_1_CORE_AVS_MUX_CTRL_OFFSET  0x9
#define POWERTOP_TSTCTRL_1_CORE_AVS_MUX_CTRL_MASK  0x200
#define POWERTOP_TSTCTRL_1_CORE_AVS_MUX_CTRL  0x200
#define POWERTOP_TSTCTRL_1_CORE_AVS_ENABLE_OFFSET  0x8
#define POWERTOP_TSTCTRL_1_CORE_AVS_ENABLE_MASK  0x100
#define POWERTOP_TSTCTRL_1_CORE_AVS_ENABLE  0x100
#define POWERTOP_TSTCTRL_1_CORE_LDO25_MODE_OFFSET  0x6
#define POWERTOP_TSTCTRL_1_CORE_LDO25_MODE_MASK  0xc0
#define POWERTOP_TSTCTRL_1_CORE_LDO25_MODE  0xc0
#define POWERTOP_TSTCTRL_1_CORE_LDO11_MODE_OFFSET  0x4
#define POWERTOP_TSTCTRL_1_CORE_LDO11_MODE_MASK  0x30
#define POWERTOP_TSTCTRL_1_CORE_LDO11_MODE  0x30
#define POWERTOP_TSTCTRL_1_CORE_LDO18_MODE_OFFSET  0x2
#define POWERTOP_TSTCTRL_1_CORE_LDO18_MODE_MASK  0xc
#define POWERTOP_TSTCTRL_1_CORE_LDO18_MODE  0xc
#define POWERTOP_TSTCTRL_1_CORE_LDOCORE_MODE_OFFSET  0x0
#define POWERTOP_TSTCTRL_1_CORE_LDOCORE_MODE_MASK  0x3
#define POWERTOP_TSTCTRL_1_CORE_LDOCORE_MODE  0x3
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_31TO23_OFFSET  0x17
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_31TO23_MASK  0xff800000
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_31TO23  0xff800000
#define POWERTOP_TSTCTRL_2_CORE_PGOOD_TESTMUX_CTRL_OFFSET  0x16
#define POWERTOP_TSTCTRL_2_CORE_PGOOD_TESTMUX_CTRL_MASK  0x400000
#define POWERTOP_TSTCTRL_2_CORE_PGOOD_TESTMUX_CTRL  0x400000
#define POWERTOP_TSTCTRL_2_CORE_ENLDO11_DLY_CTRL_OFFSET  0x14
#define POWERTOP_TSTCTRL_2_CORE_ENLDO11_DLY_CTRL_MASK  0x300000
#define POWERTOP_TSTCTRL_2_CORE_ENLDO11_DLY_CTRL  0x300000
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_19TO18_OFFSET  0x12
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_19TO18_MASK  0xc0000
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_19TO18  0xc0000
#define POWERTOP_TSTCTRL_2_CORE_BRWNOUTCOMP_HYST_CTRL_OFFSET  0x10
#define POWERTOP_TSTCTRL_2_CORE_BRWNOUTCOMP_HYST_CTRL_MASK  0x30000
#define POWERTOP_TSTCTRL_2_CORE_BRWNOUTCOMP_HYST_CTRL  0x30000
#define POWERTOP_TSTCTRL_2_CORE_PVDD11_HYST_CTRL_OFFSET  0xe
#define POWERTOP_TSTCTRL_2_CORE_PVDD11_HYST_CTRL_MASK  0xc000
#define POWERTOP_TSTCTRL_2_CORE_PVDD11_HYST_CTRL  0xc000
#define POWERTOP_TSTCTRL_2_CORE_PVDD25_HYST_CTRL_OFFSET  0xc
#define POWERTOP_TSTCTRL_2_CORE_PVDD25_HYST_CTRL_MASK  0x3000
#define POWERTOP_TSTCTRL_2_CORE_PVDD25_HYST_CTRL  0x3000
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_11TO10_OFFSET  0xa
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_11TO10_MASK  0xc00
#define POWERTOP_TSTCTRL_2_CORE_POWERTOP_TSTCTRL_2_CORE_11TO10  0xc00
#define POWERTOP_TSTCTRL_2_CORE_FORCE_WAKE_BUTTONPRESS_OFFSET  0x9
#define POWERTOP_TSTCTRL_2_CORE_FORCE_WAKE_BUTTONPRESS_MASK  0x200
#define POWERTOP_TSTCTRL_2_CORE_FORCE_WAKE_BUTTONPRESS  0x200
#define POWERTOP_TSTCTRL_2_CORE_FORCE_BRNWNOUT_COMPOUT_OFFSET  0x8
#define POWERTOP_TSTCTRL_2_CORE_FORCE_BRNWNOUT_COMPOUT_MASK  0x100
#define POWERTOP_TSTCTRL_2_CORE_FORCE_BRNWNOUT_COMPOUT  0x100
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_DVDDIO_OFFSET  0x7
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_DVDDIO_MASK  0x80
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_DVDDIO  0x80
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD18_OFFSET  0x6
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD18_MASK  0x40
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD18  0x40
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD11_OFFSET  0x5
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD11_MASK  0x20
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD11  0x20
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD25_OFFSET  0x4
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD25_MASK  0x10
#define POWERTOP_TSTCTRL_2_CORE_FORCE_PGOOD_PVDD25  0x10
#define POWERTOP_TSTCTRL_2_CORE_EN_WAKEUP_COMP_OFFSET  0x3
#define POWERTOP_TSTCTRL_2_CORE_EN_WAKEUP_COMP_MASK  0x8
#define POWERTOP_TSTCTRL_2_CORE_EN_WAKEUP_COMP  0x8
#define POWERTOP_TSTCTRL_2_CORE_EN_BRWNOUT_COMP_OFFSET  0x2
#define POWERTOP_TSTCTRL_2_CORE_EN_BRWNOUT_COMP_MASK  0x4
#define POWERTOP_TSTCTRL_2_CORE_EN_BRWNOUT_COMP  0x4
#define POWERTOP_TSTCTRL_2_CORE_DIS_PGOOD_PVDD25_OFFSET  0x1
#define POWERTOP_TSTCTRL_2_CORE_DIS_PGOOD_PVDD25_MASK  0x2
#define POWERTOP_TSTCTRL_2_CORE_DIS_PGOOD_PVDD25  0x2
#define POWERTOP_TSTCTRL_2_CORE_DIS_PGOOD_PVDD11_OFFSET  0x0
#define POWERTOP_TSTCTRL_2_CORE_DIS_PGOOD_PVDD11_MASK  0x1
#define POWERTOP_TSTCTRL_2_CORE_DIS_PGOOD_PVDD11  0x1
#define POWERTOP_TSTCTRL_3_CORE_SEL_TMP_OFFSET  0x1f
#define POWERTOP_TSTCTRL_3_CORE_SEL_TMP_MASK  0x80000000
#define POWERTOP_TSTCTRL_3_CORE_SEL_TMP  0x80000000
#define POWERTOP_TSTCTRL_3_CORE_SEL_MB_OFFSET  0x1e
#define POWERTOP_TSTCTRL_3_CORE_SEL_MB_MASK  0x40000000
#define POWERTOP_TSTCTRL_3_CORE_SEL_MB  0x40000000
#define POWERTOP_TSTCTRL_3_CORE_POWERTOP_ANA_TESTMUX_OFFSET  0x19
#define POWERTOP_TSTCTRL_3_CORE_POWERTOP_ANA_TESTMUX_MASK  0xe000000
#define POWERTOP_TSTCTRL_3_CORE_POWERTOP_ANA_TESTMUX  0xe000000
#define POWERTOP_TSTCTRL_3_CORE_POWERTOP_DIG_TESTMUX_OFFSET  0x18
#define POWERTOP_TSTCTRL_3_CORE_POWERTOP_DIG_TESTMUX_MASK  0x1000000
#define POWERTOP_TSTCTRL_3_CORE_POWERTOP_DIG_TESTMUX  0x1000000
#define POWERTOP_TSTCTRL_3_CORE_LDO25_TSTCTRL_OFFSET  0x10
#define POWERTOP_TSTCTRL_3_CORE_LDO25_TSTCTRL_MASK  0xff0000
#define POWERTOP_TSTCTRL_3_CORE_LDO25_TSTCTRL  0xff0000
#define POWERTOP_TSTCTRL_3_CORE_LDO18_TESTCTRL_OFFSET  0x8
#define POWERTOP_TSTCTRL_3_CORE_LDO18_TESTCTRL_MASK  0xff00
#define POWERTOP_TSTCTRL_3_CORE_LDO18_TESTCTRL  0xff00
#define POWERTOP_TSTCTRL_3_CORE_LDO11_TSTCTRL_OFFSET  0x4
#define POWERTOP_TSTCTRL_3_CORE_LDO11_TSTCTRL_MASK  0xf0
#define POWERTOP_TSTCTRL_3_CORE_LDO11_TSTCTRL  0xf0
#define POWERTOP_TSTCTRL_3_CORE_LDOCORE_TSTCRTL_OFFSET  0x0
#define POWERTOP_TSTCTRL_3_CORE_LDOCORE_TSTCRTL_MASK  0xf
#define POWERTOP_TSTCTRL_3_CORE_LDOCORE_TSTCRTL  0xf
#define MADC_TSTCTRL_1_CORE_DIGITALTESTMUX_OFFSET  0x14
#define MADC_TSTCTRL_1_CORE_DIGITALTESTMUX_MASK  0x300000
#define MADC_TSTCTRL_1_CORE_DIGITALTESTMUX  0x300000
#define MADC_TSTCTRL_1_CORE_COMPARATOR_POLARITY_FLIP_OFFSET  0x13
#define MADC_TSTCTRL_1_CORE_COMPARATOR_POLARITY_FLIP_MASK  0x80000
#define MADC_TSTCTRL_1_CORE_COMPARATOR_POLARITY_FLIP  0x80000
#define MADC_TSTCTRL_1_CORE_COMPARATOR_HALF_DELAY_OFFSET  0x12
#define MADC_TSTCTRL_1_CORE_COMPARATOR_HALF_DELAY_MASK  0x40000
#define MADC_TSTCTRL_1_CORE_COMPARATOR_HALF_DELAY  0x40000
#define MADC_TSTCTRL_1_CORE_ANATEST_MUXCTRL_OFFSET  0x10
#define MADC_TSTCTRL_1_CORE_ANATEST_MUXCTRL_MASK  0x30000
#define MADC_TSTCTRL_1_CORE_ANATEST_MUXCTRL  0x30000
#define MADC_TSTCTRL_1_CORE_RTHERM_RESTRIM_DAC_OFFSET  0x8
#define MADC_TSTCTRL_1_CORE_RTHERM_RESTRIM_DAC_MASK  0x7f00
#define MADC_TSTCTRL_1_CORE_RTHERM_RESTRIM_DAC  0x7f00
#define MADC_TSTCTRL_1_CORE_EN_VTHERM_DAC_OFFSET  0x7
#define MADC_TSTCTRL_1_CORE_EN_VTHERM_DAC_MASK  0x80
#define MADC_TSTCTRL_1_CORE_EN_VTHERM_DAC  0x80
#define MADC_TSTCTRL_1_CORE_RTHERM_VALUE_SEL_OFFSET  0x4
#define MADC_TSTCTRL_1_CORE_RTHERM_VALUE_SEL_MASK  0x70
#define MADC_TSTCTRL_1_CORE_RTHERM_VALUE_SEL  0x70
#define MADC_TSTCTRL_1_CORE_MADC_REFERENCE_SEL_OVERRIDE_OFFSET  0x2
#define MADC_TSTCTRL_1_CORE_MADC_REFERENCE_SEL_OVERRIDE_MASK  0x4
#define MADC_TSTCTRL_1_CORE_MADC_REFERENCE_SEL_OVERRIDE  0x4
#define MADC_TSTCTRL_1_CORE_MADC_IN_SEL_OFFSET  0x0
#define MADC_TSTCTRL_1_CORE_MADC_IN_SEL_MASK  0x3
#define MADC_TSTCTRL_1_CORE_MADC_IN_SEL  0x3
#define MADC_TSTCTRL_2_CORE_MADC_TSTCTRL_2_CORE_OFFSET  0x0
#define MADC_TSTCTRL_2_CORE_MADC_TSTCTRL_2_CORE_MASK  0xffffffff
#define MADC_TSTCTRL_2_CORE_MADC_TSTCTRL_2_CORE  0xffffffff
#define TX_RCCAL_OUT_CORE_TX_RCCAL_OUT_VALID_CORE_OFFSET  0x5
#define TX_RCCAL_OUT_CORE_TX_RCCAL_OUT_VALID_CORE_MASK  0x20
#define TX_RCCAL_OUT_CORE_TX_RCCAL_OUT_VALID_CORE  0x20
#define TX_RCCAL_OUT_CORE_TX_RCCAL_OUT_CORE_OFFSET  0x0
#define TX_RCCAL_OUT_CORE_TX_RCCAL_OUT_CORE_MASK  0x1f
#define TX_RCCAL_OUT_CORE_TX_RCCAL_OUT_CORE  0x1f
#define LPRCOSC_FSEL_CORE_LPRCOSC_FSEL_CORE_OFFSET  0x0
#define LPRCOSC_FSEL_CORE_LPRCOSC_FSEL_CORE_MASK  0x1
#define LPRCOSC_FSEL_CORE_LPRCOSC_FSEL_CORE  0x1
#define RX_MIC_RC_TUNING_RX_MIC3_RC_TUNING_CORE_OFFSET  0x18
#define RX_MIC_RC_TUNING_RX_MIC3_RC_TUNING_CORE_MASK  0x1f000000
#define RX_MIC_RC_TUNING_RX_MIC3_RC_TUNING_CORE  0x1f000000
#define RX_MIC_RC_TUNING_RX_MIC2_RC_TUNING_CORE_OFFSET  0x10
#define RX_MIC_RC_TUNING_RX_MIC2_RC_TUNING_CORE_MASK  0x1f0000
#define RX_MIC_RC_TUNING_RX_MIC2_RC_TUNING_CORE  0x1f0000
#define RX_MIC_RC_TUNING_RX_MIC1_RC_TUNING_CORE_OFFSET  0x8
#define RX_MIC_RC_TUNING_RX_MIC1_RC_TUNING_CORE_MASK  0x1f00
#define RX_MIC_RC_TUNING_RX_MIC1_RC_TUNING_CORE  0x1f00
#define RX_MIC_RC_TUNING_RX_MIC0_RC_TUNING_CORE_OFFSET  0x0
#define RX_MIC_RC_TUNING_RX_MIC0_RC_TUNING_CORE_MASK  0x1f
#define RX_MIC_RC_TUNING_RX_MIC0_RC_TUNING_CORE  0x1f
#define RX_MICBIAS_SET_RX_MIC4_RC_TUNING_CORE_OFFSET  0xc
#define RX_MICBIAS_SET_RX_MIC4_RC_TUNING_CORE_MASK  0x1f000
#define RX_MICBIAS_SET_RX_MIC4_RC_TUNING_CORE  0x1f000
#define RX_MICBIAS_SET_RX_MICBIAS2_SET_CORE_OFFSET  0x8
#define RX_MICBIAS_SET_RX_MICBIAS2_SET_CORE_MASK  0xf00
#define RX_MICBIAS_SET_RX_MICBIAS2_SET_CORE  0xf00
#define RX_MICBIAS_SET_RX_MICBIAS1_SET_CORE_OFFSET  0x4
#define RX_MICBIAS_SET_RX_MICBIAS1_SET_CORE_MASK  0xf0
#define RX_MICBIAS_SET_RX_MICBIAS1_SET_CORE  0xf0
#define RX_MICBIAS_SET_RX_MICBIAS0_SET_CORE_OFFSET  0x0
#define RX_MICBIAS_SET_RX_MICBIAS0_SET_CORE_MASK  0xf
#define RX_MICBIAS_SET_RX_MICBIAS0_SET_CORE  0xf
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS0_OUTSW_EN_CORE_OFFSET  0x11
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS0_OUTSW_EN_CORE_MASK  0x20000
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS0_OUTSW_EN_CORE  0x20000
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS1_OUTSW_EN_CORE_OFFSET  0x10
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS1_OUTSW_EN_CORE_MASK  0x10000
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS1_OUTSW_EN_CORE  0x10000
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS2_OUTSW_EN_CORE_OFFSET  0xf
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS2_OUTSW_EN_CORE_MASK  0x8000
#define RX_MICBIAS_PDB_HP_CTRL_RX_MICBIAS2_OUTSW_EN_CORE  0x8000
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS0_CORE_OFFSET  0xe
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS0_CORE_MASK  0x4000
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS0_CORE  0x4000
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS1_CORE_OFFSET  0xd
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS1_CORE_MASK  0x2000
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS1_CORE  0x2000
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS2_CORE_OFFSET  0xc
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS2_CORE_MASK  0x1000
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MICBIAS2_CORE  0x1000
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC0_CORE_OFFSET  0xb
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC0_CORE_MASK  0x800
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC0_CORE  0x800
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC1_CORE_OFFSET  0xa
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC1_CORE_MASK  0x400
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC1_CORE  0x400
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC2_CORE_OFFSET  0x9
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC2_CORE_MASK  0x200
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC2_CORE  0x200
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC3_CORE_OFFSET  0x8
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC3_CORE_MASK  0x100
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC3_CORE  0x100
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC4_CORE_OFFSET  0x7
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC4_CORE_MASK  0x80
#define RX_MICBIAS_PDB_HP_CTRL_RX_EN_HP_MODE_MIC4_CORE  0x80
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC0_CORE_OFFSET  0x6
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC0_CORE_MASK  0x40
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC0_CORE  0x40
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC1_CORE_OFFSET  0x5
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC1_CORE_MASK  0x20
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC1_CORE  0x20
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC2_CORE_OFFSET  0x4
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC2_CORE_MASK  0x10
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC2_CORE  0x10
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC3_CORE_OFFSET  0x3
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC3_CORE_MASK  0x8
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC3_CORE  0x8
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC4_CORE_OFFSET  0x2
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC4_CORE_MASK  0x4
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_MIC4_CORE  0x4
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_VAD_CORE_OFFSET  0x1
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_VAD_CORE_MASK  0x2
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_VAD_CORE  0x2
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_REF_CORE_OFFSET  0x0
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_REF_CORE_MASK  0x1
#define RX_MICBIAS_PDB_HP_CTRL_RX_PDB_REF_CORE  0x1
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_OFFSET  0x1f
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_MASK  0x80000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25  0x80000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_OFFSET  0x1d
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_MASK  0x60000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA  0x60000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_OFFSET  0x1b
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_MASK  0x18000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH  0x18000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_OFFSET  0x19
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_MASK  0x6000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ITRIM_OP1  0x6000000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_OFFSET  0x17
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_MASK  0x1800000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS  0x1800000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT3_BIAS_OFFSET  0x15
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT3_BIAS_MASK  0x600000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT3_BIAS  0x600000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT2_BIAS_OFFSET  0x13
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT2_BIAS_MASK  0x180000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT2_BIAS  0x180000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT1_BIAS_OFFSET  0x11
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT1_BIAS_MASK  0x60000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_INT1_BIAS  0x60000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_CMP_BIAS_OFFSET  0xf
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_CMP_BIAS_MASK  0x18000
#define RX_MIC0_TSTCTRL_1_CORE_CTRL_CMP_BIAS  0x18000
#define RX_MIC0_TSTCTRL_1_CORE_TST_NW_AVDD_25_OFFSET  0xe
#define RX_MIC0_TSTCTRL_1_CORE_TST_NW_AVDD_25_MASK  0x4000
#define RX_MIC0_TSTCTRL_1_CORE_TST_NW_AVDD_25  0x4000
#define RX_MIC0_TSTCTRL_1_CORE_TST_NW_AVSS_25_OFFSET  0xd
#define RX_MIC0_TSTCTRL_1_CORE_TST_NW_AVSS_25_MASK  0x2000
#define RX_MIC0_TSTCTRL_1_CORE_TST_NW_AVSS_25  0x2000
#define RX_MIC0_TSTCTRL_1_CORE_TST_FSTP_25_OFFSET  0xc
#define RX_MIC0_TSTCTRL_1_CORE_TST_FSTP_25_MASK  0x1000
#define RX_MIC0_TSTCTRL_1_CORE_TST_FSTP_25  0x1000
#define RX_MIC0_TSTCTRL_1_CORE_PGA_RC_OFFSET  0x9
#define RX_MIC0_TSTCTRL_1_CORE_PGA_RC_MASK  0xe00
#define RX_MIC0_TSTCTRL_1_CORE_PGA_RC  0xe00
#define RX_MIC0_TSTCTRL_1_CORE_PGA_CC_OFFSET  0x6
#define RX_MIC0_TSTCTRL_1_CORE_PGA_CC_MASK  0x1c0
#define RX_MIC0_TSTCTRL_1_CORE_PGA_CC  0x1c0
#define RX_MIC0_TSTCTRL_1_CORE_IQUI_MIC_OFFSET  0x3
#define RX_MIC0_TSTCTRL_1_CORE_IQUI_MIC_MASK  0x38
#define RX_MIC0_TSTCTRL_1_CORE_IQUI_MIC  0x38
#define RX_MIC0_TSTCTRL_1_CORE_IADJ_MIC_OFFSET  0x0
#define RX_MIC0_TSTCTRL_1_CORE_IADJ_MIC_MASK  0x7
#define RX_MIC0_TSTCTRL_1_CORE_IADJ_MIC  0x7
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_OFFSET  0x1f
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_MASK  0x80000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25  0x80000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_OFFSET  0x1d
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_MASK  0x60000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA  0x60000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_OFFSET  0x1b
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_MASK  0x18000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH  0x18000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_OFFSET  0x19
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_MASK  0x6000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ITRIM_OP1  0x6000000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_OFFSET  0x17
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_MASK  0x1800000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS  0x1800000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT3_BIAS_OFFSET  0x15
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT3_BIAS_MASK  0x600000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT3_BIAS  0x600000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT2_BIAS_OFFSET  0x13
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT2_BIAS_MASK  0x180000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT2_BIAS  0x180000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT1_BIAS_OFFSET  0x11
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT1_BIAS_MASK  0x60000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_INT1_BIAS  0x60000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_CMP_BIAS_OFFSET  0xf
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_CMP_BIAS_MASK  0x18000
#define RX_MIC1_TSTCTRL_1_CORE_CTRL_CMP_BIAS  0x18000
#define RX_MIC1_TSTCTRL_1_CORE_TST_NW_AVDD_25_OFFSET  0xe
#define RX_MIC1_TSTCTRL_1_CORE_TST_NW_AVDD_25_MASK  0x4000
#define RX_MIC1_TSTCTRL_1_CORE_TST_NW_AVDD_25  0x4000
#define RX_MIC1_TSTCTRL_1_CORE_TST_NW_AVSS_25_OFFSET  0xd
#define RX_MIC1_TSTCTRL_1_CORE_TST_NW_AVSS_25_MASK  0x2000
#define RX_MIC1_TSTCTRL_1_CORE_TST_NW_AVSS_25  0x2000
#define RX_MIC1_TSTCTRL_1_CORE_TST_FSTP_25_OFFSET  0xc
#define RX_MIC1_TSTCTRL_1_CORE_TST_FSTP_25_MASK  0x1000
#define RX_MIC1_TSTCTRL_1_CORE_TST_FSTP_25  0x1000
#define RX_MIC1_TSTCTRL_1_CORE_PGA_RC_OFFSET  0x9
#define RX_MIC1_TSTCTRL_1_CORE_PGA_RC_MASK  0xe00
#define RX_MIC1_TSTCTRL_1_CORE_PGA_RC  0xe00
#define RX_MIC1_TSTCTRL_1_CORE_PGA_CC_OFFSET  0x6
#define RX_MIC1_TSTCTRL_1_CORE_PGA_CC_MASK  0x1c0
#define RX_MIC1_TSTCTRL_1_CORE_PGA_CC  0x1c0
#define RX_MIC1_TSTCTRL_1_CORE_IQUI_MIC_OFFSET  0x3
#define RX_MIC1_TSTCTRL_1_CORE_IQUI_MIC_MASK  0x38
#define RX_MIC1_TSTCTRL_1_CORE_IQUI_MIC  0x38
#define RX_MIC1_TSTCTRL_1_CORE_IADJ_MIC_OFFSET  0x0
#define RX_MIC1_TSTCTRL_1_CORE_IADJ_MIC_MASK  0x7
#define RX_MIC1_TSTCTRL_1_CORE_IADJ_MIC  0x7
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_OFFSET  0x1f
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_MASK  0x80000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25  0x80000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_OFFSET  0x1d
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_MASK  0x60000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA  0x60000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_OFFSET  0x1b
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_MASK  0x18000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH  0x18000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_OFFSET  0x19
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_MASK  0x6000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ITRIM_OP1  0x6000000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_OFFSET  0x17
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_MASK  0x1800000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS  0x1800000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT3_BIAS_OFFSET  0x15
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT3_BIAS_MASK  0x600000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT3_BIAS  0x600000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT2_BIAS_OFFSET  0x13
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT2_BIAS_MASK  0x180000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT2_BIAS  0x180000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT1_BIAS_OFFSET  0x11
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT1_BIAS_MASK  0x60000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_INT1_BIAS  0x60000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_CMP_BIAS_OFFSET  0xf
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_CMP_BIAS_MASK  0x18000
#define RX_MIC2_TSTCTRL_1_CORE_CTRL_CMP_BIAS  0x18000
#define RX_MIC2_TSTCTRL_1_CORE_TST_NW_AVDD_25_OFFSET  0xe
#define RX_MIC2_TSTCTRL_1_CORE_TST_NW_AVDD_25_MASK  0x4000
#define RX_MIC2_TSTCTRL_1_CORE_TST_NW_AVDD_25  0x4000
#define RX_MIC2_TSTCTRL_1_CORE_TST_NW_AVSS_25_OFFSET  0xd
#define RX_MIC2_TSTCTRL_1_CORE_TST_NW_AVSS_25_MASK  0x2000
#define RX_MIC2_TSTCTRL_1_CORE_TST_NW_AVSS_25  0x2000
#define RX_MIC2_TSTCTRL_1_CORE_TST_FSTP_25_OFFSET  0xc
#define RX_MIC2_TSTCTRL_1_CORE_TST_FSTP_25_MASK  0x1000
#define RX_MIC2_TSTCTRL_1_CORE_TST_FSTP_25  0x1000
#define RX_MIC2_TSTCTRL_1_CORE_PGA_RC_OFFSET  0x9
#define RX_MIC2_TSTCTRL_1_CORE_PGA_RC_MASK  0xe00
#define RX_MIC2_TSTCTRL_1_CORE_PGA_RC  0xe00
#define RX_MIC2_TSTCTRL_1_CORE_PGA_CC_OFFSET  0x6
#define RX_MIC2_TSTCTRL_1_CORE_PGA_CC_MASK  0x1c0
#define RX_MIC2_TSTCTRL_1_CORE_PGA_CC  0x1c0
#define RX_MIC2_TSTCTRL_1_CORE_IQUI_MIC_OFFSET  0x3
#define RX_MIC2_TSTCTRL_1_CORE_IQUI_MIC_MASK  0x38
#define RX_MIC2_TSTCTRL_1_CORE_IQUI_MIC  0x38
#define RX_MIC2_TSTCTRL_1_CORE_IADJ_MIC_OFFSET  0x0
#define RX_MIC2_TSTCTRL_1_CORE_IADJ_MIC_MASK  0x7
#define RX_MIC2_TSTCTRL_1_CORE_IADJ_MIC  0x7
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_OFFSET  0x1f
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_MASK  0x80000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25  0x80000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_OFFSET  0x1d
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_MASK  0x60000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA  0x60000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_OFFSET  0x1b
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH_MASK  0x18000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_IDAC_DCLKWIDTH  0x18000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_OFFSET  0x19
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_MASK  0x6000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ITRIM_OP1  0x6000000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_OFFSET  0x17
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_MASK  0x1800000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS  0x1800000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT3_BIAS_OFFSET  0x15
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT3_BIAS_MASK  0x600000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT3_BIAS  0x600000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT2_BIAS_OFFSET  0x13
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT2_BIAS_MASK  0x180000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT2_BIAS  0x180000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT1_BIAS_OFFSET  0x11
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT1_BIAS_MASK  0x60000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_INT1_BIAS  0x60000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_CMP_BIAS_OFFSET  0xf
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_CMP_BIAS_MASK  0x18000
#define RX_MIC3_TSTCTRL_1_CORE_CTRL_CMP_BIAS  0x18000
#define RX_MIC3_TSTCTRL_1_CORE_TST_NW_AVDD_25_OFFSET  0xe
#define RX_MIC3_TSTCTRL_1_CORE_TST_NW_AVDD_25_MASK  0x4000
#define RX_MIC3_TSTCTRL_1_CORE_TST_NW_AVDD_25  0x4000
#define RX_MIC3_TSTCTRL_1_CORE_TST_NW_AVSS_25_OFFSET  0xd
#define RX_MIC3_TSTCTRL_1_CORE_TST_NW_AVSS_25_MASK  0x2000
#define RX_MIC3_TSTCTRL_1_CORE_TST_NW_AVSS_25  0x2000
#define RX_MIC3_TSTCTRL_1_CORE_TST_FSTP_25_OFFSET  0xc
#define RX_MIC3_TSTCTRL_1_CORE_TST_FSTP_25_MASK  0x1000
#define RX_MIC3_TSTCTRL_1_CORE_TST_FSTP_25  0x1000
#define RX_MIC3_TSTCTRL_1_CORE_PGA_RC_OFFSET  0x9
#define RX_MIC3_TSTCTRL_1_CORE_PGA_RC_MASK  0xe00
#define RX_MIC3_TSTCTRL_1_CORE_PGA_RC  0xe00
#define RX_MIC3_TSTCTRL_1_CORE_PGA_CC_OFFSET  0x6
#define RX_MIC3_TSTCTRL_1_CORE_PGA_CC_MASK  0x1c0
#define RX_MIC3_TSTCTRL_1_CORE_PGA_CC  0x1c0
#define RX_MIC3_TSTCTRL_1_CORE_IQUI_MIC_OFFSET  0x3
#define RX_MIC3_TSTCTRL_1_CORE_IQUI_MIC_MASK  0x38
#define RX_MIC3_TSTCTRL_1_CORE_IQUI_MIC  0x38
#define RX_MIC3_TSTCTRL_1_CORE_IADJ_MIC_OFFSET  0x0
#define RX_MIC3_TSTCTRL_1_CORE_IADJ_MIC_MASK  0x7
#define RX_MIC3_TSTCTRL_1_CORE_IADJ_MIC  0x7
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_OFFSET  0x1f
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25_MASK  0x80000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_OP1_2STAGE_25  0x80000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_OFFSET  0x1d
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA_MASK  0x60000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ITRIM_ZERO_OA  0x60000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_IDAC_DCLWIDTH_OFFSET  0x1b
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_IDAC_DCLWIDTH_MASK  0x18000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_IDAC_DCLWIDTH  0x18000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_OFFSET  0x19
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ITRIM_OP1_MASK  0x6000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ITRIM_OP1  0x6000000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_OFFSET  0x17
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS_MASK  0x1800000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_ZERO_OP_BIAS  0x1800000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT3_BIAS_OFFSET  0x15
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT3_BIAS_MASK  0x600000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT3_BIAS  0x600000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT2_BIAS_OFFSET  0x13
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT2_BIAS_MASK  0x180000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT2_BIAS  0x180000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT1_BIAS_OFFSET  0x11
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT1_BIAS_MASK  0x60000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_INT1_BIAS  0x60000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_CMP_BIAS_OFFSET  0xf
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_CMP_BIAS_MASK  0x18000
#define RX_MIC4_TSTCTRL_1_CORE_CTRL_CMP_BIAS  0x18000
#define RX_MIC4_TSTCTRL_1_CORE_TST_NW_AVDD_25_OFFSET  0xe
#define RX_MIC4_TSTCTRL_1_CORE_TST_NW_AVDD_25_MASK  0x4000
#define RX_MIC4_TSTCTRL_1_CORE_TST_NW_AVDD_25  0x4000
#define RX_MIC4_TSTCTRL_1_CORE_TST_NW_AVSS_25_OFFSET  0xd
#define RX_MIC4_TSTCTRL_1_CORE_TST_NW_AVSS_25_MASK  0x2000
#define RX_MIC4_TSTCTRL_1_CORE_TST_NW_AVSS_25  0x2000
#define RX_MIC4_TSTCTRL_1_CORE_TST_FSTP_25_OFFSET  0xc
#define RX_MIC4_TSTCTRL_1_CORE_TST_FSTP_25_MASK  0x1000
#define RX_MIC4_TSTCTRL_1_CORE_TST_FSTP_25  0x1000
#define RX_MIC4_TSTCTRL_1_CORE_PGA_RC_OFFSET  0x9
#define RX_MIC4_TSTCTRL_1_CORE_PGA_RC_MASK  0xe00
#define RX_MIC4_TSTCTRL_1_CORE_PGA_RC  0xe00
#define RX_MIC4_TSTCTRL_1_CORE_PGA_CC_OFFSET  0x6
#define RX_MIC4_TSTCTRL_1_CORE_PGA_CC_MASK  0x1c0
#define RX_MIC4_TSTCTRL_1_CORE_PGA_CC  0x1c0
#define RX_MIC4_TSTCTRL_1_CORE_IQUI_MIC_OFFSET  0x3
#define RX_MIC4_TSTCTRL_1_CORE_IQUI_MIC_MASK  0x38
#define RX_MIC4_TSTCTRL_1_CORE_IQUI_MIC  0x38
#define RX_MIC4_TSTCTRL_1_CORE_IADJ_MIC_OFFSET  0x0
#define RX_MIC4_TSTCTRL_1_CORE_IADJ_MIC_MASK  0x7
#define RX_MIC4_TSTCTRL_1_CORE_IADJ_MIC  0x7
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_OFFSET  0x1f
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_MASK  0x80000000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25  0x80000000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_OFFSET  0x1e
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_MASK  0x40000000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25  0x40000000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_OFFSET  0x1d
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_MASK  0x20000000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25  0x20000000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_OFFSET  0x1c
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_MASK  0x10000000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_TEST_25  0x10000000
#define RX_MIC0_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_OFFSET  0x1b
#define RX_MIC0_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_MASK  0x8000000
#define RX_MIC0_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA  0x8000000
#define RX_MIC0_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_OFFSET  0x1a
#define RX_MIC0_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_MASK  0x4000000
#define RX_MIC0_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC  0x4000000
#define RX_MIC0_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_OFFSET  0x19
#define RX_MIC0_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_MASK  0x2000000
#define RX_MIC0_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25  0x2000000
#define RX_MIC0_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_OFFSET  0x18
#define RX_MIC0_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_MASK  0x1000000
#define RX_MIC0_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25  0x1000000
#define RX_MIC0_TSTCTRL_2_CORE_EN_HP_MODE_OFFSET  0x17
#define RX_MIC0_TSTCTRL_2_CORE_EN_HP_MODE_MASK  0x800000
#define RX_MIC0_TSTCTRL_2_CORE_EN_HP_MODE  0x800000
#define RX_MIC0_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_OFFSET  0x16
#define RX_MIC0_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_MASK  0x400000
#define RX_MIC0_TSTCTRL_2_CORE_PGA_NBIAS_SELECT  0x400000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_OFFSET  0x15
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_MASK  0x200000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25  0x200000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_OFFSET  0x14
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_MASK  0x100000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25  0x100000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_OFFSET  0x13
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_MASK  0x80000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25  0x80000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_OFFSET  0xf
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_MASK  0x8000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11  0x8000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_OFFSET  0xe
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_MASK  0x4000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11  0x4000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_OFFSET  0xd
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_MASK  0x2000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11  0x2000
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_ED_11_OFFSET  0xb
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_ED_11_MASK  0x800
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_ED_11  0x800
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_OFFSET  0xa
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_MASK  0x400
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11  0x400
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SW_SAT_OFFSET  0x9
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SW_SAT_MASK  0x200
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SW_SAT  0x200
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_OFFSET  0x8
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_MASK  0x100
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT  0x100
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_SPEED_OFFSET  0x5
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_SPEED_MASK  0xe0
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_SPEED  0xe0
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_OFFSET  0x4
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_MASK  0x10
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS  0x10
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_OFFSET  0x2
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_MASK  0xc
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ITRIM_OP3  0xc
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_OFFSET  0x0
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_MASK  0x3
#define RX_MIC0_TSTCTRL_2_CORE_CTRL_ITRIM_OP2  0x3
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_OFFSET  0x1f
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_MASK  0x80000000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25  0x80000000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_OFFSET  0x1e
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_MASK  0x40000000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25  0x40000000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_OFFSET  0x1d
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_MASK  0x20000000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25  0x20000000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_OFFSET  0x1c
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_MASK  0x10000000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_TEST_25  0x10000000
#define RX_MIC1_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_OFFSET  0x1b
#define RX_MIC1_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_MASK  0x8000000
#define RX_MIC1_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA  0x8000000
#define RX_MIC1_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_OFFSET  0x1a
#define RX_MIC1_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_MASK  0x4000000
#define RX_MIC1_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC  0x4000000
#define RX_MIC1_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_OFFSET  0x19
#define RX_MIC1_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_MASK  0x2000000
#define RX_MIC1_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25  0x2000000
#define RX_MIC1_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_OFFSET  0x18
#define RX_MIC1_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_MASK  0x1000000
#define RX_MIC1_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25  0x1000000
#define RX_MIC1_TSTCTRL_2_CORE_EN_HP_MODE_OFFSET  0x17
#define RX_MIC1_TSTCTRL_2_CORE_EN_HP_MODE_MASK  0x800000
#define RX_MIC1_TSTCTRL_2_CORE_EN_HP_MODE  0x800000
#define RX_MIC1_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_OFFSET  0x16
#define RX_MIC1_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_MASK  0x400000
#define RX_MIC1_TSTCTRL_2_CORE_PGA_NBIAS_SELECT  0x400000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_OFFSET  0x15
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_MASK  0x200000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25  0x200000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_OFFSET  0x14
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_MASK  0x100000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25  0x100000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_OFFSET  0x13
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_MASK  0x80000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25  0x80000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_OFFSET  0xf
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_MASK  0x8000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11  0x8000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_OFFSET  0xe
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_MASK  0x4000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11  0x4000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_OFFSET  0xd
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_MASK  0x2000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11  0x2000
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_ED_11_OFFSET  0xb
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_ED_11_MASK  0x800
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_ED_11  0x800
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_OFFSET  0xa
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_MASK  0x400
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11  0x400
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SW_SAT_OFFSET  0x9
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SW_SAT_MASK  0x200
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SW_SAT  0x200
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_OFFSET  0x8
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_MASK  0x100
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT  0x100
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_SPEED_OFFSET  0x5
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_SPEED_MASK  0xe0
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_SPEED  0xe0
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_OFFSET  0x4
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_MASK  0x10
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS  0x10
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_OFFSET  0x2
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_MASK  0xc
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ITRIM_OP3  0xc
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_OFFSET  0x0
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_MASK  0x3
#define RX_MIC1_TSTCTRL_2_CORE_CTRL_ITRIM_OP2  0x3
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_OFFSET  0x1f
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_MASK  0x80000000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25  0x80000000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_OFFSET  0x1e
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_MASK  0x40000000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25  0x40000000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_OFFSET  0x1d
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_MASK  0x20000000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25  0x20000000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_OFFSET  0x1c
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_MASK  0x10000000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_TEST_25  0x10000000
#define RX_MIC2_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_OFFSET  0x1b
#define RX_MIC2_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_MASK  0x8000000
#define RX_MIC2_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA  0x8000000
#define RX_MIC2_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_OFFSET  0x1a
#define RX_MIC2_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_MASK  0x4000000
#define RX_MIC2_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC  0x4000000
#define RX_MIC2_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_OFFSET  0x19
#define RX_MIC2_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_MASK  0x2000000
#define RX_MIC2_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25  0x2000000
#define RX_MIC2_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_OFFSET  0x18
#define RX_MIC2_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_MASK  0x1000000
#define RX_MIC2_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25  0x1000000
#define RX_MIC2_TSTCTRL_2_CORE_EN_HP_MODE_OFFSET  0x17
#define RX_MIC2_TSTCTRL_2_CORE_EN_HP_MODE_MASK  0x800000
#define RX_MIC2_TSTCTRL_2_CORE_EN_HP_MODE  0x800000
#define RX_MIC2_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_OFFSET  0x16
#define RX_MIC2_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_MASK  0x400000
#define RX_MIC2_TSTCTRL_2_CORE_PGA_NBIAS_SELECT  0x400000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_OFFSET  0x15
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_MASK  0x200000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25  0x200000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_OFFSET  0x14
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_MASK  0x100000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25  0x100000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_OFFSET  0x13
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_MASK  0x80000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25  0x80000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_OFFSET  0xf
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_MASK  0x8000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11  0x8000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_OFFSET  0xe
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_MASK  0x4000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11  0x4000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_OFFSET  0xd
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_MASK  0x2000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11  0x2000
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_ED_11_OFFSET  0xb
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_ED_11_MASK  0x800
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_ED_11  0x800
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_OFFSET  0xa
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_MASK  0x400
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11  0x400
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SW_SAT_OFFSET  0x9
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SW_SAT_MASK  0x200
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SW_SAT  0x200
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_OFFSET  0x8
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_MASK  0x100
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT  0x100
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_SPEED_OFFSET  0x5
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_SPEED_MASK  0xe0
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_SPEED  0xe0
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_OFFSET  0x4
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_MASK  0x10
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS  0x10
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_OFFSET  0x2
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_MASK  0xc
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ITRIM_OP3  0xc
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_OFFSET  0x0
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_MASK  0x3
#define RX_MIC2_TSTCTRL_2_CORE_CTRL_ITRIM_OP2  0x3
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_OFFSET  0x1f
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_MASK  0x80000000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25  0x80000000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_OFFSET  0x1e
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_MASK  0x40000000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25  0x40000000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_OFFSET  0x1d
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_MASK  0x20000000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25  0x20000000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_OFFSET  0x1c
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_MASK  0x10000000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_TEST_25  0x10000000
#define RX_MIC3_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_OFFSET  0x1b
#define RX_MIC3_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_MASK  0x8000000
#define RX_MIC3_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA  0x8000000
#define RX_MIC3_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_OFFSET  0x1a
#define RX_MIC3_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_MASK  0x4000000
#define RX_MIC3_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC  0x4000000
#define RX_MIC3_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_OFFSET  0x19
#define RX_MIC3_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_MASK  0x2000000
#define RX_MIC3_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25  0x2000000
#define RX_MIC3_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_OFFSET  0x18
#define RX_MIC3_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_MASK  0x1000000
#define RX_MIC3_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25  0x1000000
#define RX_MIC3_TSTCTRL_2_CORE_EN_HP_MODE_OFFSET  0x17
#define RX_MIC3_TSTCTRL_2_CORE_EN_HP_MODE_MASK  0x800000
#define RX_MIC3_TSTCTRL_2_CORE_EN_HP_MODE  0x800000
#define RX_MIC3_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_OFFSET  0x16
#define RX_MIC3_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_MASK  0x400000
#define RX_MIC3_TSTCTRL_2_CORE_PGA_NBIAS_SELECT  0x400000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_OFFSET  0x15
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_MASK  0x200000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25  0x200000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_OFFSET  0x14
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_MASK  0x100000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25  0x100000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_OFFSET  0x13
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_MASK  0x80000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25  0x80000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_OFFSET  0xf
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_MASK  0x8000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11  0x8000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_OFFSET  0xe
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_MASK  0x4000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11  0x4000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_OFFSET  0xd
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_MASK  0x2000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11  0x2000
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_ED_11_OFFSET  0xb
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_ED_11_MASK  0x800
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_ED_11  0x800
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_OFFSET  0xa
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_MASK  0x400
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11  0x400
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SW_SAT_OFFSET  0x9
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SW_SAT_MASK  0x200
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SW_SAT  0x200
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_OFFSET  0x8
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_MASK  0x100
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT  0x100
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_SPEED_OFFSET  0x5
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_SPEED_MASK  0xe0
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_SPEED  0xe0
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_OFFSET  0x4
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_MASK  0x10
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS  0x10
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_OFFSET  0x2
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_MASK  0xc
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ITRIM_OP3  0xc
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_OFFSET  0x0
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_MASK  0x3
#define RX_MIC3_TSTCTRL_2_CORE_CTRL_ITRIM_OP2  0x3
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_OFFSET  0x1f
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25_MASK  0x80000000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_RES_PGA_25  0x80000000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_OFFSET  0x1e
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25_MASK  0x40000000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_CTSD_TEST_25  0x40000000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_OFFSET  0x1d
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25_MASK  0x20000000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_LOOP_TEST_25  0x20000000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_OFFSET  0x1c
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_TEST_25_MASK  0x10000000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_TEST_25  0x10000000
#define RX_MIC4_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_OFFSET  0x1b
#define RX_MIC4_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA_MASK  0x8000000
#define RX_MIC4_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_PGA  0x8000000
#define RX_MIC4_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_OFFSET  0x1a
#define RX_MIC4_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC_MASK  0x4000000
#define RX_MIC4_TSTCTRL_2_CORE_LOCAL_DISABLE_MIC_ADC  0x4000000
#define RX_MIC4_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_OFFSET  0x19
#define RX_MIC4_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25_MASK  0x2000000
#define RX_MIC4_TSTCTRL_2_CORE_PGA_INPUT_SW_EN_25  0x2000000
#define RX_MIC4_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_OFFSET  0x18
#define RX_MIC4_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25_MASK  0x1000000
#define RX_MIC4_TSTCTRL_2_CORE_PGA_ORMUTE_EN_25  0x1000000
#define RX_MIC4_TSTCTRL_2_CORE_EN_HP_MODE_OFFSET  0x17
#define RX_MIC4_TSTCTRL_2_CORE_EN_HP_MODE_MASK  0x800000
#define RX_MIC4_TSTCTRL_2_CORE_EN_HP_MODE  0x800000
#define RX_MIC4_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_OFFSET  0x16
#define RX_MIC4_TSTCTRL_2_CORE_PGA_NBIAS_SELECT_MASK  0x400000
#define RX_MIC4_TSTCTRL_2_CORE_PGA_NBIAS_SELECT  0x400000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_OFFSET  0x15
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25_MASK  0x200000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_FORCE_DIODES_25  0x200000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_OFFSET  0x14
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25_MASK  0x100000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DISABLE_EXTRA_2STAGE_25  0x100000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_OFFSET  0x13
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25_MASK  0x80000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DISABLE_DIODES_25  0x80000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_OFFSET  0xf
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11_MASK  0x8000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SW_SAT_TEST_11  0x8000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_OFFSET  0xe
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11_MASK  0x4000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ONLY_CK1X_11  0x4000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_OFFSET  0xd
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11_MASK  0x2000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_FLIP_CK1X_11  0x2000
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_ED_11_OFFSET  0xb
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_ED_11_MASK  0x800
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_ED_11  0x800
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_OFFSET  0xa
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11_MASK  0x400
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_DIS_DYNAMIC_PD_11  0x400
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SW_SAT_OFFSET  0x9
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SW_SAT_MASK  0x200
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SW_SAT  0x200
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_OFFSET  0x8
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT_MASK  0x100
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SEL_SW_SAT  0x100
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_SPEED_OFFSET  0x5
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_SPEED_MASK  0xe0
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_SPEED  0xe0
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_OFFSET  0x4
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS_MASK  0x10
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_SAR_CAL_DIS  0x10
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_OFFSET  0x2
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ITRIM_OP3_MASK  0xc
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ITRIM_OP3  0xc
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_OFFSET  0x0
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ITRIM_OP2_MASK  0x3
#define RX_MIC4_TSTCTRL_2_CORE_CTRL_ITRIM_OP2  0x3
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_31TO27_OFFSET  0x1b
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_31TO27_MASK  0xf8000000
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_31TO27  0xf8000000
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_26TO12_OFFSET  0xc
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_26TO12_MASK  0x7fff000
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_26TO12  0x7fff000
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_11TO10_OFFSET  0xa
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_11TO10_MASK  0xc00
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_11TO10  0xc00
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_9_OFFSET  0x9
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_9_MASK  0x200
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_9  0x200
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_8_OFFSET  0x8
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_8_MASK  0x100
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_8  0x100
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_7TO6_OFFSET  0x6
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_7TO6_MASK  0xc0
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_7TO6  0xc0
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_5_OFFSET  0x5
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_5_MASK  0x20
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_5  0x20
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_4_OFFSET  0x4
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_4_MASK  0x10
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_4  0x10
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_3TO2_OFFSET  0x2
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_3TO2_MASK  0xc
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_3TO2  0xc
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_1_OFFSET  0x1
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_1_MASK  0x2
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_1  0x2
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_0_OFFSET  0x0
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_0_MASK  0x1
#define RX_TSTCTRL_1_CORE_RX_TSTCTRL_1_CORE_0  0x1
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_31TO20_OFFSET  0x14
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_31TO20_MASK  0xfff00000
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_31TO20  0xfff00000
#define RX_TSTCTRL_2_CORE_REF_SEL_OFFSET  0x13
#define RX_TSTCTRL_2_CORE_REF_SEL_MASK  0x80000
#define RX_TSTCTRL_2_CORE_REF_SEL  0x80000
#define RX_TSTCTRL_2_CORE_RES_SEL_OFFSET  0x12
#define RX_TSTCTRL_2_CORE_RES_SEL_MASK  0x40000
#define RX_TSTCTRL_2_CORE_RES_SEL  0x40000
#define RX_TSTCTRL_2_CORE_RES_EN_OFFSET  0x11
#define RX_TSTCTRL_2_CORE_RES_EN_MASK  0x20000
#define RX_TSTCTRL_2_CORE_RES_EN  0x20000
#define RX_TSTCTRL_2_CORE_RES_VAL_OFFSET  0xd
#define RX_TSTCTRL_2_CORE_RES_VAL_MASK  0x1e000
#define RX_TSTCTRL_2_CORE_RES_VAL  0x1e000
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_8TO5_OFFSET  0x5
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_8TO5_MASK  0x1e0
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_8TO5  0x1e0
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_4_OFFSET  0x4
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_4_MASK  0x10
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_4  0x10
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_3_OFFSET  0x3
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_3_MASK  0x8
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_3  0x8
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_2_OFFSET  0x2
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_2_MASK  0x4
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_2  0x4
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_1_OFFSET  0x1
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_1_MASK  0x2
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_1  0x2
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_0_OFFSET  0x0
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_0_MASK  0x1
#define RX_TSTCTRL_2_CORE_RX_TSTCTRL_2_CORE_0  0x1
#define RX_TSTCTRL_3_CORE_RX_VAD_FORCE_OFFCAL_OFFSET  0x1b
#define RX_TSTCTRL_3_CORE_RX_VAD_FORCE_OFFCAL_MASK  0xf8000000
#define RX_TSTCTRL_3_CORE_RX_VAD_FORCE_OFFCAL  0xf8000000
#define RX_TSTCTRL_3_CORE_RX_VAD_PGA_BYPASS_OFFSET  0x1a
#define RX_TSTCTRL_3_CORE_RX_VAD_PGA_BYPASS_MASK  0x4000000
#define RX_TSTCTRL_3_CORE_RX_VAD_PGA_BYPASS  0x4000000
#define RX_TSTCTRL_3_CORE_RX_VAD_CTRL_FORCE_OFFSET  0x19
#define RX_TSTCTRL_3_CORE_RX_VAD_CTRL_FORCE_MASK  0x2000000
#define RX_TSTCTRL_3_CORE_RX_VAD_CTRL_FORCE  0x2000000
#define RX_TSTCTRL_3_CORE_RX_VAD_TEST_MODE_OFFSET  0x16
#define RX_TSTCTRL_3_CORE_RX_VAD_TEST_MODE_MASK  0x1c00000
#define RX_TSTCTRL_3_CORE_RX_VAD_TEST_MODE  0x1c00000
#define RX_TSTCTRL_3_CORE_RX_VAD_OFFCAL_EN_OFFSET  0x15
#define RX_TSTCTRL_3_CORE_RX_VAD_OFFCAL_EN_MASK  0x200000
#define RX_TSTCTRL_3_CORE_RX_VAD_OFFCAL_EN  0x200000
#define RX_TSTCTRL_3_CORE_RX_VAD_OFFSET_CTRL_OFFSET  0x13
#define RX_TSTCTRL_3_CORE_RX_VAD_OFFSET_CTRL_MASK  0x180000
#define RX_TSTCTRL_3_CORE_RX_VAD_OFFSET_CTRL  0x180000
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_CSMPL_OFFSET  0x11
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_CSMPL_MASK  0x60000
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_CSMPL  0x60000
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_PERIOD_OFFSET  0xf
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_PERIOD_MASK  0x18000
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_PERIOD  0x18000
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_CINT_OFFSET  0xd
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_CINT_MASK  0x6000
#define RX_TSTCTRL_3_CORE_RX_VAD_INTG_CINT  0x6000
#define RX_TSTCTRL_3_CORE_RX_VAD_BETA2_OFFSET  0xa
#define RX_TSTCTRL_3_CORE_RX_VAD_BETA2_MASK  0x1c00
#define RX_TSTCTRL_3_CORE_RX_VAD_BETA2  0x1c00
#define RX_TSTCTRL_3_CORE_RX_VAD_BETA1_OFFSET  0x7
#define RX_TSTCTRL_3_CORE_RX_VAD_BETA1_MASK  0x380
#define RX_TSTCTRL_3_CORE_RX_VAD_BETA1  0x380
#define RX_TSTCTRL_3_CORE_RX_VAD_VTH_OFFSET  0x4
#define RX_TSTCTRL_3_CORE_RX_VAD_VTH_MASK  0x70
#define RX_TSTCTRL_3_CORE_RX_VAD_VTH  0x70
#define RX_TSTCTRL_3_CORE_RX_VAD_HPF_OFFSET  0x2
#define RX_TSTCTRL_3_CORE_RX_VAD_HPF_MASK  0xc
#define RX_TSTCTRL_3_CORE_RX_VAD_HPF  0xc
#define RX_TSTCTRL_3_CORE_RX_VAD_PGA_GAIN_OFFSET  0x0
#define RX_TSTCTRL_3_CORE_RX_VAD_PGA_GAIN_MASK  0x3
#define RX_TSTCTRL_3_CORE_RX_VAD_PGA_GAIN  0x3
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC4_SAMPLE_FREQ_CORE_OFFSET  0x10
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC4_SAMPLE_FREQ_CORE_MASK  0x30000
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC4_SAMPLE_FREQ_CORE  0x30000
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC3_SAMPLE_FREQ_CORE_OFFSET  0xc
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC3_SAMPLE_FREQ_CORE_MASK  0x3000
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC3_SAMPLE_FREQ_CORE  0x3000
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC2_SAMPLE_FREQ_CORE_OFFSET  0x8
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC2_SAMPLE_FREQ_CORE_MASK  0x300
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC2_SAMPLE_FREQ_CORE  0x300
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC1_SAMPLE_FREQ_CORE_OFFSET  0x4
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC1_SAMPLE_FREQ_CORE_MASK  0x30
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC1_SAMPLE_FREQ_CORE  0x30
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC0_SAMPLE_FREQ_CORE_OFFSET  0x0
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC0_SAMPLE_FREQ_CORE_MASK  0x3
#define RX_MIC4_SAMPLE_FREQ_SET_RX_MIC0_SAMPLE_FREQ_CORE  0x3
#define RX_GAIN_MIC_CORE_RX_REF_VREF_OK_CORE_SYNC_OFFSET  0x14
#define RX_GAIN_MIC_CORE_RX_REF_VREF_OK_CORE_SYNC_MASK  0x100000
#define RX_GAIN_MIC_CORE_RX_REF_VREF_OK_CORE_SYNC  0x100000
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC4_CORE_OFFSET  0x10
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC4_CORE_MASK  0x30000
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC4_CORE  0x30000
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC3_CORE_OFFSET  0xc
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC3_CORE_MASK  0x3000
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC3_CORE  0x3000
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC2_CORE_OFFSET  0x8
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC2_CORE_MASK  0x300
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC2_CORE  0x300
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC1_CORE_OFFSET  0x4
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC1_CORE_MASK  0x30
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC1_CORE  0x30
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC0_CORE_OFFSET  0x0
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC0_CORE_MASK  0x3
#define RX_GAIN_MIC_CORE_RX_GAIN_MIC0_CORE  0x3
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC4_CORE_OFFSET  0x4
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC4_CORE_MASK  0x10
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC4_CORE  0x10
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC3_CORE_OFFSET  0x3
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC3_CORE_MASK  0x8
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC3_CORE  0x8
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC2_CORE_OFFSET  0x2
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC2_CORE_MASK  0x4
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC2_CORE  0x4
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC1_CORE_OFFSET  0x1
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC1_CORE_MASK  0x2
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC1_CORE  0x2
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC0_CORE_OFFSET  0x0
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC0_CORE_MASK  0x1
#define RX_UNMUTE_MIC_CORE_RX_UNMUTE_MIC0_CORE  0x1
#define RX_TEST_CORE_R_RX_TEST_CORE_R_OFFSET  0x0
#define RX_TEST_CORE_R_RX_TEST_CORE_R_MASK  0xf
#define RX_TEST_CORE_R_RX_TEST_CORE_R  0xf
#define STDRCOSC_CAL_CTRL_STDRCOSC_CAL_START_OFFSET  0x3
#define STDRCOSC_CAL_CTRL_STDRCOSC_CAL_START_MASK  0x8
#define STDRCOSC_CAL_CTRL_STDRCOSC_CAL_START  0x8
#define STDRCOSC_CAL_CTRL_STDRCOSC_PDB_CORE_OFFSET  0x2
#define STDRCOSC_CAL_CTRL_STDRCOSC_PDB_CORE_MASK  0x4
#define STDRCOSC_CAL_CTRL_STDRCOSC_PDB_CORE  0x4
#define STDRCOSC_CAL_CTRL_STDRCOSC_DEBUG_CTRL_CORE_OFFSET  0x0
#define STDRCOSC_CAL_CTRL_STDRCOSC_DEBUG_CTRL_CORE_MASK  0x3
#define STDRCOSC_CAL_CTRL_STDRCOSC_DEBUG_CTRL_CORE  0x3
#define STDRCOSC_CAL_FORCE_STDRCOSC_CAL_FORCE_OFFSET  0x7
#define STDRCOSC_CAL_FORCE_STDRCOSC_CAL_FORCE_MASK  0x80
#define STDRCOSC_CAL_FORCE_STDRCOSC_CAL_FORCE  0x80
#define STDRCOSC_CAL_FORCE_STDRCOSC_CAL_FORCE_VALUE_OFFSET  0x0
#define STDRCOSC_CAL_FORCE_STDRCOSC_CAL_FORCE_VALUE_MASK  0x7f
#define STDRCOSC_CAL_FORCE_STDRCOSC_CAL_FORCE_VALUE  0x7f
#define STDRCOSC_CAL_VAL_STDRCOSC_CAL_READY_OFFSET  0x7
#define STDRCOSC_CAL_VAL_STDRCOSC_CAL_READY_MASK  0x80
#define STDRCOSC_CAL_VAL_STDRCOSC_CAL_READY  0x80
#define STDRCOSC_CAL_VAL_STDRCOSC_CAL_VALUE_OFFSET  0x0
#define STDRCOSC_CAL_VAL_STDRCOSC_CAL_VALUE_MASK  0x7f
#define STDRCOSC_CAL_VAL_STDRCOSC_CAL_VALUE  0x7f
#define PGOOD_STATE_PGOOD_RX_CORE_OFFSET  0x2
#define PGOOD_STATE_PGOOD_RX_CORE_MASK  0x4
#define PGOOD_STATE_PGOOD_RX_CORE  0x4
#define PGOOD_STATE_PGOOD_TX_CORE_OFFSET  0x1
#define PGOOD_STATE_PGOOD_TX_CORE_MASK  0x2
#define PGOOD_STATE_PGOOD_TX_CORE  0x2
#define PGOOD_STATE_PGOOD_VAD_CORE_OFFSET  0x0
#define PGOOD_STATE_PGOOD_VAD_CORE_MASK  0x1
#define PGOOD_STATE_PGOOD_VAD_CORE  0x1
#define POWER_MADC_CTL_MADC_START_CONV_CORE_REG_OFFSET  0x1
#define POWER_MADC_CTL_MADC_START_CONV_CORE_REG_MASK  0x2
#define POWER_MADC_CTL_MADC_START_CONV_CORE_REG  0x2
#define POWER_MADC_CTL_MADC_PDB_CORE_OFFSET  0x0
#define POWER_MADC_CTL_MADC_PDB_CORE_MASK  0x1
#define POWER_MADC_CTL_MADC_PDB_CORE  0x1
#define POWER_MADC_B_STS0_MADC_B_CORE_R0_OFFSET  0x0
#define POWER_MADC_B_STS0_MADC_B_CORE_R0_MASK  0x3ff
#define POWER_MADC_B_STS0_MADC_B_CORE_R0  0x3ff
#define POWER_MADC_B_STS1_MADC_B_CORE_R1_OFFSET  0x0
#define POWER_MADC_B_STS1_MADC_B_CORE_R1_MASK  0x3ff
#define POWER_MADC_B_STS1_MADC_B_CORE_R1  0x3ff
#define POWER_MADC_B_STS2_MADC_B_CORE_R2_OFFSET  0x0
#define POWER_MADC_B_STS2_MADC_B_CORE_R2_MASK  0x3ff
#define POWER_MADC_B_STS2_MADC_B_CORE_R2  0x3ff
#define POWER_MADC_B_STS3_MADC_B_CORE_R3_OFFSET  0x0
#define POWER_MADC_B_STS3_MADC_B_CORE_R3_MASK  0x3ff
#define POWER_MADC_B_STS3_MADC_B_CORE_R3  0x3ff
#define POWER_LPRCOSC_TRIM_SW_CTL_LPRCOSC_TRIM_CORE_OVR_WRT_OFFSET  0x8
#define POWER_LPRCOSC_TRIM_SW_CTL_LPRCOSC_TRIM_CORE_OVR_WRT_MASK  0x100
#define POWER_LPRCOSC_TRIM_SW_CTL_LPRCOSC_TRIM_CORE_OVR_WRT  0x100
#define POWER_LPRCOSC_TRIM_SW_CTL_LPRCOSC_TRIM_CORE_SW_OFFSET  0x0
#define POWER_LPRCOSC_TRIM_SW_CTL_LPRCOSC_TRIM_CORE_SW_MASK  0x1f
#define POWER_LPRCOSC_TRIM_SW_CTL_LPRCOSC_TRIM_CORE_SW  0x1f
#define DSP_CORE_GCK_CTL_DSP_CORE_GCK_CTL_OFFSET  0x0
#define DSP_CORE_GCK_CTL_DSP_CORE_GCK_CTL_MASK  0xf
#define DSP_CORE_GCK_CTL_DSP_CORE_GCK_CTL  0xf
#define MEM_BANK_CLK_CTRL_VECT_BANK_GCK_CTL_OFFSET  0x19
#define MEM_BANK_CLK_CTRL_VECT_BANK_GCK_CTL_MASK  0x3e000000
#define MEM_BANK_CLK_CTRL_VECT_BANK_GCK_CTL  0x3e000000
#define MEM_BANK_CLK_CTRL_LLE_B_BANK_GCK_CTL_OFFSET  0x14
#define MEM_BANK_CLK_CTRL_LLE_B_BANK_GCK_CTL_MASK  0x1f00000
#define MEM_BANK_CLK_CTRL_LLE_B_BANK_GCK_CTL  0x1f00000
#define MEM_BANK_CLK_CTRL_LLE_A_BANK_GCK_CTL_OFFSET  0x10
#define MEM_BANK_CLK_CTRL_LLE_A_BANK_GCK_CTL_MASK  0x30000
#define MEM_BANK_CLK_CTRL_LLE_A_BANK_GCK_CTL  0x30000
#define MEM_BANK_CLK_CTRL_CAPE_B_BANK_GCK_CTL_OFFSET  0x8
#define MEM_BANK_CLK_CTRL_CAPE_B_BANK_GCK_CTL_MASK  0x1f00
#define MEM_BANK_CLK_CTRL_CAPE_B_BANK_GCK_CTL  0x1f00
#define MEM_BANK_CLK_CTRL_CAPE_A_BANK_GCK_CTL_OFFSET  0x0
#define MEM_BANK_CLK_CTRL_CAPE_A_BANK_GCK_CTL_MASK  0x7f
#define MEM_BANK_CLK_CTRL_CAPE_A_BANK_GCK_CTL  0x7f
#define DSP_RST_CTRL_DSP_MEM_RST_CTL_OFFSET  0x8
#define DSP_RST_CTRL_DSP_MEM_RST_CTL_MASK  0x1f00
#define DSP_RST_CTRL_DSP_MEM_RST_CTL  0x1f00
#define DSP_RST_CTRL_DSP_CORE_RST_CTL_OFFSET  0x0
#define DSP_RST_CTRL_DSP_CORE_RST_CTL_MASK  0xf
#define DSP_RST_CTRL_DSP_CORE_RST_CTL  0xf
#define LLR_CONGESTION_ST_LLR_CONGESTION_ST_OFFSET  0x0
#define LLR_CONGESTION_ST_LLR_CONGESTION_ST_MASK  0xfff
#define LLR_CONGESTION_ST_LLR_CONGESTION_ST  0xfff
#define DSP_ILLEGAL_ACCESS_ASIP2AHB_ILLEGAL_ACCESS_OFFSET  0x5
#define DSP_ILLEGAL_ACCESS_ASIP2AHB_ILLEGAL_ACCESS_MASK  0x1e0
#define DSP_ILLEGAL_ACCESS_ASIP2AHB_ILLEGAL_ACCESS  0x1e0
#define DSP_ILLEGAL_ACCESS_DSP_ILLEGAL_ACCESS_OFFSET  0x0
#define DSP_ILLEGAL_ACCESS_DSP_ILLEGAL_ACCESS_MASK  0x1f
#define DSP_ILLEGAL_ACCESS_DSP_ILLEGAL_ACCESS  0x1f
#define ARM_LOCK_ARM_LOCK_OFFSET  0x0
#define ARM_LOCK_ARM_LOCK_MASK  0xffffffff
#define ARM_LOCK_ARM_LOCK  0xffffffff
#define HIFI3_LOCK_HIFI3_LOCK_OFFSET  0x0
#define HIFI3_LOCK_HIFI3_LOCK_MASK  0xffffffff
#define HIFI3_LOCK_HIFI3_LOCK  0xffffffff
#define CAPE_A_LOCK_CAPE_A_LOCK_OFFSET  0x0
#define CAPE_A_LOCK_CAPE_A_LOCK_MASK  0xffffffff
#define CAPE_A_LOCK_CAPE_A_LOCK  0xffffffff
#define CAPE_B_LOCK_CAPE_B_LOCK_OFFSET  0x0
#define CAPE_B_LOCK_CAPE_B_LOCK_MASK  0xffffffff
#define CAPE_B_LOCK_CAPE_B_LOCK  0xffffffff
#define LLE_A_LOCK_LLE_A_LOCK_OFFSET  0x0
#define LLE_A_LOCK_LLE_A_LOCK_MASK  0xffffffff
#define LLE_A_LOCK_LLE_A_LOCK  0xffffffff
#define LLE_B_LOCK_LLE_B_LOCK_OFFSET  0x0
#define LLE_B_LOCK_LLE_B_LOCK_MASK  0xffffffff
#define LLE_B_LOCK_LLE_B_LOCK  0xffffffff
#define GLOBAL_LOCK_INTR_ENABLE_ENABLE1_OFFSET  0x1
#define GLOBAL_LOCK_INTR_ENABLE_ENABLE1_MASK  0x2
#define GLOBAL_LOCK_INTR_ENABLE_ENABLE1  0x2
#define GLOBAL_LOCK_INTR_ENABLE_ENABLE0_OFFSET  0x0
#define GLOBAL_LOCK_INTR_ENABLE_ENABLE0_MASK  0x1
#define GLOBAL_LOCK_INTR_ENABLE_ENABLE0  0x1
#define GLOBAL_LOCK_INTR_STS_STATUS1_OFFSET  0x1
#define GLOBAL_LOCK_INTR_STS_STATUS1_MASK  0x2
#define GLOBAL_LOCK_INTR_STS_STATUS1  0x2
#define GLOBAL_LOCK_INTR_STS_STATUS0_OFFSET  0x0
#define GLOBAL_LOCK_INTR_STS_STATUS0_MASK  0x1
#define GLOBAL_LOCK_INTR_STS_STATUS0  0x1
#define GLOBAL_LOCK_INTR_CLR_CLEAR1_OFFSET  0x1
#define GLOBAL_LOCK_INTR_CLR_CLEAR1_MASK  0x2
#define GLOBAL_LOCK_INTR_CLR_CLEAR1  0x2
#define GLOBAL_LOCK_INTR_CLR_CLEAR0_OFFSET  0x0
#define GLOBAL_LOCK_INTR_CLR_CLEAR0_MASK  0x1
#define GLOBAL_LOCK_INTR_CLR_CLEAR0  0x1
#define GLOBAL_LOCK_CFG_DEBUG_OFFSET  0x0
#define GLOBAL_LOCK_CFG_DEBUG_MASK  0x1
#define GLOBAL_LOCK_CFG_DEBUG  0x1
#define LLEA_SLEEP_TYPE_OUT_LLEA_SLEEP_TYPE_OUT_OFFSET  0x0
#define LLEA_SLEEP_TYPE_OUT_LLEA_SLEEP_TYPE_OUT_MASK  0xffff
#define LLEA_SLEEP_TYPE_OUT_LLEA_SLEEP_TYPE_OUT  0xffff
#define LLEB_SLEEP_TYPE_OUT_LLEB_SLEEP_TYPE_OUT_OFFSET  0x0
#define LLEB_SLEEP_TYPE_OUT_LLEB_SLEEP_TYPE_OUT_MASK  0xffff
#define LLEB_SLEEP_TYPE_OUT_LLEB_SLEEP_TYPE_OUT  0xffff
#define CAPA_SLEEP_TYPE_OUT_CAPA_SLEEP_TYPE_OUT_OFFSET  0x0
#define CAPA_SLEEP_TYPE_OUT_CAPA_SLEEP_TYPE_OUT_MASK  0xffff
#define CAPA_SLEEP_TYPE_OUT_CAPA_SLEEP_TYPE_OUT  0xffff
#define CAPB_SLEEP_TYPE_OUT_LLEB_SLEEP_TYPE_OUT_OFFSET  0x0
#define CAPB_SLEEP_TYPE_OUT_LLEB_SLEEP_TYPE_OUT_MASK  0xffff
#define CAPB_SLEEP_TYPE_OUT_LLEB_SLEEP_TYPE_OUT  0xffff
#define CAPEA_RAM0_MISC_CTRL_TEST1_OFFSET  0xe
#define CAPEA_RAM0_MISC_CTRL_TEST1_MASK  0x4000
#define CAPEA_RAM0_MISC_CTRL_TEST1  0x4000
#define CAPEA_RAM0_MISC_CTRL_RA_OFFSET  0xc
#define CAPEA_RAM0_MISC_CTRL_RA_MASK  0x3000
#define CAPEA_RAM0_MISC_CTRL_RA  0x3000
#define CAPEA_RAM0_MISC_CTRL_LS_OFFSET  0xb
#define CAPEA_RAM0_MISC_CTRL_LS_MASK  0x800
#define CAPEA_RAM0_MISC_CTRL_LS  0x800
#define CAPEA_RAM0_MISC_CTRL_WA_OFFSET  0x8
#define CAPEA_RAM0_MISC_CTRL_WA_MASK  0x700
#define CAPEA_RAM0_MISC_CTRL_WA  0x700
#define CAPEA_RAM0_MISC_CTRL_WPULSE_OFFSET  0x5
#define CAPEA_RAM0_MISC_CTRL_WPULSE_MASK  0xe0
#define CAPEA_RAM0_MISC_CTRL_WPULSE  0xe0
#define CAPEA_RAM0_MISC_CTRL_RME_OFFSET  0x4
#define CAPEA_RAM0_MISC_CTRL_RME_MASK  0x10
#define CAPEA_RAM0_MISC_CTRL_RME  0x10
#define CAPEA_RAM0_MISC_CTRL_RM_OFFSET  0x0
#define CAPEA_RAM0_MISC_CTRL_RM_MASK  0xf
#define CAPEA_RAM0_MISC_CTRL_RM  0xf
#define CAPEA_RAM5_MISC_CTRL_TEST1_OFFSET  0xe
#define CAPEA_RAM5_MISC_CTRL_TEST1_MASK  0x4000
#define CAPEA_RAM5_MISC_CTRL_TEST1  0x4000
#define CAPEA_RAM5_MISC_CTRL_RA_OFFSET  0xc
#define CAPEA_RAM5_MISC_CTRL_RA_MASK  0x3000
#define CAPEA_RAM5_MISC_CTRL_RA  0x3000
#define CAPEA_RAM5_MISC_CTRL_LS_OFFSET  0xb
#define CAPEA_RAM5_MISC_CTRL_LS_MASK  0x800
#define CAPEA_RAM5_MISC_CTRL_LS  0x800
#define CAPEA_RAM5_MISC_CTRL_WA_OFFSET  0x8
#define CAPEA_RAM5_MISC_CTRL_WA_MASK  0x700
#define CAPEA_RAM5_MISC_CTRL_WA  0x700
#define CAPEA_RAM5_MISC_CTRL_WPULSE_OFFSET  0x5
#define CAPEA_RAM5_MISC_CTRL_WPULSE_MASK  0xe0
#define CAPEA_RAM5_MISC_CTRL_WPULSE  0xe0
#define CAPEA_RAM5_MISC_CTRL_RME_OFFSET  0x4
#define CAPEA_RAM5_MISC_CTRL_RME_MASK  0x10
#define CAPEA_RAM5_MISC_CTRL_RME  0x10
#define CAPEA_RAM5_MISC_CTRL_RM_OFFSET  0x0
#define CAPEA_RAM5_MISC_CTRL_RM_MASK  0xf
#define CAPEA_RAM5_MISC_CTRL_RM  0xf
#define CAPEB_RAM0_MISC_CTRL_TEST1_OFFSET  0xe
#define CAPEB_RAM0_MISC_CTRL_TEST1_MASK  0x4000
#define CAPEB_RAM0_MISC_CTRL_TEST1  0x4000
#define CAPEB_RAM0_MISC_CTRL_RA_OFFSET  0xc
#define CAPEB_RAM0_MISC_CTRL_RA_MASK  0x3000
#define CAPEB_RAM0_MISC_CTRL_RA  0x3000
#define CAPEB_RAM0_MISC_CTRL_LS_OFFSET  0xb
#define CAPEB_RAM0_MISC_CTRL_LS_MASK  0x800
#define CAPEB_RAM0_MISC_CTRL_LS  0x800
#define CAPEB_RAM0_MISC_CTRL_WA_OFFSET  0x8
#define CAPEB_RAM0_MISC_CTRL_WA_MASK  0x700
#define CAPEB_RAM0_MISC_CTRL_WA  0x700
#define CAPEB_RAM0_MISC_CTRL_WPULSE_OFFSET  0x5
#define CAPEB_RAM0_MISC_CTRL_WPULSE_MASK  0xe0
#define CAPEB_RAM0_MISC_CTRL_WPULSE  0xe0
#define CAPEB_RAM0_MISC_CTRL_RME_OFFSET  0x4
#define CAPEB_RAM0_MISC_CTRL_RME_MASK  0x10
#define CAPEB_RAM0_MISC_CTRL_RME  0x10
#define CAPEB_RAM0_MISC_CTRL_RM_OFFSET  0x0
#define CAPEB_RAM0_MISC_CTRL_RM_MASK  0xf
#define CAPEB_RAM0_MISC_CTRL_RM  0xf
#define CAPEB_RAM6_MISC_CTRL_TEST1_OFFSET  0xe
#define CAPEB_RAM6_MISC_CTRL_TEST1_MASK  0x4000
#define CAPEB_RAM6_MISC_CTRL_TEST1  0x4000
#define CAPEB_RAM6_MISC_CTRL_RA_OFFSET  0xc
#define CAPEB_RAM6_MISC_CTRL_RA_MASK  0x3000
#define CAPEB_RAM6_MISC_CTRL_RA  0x3000
#define CAPEB_RAM6_MISC_CTRL_LS_OFFSET  0xb
#define CAPEB_RAM6_MISC_CTRL_LS_MASK  0x800
#define CAPEB_RAM6_MISC_CTRL_LS  0x800
#define CAPEB_RAM6_MISC_CTRL_WA_OFFSET  0x8
#define CAPEB_RAM6_MISC_CTRL_WA_MASK  0x700
#define CAPEB_RAM6_MISC_CTRL_WA  0x700
#define CAPEB_RAM6_MISC_CTRL_WPULSE_OFFSET  0x5
#define CAPEB_RAM6_MISC_CTRL_WPULSE_MASK  0xe0
#define CAPEB_RAM6_MISC_CTRL_WPULSE  0xe0
#define CAPEB_RAM6_MISC_CTRL_RME_OFFSET  0x4
#define CAPEB_RAM6_MISC_CTRL_RME_MASK  0x10
#define CAPEB_RAM6_MISC_CTRL_RME  0x10
#define CAPEB_RAM6_MISC_CTRL_RM_OFFSET  0x0
#define CAPEB_RAM6_MISC_CTRL_RM_MASK  0xf
#define CAPEB_RAM6_MISC_CTRL_RM  0xf
#define LLEA_RAM0_MISC_CTRL_TEST1_OFFSET  0xe
#define LLEA_RAM0_MISC_CTRL_TEST1_MASK  0x4000
#define LLEA_RAM0_MISC_CTRL_TEST1  0x4000
#define LLEA_RAM0_MISC_CTRL_RA_OFFSET  0xc
#define LLEA_RAM0_MISC_CTRL_RA_MASK  0x3000
#define LLEA_RAM0_MISC_CTRL_RA  0x3000
#define LLEA_RAM0_MISC_CTRL_LS_OFFSET  0xb
#define LLEA_RAM0_MISC_CTRL_LS_MASK  0x800
#define LLEA_RAM0_MISC_CTRL_LS  0x800
#define LLEA_RAM0_MISC_CTRL_WA_OFFSET  0x8
#define LLEA_RAM0_MISC_CTRL_WA_MASK  0x700
#define LLEA_RAM0_MISC_CTRL_WA  0x700
#define LLEA_RAM0_MISC_CTRL_WPULSE_OFFSET  0x5
#define LLEA_RAM0_MISC_CTRL_WPULSE_MASK  0xe0
#define LLEA_RAM0_MISC_CTRL_WPULSE  0xe0
#define LLEA_RAM0_MISC_CTRL_RME_OFFSET  0x4
#define LLEA_RAM0_MISC_CTRL_RME_MASK  0x10
#define LLEA_RAM0_MISC_CTRL_RME  0x10
#define LLEA_RAM0_MISC_CTRL_RM_OFFSET  0x0
#define LLEA_RAM0_MISC_CTRL_RM_MASK  0xf
#define LLEA_RAM0_MISC_CTRL_RM  0xf
#define LLEB_RAM0_MISC_CTRL_TEST1_OFFSET  0xe
#define LLEB_RAM0_MISC_CTRL_TEST1_MASK  0x4000
#define LLEB_RAM0_MISC_CTRL_TEST1  0x4000
#define LLEB_RAM0_MISC_CTRL_RA_OFFSET  0xc
#define LLEB_RAM0_MISC_CTRL_RA_MASK  0x3000
#define LLEB_RAM0_MISC_CTRL_RA  0x3000
#define LLEB_RAM0_MISC_CTRL_LS_OFFSET  0xb
#define LLEB_RAM0_MISC_CTRL_LS_MASK  0x800
#define LLEB_RAM0_MISC_CTRL_LS  0x800
#define LLEB_RAM0_MISC_CTRL_WA_OFFSET  0x8
#define LLEB_RAM0_MISC_CTRL_WA_MASK  0x700
#define LLEB_RAM0_MISC_CTRL_WA  0x700
#define LLEB_RAM0_MISC_CTRL_WPULSE_OFFSET  0x5
#define LLEB_RAM0_MISC_CTRL_WPULSE_MASK  0xe0
#define LLEB_RAM0_MISC_CTRL_WPULSE  0xe0
#define LLEB_RAM0_MISC_CTRL_RME_OFFSET  0x4
#define LLEB_RAM0_MISC_CTRL_RME_MASK  0x10
#define LLEB_RAM0_MISC_CTRL_RME  0x10
#define LLEB_RAM0_MISC_CTRL_RM_OFFSET  0x0
#define LLEB_RAM0_MISC_CTRL_RM_MASK  0xf
#define LLEB_RAM0_MISC_CTRL_RM  0xf
#define LLEB_RAM4_MISC_CTRL_TEST1_OFFSET  0xe
#define LLEB_RAM4_MISC_CTRL_TEST1_MASK  0x4000
#define LLEB_RAM4_MISC_CTRL_TEST1  0x4000
#define LLEB_RAM4_MISC_CTRL_RA_OFFSET  0xc
#define LLEB_RAM4_MISC_CTRL_RA_MASK  0x3000
#define LLEB_RAM4_MISC_CTRL_RA  0x3000
#define LLEB_RAM4_MISC_CTRL_LS_OFFSET  0xb
#define LLEB_RAM4_MISC_CTRL_LS_MASK  0x800
#define LLEB_RAM4_MISC_CTRL_LS  0x800
#define LLEB_RAM4_MISC_CTRL_WA_OFFSET  0x8
#define LLEB_RAM4_MISC_CTRL_WA_MASK  0x700
#define LLEB_RAM4_MISC_CTRL_WA  0x700
#define LLEB_RAM4_MISC_CTRL_WPULSE_OFFSET  0x5
#define LLEB_RAM4_MISC_CTRL_WPULSE_MASK  0xe0
#define LLEB_RAM4_MISC_CTRL_WPULSE  0xe0
#define LLEB_RAM4_MISC_CTRL_RME_OFFSET  0x4
#define LLEB_RAM4_MISC_CTRL_RME_MASK  0x10
#define LLEB_RAM4_MISC_CTRL_RME  0x10
#define LLEB_RAM4_MISC_CTRL_RM_OFFSET  0x0
#define LLEB_RAM4_MISC_CTRL_RM_MASK  0xf
#define LLEB_RAM4_MISC_CTRL_RM  0xf
#define VECT_RAM0_MISC_CTRL_TEST1_OFFSET  0xe
#define VECT_RAM0_MISC_CTRL_TEST1_MASK  0x4000
#define VECT_RAM0_MISC_CTRL_TEST1  0x4000
#define VECT_RAM0_MISC_CTRL_RA_OFFSET  0xc
#define VECT_RAM0_MISC_CTRL_RA_MASK  0x3000
#define VECT_RAM0_MISC_CTRL_RA  0x3000
#define VECT_RAM0_MISC_CTRL_LS_OFFSET  0xb
#define VECT_RAM0_MISC_CTRL_LS_MASK  0x800
#define VECT_RAM0_MISC_CTRL_LS  0x800
#define VECT_RAM0_MISC_CTRL_WA_OFFSET  0x8
#define VECT_RAM0_MISC_CTRL_WA_MASK  0x700
#define VECT_RAM0_MISC_CTRL_WA  0x700
#define VECT_RAM0_MISC_CTRL_WPULSE_OFFSET  0x5
#define VECT_RAM0_MISC_CTRL_WPULSE_MASK  0xe0
#define VECT_RAM0_MISC_CTRL_WPULSE  0xe0
#define VECT_RAM0_MISC_CTRL_RME_OFFSET  0x4
#define VECT_RAM0_MISC_CTRL_RME_MASK  0x10
#define VECT_RAM0_MISC_CTRL_RME  0x10
#define VECT_RAM0_MISC_CTRL_RM_OFFSET  0x0
#define VECT_RAM0_MISC_CTRL_RM_MASK  0xf
#define VECT_RAM0_MISC_CTRL_RM  0xf
#define ASIP_CORE_ID_ASIP_CORE_ID_OFFSET  0x0
#define ASIP_CORE_ID_ASIP_CORE_ID_MASK  0xffffffff
#define ASIP_CORE_ID_ASIP_CORE_ID  0xffffffff
#define LLR_ANC_LTCY_CFG1_LLE_ANC_LATENCY_TARGET_CH1_OFFSET  0x8
#define LLR_ANC_LTCY_CFG1_LLE_ANC_LATENCY_TARGET_CH1_MASK  0xf00
#define LLR_ANC_LTCY_CFG1_LLE_ANC_LATENCY_TARGET_CH1  0xf00
#define LLR_ANC_LTCY_CFG1_LLE_ANC_LATENCY_TARGET_CH0_OFFSET  0x0
#define LLR_ANC_LTCY_CFG1_LLE_ANC_LATENCY_TARGET_CH0_MASK  0xf
#define LLR_ANC_LTCY_CFG1_LLE_ANC_LATENCY_TARGET_CH0  0xf
#define LLR_ANC_LTCY_CFG2_LLR_DECIM_INT_AUTO_CLR_EN_OFFSET  0x3
#define LLR_ANC_LTCY_CFG2_LLR_DECIM_INT_AUTO_CLR_EN_MASK  0x8
#define LLR_ANC_LTCY_CFG2_LLR_DECIM_INT_AUTO_CLR_EN  0x8
#define LLR_ANC_LTCY_CFG2_LLE_ANC_RESET_CH1_OFFSET  0x2
#define LLR_ANC_LTCY_CFG2_LLE_ANC_RESET_CH1_MASK  0x4
#define LLR_ANC_LTCY_CFG2_LLE_ANC_RESET_CH1  0x4
#define LLR_ANC_LTCY_CFG2_LLE_ANC_RESET_CH0_OFFSET  0x1
#define LLR_ANC_LTCY_CFG2_LLE_ANC_RESET_CH0_MASK  0x2
#define LLR_ANC_LTCY_CFG2_LLE_ANC_RESET_CH0  0x2
#define LLR_ANC_LTCY_CFG2_LLE_ANC_AUTO_CAL_EN_OFFSET  0x0
#define LLR_ANC_LTCY_CFG2_LLE_ANC_AUTO_CAL_EN_MASK  0x1
#define LLR_ANC_LTCY_CFG2_LLE_ANC_AUTO_CAL_EN  0x1
#define LLR_ANC_MIS_SMP_CHAN0_MISSED_SMP_CNT_ANC_CHAN0_R_OFFSET  0x0
#define LLR_ANC_MIS_SMP_CHAN0_MISSED_SMP_CNT_ANC_CHAN0_R_MASK  0xf
#define LLR_ANC_MIS_SMP_CHAN0_MISSED_SMP_CNT_ANC_CHAN0_R  0xf
#define LLR_ANC_MIS_SMP_CHAN1_MISSED_SMP_CNT_ANC_CHAN1_R_OFFSET  0x0
#define LLR_ANC_MIS_SMP_CHAN1_MISSED_SMP_CNT_ANC_CHAN1_R_MASK  0xf
#define LLR_ANC_MIS_SMP_CHAN1_MISSED_SMP_CNT_ANC_CHAN1_R  0xf
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_EN_CH1_OFFSET  0x5
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_EN_CH1_MASK  0x20
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_EN_CH1  0x20
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_EN_CH0_OFFSET  0x4
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_EN_CH0_MASK  0x10
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_EN_CH0  0x10
#define LLR_ANC_PLYBCK_SYNC_CTL_DECIM_ANCIN_SYNCFLAG_SEL_OFFSET  0x2
#define LLR_ANC_PLYBCK_SYNC_CTL_DECIM_ANCIN_SYNCFLAG_SEL_MASK  0xc
#define LLR_ANC_PLYBCK_SYNC_CTL_DECIM_ANCIN_SYNCFLAG_SEL  0xc
#define LLR_ANC_PLYBCK_SYNC_CTL_INTERP_ANCOUT_SYNCFLAG_SEL_OFFSET  0x1
#define LLR_ANC_PLYBCK_SYNC_CTL_INTERP_ANCOUT_SYNCFLAG_SEL_MASK  0x2
#define LLR_ANC_PLYBCK_SYNC_CTL_INTERP_ANCOUT_SYNCFLAG_SEL  0x2
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_SYNFLAG_SEL_OFFSET  0x0
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_SYNFLAG_SEL_MASK  0x1
#define LLR_ANC_PLYBCK_SYNC_CTL_PLYBCK_ANCIN_SYNFLAG_SEL  0x1
#define LLR_ANC_SMP_MIS_INT_ANC_SMP_MIS_INT_CHAN1_OFFSET  0x1
#define LLR_ANC_SMP_MIS_INT_ANC_SMP_MIS_INT_CHAN1_MASK  0x2
#define LLR_ANC_SMP_MIS_INT_ANC_SMP_MIS_INT_CHAN1  0x2
#define LLR_ANC_SMP_MIS_INT_ANC_SMP_MIS_INT_CHAN0_OFFSET  0x0
#define LLR_ANC_SMP_MIS_INT_ANC_SMP_MIS_INT_CHAN0_MASK  0x1
#define LLR_ANC_SMP_MIS_INT_ANC_SMP_MIS_INT_CHAN0  0x1
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT3_OFFSET  0x3
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT3_MASK  0x8
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT3  0x8
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT2_OFFSET  0x2
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT2_MASK  0x4
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT2  0x4
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT1_OFFSET  0x1
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT1_MASK  0x2
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT1  0x2
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT0_OFFSET  0x0
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT0_MASK  0x1
#define LLR_LL_DECIM_INT_LLR_LL_DECIM_INT0  0x1
#define LLR_ELK_IN_INT_LLR_ELK_INT_CH1_OFFSET  0x1
#define LLR_ELK_IN_INT_LLR_ELK_INT_CH1_MASK  0x2
#define LLR_ELK_IN_INT_LLR_ELK_INT_CH1  0x2
#define LLR_ELK_IN_INT_LLR_ELK_INT_CH0_OFFSET  0x0
#define LLR_ELK_IN_INT_LLR_ELK_INT_CH0_MASK  0x1
#define LLR_ELK_IN_INT_LLR_ELK_INT_CH0  0x1
#define LLR_ANC_BYPASS_CTRL_DECIM_CHAN_SEL_BYPS_TO_ANC_CHAN1_OFFSET  0x8
#define LLR_ANC_BYPASS_CTRL_DECIM_CHAN_SEL_BYPS_TO_ANC_CHAN1_MASK  0x300
#define LLR_ANC_BYPASS_CTRL_DECIM_CHAN_SEL_BYPS_TO_ANC_CHAN1  0x300
#define LLR_ANC_BYPASS_CTRL_DECIM_CHAN_SEL_BYPS_TO_ANC_CHAN0_OFFSET  0x4
#define LLR_ANC_BYPASS_CTRL_DECIM_CHAN_SEL_BYPS_TO_ANC_CHAN0_MASK  0x30
#define LLR_ANC_BYPASS_CTRL_DECIM_CHAN_SEL_BYPS_TO_ANC_CHAN0  0x30
#define LLR_ANC_BYPASS_CTRL_BYPS_ANCOUT_CHAN1_OFFSET  0x1
#define LLR_ANC_BYPASS_CTRL_BYPS_ANCOUT_CHAN1_MASK  0x2
#define LLR_ANC_BYPASS_CTRL_BYPS_ANCOUT_CHAN1  0x2
#define LLR_ANC_BYPASS_CTRL_BYPS_ANCOUT_CHAN0_OFFSET  0x0
#define LLR_ANC_BYPASS_CTRL_BYPS_ANCOUT_CHAN0_MASK  0x1
#define LLR_ANC_BYPASS_CTRL_BYPS_ANCOUT_CHAN0  0x1
#define GLOBAL_LOCK_SET_AHB_GLOBAL_LOCK_SET_OFFSET  0x0
#define GLOBAL_LOCK_SET_AHB_GLOBAL_LOCK_SET_MASK  0xffffffff
#define GLOBAL_LOCK_SET_AHB_GLOBAL_LOCK_SET  0xffffffff
#define GLOBAL_LOCK_SET_HIFI3_GLOBAL_LOCK_SET_OFFSET  0x0
#define GLOBAL_LOCK_SET_HIFI3_GLOBAL_LOCK_SET_MASK  0xffffffff
#define GLOBAL_LOCK_SET_HIFI3_GLOBAL_LOCK_SET  0xffffffff
#define GLOBAL_LOCK_SET_CAPEA_GLOBAL_LOCK_SET_OFFSET  0x0
#define GLOBAL_LOCK_SET_CAPEA_GLOBAL_LOCK_SET_MASK  0xffffffff
#define GLOBAL_LOCK_SET_CAPEA_GLOBAL_LOCK_SET  0xffffffff
#define GLOBAL_LOCK_SET_CAPEB_GLOBAL_LOCK_SET_OFFSET  0x0
#define GLOBAL_LOCK_SET_CAPEB_GLOBAL_LOCK_SET_MASK  0xffffffff
#define GLOBAL_LOCK_SET_CAPEB_GLOBAL_LOCK_SET  0xffffffff
#define GLOBAL_LOCK_SET_LLEA_GLOBAL_LOCK_SET_OFFSET  0x0
#define GLOBAL_LOCK_SET_LLEA_GLOBAL_LOCK_SET_MASK  0xffffffff
#define GLOBAL_LOCK_SET_LLEA_GLOBAL_LOCK_SET  0xffffffff
#define GLOBAL_LOCK_SET_LLEB_GLOBAL_LOCK_SET_OFFSET  0x0
#define GLOBAL_LOCK_SET_LLEB_GLOBAL_LOCK_SET_MASK  0xffffffff
#define GLOBAL_LOCK_SET_LLEB_GLOBAL_LOCK_SET  0xffffffff
#define GLOBAL_LOCK_CLR_AHB_GLOBAL_LOCK_CLR_OFFSET  0x0
#define GLOBAL_LOCK_CLR_AHB_GLOBAL_LOCK_CLR_MASK  0xffffffff
#define GLOBAL_LOCK_CLR_AHB_GLOBAL_LOCK_CLR  0xffffffff
#define GLOBAL_LOCK_CLR_HIFI3_GLOBAL_LOCK_CLR_OFFSET  0x0
#define GLOBAL_LOCK_CLR_HIFI3_GLOBAL_LOCK_CLR_MASK  0xffffffff
#define GLOBAL_LOCK_CLR_HIFI3_GLOBAL_LOCK_CLR  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEA_GLOBAL_LOCK_CLR_OFFSET  0x0
#define GLOBAL_LOCK_CLR_CAPEA_GLOBAL_LOCK_CLR_MASK  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEA_GLOBAL_LOCK_CLR  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEB_GLOBAL_LOCK_CLR_OFFSET  0x0
#define GLOBAL_LOCK_CLR_CAPEB_GLOBAL_LOCK_CLR_MASK  0xffffffff
#define GLOBAL_LOCK_CLR_CAPEB_GLOBAL_LOCK_CLR  0xffffffff
#define GLOBAL_LOCK_CLR_LLEA_GLOBAL_LOCK_CLR_OFFSET  0x0
#define GLOBAL_LOCK_CLR_LLEA_GLOBAL_LOCK_CLR_MASK  0xffffffff
#define GLOBAL_LOCK_CLR_LLEA_GLOBAL_LOCK_CLR  0xffffffff
#define GLOBAL_LOCK_CLR_LLEB_GLOBAL_LOCK_CLR_OFFSET  0x0
#define GLOBAL_LOCK_CLR_LLEB_GLOBAL_LOCK_CLR_MASK  0xffffffff
#define GLOBAL_LOCK_CLR_LLEB_GLOBAL_LOCK_CLR  0xffffffff
#define INT_DIS_REG_L_INT_DIS_REG_L_OFFSET  0x0
#define INT_DIS_REG_L_INT_DIS_REG_L_MASK  0xffffffff
#define INT_DIS_REG_L_INT_DIS_REG_L  0xffffffff
#define INT_DIS_REG_H_INT_DIS_REG_H_OFFSET  0x0
#define INT_DIS_REG_H_INT_DIS_REG_H_MASK  0xffffffff
#define INT_DIS_REG_H_INT_DIS_REG_H  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEA_INT_ASSIGN_ASIP_L_OFFSET  0x0
#define INT_ASSIGN_ASIP_L_LLEA_INT_ASSIGN_ASIP_L_MASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEA_INT_ASSIGN_ASIP_L  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEA_INT_ASSIGN_ASIP_H_OFFSET  0x0
#define INT_ASSIGN_ASIP_H_LLEA_INT_ASSIGN_ASIP_H_MASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEA_INT_ASSIGN_ASIP_H  0xffffffff
#define INT_STS_ASIP_L_R_LLEA_INT_STS_ASIP_L_R_OFFSET  0x0
#define INT_STS_ASIP_L_R_LLEA_INT_STS_ASIP_L_R_MASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEA_INT_STS_ASIP_L_R  0xffffffff
#define INT_STS_ASIP_H_R_LLEA_INT_STS_ASIP_H_R_OFFSET  0x0
#define INT_STS_ASIP_H_R_LLEA_INT_STS_ASIP_H_R_MASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEA_INT_STS_ASIP_H_R  0xffffffff
#define INT_EN0_ASIP_L_LLEA_INT_EN0_ASIP_L_OFFSET  0x0
#define INT_EN0_ASIP_L_LLEA_INT_EN0_ASIP_L_MASK  0xffffffff
#define INT_EN0_ASIP_L_LLEA_INT_EN0_ASIP_L  0xffffffff
#define INT_EN0_ASIP_H_LLEA_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN0_ASIP_H_LLEA_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN0_ASIP_H_LLEA_INT_EN0_ASIP_H  0xffffffff
#define INT_EN1_ASIP_L_LLEA_INT_EN1_ASIP_L_OFFSET  0x0
#define INT_EN1_ASIP_L_LLEA_INT_EN1_ASIP_L_MASK  0xffffffff
#define INT_EN1_ASIP_L_LLEA_INT_EN1_ASIP_L  0xffffffff
#define INT_EN1_ASIP_H_LLEA_INT_EN1_ASIP_H_OFFSET  0x0
#define INT_EN1_ASIP_H_LLEA_INT_EN1_ASIP_H_MASK  0xffffffff
#define INT_EN1_ASIP_H_LLEA_INT_EN1_ASIP_H  0xffffffff
#define INT_EN2_ASIP_L_LLEA_INT_EN2_ASIP_L_OFFSET  0x0
#define INT_EN2_ASIP_L_LLEA_INT_EN2_ASIP_L_MASK  0xffffffff
#define INT_EN2_ASIP_L_LLEA_INT_EN2_ASIP_L  0xffffffff
#define INT_EN2_ASIP_H_LLEA_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN2_ASIP_H_LLEA_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN2_ASIP_H_LLEA_INT_EN0_ASIP_H  0xffffffff
#define INT_EN3_ASIP_L_LLEA_INT_EN3_ASIP_L_OFFSET  0x0
#define INT_EN3_ASIP_L_LLEA_INT_EN3_ASIP_L_MASK  0xffffffff
#define INT_EN3_ASIP_L_LLEA_INT_EN3_ASIP_L  0xffffffff
#define INT_EN3_ASIP_H_LLEA_INT_EN3_ASIP_H_OFFSET  0x0
#define INT_EN3_ASIP_H_LLEA_INT_EN3_ASIP_H_MASK  0xffffffff
#define INT_EN3_ASIP_H_LLEA_INT_EN3_ASIP_H  0xffffffff
#define SW_WAKEUP_LLEA_SW_WAKEUP_OFFSET  0x0
#define SW_WAKEUP_LLEA_SW_WAKEUP_MASK  0x1
#define SW_WAKEUP_LLEA_SW_WAKEUP  0x1
#define SW_WAKE_MODE_LLEA_SW_WAKE_MODE_OFFSET  0x0
#define SW_WAKE_MODE_LLEA_SW_WAKE_MODE_MASK  0x1
#define SW_WAKE_MODE_LLEA_SW_WAKE_MODE  0x1
#define DSP_CORE_SFT_INT_LLEA_DSP_SW_INT_OFFSET  0x0
#define DSP_CORE_SFT_INT_LLEA_DSP_SW_INT_MASK  0x1
#define DSP_CORE_SFT_INT_LLEA_DSP_SW_INT  0x1
#define INT_ASSIGN_ASIP_L_LLEB_INT_ASSIGN_ASIP_L_OFFSET  0x0
#define INT_ASSIGN_ASIP_L_LLEB_INT_ASSIGN_ASIP_L_MASK  0xffffffff
#define INT_ASSIGN_ASIP_L_LLEB_INT_ASSIGN_ASIP_L  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEB_INT_ASSIGN_ASIP_H_OFFSET  0x0
#define INT_ASSIGN_ASIP_H_LLEB_INT_ASSIGN_ASIP_H_MASK  0xffffffff
#define INT_ASSIGN_ASIP_H_LLEB_INT_ASSIGN_ASIP_H  0xffffffff
#define INT_STS_ASIP_L_R_LLEB_INT_STS_ASIP_L_R_OFFSET  0x0
#define INT_STS_ASIP_L_R_LLEB_INT_STS_ASIP_L_R_MASK  0xffffffff
#define INT_STS_ASIP_L_R_LLEB_INT_STS_ASIP_L_R  0xffffffff
#define INT_STS_ASIP_H_R_LLEB_INT_STS_ASIP_H_R_OFFSET  0x0
#define INT_STS_ASIP_H_R_LLEB_INT_STS_ASIP_H_R_MASK  0xffffffff
#define INT_STS_ASIP_H_R_LLEB_INT_STS_ASIP_H_R  0xffffffff
#define INT_EN0_ASIP_L_LLEB_INT_EN0_ASIP_L_OFFSET  0x0
#define INT_EN0_ASIP_L_LLEB_INT_EN0_ASIP_L_MASK  0xffffffff
#define INT_EN0_ASIP_L_LLEB_INT_EN0_ASIP_L  0xffffffff
#define INT_EN0_ASIP_H_LLEB_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN0_ASIP_H_LLEB_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN0_ASIP_H_LLEB_INT_EN0_ASIP_H  0xffffffff
#define INT_EN1_ASIP_L_LLEB_INT_EN1_ASIP_L_OFFSET  0x0
#define INT_EN1_ASIP_L_LLEB_INT_EN1_ASIP_L_MASK  0xffffffff
#define INT_EN1_ASIP_L_LLEB_INT_EN1_ASIP_L  0xffffffff
#define INT_EN1_ASIP_H_LLEB_INT_EN1_ASIP_H_OFFSET  0x0
#define INT_EN1_ASIP_H_LLEB_INT_EN1_ASIP_H_MASK  0xffffffff
#define INT_EN1_ASIP_H_LLEB_INT_EN1_ASIP_H  0xffffffff
#define INT_EN2_ASIP_L_LLEB_INT_EN2_ASIP_L_OFFSET  0x0
#define INT_EN2_ASIP_L_LLEB_INT_EN2_ASIP_L_MASK  0xffffffff
#define INT_EN2_ASIP_L_LLEB_INT_EN2_ASIP_L  0xffffffff
#define INT_EN2_ASIP_H_LLEB_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN2_ASIP_H_LLEB_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN2_ASIP_H_LLEB_INT_EN0_ASIP_H  0xffffffff
#define INT_EN3_ASIP_L_LLEB_INT_EN3_ASIP_L_OFFSET  0x0
#define INT_EN3_ASIP_L_LLEB_INT_EN3_ASIP_L_MASK  0xffffffff
#define INT_EN3_ASIP_L_LLEB_INT_EN3_ASIP_L  0xffffffff
#define INT_EN3_ASIP_H_LLEB_INT_EN3_ASIP_H_OFFSET  0x0
#define INT_EN3_ASIP_H_LLEB_INT_EN3_ASIP_H_MASK  0xffffffff
#define INT_EN3_ASIP_H_LLEB_INT_EN3_ASIP_H  0xffffffff
#define SW_WAKEUP_LLEB_SW_WAKEUP_OFFSET  0x0
#define SW_WAKEUP_LLEB_SW_WAKEUP_MASK  0x1
#define SW_WAKEUP_LLEB_SW_WAKEUP  0x1
#define SW_WAKE_MODE_LLEB_SW_WAKE_MODE_OFFSET  0x0
#define SW_WAKE_MODE_LLEB_SW_WAKE_MODE_MASK  0x1
#define SW_WAKE_MODE_LLEB_SW_WAKE_MODE  0x1
#define DSP_CORE_SFT_INT_LLEB_DSP_SW_INT_OFFSET  0x0
#define DSP_CORE_SFT_INT_LLEB_DSP_SW_INT_MASK  0x1
#define DSP_CORE_SFT_INT_LLEB_DSP_SW_INT  0x1
#define INT_ASSIGN_ASIP_L_CAPEA_INT_ASSIGN_ASIP_L_OFFSET  0x0
#define INT_ASSIGN_ASIP_L_CAPEA_INT_ASSIGN_ASIP_L_MASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEA_INT_ASSIGN_ASIP_L  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEA_INT_ASSIGN_ASIP_H_OFFSET  0x0
#define INT_ASSIGN_ASIP_H_CAPEA_INT_ASSIGN_ASIP_H_MASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEA_INT_ASSIGN_ASIP_H  0xffffffff
#define INT_STS_ASIP_L_R_CAPEA_INT_STS_ASIP_L_R_OFFSET  0x0
#define INT_STS_ASIP_L_R_CAPEA_INT_STS_ASIP_L_R_MASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEA_INT_STS_ASIP_L_R  0xffffffff
#define INT_STS_ASIP_H_R_CAPEA_INT_STS_ASIP_H_R_OFFSET  0x0
#define INT_STS_ASIP_H_R_CAPEA_INT_STS_ASIP_H_R_MASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEA_INT_STS_ASIP_H_R  0xffffffff
#define INT_EN0_ASIP_L_CAPEA_INT_EN0_ASIP_L_OFFSET  0x0
#define INT_EN0_ASIP_L_CAPEA_INT_EN0_ASIP_L_MASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEA_INT_EN0_ASIP_L  0xffffffff
#define INT_EN0_ASIP_H_CAPEA_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN0_ASIP_H_CAPEA_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEA_INT_EN0_ASIP_H  0xffffffff
#define INT_EN1_ASIP_L_CAPEA_INT_EN1_ASIP_L_OFFSET  0x0
#define INT_EN1_ASIP_L_CAPEA_INT_EN1_ASIP_L_MASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEA_INT_EN1_ASIP_L  0xffffffff
#define INT_EN1_ASIP_H_CAPEA_INT_EN1_ASIP_H_OFFSET  0x0
#define INT_EN1_ASIP_H_CAPEA_INT_EN1_ASIP_H_MASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEA_INT_EN1_ASIP_H  0xffffffff
#define INT_EN2_ASIP_L_CAPEA_INT_EN2_ASIP_L_OFFSET  0x0
#define INT_EN2_ASIP_L_CAPEA_INT_EN2_ASIP_L_MASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEA_INT_EN2_ASIP_L  0xffffffff
#define INT_EN2_ASIP_H_CAPEA_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN2_ASIP_H_CAPEA_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEA_INT_EN0_ASIP_H  0xffffffff
#define INT_EN3_ASIP_L_CAPEA_INT_EN3_ASIP_L_OFFSET  0x0
#define INT_EN3_ASIP_L_CAPEA_INT_EN3_ASIP_L_MASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEA_INT_EN3_ASIP_L  0xffffffff
#define INT_EN3_ASIP_H_CAPEA_INT_EN3_ASIP_H_OFFSET  0x0
#define INT_EN3_ASIP_H_CAPEA_INT_EN3_ASIP_H_MASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEA_INT_EN3_ASIP_H  0xffffffff
#define SW_WAKEUP_CAPEA_SW_WAKEUP_OFFSET  0x0
#define SW_WAKEUP_CAPEA_SW_WAKEUP_MASK  0x1
#define SW_WAKEUP_CAPEA_SW_WAKEUP  0x1
#define SW_WAKE_MODE_CAPEA_SW_WAKE_MODE_OFFSET  0x0
#define SW_WAKE_MODE_CAPEA_SW_WAKE_MODE_MASK  0x1
#define SW_WAKE_MODE_CAPEA_SW_WAKE_MODE  0x1
#define DSP_CORE_SFT_INT_CAPEA_DSP_SW_INT_OFFSET  0x0
#define DSP_CORE_SFT_INT_CAPEA_DSP_SW_INT_MASK  0x1
#define DSP_CORE_SFT_INT_CAPEA_DSP_SW_INT  0x1
#define INT_ASSIGN_ASIP_L_CAPEB_INT_ASSIGN_ASIP_L_OFFSET  0x0
#define INT_ASSIGN_ASIP_L_CAPEB_INT_ASSIGN_ASIP_L_MASK  0xffffffff
#define INT_ASSIGN_ASIP_L_CAPEB_INT_ASSIGN_ASIP_L  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEB_INT_ASSIGN_ASIP_H_OFFSET  0x0
#define INT_ASSIGN_ASIP_H_CAPEB_INT_ASSIGN_ASIP_H_MASK  0xffffffff
#define INT_ASSIGN_ASIP_H_CAPEB_INT_ASSIGN_ASIP_H  0xffffffff
#define INT_STS_ASIP_L_R_CAPEB_INT_STS_ASIP_L_R_OFFSET  0x0
#define INT_STS_ASIP_L_R_CAPEB_INT_STS_ASIP_L_R_MASK  0xffffffff
#define INT_STS_ASIP_L_R_CAPEB_INT_STS_ASIP_L_R  0xffffffff
#define INT_STS_ASIP_H_R_CAPEB_INT_STS_ASIP_H_R_OFFSET  0x0
#define INT_STS_ASIP_H_R_CAPEB_INT_STS_ASIP_H_R_MASK  0xffffffff
#define INT_STS_ASIP_H_R_CAPEB_INT_STS_ASIP_H_R  0xffffffff
#define INT_EN0_ASIP_L_CAPEB_INT_EN0_ASIP_L_OFFSET  0x0
#define INT_EN0_ASIP_L_CAPEB_INT_EN0_ASIP_L_MASK  0xffffffff
#define INT_EN0_ASIP_L_CAPEB_INT_EN0_ASIP_L  0xffffffff
#define INT_EN0_ASIP_H_CAPEB_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN0_ASIP_H_CAPEB_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN0_ASIP_H_CAPEB_INT_EN0_ASIP_H  0xffffffff
#define INT_EN1_ASIP_L_CAPEB_INT_EN1_ASIP_L_OFFSET  0x0
#define INT_EN1_ASIP_L_CAPEB_INT_EN1_ASIP_L_MASK  0xffffffff
#define INT_EN1_ASIP_L_CAPEB_INT_EN1_ASIP_L  0xffffffff
#define INT_EN1_ASIP_H_CAPEB_INT_EN1_ASIP_H_OFFSET  0x0
#define INT_EN1_ASIP_H_CAPEB_INT_EN1_ASIP_H_MASK  0xffffffff
#define INT_EN1_ASIP_H_CAPEB_INT_EN1_ASIP_H  0xffffffff
#define INT_EN2_ASIP_L_CAPEB_INT_EN2_ASIP_L_OFFSET  0x0
#define INT_EN2_ASIP_L_CAPEB_INT_EN2_ASIP_L_MASK  0xffffffff
#define INT_EN2_ASIP_L_CAPEB_INT_EN2_ASIP_L  0xffffffff
#define INT_EN2_ASIP_H_CAPEB_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN2_ASIP_H_CAPEB_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN2_ASIP_H_CAPEB_INT_EN0_ASIP_H  0xffffffff
#define INT_EN3_ASIP_L_CAPEB_INT_EN3_ASIP_L_OFFSET  0x0
#define INT_EN3_ASIP_L_CAPEB_INT_EN3_ASIP_L_MASK  0xffffffff
#define INT_EN3_ASIP_L_CAPEB_INT_EN3_ASIP_L  0xffffffff
#define INT_EN3_ASIP_H_CAPEB_INT_EN3_ASIP_H_OFFSET  0x0
#define INT_EN3_ASIP_H_CAPEB_INT_EN3_ASIP_H_MASK  0xffffffff
#define INT_EN3_ASIP_H_CAPEB_INT_EN3_ASIP_H  0xffffffff
#define SW_WAKEUP_CAPEB_SW_WAKEUP_OFFSET  0x0
#define SW_WAKEUP_CAPEB_SW_WAKEUP_MASK  0x1
#define SW_WAKEUP_CAPEB_SW_WAKEUP  0x1
#define SW_WAKE_MODE_CAPEB_SW_WAKE_MODE_OFFSET  0x0
#define SW_WAKE_MODE_CAPEB_SW_WAKE_MODE_MASK  0x1
#define SW_WAKE_MODE_CAPEB_SW_WAKE_MODE  0x1
#define DSP_CORE_SFT_INT_CAPEB_DSP_SW_INT_OFFSET  0x0
#define DSP_CORE_SFT_INT_CAPEB_DSP_SW_INT_MASK  0x1
#define DSP_CORE_SFT_INT_CAPEB_DSP_SW_INT  0x1
#define INT_ASSIGN_ASIP_L_INT_ASSIGN_ASIP_L_OFFSET  0x0
#define INT_ASSIGN_ASIP_L_INT_ASSIGN_ASIP_L_MASK  0xffffffff
#define INT_ASSIGN_ASIP_L_INT_ASSIGN_ASIP_L  0xffffffff
#define INT_ASSIGN_ASIP_H_INT_ASSIGN_ASIP_H_OFFSET  0x0
#define INT_ASSIGN_ASIP_H_INT_ASSIGN_ASIP_H_MASK  0xffffffff
#define INT_ASSIGN_ASIP_H_INT_ASSIGN_ASIP_H  0xffffffff
#define INT_STS_ASIP_L_R_INT_STS_ASIP_L_R_OFFSET  0x0
#define INT_STS_ASIP_L_R_INT_STS_ASIP_L_R_MASK  0xffffffff
#define INT_STS_ASIP_L_R_INT_STS_ASIP_L_R  0xffffffff
#define INT_STS_ASIP_H_R_INT_STS_ASIP_H_R_OFFSET  0x0
#define INT_STS_ASIP_H_R_INT_STS_ASIP_H_R_MASK  0xffffffff
#define INT_STS_ASIP_H_R_INT_STS_ASIP_H_R  0xffffffff
#define INT_EN0_ASIP_L_INT_EN0_ASIP_L_OFFSET  0x0
#define INT_EN0_ASIP_L_INT_EN0_ASIP_L_MASK  0xffffffff
#define INT_EN0_ASIP_L_INT_EN0_ASIP_L  0xffffffff
#define INT_EN0_ASIP_H_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN0_ASIP_H_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN0_ASIP_H_INT_EN0_ASIP_H  0xffffffff
#define INT_EN1_ASIP_L_INT_EN1_ASIP_L_OFFSET  0x0
#define INT_EN1_ASIP_L_INT_EN1_ASIP_L_MASK  0xffffffff
#define INT_EN1_ASIP_L_INT_EN1_ASIP_L  0xffffffff
#define INT_EN1_ASIP_H_INT_EN1_ASIP_H_OFFSET  0x0
#define INT_EN1_ASIP_H_INT_EN1_ASIP_H_MASK  0xffffffff
#define INT_EN1_ASIP_H_INT_EN1_ASIP_H  0xffffffff
#define INT_EN2_ASIP_L_INT_EN2_ASIP_L_OFFSET  0x0
#define INT_EN2_ASIP_L_INT_EN2_ASIP_L_MASK  0xffffffff
#define INT_EN2_ASIP_L_INT_EN2_ASIP_L  0xffffffff
#define INT_EN2_ASIP_H_INT_EN0_ASIP_H_OFFSET  0x0
#define INT_EN2_ASIP_H_INT_EN0_ASIP_H_MASK  0xffffffff
#define INT_EN2_ASIP_H_INT_EN0_ASIP_H  0xffffffff
#define INT_EN3_ASIP_L_INT_EN3_ASIP_L_OFFSET  0x0
#define INT_EN3_ASIP_L_INT_EN3_ASIP_L_MASK  0xffffffff
#define INT_EN3_ASIP_L_INT_EN3_ASIP_L  0xffffffff
#define INT_EN3_ASIP_H_INT_EN3_ASIP_H_OFFSET  0x0
#define INT_EN3_ASIP_H_INT_EN3_ASIP_H_MASK  0xffffffff
#define INT_EN3_ASIP_H_INT_EN3_ASIP_H  0xffffffff
#define SW_WAKEUP_SW_WAKEUP_OFFSET  0x0
#define SW_WAKEUP_SW_WAKEUP_MASK  0x1
#define SW_WAKEUP_SW_WAKEUP  0x1
#define SW_WAKE_MODE_SW_WAKE_MODE_OFFSET  0x0
#define SW_WAKE_MODE_SW_WAKE_MODE_MASK  0x1
#define SW_WAKE_MODE_SW_WAKE_MODE  0x1
#define DSP_CORE_SFT_INT_DSP_SW_INT_OFFSET  0x0
#define DSP_CORE_SFT_INT_DSP_SW_INT_MASK  0x1
#define DSP_CORE_SFT_INT_DSP_SW_INT  0x1
#define TIMER_CLK_CTL_CLOCK_SELECT7_OFFSET  0x1d
#define TIMER_CLK_CTL_CLOCK_SELECT7_MASK  0xe0000000
#define TIMER_CLK_CTL_CLOCK_SELECT7  0xe0000000
#define TIMER_CLK_CTL_CLOCK_SELECT6_OFFSET  0x18
#define TIMER_CLK_CTL_CLOCK_SELECT6_MASK  0xf000000
#define TIMER_CLK_CTL_CLOCK_SELECT6  0xf000000
#define TIMER_CLK_CTL_CLOCK_SELECT5_OFFSET  0x14
#define TIMER_CLK_CTL_CLOCK_SELECT5_MASK  0xf00000
#define TIMER_CLK_CTL_CLOCK_SELECT5  0xf00000
#define TIMER_CLK_CTL_CLOCK_SELECT4_OFFSET  0x10
#define TIMER_CLK_CTL_CLOCK_SELECT4_MASK  0xf0000
#define TIMER_CLK_CTL_CLOCK_SELECT4  0xf0000
#define TIMER_CLK_CTL_CLOCK_SELECT3_OFFSET  0xc
#define TIMER_CLK_CTL_CLOCK_SELECT3_MASK  0xf000
#define TIMER_CLK_CTL_CLOCK_SELECT3  0xf000
#define TIMER_CLK_CTL_CLOCK_SELECT2_OFFSET  0x8
#define TIMER_CLK_CTL_CLOCK_SELECT2_MASK  0xf00
#define TIMER_CLK_CTL_CLOCK_SELECT2  0xf00
#define TIMER_CLK_CTL_CLOCK_SELECT1_OFFSET  0x4
#define TIMER_CLK_CTL_CLOCK_SELECT1_MASK  0xf0
#define TIMER_CLK_CTL_CLOCK_SELECT1  0xf0
#define TIMER_CLK_CTL_CLOCK_SELECT0_OFFSET  0x0
#define TIMER_CLK_CTL_CLOCK_SELECT0_MASK  0xf
#define TIMER_CLK_CTL_CLOCK_SELECT0  0xf
#define TIMER_CTL_WATCHDOG_MONITOR_OFFSET  0x10
#define TIMER_CTL_WATCHDOG_MONITOR_MASK  0xf0000
#define TIMER_CTL_WATCHDOG_MONITOR  0xf0000
#define TIMER_CTL_CLOCK_EDGE_SELECT_OFFSET  0x8
#define TIMER_CTL_CLOCK_EDGE_SELECT_MASK  0xff00
#define TIMER_CTL_CLOCK_EDGE_SELECT  0xff00
#define TIMER_CTL_COUNTER_ENABLE7_OFFSET  0x7
#define TIMER_CTL_COUNTER_ENABLE7_MASK  0x80
#define TIMER_CTL_COUNTER_ENABLE7  0x80
#define TIMER_CTL_COUNTER_ENABLE6_OFFSET  0x6
#define TIMER_CTL_COUNTER_ENABLE6_MASK  0x40
#define TIMER_CTL_COUNTER_ENABLE6  0x40
#define TIMER_CTL_COUNTER_ENABLE5_OFFSET  0x5
#define TIMER_CTL_COUNTER_ENABLE5_MASK  0x20
#define TIMER_CTL_COUNTER_ENABLE5  0x20
#define TIMER_CTL_COUNTER_ENABLE4_OFFSET  0x4
#define TIMER_CTL_COUNTER_ENABLE4_MASK  0x10
#define TIMER_CTL_COUNTER_ENABLE4  0x10
#define TIMER_CTL_COUNTER_ENABLE3_OFFSET  0x3
#define TIMER_CTL_COUNTER_ENABLE3_MASK  0x8
#define TIMER_CTL_COUNTER_ENABLE3  0x8
#define TIMER_CTL_COUNTER_ENABLE2_OFFSET  0x2
#define TIMER_CTL_COUNTER_ENABLE2_MASK  0x4
#define TIMER_CTL_COUNTER_ENABLE2  0x4
#define TIMER_CTL_COUNTER_ENABLE1_OFFSET  0x1
#define TIMER_CTL_COUNTER_ENABLE1_MASK  0x2
#define TIMER_CTL_COUNTER_ENABLE1  0x2
#define TIMER_CTL_COUNTER_ENABLE0_OFFSET  0x0
#define TIMER_CTL_COUNTER_ENABLE0_MASK  0x1
#define TIMER_CTL_COUNTER_ENABLE0  0x1
#define WTD0_CTL_WTD0_RSTEN_OFFSET  0x4
#define WTD0_CTL_WTD0_RSTEN_MASK  0x1f0
#define WTD0_CTL_WTD0_RSTEN  0x1f0
#define WTD0_CTL_WATCHDOG0_MODE_ENABLE_OFFSET  0x0
#define WTD0_CTL_WATCHDOG0_MODE_ENABLE_MASK  0xf
#define WTD0_CTL_WATCHDOG0_MODE_ENABLE  0xf
#define WTD1_CTL_WTD1_RSTEN_OFFSET  0x4
#define WTD1_CTL_WTD1_RSTEN_MASK  0x1f0
#define WTD1_CTL_WTD1_RSTEN  0x1f0
#define WTD1_CTL_WATCHDOG1_MODE_ENABLE_OFFSET  0x0
#define WTD1_CTL_WATCHDOG1_MODE_ENABLE_MASK  0xf
#define WTD1_CTL_WATCHDOG1_MODE_ENABLE  0xf
#define WTD2_CTL_WTD2_RSTEN_OFFSET  0x4
#define WTD2_CTL_WTD2_RSTEN_MASK  0x1f0
#define WTD2_CTL_WTD2_RSTEN  0x1f0
#define WTD2_CTL_WATCHDOG2_MODE_ENABLE_OFFSET  0x0
#define WTD2_CTL_WATCHDOG2_MODE_ENABLE_MASK  0xf
#define WTD2_CTL_WATCHDOG2_MODE_ENABLE  0xf
#define WTD3_CTL_WTD3_RSTEN_OFFSET  0x4
#define WTD3_CTL_WTD3_RSTEN_MASK  0x1f0
#define WTD3_CTL_WTD3_RSTEN  0x1f0
#define WTD3_CTL_WATCHDOG3_MODE_ENABLE_OFFSET  0x0
#define WTD3_CTL_WATCHDOG3_MODE_ENABLE_MASK  0xf
#define WTD3_CTL_WATCHDOG3_MODE_ENABLE  0xf
#define TIMER_CNT0_TIMER0_COUNT_OFFSET  0x0
#define TIMER_CNT0_TIMER0_COUNT_MASK  0xffffffff
#define TIMER_CNT0_TIMER0_COUNT  0xffffffff
#define TIMER_LIMT0_TIMER0_LIMIT_OFFSET  0x0
#define TIMER_LIMT0_TIMER0_LIMIT_MASK  0xffffffff
#define TIMER_LIMT0_TIMER0_LIMIT  0xffffffff
#define TIMER_CNT1_TIMER1_COUNT_OFFSET  0x0
#define TIMER_CNT1_TIMER1_COUNT_MASK  0xffffffff
#define TIMER_CNT1_TIMER1_COUNT  0xffffffff
#define TIMER_LIMT1_TIMER1_LIMIT_OFFSET  0x0
#define TIMER_LIMT1_TIMER1_LIMIT_MASK  0xffffffff
#define TIMER_LIMT1_TIMER1_LIMIT  0xffffffff
#define TIMER_CNT2_TIMER2_COUNT_OFFSET  0x0
#define TIMER_CNT2_TIMER2_COUNT_MASK  0xffffffff
#define TIMER_CNT2_TIMER2_COUNT  0xffffffff
#define TIMER_LIMT2_TIMER2_LIMIT_OFFSET  0x0
#define TIMER_LIMT2_TIMER2_LIMIT_MASK  0xffffffff
#define TIMER_LIMT2_TIMER2_LIMIT  0xffffffff
#define TIMER_CNT3_TIMER3_COUNT_OFFSET  0x0
#define TIMER_CNT3_TIMER3_COUNT_MASK  0xffffffff
#define TIMER_CNT3_TIMER3_COUNT  0xffffffff
#define TIMER_LIMT3_TIMER3_LIMIT_OFFSET  0x0
#define TIMER_LIMT3_TIMER3_LIMIT_MASK  0xffffffff
#define TIMER_LIMT3_TIMER3_LIMIT  0xffffffff
#define TIMER_CNT4_TIMER3_COUNT_OFFSET  0x0
#define TIMER_CNT4_TIMER3_COUNT_MASK  0xffffffff
#define TIMER_CNT4_TIMER3_COUNT  0xffffffff
#define TIMER_LIMT4_TIMER4_LIMIT_OFFSET  0x0
#define TIMER_LIMT4_TIMER4_LIMIT_MASK  0xffffffff
#define TIMER_LIMT4_TIMER4_LIMIT  0xffffffff
#define TIMER_CNT5_TIMER5_COUNT_OFFSET  0x0
#define TIMER_CNT5_TIMER5_COUNT_MASK  0xffffffff
#define TIMER_CNT5_TIMER5_COUNT  0xffffffff
#define TIMER_LIMT5_TIMER4_LIMIT_OFFSET  0x0
#define TIMER_LIMT5_TIMER4_LIMIT_MASK  0xffffffff
#define TIMER_LIMT5_TIMER4_LIMIT  0xffffffff
#define TIMER_CNT6_TIMER6_COUNT_OFFSET  0x0
#define TIMER_CNT6_TIMER6_COUNT_MASK  0xffffffff
#define TIMER_CNT6_TIMER6_COUNT  0xffffffff
#define TIMER_LIMT6_TIMER6_LIMIT_OFFSET  0x0
#define TIMER_LIMT6_TIMER6_LIMIT_MASK  0xffffffff
#define TIMER_LIMT6_TIMER6_LIMIT  0xffffffff
#define TIMER_CNT7_TIMER6_COUNT_OFFSET  0x0
#define TIMER_CNT7_TIMER6_COUNT_MASK  0xffffffff
#define TIMER_CNT7_TIMER6_COUNT  0xffffffff
#define TIMER_LIMT7_TIMER7_LIMIT_OFFSET  0x0
#define TIMER_LIMT7_TIMER7_LIMIT_MASK  0xffffffff
#define TIMER_LIMT7_TIMER7_LIMIT  0xffffffff
#define TIMER_INTERRUPT_TIMER_STROBE7_OFFSET  0xa
#define TIMER_INTERRUPT_TIMER_STROBE7_MASK  0x400
#define TIMER_INTERRUPT_TIMER_STROBE7  0x400
#define TIMER_INTERRUPT_TIMER_STROBE6_OFFSET  0x9
#define TIMER_INTERRUPT_TIMER_STROBE6_MASK  0x200
#define TIMER_INTERRUPT_TIMER_STROBE6  0x200
#define TIMER_INTERRUPT_TIMER_STROBE5_OFFSET  0x8
#define TIMER_INTERRUPT_TIMER_STROBE5_MASK  0x100
#define TIMER_INTERRUPT_TIMER_STROBE5  0x100
#define TIMER_INTERRUPT_TIMER_STROBE4_OFFSET  0x7
#define TIMER_INTERRUPT_TIMER_STROBE4_MASK  0x80
#define TIMER_INTERRUPT_TIMER_STROBE4  0x80
#define TIMER_INTERRUPT_TIMER_STROBE3_OFFSET  0x6
#define TIMER_INTERRUPT_TIMER_STROBE3_MASK  0x40
#define TIMER_INTERRUPT_TIMER_STROBE3  0x40
#define TIMER_INTERRUPT_TIMER_STROBE2_OFFSET  0x5
#define TIMER_INTERRUPT_TIMER_STROBE2_MASK  0x20
#define TIMER_INTERRUPT_TIMER_STROBE2  0x20
#define TIMER_INTERRUPT_TIMER_STROBE1_OFFSET  0x4
#define TIMER_INTERRUPT_TIMER_STROBE1_MASK  0x10
#define TIMER_INTERRUPT_TIMER_STROBE1  0x10
#define TIMER_INTERRUPT_TIMER_STROBE0_D_OFFSET  0x3
#define TIMER_INTERRUPT_TIMER_STROBE0_D_MASK  0x8
#define TIMER_INTERRUPT_TIMER_STROBE0_D  0x8
#define TIMER_INTERRUPT_TIMER_STROBE0_C_OFFSET  0x2
#define TIMER_INTERRUPT_TIMER_STROBE0_C_MASK  0x4
#define TIMER_INTERRUPT_TIMER_STROBE0_C  0x4
#define TIMER_INTERRUPT_TIMER_STROBE0_B_OFFSET  0x1
#define TIMER_INTERRUPT_TIMER_STROBE0_B_MASK  0x2
#define TIMER_INTERRUPT_TIMER_STROBE0_B  0x2
#define TIMER_INTERRUPT_TIMER_STROBE0_A_OFFSET  0x0
#define TIMER_INTERRUPT_TIMER_STROBE0_A_MASK  0x1
#define TIMER_INTERRUPT_TIMER_STROBE0_A  0x1
#define ANC_OUT_CH0_ANC_OUT_CH0_OFFSET  0x8
#define ANC_OUT_CH0_ANC_OUT_CH0_MASK  0xffffff00
#define ANC_OUT_CH0_ANC_OUT_CH0  0xffffff00
#define ANC_OUT_CH1_ANC_OUT_CH1_OFFSET  0x8
#define ANC_OUT_CH1_ANC_OUT_CH1_MASK  0xffffff00
#define ANC_OUT_CH1_ANC_OUT_CH1  0xffffff00
#define LL_DECIM_IN_CH0_LL_DECIM_IN_CH0_OFFSET  0x8
#define LL_DECIM_IN_CH0_LL_DECIM_IN_CH0_MASK  0xffffff00
#define LL_DECIM_IN_CH0_LL_DECIM_IN_CH0  0xffffff00
#define LL_DECIM_IN_CH1_LL_DECIM_IN_CH1_OFFSET  0x8
#define LL_DECIM_IN_CH1_LL_DECIM_IN_CH1_MASK  0xffffff00
#define LL_DECIM_IN_CH1_LL_DECIM_IN_CH1  0xffffff00
#define LL_DECIM_IN_CH2_LL_DECIM_IN_CH2_OFFSET  0x8
#define LL_DECIM_IN_CH2_LL_DECIM_IN_CH2_MASK  0xffffff00
#define LL_DECIM_IN_CH2_LL_DECIM_IN_CH2  0xffffff00
#define LL_DECIM_IN_CH3_LL_DECIM_IN_CH3_OFFSET  0x8
#define LL_DECIM_IN_CH3_LL_DECIM_IN_CH3_MASK  0xffffff00
#define LL_DECIM_IN_CH3_LL_DECIM_IN_CH3  0xffffff00
#define LL_INTERPO_IN_CH0_LL_INTERPO_IN_CH0_OFFSET  0x8
#define LL_INTERPO_IN_CH0_LL_INTERPO_IN_CH0_MASK  0xffffff00
#define LL_INTERPO_IN_CH0_LL_INTERPO_IN_CH0  0xffffff00
#define LL_INTERPO_IN_CH1_LL_INTERPO_IN_CH1_OFFSET  0x8
#define LL_INTERPO_IN_CH1_LL_INTERPO_IN_CH1_MASK  0xffffff00
#define LL_INTERPO_IN_CH1_LL_INTERPO_IN_CH1  0xffffff00
#define LL_ELINK_IN_CH0_LL_ELINK_IN_CH0_OFFSET  0x8
#define LL_ELINK_IN_CH0_LL_ELINK_IN_CH0_MASK  0xffffff00
#define LL_ELINK_IN_CH0_LL_ELINK_IN_CH0  0xffffff00
#define LL_ELINK_IN_CH1_LL_ELINK_IN_CH1_OFFSET  0x8
#define LL_ELINK_IN_CH1_LL_ELINK_IN_CH1_MASK  0xffffff00
#define LL_ELINK_IN_CH1_LL_ELINK_IN_CH1  0xffffff00
#define ARM_MEM_MISC_CTRL0_TEST1_OFFSET  0xe
#define ARM_MEM_MISC_CTRL0_TEST1_MASK  0x4000
#define ARM_MEM_MISC_CTRL0_TEST1  0x4000
#define ARM_MEM_MISC_CTRL0_RA_OFFSET  0xc
#define ARM_MEM_MISC_CTRL0_RA_MASK  0x3000
#define ARM_MEM_MISC_CTRL0_RA  0x3000
#define ARM_MEM_MISC_CTRL0_LS_OFFSET  0xb
#define ARM_MEM_MISC_CTRL0_LS_MASK  0x800
#define ARM_MEM_MISC_CTRL0_LS  0x800
#define ARM_MEM_MISC_CTRL0_WA_OFFSET  0x8
#define ARM_MEM_MISC_CTRL0_WA_MASK  0x700
#define ARM_MEM_MISC_CTRL0_WA  0x700
#define ARM_MEM_MISC_CTRL0_WPULSE_OFFSET  0x5
#define ARM_MEM_MISC_CTRL0_WPULSE_MASK  0xe0
#define ARM_MEM_MISC_CTRL0_WPULSE  0xe0
#define ARM_MEM_MISC_CTRL0_RME_OFFSET  0x4
#define ARM_MEM_MISC_CTRL0_RME_MASK  0x10
#define ARM_MEM_MISC_CTRL0_RME  0x10
#define ARM_MEM_MISC_CTRL0_RM_OFFSET  0x0
#define ARM_MEM_MISC_CTRL0_RM_MASK  0xf
#define ARM_MEM_MISC_CTRL0_RM  0xf
#define ARM_MEM_MISC_CTRL8_TEST1_OFFSET  0xe
#define ARM_MEM_MISC_CTRL8_TEST1_MASK  0x4000
#define ARM_MEM_MISC_CTRL8_TEST1  0x4000
#define ARM_MEM_MISC_CTRL8_RA_OFFSET  0xc
#define ARM_MEM_MISC_CTRL8_RA_MASK  0x3000
#define ARM_MEM_MISC_CTRL8_RA  0x3000
#define ARM_MEM_MISC_CTRL8_LS_OFFSET  0xb
#define ARM_MEM_MISC_CTRL8_LS_MASK  0x800
#define ARM_MEM_MISC_CTRL8_LS  0x800
#define ARM_MEM_MISC_CTRL8_WA_OFFSET  0x8
#define ARM_MEM_MISC_CTRL8_WA_MASK  0x700
#define ARM_MEM_MISC_CTRL8_WA  0x700
#define ARM_MEM_MISC_CTRL8_WPULSE_OFFSET  0x5
#define ARM_MEM_MISC_CTRL8_WPULSE_MASK  0xe0
#define ARM_MEM_MISC_CTRL8_WPULSE  0xe0
#define ARM_MEM_MISC_CTRL8_RME_OFFSET  0x4
#define ARM_MEM_MISC_CTRL8_RME_MASK  0x10
#define ARM_MEM_MISC_CTRL8_RME  0x10
#define ARM_MEM_MISC_CTRL8_RM_OFFSET  0x0
#define ARM_MEM_MISC_CTRL8_RM_MASK  0xf
#define ARM_MEM_MISC_CTRL8_RM  0xf
#define QSPI_MISC_OPTION_QSPI_I_OTP_OVERRIDE_OFFSET  0x14
#define QSPI_MISC_OPTION_QSPI_I_OTP_OVERRIDE_MASK  0x100000
#define QSPI_MISC_OPTION_QSPI_I_OTP_OVERRIDE  0x100000
#define QSPI_MISC_OPTION_QSPI_I_PRE_LOAD_DMA_DISABLE_OTP_OFFSET  0x13
#define QSPI_MISC_OPTION_QSPI_I_PRE_LOAD_DMA_DISABLE_OTP_MASK  0x80000
#define QSPI_MISC_OPTION_QSPI_I_PRE_LOAD_DMA_DISABLE_OTP  0x80000
#define QSPI_MISC_OPTION_QSPI_I_ADDR_LEN_OTP_OFFSET  0x10
#define QSPI_MISC_OPTION_QSPI_I_ADDR_LEN_OTP_MASK  0x70000
#define QSPI_MISC_OPTION_QSPI_I_ADDR_LEN_OTP  0x70000
#define QSPI_MISC_OPTION_QSPI_I_SPI_MODE_OTP_OFFSET  0xe
#define QSPI_MISC_OPTION_QSPI_I_SPI_MODE_OTP_MASK  0xc000
#define QSPI_MISC_OPTION_QSPI_I_SPI_MODE_OTP  0xc000
#define QSPI_MISC_OPTION_QSPI_I_DUMMY_CYCLES_OTP_OFFSET  0x8
#define QSPI_MISC_OPTION_QSPI_I_DUMMY_CYCLES_OTP_MASK  0x3f00
#define QSPI_MISC_OPTION_QSPI_I_DUMMY_CYCLES_OTP  0x3f00
#define QSPI_MISC_OPTION_QSPI_I_INST_OTP_OFFSET  0x0
#define QSPI_MISC_OPTION_QSPI_I_INST_OTP_MASK  0xff
#define QSPI_MISC_OPTION_QSPI_I_INST_OTP  0xff
#define SSE200_PCLK_GATE_DSP_CORE_GCK_CTL_OFFSET  0x0
#define SSE200_PCLK_GATE_DSP_CORE_GCK_CTL_MASK  0xf
#define SSE200_PCLK_GATE_DSP_CORE_GCK_CTL  0xf
#define RRAM_CFG_DATA_L_RRAM_CFG_DATA_L_OFFSET  0x0
#define RRAM_CFG_DATA_L_RRAM_CFG_DATA_L_MASK  0xffffffff
#define RRAM_CFG_DATA_L_RRAM_CFG_DATA_L  0xffffffff
#define RRAM_CFG_DATA_H_RRAM_CFG_DATA_H_OFFSET  0x0
#define RRAM_CFG_DATA_H_RRAM_CFG_DATA_H_MASK  0xffffffff
#define RRAM_CFG_DATA_H_RRAM_CFG_DATA_H  0xffffffff
#define I2C_SLAVE_BASE_ADDR_BASE_ADDR_OFFSET  0x0
#define I2C_SLAVE_BASE_ADDR_BASE_ADDR_MASK  0xffffffff
#define I2C_SLAVE_BASE_ADDR_BASE_ADDR  0xffffffff
#define I2C_SLAVE_LIMIT_ADDR_LIMIT_ADDR_OFFSET  0x0
#define I2C_SLAVE_LIMIT_ADDR_LIMIT_ADDR_MASK  0xffffffff
#define I2C_SLAVE_LIMIT_ADDR_LIMIT_ADDR  0xffffffff
#define I2C_SLAVE_ZERO_ADDR_ZERO_INT_CLEAR_OFFSET  0x1
#define I2C_SLAVE_ZERO_ADDR_ZERO_INT_CLEAR_MASK  0x2
#define I2C_SLAVE_ZERO_ADDR_ZERO_INT_CLEAR  0x2
#define I2C_SLAVE_ZERO_ADDR_ZERO_INT_ENABLE_OFFSET  0x0
#define I2C_SLAVE_ZERO_ADDR_ZERO_INT_ENABLE_MASK  0x1
#define I2C_SLAVE_ZERO_ADDR_ZERO_INT_ENABLE  0x1
#define I2C_SLAVE_LIMIT_INTERRUPT_LIMIT_INT_CLEAR_OFFSET  0x1
#define I2C_SLAVE_LIMIT_INTERRUPT_LIMIT_INT_CLEAR_MASK  0x2
#define I2C_SLAVE_LIMIT_INTERRUPT_LIMIT_INT_CLEAR  0x2
#define I2C_SLAVE_LIMIT_INTERRUPT_LIMIT_INT_ENABLE_OFFSET  0x0
#define I2C_SLAVE_LIMIT_INTERRUPT_LIMIT_INT_ENABLE_MASK  0x1
#define I2C_SLAVE_LIMIT_INTERRUPT_LIMIT_INT_ENABLE  0x1
#define I2C_SLAVE_ADDR_DEV_ADDR_UPDATE_OFFSET  0x7
#define I2C_SLAVE_ADDR_DEV_ADDR_UPDATE_MASK  0x80
#define I2C_SLAVE_ADDR_DEV_ADDR_UPDATE  0x80
#define I2C_SLAVE_ADDR_I2C_SLAVE_ADDR_OFFSET  0x0
#define I2C_SLAVE_ADDR_I2C_SLAVE_ADDR_MASK  0x7f
#define I2C_SLAVE_ADDR_I2C_SLAVE_ADDR  0x7f
#define I2C_SLAVE_OFFSET_SIZE_OFFSET_SIZE_OFFSET  0x0
#define I2C_SLAVE_OFFSET_SIZE_OFFSET_SIZE_MASK  0x3
#define I2C_SLAVE_OFFSET_SIZE_OFFSET_SIZE  0x3
#define RA_I2CM_CTL_RXHFIE_OFFSET  0x1e
#define RA_I2CM_CTL_RXHFIE_MASK  0x40000000
#define RA_I2CM_CTL_RXHFIE  0x40000000
#define RA_I2CM_CTL_RXFULLIE_OFFSET  0x1d
#define RA_I2CM_CTL_RXFULLIE_MASK  0x20000000
#define RA_I2CM_CTL_RXFULLIE  0x20000000
#define RA_I2CM_CTL_RXEMPTYIE_OFFSET  0x1c
#define RA_I2CM_CTL_RXEMPTYIE_MASK  0x10000000
#define RA_I2CM_CTL_RXEMPTYIE  0x10000000
#define RA_I2CM_CTL_TXHEIE_OFFSET  0x1b
#define RA_I2CM_CTL_TXHEIE_MASK  0x8000000
#define RA_I2CM_CTL_TXHEIE  0x8000000
#define RA_I2CM_CTL_TXFULLIE_OFFSET  0x1a
#define RA_I2CM_CTL_TXFULLIE_MASK  0x4000000
#define RA_I2CM_CTL_TXFULLIE  0x4000000
#define RA_I2CM_CTL_TXEMPTYIE_OFFSET  0x19
#define RA_I2CM_CTL_TXEMPTYIE_MASK  0x2000000
#define RA_I2CM_CTL_TXEMPTYIE  0x2000000
#define RA_I2CM_CTL_I2CTRANSIE_OFFSET  0x18
#define RA_I2CM_CTL_I2CTRANSIE_MASK  0x1000000
#define RA_I2CM_CTL_I2CTRANSIE  0x1000000
#define RA_I2CM_CTL_I2C_DADDR_RD_NAK_IE_OFFSET  0x17
#define RA_I2CM_CTL_I2C_DADDR_RD_NAK_IE_MASK  0x800000
#define RA_I2CM_CTL_I2C_DADDR_RD_NAK_IE  0x800000
#define RA_I2CM_CTL_I2C_DATA_NAK_IE_OFFSET  0x16
#define RA_I2CM_CTL_I2C_DATA_NAK_IE_MASK  0x400000
#define RA_I2CM_CTL_I2C_DATA_NAK_IE  0x400000
#define RA_I2CM_CTL_I2C_SUBADDR_NAK_IE_OFFSET  0x15
#define RA_I2CM_CTL_I2C_SUBADDR_NAK_IE_MASK  0x200000
#define RA_I2CM_CTL_I2C_SUBADDR_NAK_IE  0x200000
#define RA_I2CM_CTL_I2C_DADDR_7B_NAK_IE_OFFSET  0x14
#define RA_I2CM_CTL_I2C_DADDR_7B_NAK_IE_MASK  0x100000
#define RA_I2CM_CTL_I2C_DADDR_7B_NAK_IE  0x100000
#define RA_I2CM_CTL_DEV_ADDR_10B_NAK_IE_OFFSET  0x13
#define RA_I2CM_CTL_DEV_ADDR_10B_NAK_IE_MASK  0x80000
#define RA_I2CM_CTL_DEV_ADDR_10B_NAK_IE  0x80000
#define RA_I2CM_CTL_I2C_BUS_CLEAR_OFFSET  0x11
#define RA_I2CM_CTL_I2C_BUS_CLEAR_MASK  0x20000
#define RA_I2CM_CTL_I2C_BUS_CLEAR  0x20000
#define RA_I2CM_CTL_I2C_BR_OFFSET  0x3
#define RA_I2CM_CTL_I2C_BR_MASK  0x1fff8
#define RA_I2CM_CTL_I2C_BR  0x1fff8
#define RA_I2CM_CTL_FIFO_FLUSH_OFFSET  0x2
#define RA_I2CM_CTL_FIFO_FLUSH_MASK  0x4
#define RA_I2CM_CTL_FIFO_FLUSH  0x4
#define RA_I2CM_CTL_RXDMA_CONT_ENB_OFFSET  0x1
#define RA_I2CM_CTL_RXDMA_CONT_ENB_MASK  0x2
#define RA_I2CM_CTL_RXDMA_CONT_ENB  0x2
#define RA_I2CM_CTL_TXDMA_CONT_ENB_OFFSET  0x0
#define RA_I2CM_CTL_TXDMA_CONT_ENB_MASK  0x1
#define RA_I2CM_CTL_TXDMA_CONT_ENB  0x1
#define RA_I2CM_STAT_CLR_STATUS_OFFSET  0x8
#define RA_I2CM_STAT_CLR_STATUS_MASK  0x100
#define RA_I2CM_STAT_CLR_STATUS  0x100
#define RA_I2CM_STAT_XFER_PROG_OFFSET  0x7
#define RA_I2CM_STAT_XFER_PROG_MASK  0x80
#define RA_I2CM_STAT_XFER_PROG  0x80
#define RA_I2CM_STAT_RX_FIFO_HF_OFFSET  0x6
#define RA_I2CM_STAT_RX_FIFO_HF_MASK  0x40
#define RA_I2CM_STAT_RX_FIFO_HF  0x40
#define RA_I2CM_STAT_RX_FIFO_FULL_OFFSET  0x5
#define RA_I2CM_STAT_RX_FIFO_FULL_MASK  0x20
#define RA_I2CM_STAT_RX_FIFO_FULL  0x20
#define RA_I2CM_STAT_RX_FIFO_EMPTY_OFFSET  0x4
#define RA_I2CM_STAT_RX_FIFO_EMPTY_MASK  0x10
#define RA_I2CM_STAT_RX_FIFO_EMPTY  0x10
#define RA_I2CM_STAT_TX_FIFO_HE_OFFSET  0x3
#define RA_I2CM_STAT_TX_FIFO_HE_MASK  0x8
#define RA_I2CM_STAT_TX_FIFO_HE  0x8
#define RA_I2CM_STAT_TX_FIFO_FULL_OFFSET  0x2
#define RA_I2CM_STAT_TX_FIFO_FULL_MASK  0x4
#define RA_I2CM_STAT_TX_FIFO_FULL  0x4
#define RA_I2CM_STAT_TX_FIFO_EMPTY_OFFSET  0x1
#define RA_I2CM_STAT_TX_FIFO_EMPTY_MASK  0x2
#define RA_I2CM_STAT_TX_FIFO_EMPTY  0x2
#define RA_I2CM_STAT_I2CTRANSI_OFFSET  0x0
#define RA_I2CM_STAT_I2CTRANSI_MASK  0x1
#define RA_I2CM_STAT_I2CTRANSI  0x1
#define RA_I2CM_NAK_FFLVL_DEV_RD_NAK_INT_OFFSET  0x1c
#define RA_I2CM_NAK_FFLVL_DEV_RD_NAK_INT_MASK  0x10000000
#define RA_I2CM_NAK_FFLVL_DEV_RD_NAK_INT  0x10000000
#define RA_I2CM_NAK_FFLVL_DATA_NAK_INT_OFFSET  0x1b
#define RA_I2CM_NAK_FFLVL_DATA_NAK_INT_MASK  0x8000000
#define RA_I2CM_NAK_FFLVL_DATA_NAK_INT  0x8000000
#define RA_I2CM_NAK_FFLVL_SUBADDR_NAK_INT_OFFSET  0x1a
#define RA_I2CM_NAK_FFLVL_SUBADDR_NAK_INT_MASK  0x4000000
#define RA_I2CM_NAK_FFLVL_SUBADDR_NAK_INT  0x4000000
#define RA_I2CM_NAK_FFLVL_DEV_ADDR_7B_NAK_INT_OFFSET  0x19
#define RA_I2CM_NAK_FFLVL_DEV_ADDR_7B_NAK_INT_MASK  0x2000000
#define RA_I2CM_NAK_FFLVL_DEV_ADDR_7B_NAK_INT  0x2000000
#define RA_I2CM_NAK_FFLVL_DEV_ADDR_10B_NAK_INT_OFFSET  0x18
#define RA_I2CM_NAK_FFLVL_DEV_ADDR_10B_NAK_INT_MASK  0x1000000
#define RA_I2CM_NAK_FFLVL_DEV_ADDR_10B_NAK_INT  0x1000000
#define RA_I2CM_NAK_FFLVL_FIFO_LVL_OFFSET  0x0
#define RA_I2CM_NAK_FFLVL_FIFO_LVL_MASK  0x3f
#define RA_I2CM_NAK_FFLVL_FIFO_LVL  0x3f
#define RA_I2CM_XFER_I2C_TX_BYTES_OFFSET  0x10
#define RA_I2CM_XFER_I2C_TX_BYTES_MASK  0x3fff0000
#define RA_I2CM_XFER_I2C_TX_BYTES  0x3fff0000
#define RA_I2CM_XFER_I2C_RX_BYTES_OFFSET  0x0
#define RA_I2CM_XFER_I2C_RX_BYTES_MASK  0x3fff
#define RA_I2CM_XFER_I2C_RX_BYTES  0x3fff
#define RA_I2CM_XCNT_TX_RX_DIR_OFFSET  0xe
#define RA_I2CM_XCNT_TX_RX_DIR_MASK  0x4000
#define RA_I2CM_XCNT_TX_RX_DIR  0x4000
#define RA_I2CM_XCNT_I2C_TRANS_CNT_OFFSET  0x0
#define RA_I2CM_XCNT_I2C_TRANS_CNT_MASK  0x3fff
#define RA_I2CM_XCNT_I2C_TRANS_CNT  0x3fff
#define RA_I2CM_CTL_2_FIFO_LEVEL_ACCESS_OFFSET  0x1e
#define RA_I2CM_CTL_2_FIFO_LEVEL_ACCESS_MASK  0x40000000
#define RA_I2CM_CTL_2_FIFO_LEVEL_ACCESS  0x40000000
#define RA_I2CM_CTL_2_FIFO_LEVEL_OFFSET  0x18
#define RA_I2CM_CTL_2_FIFO_LEVEL_MASK  0x3f000000
#define RA_I2CM_CTL_2_FIFO_LEVEL  0x3f000000
#define RA_I2CM_CTL_2_TX_ENDIANESS_OFFSET  0x17
#define RA_I2CM_CTL_2_TX_ENDIANESS_MASK  0x800000
#define RA_I2CM_CTL_2_TX_ENDIANESS  0x800000
#define RA_I2CM_CTL_2_RX_ENDIANESS_OFFSET  0x16
#define RA_I2CM_CTL_2_RX_ENDIANESS_MASK  0x400000
#define RA_I2CM_CTL_2_RX_ENDIANESS  0x400000
#define RA_I2CM_CTL_2_I2C_READ_SA_OFFSET  0x15
#define RA_I2CM_CTL_2_I2C_READ_SA_MASK  0x200000
#define RA_I2CM_CTL_2_I2C_READ_SA  0x200000
#define RA_I2CM_CTL_2_I2C_READ_WRN_OFFSET  0x14
#define RA_I2CM_CTL_2_I2C_READ_WRN_MASK  0x100000
#define RA_I2CM_CTL_2_I2C_READ_WRN  0x100000
#define RA_I2CM_CTL_2_DEV_ADDR_10B_7B_SEL_OFFSET  0x13
#define RA_I2CM_CTL_2_DEV_ADDR_10B_7B_SEL_MASK  0x80000
#define RA_I2CM_CTL_2_DEV_ADDR_10B_7B_SEL  0x80000
#define RA_I2CM_CTL_2_I2C_DADDR_OFFSET  0x4
#define RA_I2CM_CTL_2_I2C_DADDR_MASK  0x7fff0
#define RA_I2CM_CTL_2_I2C_DADDR  0x7fff0
#define RA_I2CM_CTL_2_I2C_SYNC_OFFSET  0x3
#define RA_I2CM_CTL_2_I2C_SYNC_MASK  0x8
#define RA_I2CM_CTL_2_I2C_SYNC  0x8
#define RA_I2CM_CTL_2_I2C_SADDR_LEN_OFFSET  0x0
#define RA_I2CM_CTL_2_I2C_SADDR_LEN_MASK  0x7
#define RA_I2CM_CTL_2_I2C_SADDR_LEN  0x7
#define FLEXI_DMA0_ENABLE_DMA_7_STATUS_CLR_INT_OFFSET  0x1f
#define FLEXI_DMA0_ENABLE_DMA_7_STATUS_CLR_INT_MASK  0x80000000
#define FLEXI_DMA0_ENABLE_DMA_7_STATUS_CLR_INT  0x80000000
#define FLEXI_DMA0_ENABLE_DMA_6_STATUS_CLR_INT_OFFSET  0x1e
#define FLEXI_DMA0_ENABLE_DMA_6_STATUS_CLR_INT_MASK  0x40000000
#define FLEXI_DMA0_ENABLE_DMA_6_STATUS_CLR_INT  0x40000000
#define FLEXI_DMA0_ENABLE_DMA_5_STATUS_CLR_INT_OFFSET  0x1d
#define FLEXI_DMA0_ENABLE_DMA_5_STATUS_CLR_INT_MASK  0x20000000
#define FLEXI_DMA0_ENABLE_DMA_5_STATUS_CLR_INT  0x20000000
#define FLEXI_DMA0_ENABLE_DMA_4_STATUS_CLR_INT_OFFSET  0x1c
#define FLEXI_DMA0_ENABLE_DMA_4_STATUS_CLR_INT_MASK  0x10000000
#define FLEXI_DMA0_ENABLE_DMA_4_STATUS_CLR_INT  0x10000000
#define FLEXI_DMA0_ENABLE_DMA_3_STATUS_CLR_INT_OFFSET  0x1b
#define FLEXI_DMA0_ENABLE_DMA_3_STATUS_CLR_INT_MASK  0x8000000
#define FLEXI_DMA0_ENABLE_DMA_3_STATUS_CLR_INT  0x8000000
#define FLEXI_DMA0_ENABLE_DMA_2_STATUS_CLR_INT_OFFSET  0x1a
#define FLEXI_DMA0_ENABLE_DMA_2_STATUS_CLR_INT_MASK  0x4000000
#define FLEXI_DMA0_ENABLE_DMA_2_STATUS_CLR_INT  0x4000000
#define FLEXI_DMA0_ENABLE_DMA_1_STATUS_CLR_INT_OFFSET  0x19
#define FLEXI_DMA0_ENABLE_DMA_1_STATUS_CLR_INT_MASK  0x2000000
#define FLEXI_DMA0_ENABLE_DMA_1_STATUS_CLR_INT  0x2000000
#define FLEXI_DMA0_ENABLE_DMA_0_STATUS_CLR_INT_OFFSET  0x18
#define FLEXI_DMA0_ENABLE_DMA_0_STATUS_CLR_INT_MASK  0x1000000
#define FLEXI_DMA0_ENABLE_DMA_0_STATUS_CLR_INT  0x1000000
#define FLEXI_DMA0_ENABLE_DMA_7_IRQ_EN_OFFSET  0x17
#define FLEXI_DMA0_ENABLE_DMA_7_IRQ_EN_MASK  0x800000
#define FLEXI_DMA0_ENABLE_DMA_7_IRQ_EN  0x800000
#define FLEXI_DMA0_ENABLE_DMA_6_IRQ_EN_OFFSET  0x16
#define FLEXI_DMA0_ENABLE_DMA_6_IRQ_EN_MASK  0x400000
#define FLEXI_DMA0_ENABLE_DMA_6_IRQ_EN  0x400000
#define FLEXI_DMA0_ENABLE_DMA_5_IRQ_EN_OFFSET  0x15
#define FLEXI_DMA0_ENABLE_DMA_5_IRQ_EN_MASK  0x200000
#define FLEXI_DMA0_ENABLE_DMA_5_IRQ_EN  0x200000
#define FLEXI_DMA0_ENABLE_DMA_4_IRQ_EN_OFFSET  0x14
#define FLEXI_DMA0_ENABLE_DMA_4_IRQ_EN_MASK  0x100000
#define FLEXI_DMA0_ENABLE_DMA_4_IRQ_EN  0x100000
#define FLEXI_DMA0_ENABLE_DMA_3_IRQ_EN_OFFSET  0x13
#define FLEXI_DMA0_ENABLE_DMA_3_IRQ_EN_MASK  0x80000
#define FLEXI_DMA0_ENABLE_DMA_3_IRQ_EN  0x80000
#define FLEXI_DMA0_ENABLE_DMA_2_IRQ_EN_OFFSET  0x12
#define FLEXI_DMA0_ENABLE_DMA_2_IRQ_EN_MASK  0x40000
#define FLEXI_DMA0_ENABLE_DMA_2_IRQ_EN  0x40000
#define FLEXI_DMA0_ENABLE_DMA_1_IRQ_EN_OFFSET  0x11
#define FLEXI_DMA0_ENABLE_DMA_1_IRQ_EN_MASK  0x20000
#define FLEXI_DMA0_ENABLE_DMA_1_IRQ_EN  0x20000
#define FLEXI_DMA0_ENABLE_DMA_0_IRQ_EN_OFFSET  0x10
#define FLEXI_DMA0_ENABLE_DMA_0_IRQ_EN_MASK  0x10000
#define FLEXI_DMA0_ENABLE_DMA_0_IRQ_EN  0x10000
#define FLEXI_DMA0_ENABLE_DMA_REQ_7_EN_OFFSET  0xf
#define FLEXI_DMA0_ENABLE_DMA_REQ_7_EN_MASK  0x8000
#define FLEXI_DMA0_ENABLE_DMA_REQ_7_EN  0x8000
#define FLEXI_DMA0_ENABLE_DMA_REQ_6_EN_OFFSET  0xe
#define FLEXI_DMA0_ENABLE_DMA_REQ_6_EN_MASK  0x4000
#define FLEXI_DMA0_ENABLE_DMA_REQ_6_EN  0x4000
#define FLEXI_DMA0_ENABLE_DMA_REQ_5_EN_OFFSET  0xd
#define FLEXI_DMA0_ENABLE_DMA_REQ_5_EN_MASK  0x2000
#define FLEXI_DMA0_ENABLE_DMA_REQ_5_EN  0x2000
#define FLEXI_DMA0_ENABLE_DMA_REQ_4_EN_OFFSET  0xc
#define FLEXI_DMA0_ENABLE_DMA_REQ_4_EN_MASK  0x1000
#define FLEXI_DMA0_ENABLE_DMA_REQ_4_EN  0x1000
#define FLEXI_DMA0_ENABLE_DMA_REQ_3_EN_OFFSET  0xb
#define FLEXI_DMA0_ENABLE_DMA_REQ_3_EN_MASK  0x800
#define FLEXI_DMA0_ENABLE_DMA_REQ_3_EN  0x800
#define FLEXI_DMA0_ENABLE_DMA_REQ_2_EN_OFFSET  0xa
#define FLEXI_DMA0_ENABLE_DMA_REQ_2_EN_MASK  0x400
#define FLEXI_DMA0_ENABLE_DMA_REQ_2_EN  0x400
#define FLEXI_DMA0_ENABLE_DMA_REQ_1_EN_OFFSET  0x9
#define FLEXI_DMA0_ENABLE_DMA_REQ_1_EN_MASK  0x200
#define FLEXI_DMA0_ENABLE_DMA_REQ_1_EN  0x200
#define FLEXI_DMA0_ENABLE_DMA_REQ_0_EN_OFFSET  0x8
#define FLEXI_DMA0_ENABLE_DMA_REQ_0_EN_MASK  0x100
#define FLEXI_DMA0_ENABLE_DMA_REQ_0_EN  0x100
#define FLEXI_DMA0_ENABLE_DMA_7_EN_OFFSET  0x7
#define FLEXI_DMA0_ENABLE_DMA_7_EN_MASK  0x80
#define FLEXI_DMA0_ENABLE_DMA_7_EN  0x80
#define FLEXI_DMA0_ENABLE_DMA_6_EN_OFFSET  0x6
#define FLEXI_DMA0_ENABLE_DMA_6_EN_MASK  0x40
#define FLEXI_DMA0_ENABLE_DMA_6_EN  0x40
#define FLEXI_DMA0_ENABLE_DMA_5_EN_OFFSET  0x5
#define FLEXI_DMA0_ENABLE_DMA_5_EN_MASK  0x20
#define FLEXI_DMA0_ENABLE_DMA_5_EN  0x20
#define FLEXI_DMA0_ENABLE_DMA_4_EN_OFFSET  0x4
#define FLEXI_DMA0_ENABLE_DMA_4_EN_MASK  0x10
#define FLEXI_DMA0_ENABLE_DMA_4_EN  0x10
#define FLEXI_DMA0_ENABLE_DMA_3_EN_OFFSET  0x3
#define FLEXI_DMA0_ENABLE_DMA_3_EN_MASK  0x8
#define FLEXI_DMA0_ENABLE_DMA_3_EN  0x8
#define FLEXI_DMA0_ENABLE_DMA_2_EN_OFFSET  0x2
#define FLEXI_DMA0_ENABLE_DMA_2_EN_MASK  0x4
#define FLEXI_DMA0_ENABLE_DMA_2_EN  0x4
#define FLEXI_DMA0_ENABLE_DMA_1_EN_OFFSET  0x1
#define FLEXI_DMA0_ENABLE_DMA_1_EN_MASK  0x2
#define FLEXI_DMA0_ENABLE_DMA_1_EN  0x2
#define FLEXI_DMA0_ENABLE_DMA_0_EN_OFFSET  0x0
#define FLEXI_DMA0_ENABLE_DMA_0_EN_MASK  0x1
#define FLEXI_DMA0_ENABLE_DMA_0_EN  0x1
#define FLEXI_DMA0_SRC_ADDR_CH0_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH0_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH0_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH0_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH0_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH0_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH0_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH0_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH0_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH0_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH0_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH0_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH0_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH0_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH0_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH0_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH0_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH0_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH0_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH0_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH0_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH0_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH0_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH0_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH0_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH0_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH0_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH0_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH0_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH0_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_SRC_ADDR_CH1_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH1_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH1_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH1_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH1_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH1_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH1_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH1_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH1_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH1_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH1_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH1_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH1_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH1_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH1_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH1_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH1_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH1_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH1_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH1_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH1_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH1_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH1_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH1_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH1_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH1_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH1_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH1_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH1_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH1_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_SRC_ADDR_CH2_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH2_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH2_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH2_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH2_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH2_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH2_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH2_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH2_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH2_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH2_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH2_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH2_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH2_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH2_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH2_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH2_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH2_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH2_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH2_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH2_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH2_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH2_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH2_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH2_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH2_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH2_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH2_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH2_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH2_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_SRC_ADDR_CH3_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH3_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH3_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH3_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH3_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH3_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH3_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH3_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH3_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH3_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH3_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH3_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH3_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH3_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH3_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH3_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH3_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH3_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH3_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH3_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH3_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH3_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH3_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH3_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH3_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH3_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH3_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH3_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH3_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH3_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_SRC_ADDR_CH4_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH4_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH4_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH4_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH4_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH4_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH4_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH4_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH4_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH4_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH4_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH4_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH4_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH4_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH4_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH4_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH4_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH4_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH4_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH4_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH4_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH4_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH4_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH4_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH4_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH4_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH4_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH4_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH4_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH4_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_SRC_ADDR_CH5_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH5_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH5_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH5_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH5_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH5_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH5_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH5_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH5_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH5_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH5_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH5_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH5_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH5_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH5_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH5_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH5_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH5_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH5_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH5_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH5_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH5_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH5_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH5_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH5_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH5_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH5_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH5_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH5_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH5_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_SRC_ADDR_CH6_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH6_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH6_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH6_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH6_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH6_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH6_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH6_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH6_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH6_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH6_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH6_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH6_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH6_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH6_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH6_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH6_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH6_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH6_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH6_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH6_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH6_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH6_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH6_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH6_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH6_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH6_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH6_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH6_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH6_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_SRC_ADDR_CH7_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA0_SRC_ADDR_CH7_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_SRC_ADDR_CH7_SRC_ADDR  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH7_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA0_DST_ADDR_CH7_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA0_DST_ADDR_CH7_DES_ADDR  0xffffffff
#define FLEXI_DMA0_CTRL_CH7_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA0_CTRL_CH7_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA0_CTRL_CH7_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA0_CTRL_CH7_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA0_CTRL_CH7_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA0_CTRL_CH7_SAMP_SIZE  0x70000000
#define FLEXI_DMA0_CTRL_CH7_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA0_CTRL_CH7_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA0_CTRL_CH7_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA0_CTRL_CH7_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA0_CTRL_CH7_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA0_CTRL_CH7_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA0_CTRL_CH7_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA0_CTRL_CH7_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA0_CTRL_CH7_BURST_SIZE  0x800000
#define FLEXI_DMA0_CTRL_CH7_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA0_CTRL_CH7_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA0_CTRL_CH7_STEP_OFST_SRC  0x700000
#define FLEXI_DMA0_CTRL_CH7_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA0_CTRL_CH7_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA0_CTRL_CH7_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA0_CTRL_CH7_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA0_CTRL_CH7_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA0_CTRL_CH7_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_7_EN_OFFSET  0xf
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_7_EN_MASK  0x8000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_7_EN  0x8000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_6_EN_OFFSET  0xe
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_6_EN_MASK  0x4000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_6_EN  0x4000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_5_EN_OFFSET  0xd
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_5_EN_MASK  0x2000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_5_EN  0x2000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_4_EN_OFFSET  0xc
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_4_EN_MASK  0x1000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_4_EN  0x1000
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_3_EN_OFFSET  0xb
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_3_EN_MASK  0x800
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_3_EN  0x800
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_2_EN_OFFSET  0xa
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_2_EN_MASK  0x400
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_2_EN  0x400
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_1_EN_OFFSET  0x9
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_1_EN_MASK  0x200
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_1_EN  0x200
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_0_EN_OFFSET  0x8
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_0_EN_MASK  0x100
#define FLEXI_DMA0_PARIS_SRST_SOFT_RST_0_EN  0x100
#define FLEXI_DMA0_PARIS_SRST_CH7_INT_PAIR_EN_OFFSET  0x7
#define FLEXI_DMA0_PARIS_SRST_CH7_INT_PAIR_EN_MASK  0x80
#define FLEXI_DMA0_PARIS_SRST_CH7_INT_PAIR_EN  0x80
#define FLEXI_DMA0_PARIS_SRST_CH6_INT_PAIR_EN_OFFSET  0x6
#define FLEXI_DMA0_PARIS_SRST_CH6_INT_PAIR_EN_MASK  0x40
#define FLEXI_DMA0_PARIS_SRST_CH6_INT_PAIR_EN  0x40
#define FLEXI_DMA0_PARIS_SRST_CH5_INT_PAIR_EN_OFFSET  0x5
#define FLEXI_DMA0_PARIS_SRST_CH5_INT_PAIR_EN_MASK  0x20
#define FLEXI_DMA0_PARIS_SRST_CH5_INT_PAIR_EN  0x20
#define FLEXI_DMA0_PARIS_SRST_CH4_INT_PAIR_EN_OFFSET  0x4
#define FLEXI_DMA0_PARIS_SRST_CH4_INT_PAIR_EN_MASK  0x10
#define FLEXI_DMA0_PARIS_SRST_CH4_INT_PAIR_EN  0x10
#define FLEXI_DMA0_PARIS_SRST_CH3_INT_PAIR_EN_OFFSET  0x3
#define FLEXI_DMA0_PARIS_SRST_CH3_INT_PAIR_EN_MASK  0x8
#define FLEXI_DMA0_PARIS_SRST_CH3_INT_PAIR_EN  0x8
#define FLEXI_DMA0_PARIS_SRST_CH2_INT_PAIR_EN_OFFSET  0x2
#define FLEXI_DMA0_PARIS_SRST_CH2_INT_PAIR_EN_MASK  0x4
#define FLEXI_DMA0_PARIS_SRST_CH2_INT_PAIR_EN  0x4
#define FLEXI_DMA0_PARIS_SRST_CH1_INT_PAIR_EN_OFFSET  0x1
#define FLEXI_DMA0_PARIS_SRST_CH1_INT_PAIR_EN_MASK  0x2
#define FLEXI_DMA0_PARIS_SRST_CH1_INT_PAIR_EN  0x2
#define FLEXI_DMA0_PARIS_SRST_CH0_INT_PAIR_EN_OFFSET  0x0
#define FLEXI_DMA0_PARIS_SRST_CH0_INT_PAIR_EN_MASK  0x1
#define FLEXI_DMA0_PARIS_SRST_CH0_INT_PAIR_EN  0x1
#define FLEXI_DMA0_FIFO_STATUS_CH_7_OVERRUN_OFFSET  0xf
#define FLEXI_DMA0_FIFO_STATUS_CH_7_OVERRUN_MASK  0x8000
#define FLEXI_DMA0_FIFO_STATUS_CH_7_OVERRUN  0x8000
#define FLEXI_DMA0_FIFO_STATUS_CH_6_OVERRUN_OFFSET  0xe
#define FLEXI_DMA0_FIFO_STATUS_CH_6_OVERRUN_MASK  0x4000
#define FLEXI_DMA0_FIFO_STATUS_CH_6_OVERRUN  0x4000
#define FLEXI_DMA0_FIFO_STATUS_CH_5_OVERRUN_OFFSET  0xd
#define FLEXI_DMA0_FIFO_STATUS_CH_5_OVERRUN_MASK  0x2000
#define FLEXI_DMA0_FIFO_STATUS_CH_5_OVERRUN  0x2000
#define FLEXI_DMA0_FIFO_STATUS_CH_4_OVERRUN_OFFSET  0xc
#define FLEXI_DMA0_FIFO_STATUS_CH_4_OVERRUN_MASK  0x1000
#define FLEXI_DMA0_FIFO_STATUS_CH_4_OVERRUN  0x1000
#define FLEXI_DMA0_FIFO_STATUS_CH_3_OVERRUN_OFFSET  0xb
#define FLEXI_DMA0_FIFO_STATUS_CH_3_OVERRUN_MASK  0x800
#define FLEXI_DMA0_FIFO_STATUS_CH_3_OVERRUN  0x800
#define FLEXI_DMA0_FIFO_STATUS_CH_2_OVERRUN_OFFSET  0xa
#define FLEXI_DMA0_FIFO_STATUS_CH_2_OVERRUN_MASK  0x400
#define FLEXI_DMA0_FIFO_STATUS_CH_2_OVERRUN  0x400
#define FLEXI_DMA0_FIFO_STATUS_CH_1_OVERRUN_OFFSET  0x9
#define FLEXI_DMA0_FIFO_STATUS_CH_1_OVERRUN_MASK  0x200
#define FLEXI_DMA0_FIFO_STATUS_CH_1_OVERRUN  0x200
#define FLEXI_DMA0_FIFO_STATUS_CH_0_OVERRUN_OFFSET  0x8
#define FLEXI_DMA0_FIFO_STATUS_CH_0_OVERRUN_MASK  0x100
#define FLEXI_DMA0_FIFO_STATUS_CH_0_OVERRUN  0x100
#define FLEXI_DMA0_FIFO_STATUS_CH_7_UNDERRUN_OFFSET  0x7
#define FLEXI_DMA0_FIFO_STATUS_CH_7_UNDERRUN_MASK  0x80
#define FLEXI_DMA0_FIFO_STATUS_CH_7_UNDERRUN  0x80
#define FLEXI_DMA0_FIFO_STATUS_CH_6_UNDERRUN_OFFSET  0x6
#define FLEXI_DMA0_FIFO_STATUS_CH_6_UNDERRUN_MASK  0x40
#define FLEXI_DMA0_FIFO_STATUS_CH_6_UNDERRUN  0x40
#define FLEXI_DMA0_FIFO_STATUS_CH_5_UNDERRUN_OFFSET  0x5
#define FLEXI_DMA0_FIFO_STATUS_CH_5_UNDERRUN_MASK  0x20
#define FLEXI_DMA0_FIFO_STATUS_CH_5_UNDERRUN  0x20
#define FLEXI_DMA0_FIFO_STATUS_CH_4_UNDERRUN_OFFSET  0x4
#define FLEXI_DMA0_FIFO_STATUS_CH_4_UNDERRUN_MASK  0x10
#define FLEXI_DMA0_FIFO_STATUS_CH_4_UNDERRUN  0x10
#define FLEXI_DMA0_FIFO_STATUS_CH_3_UNDERRUN_OFFSET  0x3
#define FLEXI_DMA0_FIFO_STATUS_CH_3_UNDERRUN_MASK  0x8
#define FLEXI_DMA0_FIFO_STATUS_CH_3_UNDERRUN  0x8
#define FLEXI_DMA0_FIFO_STATUS_CH_2_UNDERRUN_OFFSET  0x2
#define FLEXI_DMA0_FIFO_STATUS_CH_2_UNDERRUN_MASK  0x4
#define FLEXI_DMA0_FIFO_STATUS_CH_2_UNDERRUN  0x4
#define FLEXI_DMA0_FIFO_STATUS_CH_1_UNDERRUN_OFFSET  0x1
#define FLEXI_DMA0_FIFO_STATUS_CH_1_UNDERRUN_MASK  0x2
#define FLEXI_DMA0_FIFO_STATUS_CH_1_UNDERRUN  0x2
#define FLEXI_DMA0_FIFO_STATUS_CH_0_UNDERRUN_OFFSET  0x0
#define FLEXI_DMA0_FIFO_STATUS_CH_0_UNDERRUN_MASK  0x1
#define FLEXI_DMA0_FIFO_STATUS_CH_0_UNDERRUN  0x1
#define I2CM_RX_FIFO_I2CM_RX_FIFO_OFFSET  0x0
#define I2CM_RX_FIFO_I2CM_RX_FIFO_MASK  0xffffffff
#define I2CM_RX_FIFO_I2CM_RX_FIFO  0xffffffff
#define UART_FIFO_UART_FIFO_OFFSET  0x0
#define UART_FIFO_UART_FIFO_MASK  0xffffffff
#define UART_FIFO_UART_FIFO  0xffffffff
#define I2CM_FIFO_I2CM_FIFO_OFFSET  0x0
#define I2CM_FIFO_I2CM_FIFO_MASK  0xffffffff
#define I2CM_FIFO_I2CM_FIFO  0xffffffff
#define I3CM_FIFO_I3CM_FIFO_OFFSET  0x0
#define I3CM_FIFO_I3CM_FIFO_MASK  0xffffffff
#define I3CM_FIFO_I3CM_FIFO  0xffffffff
#define FLEXI_DMA1_ENABLE_DMA_7_STATUS_CLR_INT_OFFSET  0x1f
#define FLEXI_DMA1_ENABLE_DMA_7_STATUS_CLR_INT_MASK  0x80000000
#define FLEXI_DMA1_ENABLE_DMA_7_STATUS_CLR_INT  0x80000000
#define FLEXI_DMA1_ENABLE_DMA_6_STATUS_CLR_INT_OFFSET  0x1e
#define FLEXI_DMA1_ENABLE_DMA_6_STATUS_CLR_INT_MASK  0x40000000
#define FLEXI_DMA1_ENABLE_DMA_6_STATUS_CLR_INT  0x40000000
#define FLEXI_DMA1_ENABLE_DMA_5_STATUS_CLR_INT_OFFSET  0x1d
#define FLEXI_DMA1_ENABLE_DMA_5_STATUS_CLR_INT_MASK  0x20000000
#define FLEXI_DMA1_ENABLE_DMA_5_STATUS_CLR_INT  0x20000000
#define FLEXI_DMA1_ENABLE_DMA_4_STATUS_CLR_INT_OFFSET  0x1c
#define FLEXI_DMA1_ENABLE_DMA_4_STATUS_CLR_INT_MASK  0x10000000
#define FLEXI_DMA1_ENABLE_DMA_4_STATUS_CLR_INT  0x10000000
#define FLEXI_DMA1_ENABLE_DMA_3_STATUS_CLR_INT_OFFSET  0x1b
#define FLEXI_DMA1_ENABLE_DMA_3_STATUS_CLR_INT_MASK  0x8000000
#define FLEXI_DMA1_ENABLE_DMA_3_STATUS_CLR_INT  0x8000000
#define FLEXI_DMA1_ENABLE_DMA_2_STATUS_CLR_INT_OFFSET  0x1a
#define FLEXI_DMA1_ENABLE_DMA_2_STATUS_CLR_INT_MASK  0x4000000
#define FLEXI_DMA1_ENABLE_DMA_2_STATUS_CLR_INT  0x4000000
#define FLEXI_DMA1_ENABLE_DMA_1_STATUS_CLR_INT_OFFSET  0x19
#define FLEXI_DMA1_ENABLE_DMA_1_STATUS_CLR_INT_MASK  0x2000000
#define FLEXI_DMA1_ENABLE_DMA_1_STATUS_CLR_INT  0x2000000
#define FLEXI_DMA1_ENABLE_DMA_0_STATUS_CLR_INT_OFFSET  0x18
#define FLEXI_DMA1_ENABLE_DMA_0_STATUS_CLR_INT_MASK  0x1000000
#define FLEXI_DMA1_ENABLE_DMA_0_STATUS_CLR_INT  0x1000000
#define FLEXI_DMA1_ENABLE_DMA_7_IRQ_EN_OFFSET  0x17
#define FLEXI_DMA1_ENABLE_DMA_7_IRQ_EN_MASK  0x800000
#define FLEXI_DMA1_ENABLE_DMA_7_IRQ_EN  0x800000
#define FLEXI_DMA1_ENABLE_DMA_6_IRQ_EN_OFFSET  0x16
#define FLEXI_DMA1_ENABLE_DMA_6_IRQ_EN_MASK  0x400000
#define FLEXI_DMA1_ENABLE_DMA_6_IRQ_EN  0x400000
#define FLEXI_DMA1_ENABLE_DMA_5_IRQ_EN_OFFSET  0x15
#define FLEXI_DMA1_ENABLE_DMA_5_IRQ_EN_MASK  0x200000
#define FLEXI_DMA1_ENABLE_DMA_5_IRQ_EN  0x200000
#define FLEXI_DMA1_ENABLE_DMA_4_IRQ_EN_OFFSET  0x14
#define FLEXI_DMA1_ENABLE_DMA_4_IRQ_EN_MASK  0x100000
#define FLEXI_DMA1_ENABLE_DMA_4_IRQ_EN  0x100000
#define FLEXI_DMA1_ENABLE_DMA_3_IRQ_EN_OFFSET  0x13
#define FLEXI_DMA1_ENABLE_DMA_3_IRQ_EN_MASK  0x80000
#define FLEXI_DMA1_ENABLE_DMA_3_IRQ_EN  0x80000
#define FLEXI_DMA1_ENABLE_DMA_2_IRQ_EN_OFFSET  0x12
#define FLEXI_DMA1_ENABLE_DMA_2_IRQ_EN_MASK  0x40000
#define FLEXI_DMA1_ENABLE_DMA_2_IRQ_EN  0x40000
#define FLEXI_DMA1_ENABLE_DMA_1_IRQ_EN_OFFSET  0x11
#define FLEXI_DMA1_ENABLE_DMA_1_IRQ_EN_MASK  0x20000
#define FLEXI_DMA1_ENABLE_DMA_1_IRQ_EN  0x20000
#define FLEXI_DMA1_ENABLE_DMA_0_IRQ_EN_OFFSET  0x10
#define FLEXI_DMA1_ENABLE_DMA_0_IRQ_EN_MASK  0x10000
#define FLEXI_DMA1_ENABLE_DMA_0_IRQ_EN  0x10000
#define FLEXI_DMA1_ENABLE_DMA_REQ_7_EN_OFFSET  0xf
#define FLEXI_DMA1_ENABLE_DMA_REQ_7_EN_MASK  0x8000
#define FLEXI_DMA1_ENABLE_DMA_REQ_7_EN  0x8000
#define FLEXI_DMA1_ENABLE_DMA_REQ_6_EN_OFFSET  0xe
#define FLEXI_DMA1_ENABLE_DMA_REQ_6_EN_MASK  0x4000
#define FLEXI_DMA1_ENABLE_DMA_REQ_6_EN  0x4000
#define FLEXI_DMA1_ENABLE_DMA_REQ_5_EN_OFFSET  0xd
#define FLEXI_DMA1_ENABLE_DMA_REQ_5_EN_MASK  0x2000
#define FLEXI_DMA1_ENABLE_DMA_REQ_5_EN  0x2000
#define FLEXI_DMA1_ENABLE_DMA_REQ_4_EN_OFFSET  0xc
#define FLEXI_DMA1_ENABLE_DMA_REQ_4_EN_MASK  0x1000
#define FLEXI_DMA1_ENABLE_DMA_REQ_4_EN  0x1000
#define FLEXI_DMA1_ENABLE_DMA_REQ_3_EN_OFFSET  0xb
#define FLEXI_DMA1_ENABLE_DMA_REQ_3_EN_MASK  0x800
#define FLEXI_DMA1_ENABLE_DMA_REQ_3_EN  0x800
#define FLEXI_DMA1_ENABLE_DMA_REQ_2_EN_OFFSET  0xa
#define FLEXI_DMA1_ENABLE_DMA_REQ_2_EN_MASK  0x400
#define FLEXI_DMA1_ENABLE_DMA_REQ_2_EN  0x400
#define FLEXI_DMA1_ENABLE_DMA_REQ_1_EN_OFFSET  0x9
#define FLEXI_DMA1_ENABLE_DMA_REQ_1_EN_MASK  0x200
#define FLEXI_DMA1_ENABLE_DMA_REQ_1_EN  0x200
#define FLEXI_DMA1_ENABLE_DMA_REQ_0_EN_OFFSET  0x8
#define FLEXI_DMA1_ENABLE_DMA_REQ_0_EN_MASK  0x100
#define FLEXI_DMA1_ENABLE_DMA_REQ_0_EN  0x100
#define FLEXI_DMA1_ENABLE_DMA_7_EN_OFFSET  0x7
#define FLEXI_DMA1_ENABLE_DMA_7_EN_MASK  0x80
#define FLEXI_DMA1_ENABLE_DMA_7_EN  0x80
#define FLEXI_DMA1_ENABLE_DMA_6_EN_OFFSET  0x6
#define FLEXI_DMA1_ENABLE_DMA_6_EN_MASK  0x40
#define FLEXI_DMA1_ENABLE_DMA_6_EN  0x40
#define FLEXI_DMA1_ENABLE_DMA_5_EN_OFFSET  0x5
#define FLEXI_DMA1_ENABLE_DMA_5_EN_MASK  0x20
#define FLEXI_DMA1_ENABLE_DMA_5_EN  0x20
#define FLEXI_DMA1_ENABLE_DMA_4_EN_OFFSET  0x4
#define FLEXI_DMA1_ENABLE_DMA_4_EN_MASK  0x10
#define FLEXI_DMA1_ENABLE_DMA_4_EN  0x10
#define FLEXI_DMA1_ENABLE_DMA_3_EN_OFFSET  0x3
#define FLEXI_DMA1_ENABLE_DMA_3_EN_MASK  0x8
#define FLEXI_DMA1_ENABLE_DMA_3_EN  0x8
#define FLEXI_DMA1_ENABLE_DMA_2_EN_OFFSET  0x2
#define FLEXI_DMA1_ENABLE_DMA_2_EN_MASK  0x4
#define FLEXI_DMA1_ENABLE_DMA_2_EN  0x4
#define FLEXI_DMA1_ENABLE_DMA_1_EN_OFFSET  0x1
#define FLEXI_DMA1_ENABLE_DMA_1_EN_MASK  0x2
#define FLEXI_DMA1_ENABLE_DMA_1_EN  0x2
#define FLEXI_DMA1_ENABLE_DMA_0_EN_OFFSET  0x0
#define FLEXI_DMA1_ENABLE_DMA_0_EN_MASK  0x1
#define FLEXI_DMA1_ENABLE_DMA_0_EN  0x1
#define FLEXI_DMA1_SRC_ADDR_CH0_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH0_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH0_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH0_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH0_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH0_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH0_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH0_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH0_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH0_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH0_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH0_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH0_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH0_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH0_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH0_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH0_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH0_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH0_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH0_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH0_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH0_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH0_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH0_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH0_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH0_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH0_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH0_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH0_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH0_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_SRC_ADDR_CH1_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH1_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH1_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH1_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH1_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH1_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH1_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH1_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH1_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH1_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH1_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH1_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH1_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH1_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH1_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH1_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH1_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH1_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH1_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH1_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH1_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH1_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH1_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH1_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH1_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH1_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH1_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH1_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH1_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH1_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_SRC_ADDR_CH2_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH2_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH2_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH2_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH2_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH2_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH2_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH2_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH2_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH2_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH2_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH2_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH2_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH2_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH2_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH2_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH2_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH2_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH2_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH2_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH2_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH2_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH2_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH2_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH2_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH2_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH2_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH2_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH2_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH2_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_SRC_ADDR_CH3_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH3_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH3_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH3_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH3_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH3_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH3_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH3_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH3_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH3_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH3_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH3_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH3_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH3_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH3_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH3_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH3_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH3_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH3_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH3_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH3_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH3_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH3_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH3_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH3_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH3_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH3_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH3_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH3_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH3_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_SRC_ADDR_CH4_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH4_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH4_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH4_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH4_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH4_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH4_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH4_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH4_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH4_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH4_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH4_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH4_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH4_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH4_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH4_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH4_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH4_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH4_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH4_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH4_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH4_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH4_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH4_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH4_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH4_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH4_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH4_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH4_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH4_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_SRC_ADDR_CH5_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH5_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH5_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH5_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH5_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH5_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH5_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH5_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH5_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH5_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH5_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH5_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH5_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH5_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH5_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH5_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH5_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH5_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH5_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH5_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH5_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH5_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH5_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH5_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH5_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH5_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH5_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH5_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH5_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH5_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_SRC_ADDR_CH6_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH6_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH6_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH6_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH6_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH6_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH6_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH6_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH6_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH6_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH6_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH6_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH6_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH6_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH6_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH6_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH6_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH6_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH6_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH6_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH6_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH6_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH6_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH6_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH6_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH6_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH6_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH6_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH6_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH6_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_SRC_ADDR_CH7_SRC_ADDR_OFFSET  0x0
#define FLEXI_DMA1_SRC_ADDR_CH7_SRC_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_SRC_ADDR_CH7_SRC_ADDR  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH7_DES_ADDR_OFFSET  0x0
#define FLEXI_DMA1_DST_ADDR_CH7_DES_ADDR_MASK  0xffffffff
#define FLEXI_DMA1_DST_ADDR_CH7_DES_ADDR  0xffffffff
#define FLEXI_DMA1_CTRL_CH7_BLOCK_INTERRUPT_OFFSET  0x1f
#define FLEXI_DMA1_CTRL_CH7_BLOCK_INTERRUPT_MASK  0x80000000
#define FLEXI_DMA1_CTRL_CH7_BLOCK_INTERRUPT  0x80000000
#define FLEXI_DMA1_CTRL_CH7_SAMP_SIZE_OFFSET  0x1c
#define FLEXI_DMA1_CTRL_CH7_SAMP_SIZE_MASK  0x70000000
#define FLEXI_DMA1_CTRL_CH7_SAMP_SIZE  0x70000000
#define FLEXI_DMA1_CTRL_CH7_ADDRESS_DIRECTION_OFFSET  0x1b
#define FLEXI_DMA1_CTRL_CH7_ADDRESS_DIRECTION_MASK  0x8000000
#define FLEXI_DMA1_CTRL_CH7_ADDRESS_DIRECTION  0x8000000
#define FLEXI_DMA1_CTRL_CH7_STEP_OFST_DEST_OFFSET  0x18
#define FLEXI_DMA1_CTRL_CH7_STEP_OFST_DEST_MASK  0x7000000
#define FLEXI_DMA1_CTRL_CH7_STEP_OFST_DEST  0x7000000
#define FLEXI_DMA1_CTRL_CH7_BURST_SIZE_OFFSET  0x17
#define FLEXI_DMA1_CTRL_CH7_BURST_SIZE_MASK  0x800000
#define FLEXI_DMA1_CTRL_CH7_BURST_SIZE  0x800000
#define FLEXI_DMA1_CTRL_CH7_STEP_OFST_SRC_OFFSET  0x14
#define FLEXI_DMA1_CTRL_CH7_STEP_OFST_SRC_MASK  0x700000
#define FLEXI_DMA1_CTRL_CH7_STEP_OFST_SRC  0x700000
#define FLEXI_DMA1_CTRL_CH7_BUFFER_SIZE_DEST_OFFSET  0xa
#define FLEXI_DMA1_CTRL_CH7_BUFFER_SIZE_DEST_MASK  0xffc00
#define FLEXI_DMA1_CTRL_CH7_BUFFER_SIZE_DEST  0xffc00
#define FLEXI_DMA1_CTRL_CH7_BUFFER_SIZE_SRC_OFFSET  0x0
#define FLEXI_DMA1_CTRL_CH7_BUFFER_SIZE_SRC_MASK  0x3ff
#define FLEXI_DMA1_CTRL_CH7_BUFFER_SIZE_SRC  0x3ff
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_7_EN_OFFSET  0xf
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_7_EN_MASK  0x8000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_7_EN  0x8000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_6_EN_OFFSET  0xe
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_6_EN_MASK  0x4000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_6_EN  0x4000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_5_EN_OFFSET  0xd
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_5_EN_MASK  0x2000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_5_EN  0x2000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_4_EN_OFFSET  0xc
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_4_EN_MASK  0x1000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_4_EN  0x1000
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_3_EN_OFFSET  0xb
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_3_EN_MASK  0x800
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_3_EN  0x800
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_2_EN_OFFSET  0xa
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_2_EN_MASK  0x400
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_2_EN  0x400
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_1_EN_OFFSET  0x9
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_1_EN_MASK  0x200
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_1_EN  0x200
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_0_EN_OFFSET  0x8
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_0_EN_MASK  0x100
#define FLEXI_DMA1_PARIS_SRST_SOFT_RST_0_EN  0x100
#define FLEXI_DMA1_PARIS_SRST_CH7_INT_PAIR_EN_OFFSET  0x7
#define FLEXI_DMA1_PARIS_SRST_CH7_INT_PAIR_EN_MASK  0x80
#define FLEXI_DMA1_PARIS_SRST_CH7_INT_PAIR_EN  0x80
#define FLEXI_DMA1_PARIS_SRST_CH6_INT_PAIR_EN_OFFSET  0x6
#define FLEXI_DMA1_PARIS_SRST_CH6_INT_PAIR_EN_MASK  0x40
#define FLEXI_DMA1_PARIS_SRST_CH6_INT_PAIR_EN  0x40
#define FLEXI_DMA1_PARIS_SRST_CH5_INT_PAIR_EN_OFFSET  0x5
#define FLEXI_DMA1_PARIS_SRST_CH5_INT_PAIR_EN_MASK  0x20
#define FLEXI_DMA1_PARIS_SRST_CH5_INT_PAIR_EN  0x20
#define FLEXI_DMA1_PARIS_SRST_CH4_INT_PAIR_EN_OFFSET  0x4
#define FLEXI_DMA1_PARIS_SRST_CH4_INT_PAIR_EN_MASK  0x10
#define FLEXI_DMA1_PARIS_SRST_CH4_INT_PAIR_EN  0x10
#define FLEXI_DMA1_PARIS_SRST_CH3_INT_PAIR_EN_OFFSET  0x3
#define FLEXI_DMA1_PARIS_SRST_CH3_INT_PAIR_EN_MASK  0x8
#define FLEXI_DMA1_PARIS_SRST_CH3_INT_PAIR_EN  0x8
#define FLEXI_DMA1_PARIS_SRST_CH2_INT_PAIR_EN_OFFSET  0x2
#define FLEXI_DMA1_PARIS_SRST_CH2_INT_PAIR_EN_MASK  0x4
#define FLEXI_DMA1_PARIS_SRST_CH2_INT_PAIR_EN  0x4
#define FLEXI_DMA1_PARIS_SRST_CH1_INT_PAIR_EN_OFFSET  0x1
#define FLEXI_DMA1_PARIS_SRST_CH1_INT_PAIR_EN_MASK  0x2
#define FLEXI_DMA1_PARIS_SRST_CH1_INT_PAIR_EN  0x2
#define FLEXI_DMA1_PARIS_SRST_CH0_INT_PAIR_EN_OFFSET  0x0
#define FLEXI_DMA1_PARIS_SRST_CH0_INT_PAIR_EN_MASK  0x1
#define FLEXI_DMA1_PARIS_SRST_CH0_INT_PAIR_EN  0x1
#define FLEXI_DMA1_FIFO_STATUS_CH_7_OVERRUN_OFFSET  0xf
#define FLEXI_DMA1_FIFO_STATUS_CH_7_OVERRUN_MASK  0x8000
#define FLEXI_DMA1_FIFO_STATUS_CH_7_OVERRUN  0x8000
#define FLEXI_DMA1_FIFO_STATUS_CH_6_OVERRUN_OFFSET  0xe
#define FLEXI_DMA1_FIFO_STATUS_CH_6_OVERRUN_MASK  0x4000
#define FLEXI_DMA1_FIFO_STATUS_CH_6_OVERRUN  0x4000
#define FLEXI_DMA1_FIFO_STATUS_CH_5_OVERRUN_OFFSET  0xd
#define FLEXI_DMA1_FIFO_STATUS_CH_5_OVERRUN_MASK  0x2000
#define FLEXI_DMA1_FIFO_STATUS_CH_5_OVERRUN  0x2000
#define FLEXI_DMA1_FIFO_STATUS_CH_4_OVERRUN_OFFSET  0xc
#define FLEXI_DMA1_FIFO_STATUS_CH_4_OVERRUN_MASK  0x1000
#define FLEXI_DMA1_FIFO_STATUS_CH_4_OVERRUN  0x1000
#define FLEXI_DMA1_FIFO_STATUS_CH_3_OVERRUN_OFFSET  0xb
#define FLEXI_DMA1_FIFO_STATUS_CH_3_OVERRUN_MASK  0x800
#define FLEXI_DMA1_FIFO_STATUS_CH_3_OVERRUN  0x800
#define FLEXI_DMA1_FIFO_STATUS_CH_2_OVERRUN_OFFSET  0xa
#define FLEXI_DMA1_FIFO_STATUS_CH_2_OVERRUN_MASK  0x400
#define FLEXI_DMA1_FIFO_STATUS_CH_2_OVERRUN  0x400
#define FLEXI_DMA1_FIFO_STATUS_CH_1_OVERRUN_OFFSET  0x9
#define FLEXI_DMA1_FIFO_STATUS_CH_1_OVERRUN_MASK  0x200
#define FLEXI_DMA1_FIFO_STATUS_CH_1_OVERRUN  0x200
#define FLEXI_DMA1_FIFO_STATUS_CH_0_OVERRUN_OFFSET  0x8
#define FLEXI_DMA1_FIFO_STATUS_CH_0_OVERRUN_MASK  0x100
#define FLEXI_DMA1_FIFO_STATUS_CH_0_OVERRUN  0x100
#define FLEXI_DMA1_FIFO_STATUS_CH_7_UNDERRUN_OFFSET  0x7
#define FLEXI_DMA1_FIFO_STATUS_CH_7_UNDERRUN_MASK  0x80
#define FLEXI_DMA1_FIFO_STATUS_CH_7_UNDERRUN  0x80
#define FLEXI_DMA1_FIFO_STATUS_CH_6_UNDERRUN_OFFSET  0x6
#define FLEXI_DMA1_FIFO_STATUS_CH_6_UNDERRUN_MASK  0x40
#define FLEXI_DMA1_FIFO_STATUS_CH_6_UNDERRUN  0x40
#define FLEXI_DMA1_FIFO_STATUS_CH_5_UNDERRUN_OFFSET  0x5
#define FLEXI_DMA1_FIFO_STATUS_CH_5_UNDERRUN_MASK  0x20
#define FLEXI_DMA1_FIFO_STATUS_CH_5_UNDERRUN  0x20
#define FLEXI_DMA1_FIFO_STATUS_CH_4_UNDERRUN_OFFSET  0x4
#define FLEXI_DMA1_FIFO_STATUS_CH_4_UNDERRUN_MASK  0x10
#define FLEXI_DMA1_FIFO_STATUS_CH_4_UNDERRUN  0x10
#define FLEXI_DMA1_FIFO_STATUS_CH_3_UNDERRUN_OFFSET  0x3
#define FLEXI_DMA1_FIFO_STATUS_CH_3_UNDERRUN_MASK  0x8
#define FLEXI_DMA1_FIFO_STATUS_CH_3_UNDERRUN  0x8
#define FLEXI_DMA1_FIFO_STATUS_CH_2_UNDERRUN_OFFSET  0x2
#define FLEXI_DMA1_FIFO_STATUS_CH_2_UNDERRUN_MASK  0x4
#define FLEXI_DMA1_FIFO_STATUS_CH_2_UNDERRUN  0x4
#define FLEXI_DMA1_FIFO_STATUS_CH_1_UNDERRUN_OFFSET  0x1
#define FLEXI_DMA1_FIFO_STATUS_CH_1_UNDERRUN_MASK  0x2
#define FLEXI_DMA1_FIFO_STATUS_CH_1_UNDERRUN  0x2
#define FLEXI_DMA1_FIFO_STATUS_CH_0_UNDERRUN_OFFSET  0x0
#define FLEXI_DMA1_FIFO_STATUS_CH_0_UNDERRUN_MASK  0x1
#define FLEXI_DMA1_FIFO_STATUS_CH_0_UNDERRUN  0x1
#define SPIM_TX_FIFO_SPIM_TX_FIFO_OFFSET  0x0
#define SPIM_TX_FIFO_SPIM_TX_FIFO_MASK  0xffffffff
#define SPIM_TX_FIFO_SPIM_TX_FIFO  0xffffffff
#define SPIM_RX_FIFO_SPIM_RX_FIFO_OFFSET  0x0
#define SPIM_RX_FIFO_SPIM_RX_FIFO_MASK  0xffffffff
#define SPIM_RX_FIFO_SPIM_RX_FIFO  0xffffffff
#define AES_FIFO_AES_FIFO_OFFSET  0x0
#define AES_FIFO_AES_FIFO_MASK  0xffffffff
#define AES_FIFO_AES_FIFO  0xffffffff
#define RA_SPIM_CTL_RXHFIE_OFFSET  0x1f
#define RA_SPIM_CTL_RXHFIE_MASK  0x80000000
#define RA_SPIM_CTL_RXHFIE  0x80000000
#define RA_SPIM_CTL_RXFULLIE_OFFSET  0x1e
#define RA_SPIM_CTL_RXFULLIE_MASK  0x40000000
#define RA_SPIM_CTL_RXFULLIE  0x40000000
#define RA_SPIM_CTL_RXEMPTYIE_OFFSET  0x1d
#define RA_SPIM_CTL_RXEMPTYIE_MASK  0x20000000
#define RA_SPIM_CTL_RXEMPTYIE  0x20000000
#define RA_SPIM_CTL_TXHFIE_OFFSET  0x1c
#define RA_SPIM_CTL_TXHFIE_MASK  0x10000000
#define RA_SPIM_CTL_TXHFIE  0x10000000
#define RA_SPIM_CTL_TXFULLIE_OFFSET  0x1b
#define RA_SPIM_CTL_TXFULLIE_MASK  0x8000000
#define RA_SPIM_CTL_TXFULLIE  0x8000000
#define RA_SPIM_CTL_TXEMPTYIE_OFFSET  0x1a
#define RA_SPIM_CTL_TXEMPTYIE_MASK  0x4000000
#define RA_SPIM_CTL_TXEMPTYIE  0x4000000
#define RA_SPIM_CTL_SPTRANSIE_RX_OFFSET  0x19
#define RA_SPIM_CTL_SPTRANSIE_RX_MASK  0x2000000
#define RA_SPIM_CTL_SPTRANSIE_RX  0x2000000
#define RA_SPIM_CTL_SPTRANSIE_TX_OFFSET  0x18
#define RA_SPIM_CTL_SPTRANSIE_TX_MASK  0x1000000
#define RA_SPIM_CTL_SPTRANSIE_TX  0x1000000
#define RA_SPIM_CTL_SPI_COMMAND_BYTES_OFFSET  0x15
#define RA_SPIM_CTL_SPI_COMMAND_BYTES_MASK  0xe00000
#define RA_SPIM_CTL_SPI_COMMAND_BYTES  0xe00000
#define RA_SPIM_CTL_SPI_BR_OFFSET  0xb
#define RA_SPIM_CTL_SPI_BR_MASK  0x1ff800
#define RA_SPIM_CTL_SPI_BR  0x1ff800
#define RA_SPIM_CTL_TX_ENDIANESS_OFFSET  0xa
#define RA_SPIM_CTL_TX_ENDIANESS_MASK  0x400
#define RA_SPIM_CTL_TX_ENDIANESS  0x400
#define RA_SPIM_CTL_TX_FIFO_FLUSH_OFFSET  0x9
#define RA_SPIM_CTL_TX_FIFO_FLUSH_MASK  0x200
#define RA_SPIM_CTL_TX_FIFO_FLUSH  0x200
#define RA_SPIM_CTL_SS1_POL_OFFSET  0x8
#define RA_SPIM_CTL_SS1_POL_MASK  0x100
#define RA_SPIM_CTL_SS1_POL  0x100
#define RA_SPIM_CTL_SS0_POL_OFFSET  0x7
#define RA_SPIM_CTL_SS0_POL_MASK  0x80
#define RA_SPIM_CTL_SS0_POL  0x80
#define RA_SPIM_CTL_RX_ENDIANESS_OFFSET  0x6
#define RA_SPIM_CTL_RX_ENDIANESS_MASK  0x40
#define RA_SPIM_CTL_RX_ENDIANESS  0x40
#define RA_SPIM_CTL_SPI_SS_SEL_OFFSET  0x5
#define RA_SPIM_CTL_SPI_SS_SEL_MASK  0x20
#define RA_SPIM_CTL_SPI_SS_SEL  0x20
#define RA_SPIM_CTL_RX_FIFO_FLUXH_OFFSET  0x4
#define RA_SPIM_CTL_RX_FIFO_FLUXH_MASK  0x10
#define RA_SPIM_CTL_RX_FIFO_FLUXH  0x10
#define RA_SPIM_CTL_CPOL_OFFSET  0x3
#define RA_SPIM_CTL_CPOL_MASK  0x8
#define RA_SPIM_CTL_CPOL  0x8
#define RA_SPIM_CTL_CPHA_OFFSET  0x2
#define RA_SPIM_CTL_CPHA_MASK  0x4
#define RA_SPIM_CTL_CPHA  0x4
#define RA_SPIM_CTL_RXDMA_CONT_ENB_OFFSET  0x1
#define RA_SPIM_CTL_RXDMA_CONT_ENB_MASK  0x2
#define RA_SPIM_CTL_RXDMA_CONT_ENB  0x2
#define RA_SPIM_CTL_TXDMA_CONT_ENB_OFFSET  0x0
#define RA_SPIM_CTL_TXDMA_CONT_ENB_MASK  0x1
#define RA_SPIM_CTL_TXDMA_CONT_ENB  0x1
#define RA_SPIM_STAT_RX_FIFO_HF_OFFSET  0x7
#define RA_SPIM_STAT_RX_FIFO_HF_MASK  0x80
#define RA_SPIM_STAT_RX_FIFO_HF  0x80
#define RA_SPIM_STAT_RX_FIFO_FULL_OFFSET  0x6
#define RA_SPIM_STAT_RX_FIFO_FULL_MASK  0x40
#define RA_SPIM_STAT_RX_FIFO_FULL  0x40
#define RA_SPIM_STAT_RX_FIFO_EMPTY_OFFSET  0x5
#define RA_SPIM_STAT_RX_FIFO_EMPTY_MASK  0x20
#define RA_SPIM_STAT_RX_FIFO_EMPTY  0x20
#define RA_SPIM_STAT_TX_FIFO_HE_OFFSET  0x4
#define RA_SPIM_STAT_TX_FIFO_HE_MASK  0x10
#define RA_SPIM_STAT_TX_FIFO_HE  0x10
#define RA_SPIM_STAT_TX_FIFO_FULL_OFFSET  0x3
#define RA_SPIM_STAT_TX_FIFO_FULL_MASK  0x8
#define RA_SPIM_STAT_TX_FIFO_FULL  0x8
#define RA_SPIM_STAT_TX_FIFO_EMPTY_OFFSET  0x2
#define RA_SPIM_STAT_TX_FIFO_EMPTY_MASK  0x4
#define RA_SPIM_STAT_TX_FIFO_EMPTY  0x4
#define RA_SPIM_STAT_SPTRANSI_RX_OFFSET  0x1
#define RA_SPIM_STAT_SPTRANSI_RX_MASK  0x2
#define RA_SPIM_STAT_SPTRANSI_RX  0x2
#define RA_SPIM_STAT_SPTRANSI_TX_OFFSET  0x0
#define RA_SPIM_STAT_SPTRANSI_TX_MASK  0x1
#define RA_SPIM_STAT_SPTRANSI_TX  0x1
#define RA_SPIM_FFLVL_TX_FIFO_LVL_OFFSET  0x4
#define RA_SPIM_FFLVL_TX_FIFO_LVL_MASK  0xf0
#define RA_SPIM_FFLVL_TX_FIFO_LVL  0xf0
#define RA_SPIM_FFLVL_RX_FIFO_LVL_OFFSET  0x0
#define RA_SPIM_FFLVL_RX_FIFO_LVL_MASK  0xf
#define RA_SPIM_FFLVL_RX_FIFO_LVL  0xf
#define RA_SPIM_XFER_SPI_TX_BYTES_OFFSET  0x10
#define RA_SPIM_XFER_SPI_TX_BYTES_MASK  0x3fff0000
#define RA_SPIM_XFER_SPI_TX_BYTES  0x3fff0000
#define RA_SPIM_XFER_SPI_RX_BYTES_OFFSET  0x0
#define RA_SPIM_XFER_SPI_RX_BYTES_MASK  0x3fff
#define RA_SPIM_XFER_SPI_RX_BYTES  0x3fff
#define RA_SPIM_XCNT_SPI_TX_TRANS_CNT_OFFSET  0x10
#define RA_SPIM_XCNT_SPI_TX_TRANS_CNT_MASK  0x3fff0000
#define RA_SPIM_XCNT_SPI_TX_TRANS_CNT  0x3fff0000
#define RA_SPIM_XCNT_TX_DIR_OFFSET  0xf
#define RA_SPIM_XCNT_TX_DIR_MASK  0x8000
#define RA_SPIM_XCNT_TX_DIR  0x8000
#define RA_SPIM_XCNT_RX_DIR_OFFSET  0xe
#define RA_SPIM_XCNT_RX_DIR_MASK  0x4000
#define RA_SPIM_XCNT_RX_DIR  0x4000
#define RA_SPIM_XCNT_SPI_RX_TRANS_CNT_OFFSET  0x0
#define RA_SPIM_XCNT_SPI_RX_TRANS_CNT_MASK  0x3fff
#define RA_SPIM_XCNT_SPI_RX_TRANS_CNT  0x3fff
#define RA_SPIM_CTRL_2_SPIM_HISPEED_OFFSET  0xa
#define RA_SPIM_CTRL_2_SPIM_HISPEED_MASK  0x400
#define RA_SPIM_CTRL_2_SPIM_HISPEED  0x400
#define RA_SPIM_CTRL_2_XFER_TFIFO_RESET_MASK_OFFSET  0x9
#define RA_SPIM_CTRL_2_XFER_TFIFO_RESET_MASK_MASK  0x200
#define RA_SPIM_CTRL_2_XFER_TFIFO_RESET_MASK  0x200
#define RA_SPIM_CTRL_2_XFER_RFIFO_RESET_MASK_OFFSET  0x8
#define RA_SPIM_CTRL_2_XFER_RFIFO_RESET_MASK_MASK  0x100
#define RA_SPIM_CTRL_2_XFER_RFIFO_RESET_MASK  0x100
#define RA_SPIM_CTRL_2_TX_FIFO_THRESHOLD_OFFSET  0x4
#define RA_SPIM_CTRL_2_TX_FIFO_THRESHOLD_MASK  0xf0
#define RA_SPIM_CTRL_2_TX_FIFO_THRESHOLD  0xf0
#define RA_SPIM_CTRL_2_RX_FIFO_THRESHOLD_OFFSET  0x0
#define RA_SPIM_CTRL_2_RX_FIFO_THRESHOLD_MASK  0xf
#define RA_SPIM_CTRL_2_RX_FIFO_THRESHOLD  0xf
#define INT_EN0_IRQ_ASIP_TIMER7_EN_OFFSET  0x1f
#define INT_EN0_IRQ_ASIP_TIMER7_EN_MASK  0x80000000
#define INT_EN0_IRQ_ASIP_TIMER7_EN  0x80000000
#define INT_EN0_IRQ_ASIP_TIMER6_EN_OFFSET  0x1e
#define INT_EN0_IRQ_ASIP_TIMER6_EN_MASK  0x40000000
#define INT_EN0_IRQ_ASIP_TIMER6_EN  0x40000000
#define INT_EN0_IRQ_DAC_RAMP_DONE_EN_OFFSET  0x14
#define INT_EN0_IRQ_DAC_RAMP_DONE_EN_MASK  0x100000
#define INT_EN0_IRQ_DAC_RAMP_DONE_EN  0x100000
#define INT_EN0_IRQ_CACHE_EN_OFFSET  0x13
#define INT_EN0_IRQ_CACHE_EN_MASK  0x80000
#define INT_EN0_IRQ_CACHE_EN  0x80000
#define INT_EN0_IRQ_I3C_EN_OFFSET  0x12
#define INT_EN0_IRQ_I3C_EN_MASK  0x40000
#define INT_EN0_IRQ_I3C_EN  0x40000
#define INT_EN0_IRQ_I2CS_MERGE_EN_OFFSET  0x11
#define INT_EN0_IRQ_I2CS_MERGE_EN_MASK  0x20000
#define INT_EN0_IRQ_I2CS_MERGE_EN  0x20000
#define INT_EN0_IRQ_I2CM_EN_OFFSET  0x10
#define INT_EN0_IRQ_I2CM_EN_MASK  0x10000
#define INT_EN0_IRQ_I2CM_EN  0x10000
#define INT_EN0_IRQ_GPIO_EN_OFFSET  0xf
#define INT_EN0_IRQ_GPIO_EN_MASK  0x8000
#define INT_EN0_IRQ_GPIO_EN  0x8000
#define INT_EN0_IRQ_SPIM_TX_EN_OFFSET  0xe
#define INT_EN0_IRQ_SPIM_TX_EN_MASK  0x4000
#define INT_EN0_IRQ_SPIM_TX_EN  0x4000
#define INT_EN0_IRQ_SPIM_RX_EN_OFFSET  0xd
#define INT_EN0_IRQ_SPIM_RX_EN_MASK  0x2000
#define INT_EN0_IRQ_SPIM_RX_EN  0x2000
#define INT_EN0_IRQ_AUDDMA3_EN_OFFSET  0xc
#define INT_EN0_IRQ_AUDDMA3_EN_MASK  0x1000
#define INT_EN0_IRQ_AUDDMA3_EN  0x1000
#define INT_EN0_IRQ_AUDDMA0_EN_OFFSET  0xb
#define INT_EN0_IRQ_AUDDMA0_EN_MASK  0x800
#define INT_EN0_IRQ_AUDDMA0_EN  0x800
#define INT_EN0_IRQ_FDMA1_EN_OFFSET  0xa
#define INT_EN0_IRQ_FDMA1_EN_MASK  0x400
#define INT_EN0_IRQ_FDMA1_EN  0x400
#define INT_EN0_IRQ_FDMA0_EN_OFFSET  0x9
#define INT_EN0_IRQ_FDMA0_EN_MASK  0x200
#define INT_EN0_IRQ_FDMA0_EN  0x200
#define INT_EN0_IRQ_BUSERR_MERGE_EN_OFFSET  0x8
#define INT_EN0_IRQ_BUSERR_MERGE_EN_MASK  0x100
#define INT_EN0_IRQ_BUSERR_MERGE_EN  0x100
#define INT_EN0_IRQ_HIFI3_SOFT_EN_OFFSET  0x7
#define INT_EN0_IRQ_HIFI3_SOFT_EN_MASK  0x80
#define INT_EN0_IRQ_HIFI3_SOFT_EN  0x80
#define INT_EN0_IRQ_ARM_SOFT_EN_OFFSET  0x6
#define INT_EN0_IRQ_ARM_SOFT_EN_MASK  0x40
#define INT_EN0_IRQ_ARM_SOFT_EN  0x40
#define INT_EN0_IRQ_CAPEB_SOFT_EN_OFFSET  0x5
#define INT_EN0_IRQ_CAPEB_SOFT_EN_MASK  0x20
#define INT_EN0_IRQ_CAPEB_SOFT_EN  0x20
#define INT_EN0_IRQ_CAPEA_SOFT_EN_OFFSET  0x4
#define INT_EN0_IRQ_CAPEA_SOFT_EN_MASK  0x10
#define INT_EN0_IRQ_CAPEA_SOFT_EN  0x10
#define INT_EN0_IRQ_LLEB_SOFT_EN_OFFSET  0x3
#define INT_EN0_IRQ_LLEB_SOFT_EN_MASK  0x8
#define INT_EN0_IRQ_LLEB_SOFT_EN  0x8
#define INT_EN0_IRQ_LLEA_SOFT_EN_OFFSET  0x2
#define INT_EN0_IRQ_LLEA_SOFT_EN_MASK  0x4
#define INT_EN0_IRQ_LLEA_SOFT_EN  0x4
#define INT_EN0_IRQ_PMU_EN_OFFSET  0x1
#define INT_EN0_IRQ_PMU_EN_MASK  0x2
#define INT_EN0_IRQ_PMU_EN  0x2
#define INT_EN0_IRQ_BATTERY_VDT_EN_OFFSET  0x0
#define INT_EN0_IRQ_BATTERY_VDT_EN_MASK  0x1
#define INT_EN0_IRQ_BATTERY_VDT_EN  0x1
#define INT_MASK0_IRQ_ASIP_TIMER7_MASK_OFFSET  0x1f
#define INT_MASK0_IRQ_ASIP_TIMER7_MASK_MASK  0x80000000
#define INT_MASK0_IRQ_ASIP_TIMER7_MASK  0x80000000
#define INT_MASK0_IRQ_ASIP_TIMER6_MASK_OFFSET  0x1e
#define INT_MASK0_IRQ_ASIP_TIMER6_MASK_MASK  0x40000000
#define INT_MASK0_IRQ_ASIP_TIMER6_MASK  0x40000000
#define INT_MASK0_IRQ_DAC_RAMP_DONE_MASK_OFFSET  0x14
#define INT_MASK0_IRQ_DAC_RAMP_DONE_MASK_MASK  0x100000
#define INT_MASK0_IRQ_DAC_RAMP_DONE_MASK  0x100000
#define INT_MASK0_IRQ_CACHE_MASK_OFFSET  0x13
#define INT_MASK0_IRQ_CACHE_MASK_MASK  0x80000
#define INT_MASK0_IRQ_CACHE_MASK  0x80000
#define INT_MASK0_IRQ_I3C_MASK_OFFSET  0x12
#define INT_MASK0_IRQ_I3C_MASK_MASK  0x40000
#define INT_MASK0_IRQ_I3C_MASK  0x40000
#define INT_MASK0_IRQ_I2CS_MERGE_MASK_OFFSET  0x11
#define INT_MASK0_IRQ_I2CS_MERGE_MASK_MASK  0x20000
#define INT_MASK0_IRQ_I2CS_MERGE_MASK  0x20000
#define INT_MASK0_IRQ_I2CM_MASK_OFFSET  0x10
#define INT_MASK0_IRQ_I2CM_MASK_MASK  0x10000
#define INT_MASK0_IRQ_I2CM_MASK  0x10000
#define INT_MASK0_IRQ_GPIO_MASK_OFFSET  0xf
#define INT_MASK0_IRQ_GPIO_MASK_MASK  0x8000
#define INT_MASK0_IRQ_GPIO_MASK  0x8000
#define INT_MASK0_IRQ_SPIM_TX_MASK_OFFSET  0xe
#define INT_MASK0_IRQ_SPIM_TX_MASK_MASK  0x4000
#define INT_MASK0_IRQ_SPIM_TX_MASK  0x4000
#define INT_MASK0_IRQ_SPIM_RX_MASK_OFFSET  0xd
#define INT_MASK0_IRQ_SPIM_RX_MASK_MASK  0x2000
#define INT_MASK0_IRQ_SPIM_RX_MASK  0x2000
#define INT_MASK0_IRQ_AUDDMA3_MASK_OFFSET  0xc
#define INT_MASK0_IRQ_AUDDMA3_MASK_MASK  0x1000
#define INT_MASK0_IRQ_AUDDMA3_MASK  0x1000
#define INT_MASK0_IRQ_AUDDMA0_MASK_OFFSET  0xb
#define INT_MASK0_IRQ_AUDDMA0_MASK_MASK  0x800
#define INT_MASK0_IRQ_AUDDMA0_MASK  0x800
#define INT_MASK0_IRQ_FDMA1_MASK_OFFSET  0xa
#define INT_MASK0_IRQ_FDMA1_MASK_MASK  0x400
#define INT_MASK0_IRQ_FDMA1_MASK  0x400
#define INT_MASK0_IRQ_FDMA0_MASK_OFFSET  0x9
#define INT_MASK0_IRQ_FDMA0_MASK_MASK  0x200
#define INT_MASK0_IRQ_FDMA0_MASK  0x200
#define INT_MASK0_IRQ_BUSERR_MERGE_MASK_OFFSET  0x8
#define INT_MASK0_IRQ_BUSERR_MERGE_MASK_MASK  0x100
#define INT_MASK0_IRQ_BUSERR_MERGE_MASK  0x100
#define INT_MASK0_IRQ_HIFI3_SOFT_MASK_OFFSET  0x7
#define INT_MASK0_IRQ_HIFI3_SOFT_MASK_MASK  0x80
#define INT_MASK0_IRQ_HIFI3_SOFT_MASK  0x80
#define INT_MASK0_IRQ_ARM_SOFT_MASK_OFFSET  0x6
#define INT_MASK0_IRQ_ARM_SOFT_MASK_MASK  0x40
#define INT_MASK0_IRQ_ARM_SOFT_MASK  0x40
#define INT_MASK0_IRQ_CAPEB_SOFT_MASK_OFFSET  0x5
#define INT_MASK0_IRQ_CAPEB_SOFT_MASK_MASK  0x20
#define INT_MASK0_IRQ_CAPEB_SOFT_MASK  0x20
#define INT_MASK0_IRQ_CAPEA_SOFT_MASK_OFFSET  0x4
#define INT_MASK0_IRQ_CAPEA_SOFT_MASK_MASK  0x10
#define INT_MASK0_IRQ_CAPEA_SOFT_MASK  0x10
#define INT_MASK0_IRQ_LLEB_SOFT_MASK_OFFSET  0x3
#define INT_MASK0_IRQ_LLEB_SOFT_MASK_MASK  0x8
#define INT_MASK0_IRQ_LLEB_SOFT_MASK  0x8
#define INT_MASK0_IRQ_LLEA_SOFT_MASK_OFFSET  0x2
#define INT_MASK0_IRQ_LLEA_SOFT_MASK_MASK  0x4
#define INT_MASK0_IRQ_LLEA_SOFT_MASK  0x4
#define INT_MASK0_IRQ_PMU_MASK_OFFSET  0x1
#define INT_MASK0_IRQ_PMU_MASK_MASK  0x2
#define INT_MASK0_IRQ_PMU_MASK  0x2
#define INT_MASK0_IRQ_BATTERY_VDT_MASK_OFFSET  0x0
#define INT_MASK0_IRQ_BATTERY_VDT_MASK_MASK  0x1
#define INT_MASK0_IRQ_BATTERY_VDT_MASK  0x1
#define INT_BYP0_IRQ_ASIP_TIMER7_BYP_OFFSET  0x1f
#define INT_BYP0_IRQ_ASIP_TIMER7_BYP_MASK  0x80000000
#define INT_BYP0_IRQ_ASIP_TIMER7_BYP  0x80000000
#define INT_BYP0_IRQ_ASIP_TIMER6_BYP_OFFSET  0x1e
#define INT_BYP0_IRQ_ASIP_TIMER6_BYP_MASK  0x40000000
#define INT_BYP0_IRQ_ASIP_TIMER6_BYP  0x40000000
#define INT_BYP0_IRQ_DAC_RAMP_DONE_BYP_OFFSET  0x14
#define INT_BYP0_IRQ_DAC_RAMP_DONE_BYP_MASK  0x100000
#define INT_BYP0_IRQ_DAC_RAMP_DONE_BYP  0x100000
#define INT_BYP0_IRQ_CACHE_BYP_OFFSET  0x13
#define INT_BYP0_IRQ_CACHE_BYP_MASK  0x80000
#define INT_BYP0_IRQ_CACHE_BYP  0x80000
#define INT_BYP0_IRQ_I3C_BYP_OFFSET  0x12
#define INT_BYP0_IRQ_I3C_BYP_MASK  0x40000
#define INT_BYP0_IRQ_I3C_BYP  0x40000
#define INT_BYP0_IRQ_I2CS_MERGE_BYP_OFFSET  0x11
#define INT_BYP0_IRQ_I2CS_MERGE_BYP_MASK  0x20000
#define INT_BYP0_IRQ_I2CS_MERGE_BYP  0x20000
#define INT_BYP0_IRQ_I2CM_BYP_OFFSET  0x10
#define INT_BYP0_IRQ_I2CM_BYP_MASK  0x10000
#define INT_BYP0_IRQ_I2CM_BYP  0x10000
#define INT_BYP0_IRQ_GPIO_BYP_OFFSET  0xf
#define INT_BYP0_IRQ_GPIO_BYP_MASK  0x8000
#define INT_BYP0_IRQ_GPIO_BYP  0x8000
#define INT_BYP0_IRQ_SPIM_TX_BYP_OFFSET  0xe
#define INT_BYP0_IRQ_SPIM_TX_BYP_MASK  0x4000
#define INT_BYP0_IRQ_SPIM_TX_BYP  0x4000
#define INT_BYP0_IRQ_SPIM_RX_BYP_OFFSET  0xd
#define INT_BYP0_IRQ_SPIM_RX_BYP_MASK  0x2000
#define INT_BYP0_IRQ_SPIM_RX_BYP  0x2000
#define INT_BYP0_IRQ_AUDDMA3_BYP_OFFSET  0xc
#define INT_BYP0_IRQ_AUDDMA3_BYP_MASK  0x1000
#define INT_BYP0_IRQ_AUDDMA3_BYP  0x1000
#define INT_BYP0_IRQ_AUDDMA0_BYP_OFFSET  0xb
#define INT_BYP0_IRQ_AUDDMA0_BYP_MASK  0x800
#define INT_BYP0_IRQ_AUDDMA0_BYP  0x800
#define INT_BYP0_IRQ_FDMA1_BYP_OFFSET  0xa
#define INT_BYP0_IRQ_FDMA1_BYP_MASK  0x400
#define INT_BYP0_IRQ_FDMA1_BYP  0x400
#define INT_BYP0_IRQ_FDMA0_BYP_OFFSET  0x9
#define INT_BYP0_IRQ_FDMA0_BYP_MASK  0x200
#define INT_BYP0_IRQ_FDMA0_BYP  0x200
#define INT_BYP0_IRQ_BUSERR_MERGE_BYP_OFFSET  0x8
#define INT_BYP0_IRQ_BUSERR_MERGE_BYP_MASK  0x100
#define INT_BYP0_IRQ_BUSERR_MERGE_BYP  0x100
#define INT_BYP0_IRQ_HIFI3_SOFT_BYP_OFFSET  0x7
#define INT_BYP0_IRQ_HIFI3_SOFT_BYP_MASK  0x80
#define INT_BYP0_IRQ_HIFI3_SOFT_BYP  0x80
#define INT_BYP0_IRQ_ARM_SOFT_BYP_OFFSET  0x6
#define INT_BYP0_IRQ_ARM_SOFT_BYP_MASK  0x40
#define INT_BYP0_IRQ_ARM_SOFT_BYP  0x40
#define INT_BYP0_IRQ_CAPEB_SOFT_BYP_OFFSET  0x5
#define INT_BYP0_IRQ_CAPEB_SOFT_BYP_MASK  0x20
#define INT_BYP0_IRQ_CAPEB_SOFT_BYP  0x20
#define INT_BYP0_IRQ_CAPEA_SOFT_BYP_OFFSET  0x4
#define INT_BYP0_IRQ_CAPEA_SOFT_BYP_MASK  0x10
#define INT_BYP0_IRQ_CAPEA_SOFT_BYP  0x10
#define INT_BYP0_IRQ_LLEB_SOFT_BYP_OFFSET  0x3
#define INT_BYP0_IRQ_LLEB_SOFT_BYP_MASK  0x8
#define INT_BYP0_IRQ_LLEB_SOFT_BYP  0x8
#define INT_BYP0_IRQ_LLEA_SOFT_BYP_OFFSET  0x2
#define INT_BYP0_IRQ_LLEA_SOFT_BYP_MASK  0x4
#define INT_BYP0_IRQ_LLEA_SOFT_BYP  0x4
#define INT_BYP0_IRQ_PMU_BYP_OFFSET  0x1
#define INT_BYP0_IRQ_PMU_BYP_MASK  0x2
#define INT_BYP0_IRQ_PMU_BYP  0x2
#define INT_BYP0_IRQ_BATTERY_VDT_BYP_OFFSET  0x0
#define INT_BYP0_IRQ_BATTERY_VDT_BYP_MASK  0x1
#define INT_BYP0_IRQ_BATTERY_VDT_BYP  0x1
#define INT_ST0_IRQ_ASIP_TIMER7_ST_OFFSET  0x1f
#define INT_ST0_IRQ_ASIP_TIMER7_ST_MASK  0x80000000
#define INT_ST0_IRQ_ASIP_TIMER7_ST  0x80000000
#define INT_ST0_IRQ_ASIP_TIMER6_ST_OFFSET  0x1e
#define INT_ST0_IRQ_ASIP_TIMER6_ST_MASK  0x40000000
#define INT_ST0_IRQ_ASIP_TIMER6_ST  0x40000000
#define INT_ST0_IRQ_DAC_RAMP_DONE_ST_OFFSET  0x14
#define INT_ST0_IRQ_DAC_RAMP_DONE_ST_MASK  0x100000
#define INT_ST0_IRQ_DAC_RAMP_DONE_ST  0x100000
#define INT_ST0_IRQ_CACHE_ST_OFFSET  0x13
#define INT_ST0_IRQ_CACHE_ST_MASK  0x80000
#define INT_ST0_IRQ_CACHE_ST  0x80000
#define INT_ST0_IRQ_I3C_ST_OFFSET  0x12
#define INT_ST0_IRQ_I3C_ST_MASK  0x40000
#define INT_ST0_IRQ_I3C_ST  0x40000
#define INT_ST0_IRQ_I2CS_MERGE_ST_OFFSET  0x11
#define INT_ST0_IRQ_I2CS_MERGE_ST_MASK  0x20000
#define INT_ST0_IRQ_I2CS_MERGE_ST  0x20000
#define INT_ST0_IRQ_I2CM_ST_OFFSET  0x10
#define INT_ST0_IRQ_I2CM_ST_MASK  0x10000
#define INT_ST0_IRQ_I2CM_ST  0x10000
#define INT_ST0_IRQ_GPIO_ST_OFFSET  0xf
#define INT_ST0_IRQ_GPIO_ST_MASK  0x8000
#define INT_ST0_IRQ_GPIO_ST  0x8000
#define INT_ST0_IRQ_SPIM_TX_ST_OFFSET  0xe
#define INT_ST0_IRQ_SPIM_TX_ST_MASK  0x4000
#define INT_ST0_IRQ_SPIM_TX_ST  0x4000
#define INT_ST0_IRQ_SPIM_RX_ST_OFFSET  0xd
#define INT_ST0_IRQ_SPIM_RX_ST_MASK  0x2000
#define INT_ST0_IRQ_SPIM_RX_ST  0x2000
#define INT_ST0_IRQ_AUDDMA3_ST_OFFSET  0xc
#define INT_ST0_IRQ_AUDDMA3_ST_MASK  0x1000
#define INT_ST0_IRQ_AUDDMA3_ST  0x1000
#define INT_ST0_IRQ_AUDDMA0_ST_OFFSET  0xb
#define INT_ST0_IRQ_AUDDMA0_ST_MASK  0x800
#define INT_ST0_IRQ_AUDDMA0_ST  0x800
#define INT_ST0_IRQ_FDMA1_ST_OFFSET  0xa
#define INT_ST0_IRQ_FDMA1_ST_MASK  0x400
#define INT_ST0_IRQ_FDMA1_ST  0x400
#define INT_ST0_IRQ_FDMA0_ST_OFFSET  0x9
#define INT_ST0_IRQ_FDMA0_ST_MASK  0x200
#define INT_ST0_IRQ_FDMA0_ST  0x200
#define INT_ST0_IRQ_BUSERR_MERGE_ST_OFFSET  0x8
#define INT_ST0_IRQ_BUSERR_MERGE_ST_MASK  0x100
#define INT_ST0_IRQ_BUSERR_MERGE_ST  0x100
#define INT_ST0_IRQ_HIFI3_SOFT_ST_OFFSET  0x7
#define INT_ST0_IRQ_HIFI3_SOFT_ST_MASK  0x80
#define INT_ST0_IRQ_HIFI3_SOFT_ST  0x80
#define INT_ST0_IRQ_ARM_SOFT_ST_OFFSET  0x6
#define INT_ST0_IRQ_ARM_SOFT_ST_MASK  0x40
#define INT_ST0_IRQ_ARM_SOFT_ST  0x40
#define INT_ST0_IRQ_CAPEB_SOFT_ST_OFFSET  0x5
#define INT_ST0_IRQ_CAPEB_SOFT_ST_MASK  0x20
#define INT_ST0_IRQ_CAPEB_SOFT_ST  0x20
#define INT_ST0_IRQ_CAPEA_SOFT_ST_OFFSET  0x4
#define INT_ST0_IRQ_CAPEA_SOFT_ST_MASK  0x10
#define INT_ST0_IRQ_CAPEA_SOFT_ST  0x10
#define INT_ST0_IRQ_LLEB_SOFT_ST_OFFSET  0x3
#define INT_ST0_IRQ_LLEB_SOFT_ST_MASK  0x8
#define INT_ST0_IRQ_LLEB_SOFT_ST  0x8
#define INT_ST0_IRQ_LLEA_SOFT_ST_OFFSET  0x2
#define INT_ST0_IRQ_LLEA_SOFT_ST_MASK  0x4
#define INT_ST0_IRQ_LLEA_SOFT_ST  0x4
#define INT_ST0_IRQ_PMU_ST_OFFSET  0x1
#define INT_ST0_IRQ_PMU_ST_MASK  0x2
#define INT_ST0_IRQ_PMU_ST  0x2
#define INT_ST0_IRQ_BATTERY_VDT_ST_OFFSET  0x0
#define INT_ST0_IRQ_BATTERY_VDT_ST_MASK  0x1
#define INT_ST0_IRQ_BATTERY_VDT_ST  0x1
#define INT_EN1_IRQ_TX_OC_STATUS_CORE_EN_OFFSET  0x1f
#define INT_EN1_IRQ_TX_OC_STATUS_CORE_EN_MASK  0x80000000
#define INT_EN1_IRQ_TX_OC_STATUS_CORE_EN  0x80000000
#define INT_EN1_IRQ_WDT_MERGE_EN_OFFSET  0x1e
#define INT_EN1_IRQ_WDT_MERGE_EN_MASK  0x40000000
#define INT_EN1_IRQ_WDT_MERGE_EN  0x40000000
#define INT_EN1_IRQ_UART_EN_OFFSET  0x1d
#define INT_EN1_IRQ_UART_EN_MASK  0x20000000
#define INT_EN1_IRQ_UART_EN  0x20000000
#define INT_EN1_IRQ_LOCK_EN_OFFSET  0x1c
#define INT_EN1_IRQ_LOCK_EN_MASK  0x10000000
#define INT_EN1_IRQ_LOCK_EN  0x10000000
#define INT_EN1_IRQ_HIFI3_WRAP_EN_OFFSET  0x1a
#define INT_EN1_IRQ_HIFI3_WRAP_EN_MASK  0x4000000
#define INT_EN1_IRQ_HIFI3_WRAP_EN  0x4000000
#define INT_EN1_IRQ_SEC_VIOLATION_MERGE_EN_OFFSET  0x19
#define INT_EN1_IRQ_SEC_VIOLATION_MERGE_EN_MASK  0x2000000
#define INT_EN1_IRQ_SEC_VIOLATION_MERGE_EN  0x2000000
#define INT_EN1_IRQ_MAILBOX_EN_OFFSET  0x13
#define INT_EN1_IRQ_MAILBOX_EN_MASK  0x1f80000
#define INT_EN1_IRQ_MAILBOX_EN  0x1f80000
#define INT_EN1_IRQ_SLP_TYPE_OUT_EN_OFFSET  0x12
#define INT_EN1_IRQ_SLP_TYPE_OUT_EN_MASK  0x40000
#define INT_EN1_IRQ_SLP_TYPE_OUT_EN  0x40000
#define INT_EN1_IRQ_SYNC_EN_OFFSET  0xe
#define INT_EN1_IRQ_SYNC_EN_MASK  0x3c000
#define INT_EN1_IRQ_SYNC_EN  0x3c000
#define INT_EN1_IRQ_LL_DECIMATION_CH0_EN_OFFSET  0xd
#define INT_EN1_IRQ_LL_DECIMATION_CH0_EN_MASK  0x2000
#define INT_EN1_IRQ_LL_DECIMATION_CH0_EN  0x2000
#define INT_EN1_IRQ_CLK_DETECTION_EN_OFFSET  0xc
#define INT_EN1_IRQ_CLK_DETECTION_EN_MASK  0x1000
#define INT_EN1_IRQ_CLK_DETECTION_EN  0x1000
#define INT_EN1_IRQ_VAD_DETECTION_EN_OFFSET  0xb
#define INT_EN1_IRQ_VAD_DETECTION_EN_MASK  0x800
#define INT_EN1_IRQ_VAD_DETECTION_EN  0x800
#define INT_EN1_IRQ_AES_EN_OFFSET  0xa
#define INT_EN1_IRQ_AES_EN_MASK  0x400
#define INT_EN1_IRQ_AES_EN  0x400
#define INT_EN1_IRQ_EARLINK_EN_OFFSET  0x9
#define INT_EN1_IRQ_EARLINK_EN_MASK  0x200
#define INT_EN1_IRQ_EARLINK_EN  0x200
#define INT_EN1_IRQ_LL_DECIMATION_CH1_EN_OFFSET  0x6
#define INT_EN1_IRQ_LL_DECIMATION_CH1_EN_MASK  0x40
#define INT_EN1_IRQ_LL_DECIMATION_CH1_EN  0x40
#define INT_EN1_IRQ_LL_DECIMATION_CH2_EN_OFFSET  0x5
#define INT_EN1_IRQ_LL_DECIMATION_CH2_EN_MASK  0x20
#define INT_EN1_IRQ_LL_DECIMATION_CH2_EN  0x20
#define INT_EN1_IRQ_LL_DECIMATION_CH3_EN_OFFSET  0x4
#define INT_EN1_IRQ_LL_DECIMATION_CH3_EN_MASK  0x10
#define INT_EN1_IRQ_LL_DECIMATION_CH3_EN  0x10
#define INT_EN1_IRQ_QSPI_EN_OFFSET  0x3
#define INT_EN1_IRQ_QSPI_EN_MASK  0x8
#define INT_EN1_IRQ_QSPI_EN  0x8
#define INT_EN1_IRQ_TIMER_SP0_EN_OFFSET  0x2
#define INT_EN1_IRQ_TIMER_SP0_EN_MASK  0x4
#define INT_EN1_IRQ_TIMER_SP0_EN  0x4
#define INT_EN1_IRQ_TIMER_GP1_EN_OFFSET  0x1
#define INT_EN1_IRQ_TIMER_GP1_EN_MASK  0x2
#define INT_EN1_IRQ_TIMER_GP1_EN  0x2
#define INT_EN1_IRQ_TIMER_GP0_EN_OFFSET  0x0
#define INT_EN1_IRQ_TIMER_GP0_EN_MASK  0x1
#define INT_EN1_IRQ_TIMER_GP0_EN  0x1
#define INT_MASK1_IRQ_TX_OC_STATUS_CORE_MASK_OFFSET  0x1f
#define INT_MASK1_IRQ_TX_OC_STATUS_CORE_MASK_MASK  0x80000000
#define INT_MASK1_IRQ_TX_OC_STATUS_CORE_MASK  0x80000000
#define INT_MASK1_IRQ_WDT_MERGE_MASK_OFFSET  0x1e
#define INT_MASK1_IRQ_WDT_MERGE_MASK_MASK  0x40000000
#define INT_MASK1_IRQ_WDT_MERGE_MASK  0x40000000
#define INT_MASK1_IRQ_UART_MASK_OFFSET  0x1d
#define INT_MASK1_IRQ_UART_MASK_MASK  0x20000000
#define INT_MASK1_IRQ_UART_MASK  0x20000000
#define INT_MASK1_IRQ_LOCK_MASK_OFFSET  0x1c
#define INT_MASK1_IRQ_LOCK_MASK_MASK  0x10000000
#define INT_MASK1_IRQ_LOCK_MASK  0x10000000
#define INT_MASK1_IRQ_HIFI3_WRAP_MASK_OFFSET  0x1a
#define INT_MASK1_IRQ_HIFI3_WRAP_MASK_MASK  0x4000000
#define INT_MASK1_IRQ_HIFI3_WRAP_MASK  0x4000000
#define INT_MASK1_IRQ_SEC_VIOLATION_MERGE_MASK_OFFSET  0x19
#define INT_MASK1_IRQ_SEC_VIOLATION_MERGE_MASK_MASK  0x2000000
#define INT_MASK1_IRQ_SEC_VIOLATION_MERGE_MASK  0x2000000
#define INT_MASK1_IRQ_MAILBOX_MASK_OFFSET  0x13
#define INT_MASK1_IRQ_MAILBOX_MASK_MASK  0x1f80000
#define INT_MASK1_IRQ_MAILBOX_MASK  0x1f80000
#define INT_MASK1_IRQ_SLP_TYPE_OUT_MASK_OFFSET  0x12
#define INT_MASK1_IRQ_SLP_TYPE_OUT_MASK_MASK  0x40000
#define INT_MASK1_IRQ_SLP_TYPE_OUT_MASK  0x40000
#define INT_MASK1_IRQ_SYNC_MASK_OFFSET  0xe
#define INT_MASK1_IRQ_SYNC_MASK_MASK  0x3c000
#define INT_MASK1_IRQ_SYNC_MASK  0x3c000
#define INT_MASK1_IRQ_LL_DECIMATION_CH0_MASK_OFFSET  0xd
#define INT_MASK1_IRQ_LL_DECIMATION_CH0_MASK_MASK  0x2000
#define INT_MASK1_IRQ_LL_DECIMATION_CH0_MASK  0x2000
#define INT_MASK1_IRQ_CLK_DETECTION_MASK_OFFSET  0xc
#define INT_MASK1_IRQ_CLK_DETECTION_MASK_MASK  0x1000
#define INT_MASK1_IRQ_CLK_DETECTION_MASK  0x1000
#define INT_MASK1_IRQ_VAD_DETECTION_MASK_OFFSET  0xb
#define INT_MASK1_IRQ_VAD_DETECTION_MASK_MASK  0x800
#define INT_MASK1_IRQ_VAD_DETECTION_MASK  0x800
#define INT_MASK1_IRQ_AES_MASK_OFFSET  0xa
#define INT_MASK1_IRQ_AES_MASK_MASK  0x400
#define INT_MASK1_IRQ_AES_MASK  0x400
#define INT_MASK1_IRQ_EARLINK_MASK_OFFSET  0x9
#define INT_MASK1_IRQ_EARLINK_MASK_MASK  0x200
#define INT_MASK1_IRQ_EARLINK_MASK  0x200
#define INT_MASK1_IRQ_LL_DECIMATION_CH1_MASK_OFFSET  0x6
#define INT_MASK1_IRQ_LL_DECIMATION_CH1_MASK_MASK  0x40
#define INT_MASK1_IRQ_LL_DECIMATION_CH1_MASK  0x40
#define INT_MASK1_IRQ_LL_DECIMATION_CH2_MASK_OFFSET  0x5
#define INT_MASK1_IRQ_LL_DECIMATION_CH2_MASK_MASK  0x20
#define INT_MASK1_IRQ_LL_DECIMATION_CH2_MASK  0x20
#define INT_MASK1_IRQ_LL_DECIMATION_CH3_MASK_OFFSET  0x4
#define INT_MASK1_IRQ_LL_DECIMATION_CH3_MASK_MASK  0x10
#define INT_MASK1_IRQ_LL_DECIMATION_CH3_MASK  0x10
#define INT_MASK1_IRQ_QSPI_MASK_OFFSET  0x3
#define INT_MASK1_IRQ_QSPI_MASK_MASK  0x8
#define INT_MASK1_IRQ_QSPI_MASK  0x8
#define INT_MASK1_IRQ_TIMER_SP0_MASK_OFFSET  0x2
#define INT_MASK1_IRQ_TIMER_SP0_MASK_MASK  0x4
#define INT_MASK1_IRQ_TIMER_SP0_MASK  0x4
#define INT_MASK1_IRQ_TIMER_GP1_MASK_OFFSET  0x1
#define INT_MASK1_IRQ_TIMER_GP1_MASK_MASK  0x2
#define INT_MASK1_IRQ_TIMER_GP1_MASK  0x2
#define INT_MASK1_IRQ_TIMER_GP0_MASK_OFFSET  0x0
#define INT_MASK1_IRQ_TIMER_GP0_MASK_MASK  0x1
#define INT_MASK1_IRQ_TIMER_GP0_MASK  0x1
#define INT_BYP1_IRQ_TX_OC_STATUS_CORE_BYP_OFFSET  0x1f
#define INT_BYP1_IRQ_TX_OC_STATUS_CORE_BYP_MASK  0x80000000
#define INT_BYP1_IRQ_TX_OC_STATUS_CORE_BYP  0x80000000
#define INT_BYP1_IRQ_WDT_MERGE_BYP_OFFSET  0x1e
#define INT_BYP1_IRQ_WDT_MERGE_BYP_MASK  0x40000000
#define INT_BYP1_IRQ_WDT_MERGE_BYP  0x40000000
#define INT_BYP1_IRQ_UART_BYP_OFFSET  0x1d
#define INT_BYP1_IRQ_UART_BYP_MASK  0x20000000
#define INT_BYP1_IRQ_UART_BYP  0x20000000
#define INT_BYP1_IRQ_LOCK_BYP_OFFSET  0x1c
#define INT_BYP1_IRQ_LOCK_BYP_MASK  0x10000000
#define INT_BYP1_IRQ_LOCK_BYP  0x10000000
#define INT_BYP1_IRQ_HIFI3_WRAP_BYP_OFFSET  0x1a
#define INT_BYP1_IRQ_HIFI3_WRAP_BYP_MASK  0x4000000
#define INT_BYP1_IRQ_HIFI3_WRAP_BYP  0x4000000
#define INT_BYP1_IRQ_SEC_VIOLATION_MERGE_BYP_OFFSET  0x19
#define INT_BYP1_IRQ_SEC_VIOLATION_MERGE_BYP_MASK  0x2000000
#define INT_BYP1_IRQ_SEC_VIOLATION_MERGE_BYP  0x2000000
#define INT_BYP1_IRQ_MAILBOX_BYP_OFFSET  0x13
#define INT_BYP1_IRQ_MAILBOX_BYP_MASK  0x1f80000
#define INT_BYP1_IRQ_MAILBOX_BYP  0x1f80000
#define INT_BYP1_IRQ_SLP_TYPE_OUT_BYP_OFFSET  0x12
#define INT_BYP1_IRQ_SLP_TYPE_OUT_BYP_MASK  0x40000
#define INT_BYP1_IRQ_SLP_TYPE_OUT_BYP  0x40000
#define INT_BYP1_IRQ_SYNC_BYP_OFFSET  0xe
#define INT_BYP1_IRQ_SYNC_BYP_MASK  0x3c000
#define INT_BYP1_IRQ_SYNC_BYP  0x3c000
#define INT_BYP1_IRQ_LL_DECIMATION_CH0_BYP_OFFSET  0xd
#define INT_BYP1_IRQ_LL_DECIMATION_CH0_BYP_MASK  0x2000
#define INT_BYP1_IRQ_LL_DECIMATION_CH0_BYP  0x2000
#define INT_BYP1_IRQ_CLK_DETECTION_BYP_OFFSET  0xc
#define INT_BYP1_IRQ_CLK_DETECTION_BYP_MASK  0x1000
#define INT_BYP1_IRQ_CLK_DETECTION_BYP  0x1000
#define INT_BYP1_IRQ_VAD_DETECTION_BYP_OFFSET  0xb
#define INT_BYP1_IRQ_VAD_DETECTION_BYP_MASK  0x800
#define INT_BYP1_IRQ_VAD_DETECTION_BYP  0x800
#define INT_BYP1_IRQ_AES_BYP_OFFSET  0xa
#define INT_BYP1_IRQ_AES_BYP_MASK  0x400
#define INT_BYP1_IRQ_AES_BYP  0x400
#define INT_BYP1_IRQ_EARLINK_BYP_OFFSET  0x9
#define INT_BYP1_IRQ_EARLINK_BYP_MASK  0x200
#define INT_BYP1_IRQ_EARLINK_BYP  0x200
#define INT_BYP1_IRQ_LL_DECIMATION_CH1_BYP_OFFSET  0x6
#define INT_BYP1_IRQ_LL_DECIMATION_CH1_BYP_MASK  0x40
#define INT_BYP1_IRQ_LL_DECIMATION_CH1_BYP  0x40
#define INT_BYP1_IRQ_LL_DECIMATION_CH2_BYP_OFFSET  0x5
#define INT_BYP1_IRQ_LL_DECIMATION_CH2_BYP_MASK  0x20
#define INT_BYP1_IRQ_LL_DECIMATION_CH2_BYP  0x20
#define INT_BYP1_IRQ_LL_DECIMATION_CH3_BYP_OFFSET  0x4
#define INT_BYP1_IRQ_LL_DECIMATION_CH3_BYP_MASK  0x10
#define INT_BYP1_IRQ_LL_DECIMATION_CH3_BYP  0x10
#define INT_BYP1_IRQ_QSPI_BYP_OFFSET  0x3
#define INT_BYP1_IRQ_QSPI_BYP_MASK  0x8
#define INT_BYP1_IRQ_QSPI_BYP  0x8
#define INT_BYP1_IRQ_TIMER_SP0_BYP_OFFSET  0x2
#define INT_BYP1_IRQ_TIMER_SP0_BYP_MASK  0x4
#define INT_BYP1_IRQ_TIMER_SP0_BYP  0x4
#define INT_BYP1_IRQ_TIMER_GP1_BYP_OFFSET  0x1
#define INT_BYP1_IRQ_TIMER_GP1_BYP_MASK  0x2
#define INT_BYP1_IRQ_TIMER_GP1_BYP  0x2
#define INT_BYP1_IRQ_TIMER_GP0_BYP_OFFSET  0x0
#define INT_BYP1_IRQ_TIMER_GP0_BYP_MASK  0x1
#define INT_BYP1_IRQ_TIMER_GP0_BYP  0x1
#define INT_ST1_IRQ_TX_OC_STATUS_CORE_ST_OFFSET  0x1f
#define INT_ST1_IRQ_TX_OC_STATUS_CORE_ST_MASK  0x80000000
#define INT_ST1_IRQ_TX_OC_STATUS_CORE_ST  0x80000000
#define INT_ST1_IRQ_WDT_MERGE_ST_OFFSET  0x1e
#define INT_ST1_IRQ_WDT_MERGE_ST_MASK  0x40000000
#define INT_ST1_IRQ_WDT_MERGE_ST  0x40000000
#define INT_ST1_IRQ_UART_ST_OFFSET  0x1d
#define INT_ST1_IRQ_UART_ST_MASK  0x20000000
#define INT_ST1_IRQ_UART_ST  0x20000000
#define INT_ST1_IRQ_LOCK_ST_OFFSET  0x1c
#define INT_ST1_IRQ_LOCK_ST_MASK  0x10000000
#define INT_ST1_IRQ_LOCK_ST  0x10000000
#define INT_ST1_IRQ_HIFI3_WRAP_ST_OFFSET  0x1a
#define INT_ST1_IRQ_HIFI3_WRAP_ST_MASK  0x4000000
#define INT_ST1_IRQ_HIFI3_WRAP_ST  0x4000000
#define INT_ST1_IRQ_SEC_VIOLATION_MERGE_ST_OFFSET  0x19
#define INT_ST1_IRQ_SEC_VIOLATION_MERGE_ST_MASK  0x2000000
#define INT_ST1_IRQ_SEC_VIOLATION_MERGE_ST  0x2000000
#define INT_ST1_IRQ_MAILBOX_ST_OFFSET  0x13
#define INT_ST1_IRQ_MAILBOX_ST_MASK  0x1f80000
#define INT_ST1_IRQ_MAILBOX_ST  0x1f80000
#define INT_ST1_IRQ_SLP_TYPE_OUT_ST_OFFSET  0x12
#define INT_ST1_IRQ_SLP_TYPE_OUT_ST_MASK  0x40000
#define INT_ST1_IRQ_SLP_TYPE_OUT_ST  0x40000
#define INT_ST1_IRQ_SYNC_ST_OFFSET  0xe
#define INT_ST1_IRQ_SYNC_ST_MASK  0x3c000
#define INT_ST1_IRQ_SYNC_ST  0x3c000
#define INT_ST1_IRQ_LL_DECIMATION_CH0_ST_OFFSET  0xd
#define INT_ST1_IRQ_LL_DECIMATION_CH0_ST_MASK  0x2000
#define INT_ST1_IRQ_LL_DECIMATION_CH0_ST  0x2000
#define INT_ST1_IRQ_CLK_DETECTION_ST_OFFSET  0xc
#define INT_ST1_IRQ_CLK_DETECTION_ST_MASK  0x1000
#define INT_ST1_IRQ_CLK_DETECTION_ST  0x1000
#define INT_ST1_IRQ_VAD_DETECTION_ST_OFFSET  0xb
#define INT_ST1_IRQ_VAD_DETECTION_ST_MASK  0x800
#define INT_ST1_IRQ_VAD_DETECTION_ST  0x800
#define INT_ST1_IRQ_AES_ST_OFFSET  0xa
#define INT_ST1_IRQ_AES_ST_MASK  0x400
#define INT_ST1_IRQ_AES_ST  0x400
#define INT_ST1_IRQ_EARLINK_ST_OFFSET  0x9
#define INT_ST1_IRQ_EARLINK_ST_MASK  0x200
#define INT_ST1_IRQ_EARLINK_ST  0x200
#define INT_ST1_IRQ_LL_DECIMATION_CH1_ST_OFFSET  0x6
#define INT_ST1_IRQ_LL_DECIMATION_CH1_ST_MASK  0x40
#define INT_ST1_IRQ_LL_DECIMATION_CH1_ST  0x40
#define INT_ST1_IRQ_LL_DECIMATION_CH2_ST_OFFSET  0x5
#define INT_ST1_IRQ_LL_DECIMATION_CH2_ST_MASK  0x20
#define INT_ST1_IRQ_LL_DECIMATION_CH2_ST  0x20
#define INT_ST1_IRQ_LL_DECIMATION_CH3_ST_OFFSET  0x4
#define INT_ST1_IRQ_LL_DECIMATION_CH3_ST_MASK  0x10
#define INT_ST1_IRQ_LL_DECIMATION_CH3_ST  0x10
#define INT_ST1_IRQ_QSPI_ST_OFFSET  0x3
#define INT_ST1_IRQ_QSPI_ST_MASK  0x8
#define INT_ST1_IRQ_QSPI_ST  0x8
#define INT_ST1_IRQ_TIMER_SP0_ST_OFFSET  0x2
#define INT_ST1_IRQ_TIMER_SP0_ST_MASK  0x4
#define INT_ST1_IRQ_TIMER_SP0_ST  0x4
#define INT_ST1_IRQ_TIMER_GP1_ST_OFFSET  0x1
#define INT_ST1_IRQ_TIMER_GP1_ST_MASK  0x2
#define INT_ST1_IRQ_TIMER_GP1_ST  0x2
#define INT_ST1_IRQ_TIMER_GP0_ST_OFFSET  0x0
#define INT_ST1_IRQ_TIMER_GP0_ST_MASK  0x1
#define INT_ST1_IRQ_TIMER_GP0_ST  0x1
#define INT_MERGE_EN_ASIP_WDT_IRQ_EN_OFFSET  0x17
#define INT_MERGE_EN_ASIP_WDT_IRQ_EN_MASK  0x800000
#define INT_MERGE_EN_ASIP_WDT_IRQ_EN  0x800000
#define INT_MERGE_EN_IRQ_TIMER_WDT_RESET_EN_OFFSET  0x16
#define INT_MERGE_EN_IRQ_TIMER_WDT_RESET_EN_MASK  0x400000
#define INT_MERGE_EN_IRQ_TIMER_WDT_RESET_EN  0x400000
#define INT_MERGE_EN_ASIP_BUS_ERR_IRQ_EN_OFFSET  0x15
#define INT_MERGE_EN_ASIP_BUS_ERR_IRQ_EN_MASK  0x200000
#define INT_MERGE_EN_ASIP_BUS_ERR_IRQ_EN  0x200000
#define INT_MERGE_EN_ARMM1_AHB5_SYNC_DOWN_IRQ_EN_OFFSET  0x14
#define INT_MERGE_EN_ARMM1_AHB5_SYNC_DOWN_IRQ_EN_MASK  0x100000
#define INT_MERGE_EN_ARMM1_AHB5_SYNC_DOWN_IRQ_EN  0x100000
#define INT_MERGE_EN_ARMS1_AHB5_SYNC_UP_IRQ_EN_OFFSET  0x13
#define INT_MERGE_EN_ARMS1_AHB5_SYNC_UP_IRQ_EN_MASK  0x80000
#define INT_MERGE_EN_ARMS1_AHB5_SYNC_UP_IRQ_EN  0x80000
#define INT_MERGE_EN_QSPI_AHB5_SYNC_DOWN_IRQ_EN_OFFSET  0x12
#define INT_MERGE_EN_QSPI_AHB5_SYNC_DOWN_IRQ_EN_MASK  0x40000
#define INT_MERGE_EN_QSPI_AHB5_SYNC_DOWN_IRQ_EN  0x40000
#define INT_MERGE_EN_IRQ_I2CS_LIMIT_ADDRESS_EN_OFFSET  0x11
#define INT_MERGE_EN_IRQ_I2CS_LIMIT_ADDRESS_EN_MASK  0x20000
#define INT_MERGE_EN_IRQ_I2CS_LIMIT_ADDRESS_EN  0x20000
#define INT_MERGE_EN_IRQ_I2CS_ZERO_ADDRESS_EN_OFFSET  0x10
#define INT_MERGE_EN_IRQ_I2CS_ZERO_ADDRESS_EN_MASK  0x10000
#define INT_MERGE_EN_IRQ_I2CS_ZERO_ADDRESS_EN  0x10000
#define INT_MERGE_EN_MPC_DSPSMB_IRQ_EN_OFFSET  0xe
#define INT_MERGE_EN_MPC_DSPSMB_IRQ_EN_MASK  0x4000
#define INT_MERGE_EN_MPC_DSPSMB_IRQ_EN  0x4000
#define INT_MERGE_EN_MPC_PROM_IRQ_EN_OFFSET  0xd
#define INT_MERGE_EN_MPC_PROM_IRQ_EN_MASK  0x2000
#define INT_MERGE_EN_MPC_PROM_IRQ_EN  0x2000
#define INT_MERGE_EN_MPC_CACHE_IRQ_EN_OFFSET  0xc
#define INT_MERGE_EN_MPC_CACHE_IRQ_EN_MASK  0x1000
#define INT_MERGE_EN_MPC_CACHE_IRQ_EN  0x1000
#define INT_MERGE_EN_QSPI_MSC_IRQ_EN_OFFSET  0xb
#define INT_MERGE_EN_QSPI_MSC_IRQ_EN_MASK  0x800
#define INT_MERGE_EN_QSPI_MSC_IRQ_EN  0x800
#define INT_MERGE_EN_I2CS_MSC_IRQ_EN_OFFSET  0xa
#define INT_MERGE_EN_I2CS_MSC_IRQ_EN_MASK  0x400
#define INT_MERGE_EN_I2CS_MSC_IRQ_EN  0x400
#define INT_MERGE_EN_HIFI3M_MSC_IRQ_EN_OFFSET  0x9
#define INT_MERGE_EN_HIFI3M_MSC_IRQ_EN_MASK  0x200
#define INT_MERGE_EN_HIFI3M_MSC_IRQ_EN  0x200
#define INT_MERGE_EN_FDMA1_MSC_IRQ_EN_OFFSET  0x8
#define INT_MERGE_EN_FDMA1_MSC_IRQ_EN_MASK  0x100
#define INT_MERGE_EN_FDMA1_MSC_IRQ_EN  0x100
#define INT_MERGE_EN_FDMA0_MSC_IRQ_EN_OFFSET  0x7
#define INT_MERGE_EN_FDMA0_MSC_IRQ_EN_MASK  0x80
#define INT_MERGE_EN_FDMA0_MSC_IRQ_EN  0x80
#define INT_MERGE_EN_EARLINK_MSC_IRQ_EN_OFFSET  0x6
#define INT_MERGE_EN_EARLINK_MSC_IRQ_EN_MASK  0x40
#define INT_MERGE_EN_EARLINK_MSC_IRQ_EN  0x40
#define INT_MERGE_EN_LLEB_MSC_IRQ_EN_OFFSET  0x5
#define INT_MERGE_EN_LLEB_MSC_IRQ_EN_MASK  0x20
#define INT_MERGE_EN_LLEB_MSC_IRQ_EN  0x20
#define INT_MERGE_EN_LLEA_MSC_IRQ_EN_OFFSET  0x4
#define INT_MERGE_EN_LLEA_MSC_IRQ_EN_MASK  0x10
#define INT_MERGE_EN_LLEA_MSC_IRQ_EN  0x10
#define INT_MERGE_EN_CAPEB_MSC_IRQ_EN_OFFSET  0x3
#define INT_MERGE_EN_CAPEB_MSC_IRQ_EN_MASK  0x8
#define INT_MERGE_EN_CAPEB_MSC_IRQ_EN  0x8
#define INT_MERGE_EN_CAPEA_MSC_IRQ_EN_OFFSET  0x2
#define INT_MERGE_EN_CAPEA_MSC_IRQ_EN_MASK  0x4
#define INT_MERGE_EN_CAPEA_MSC_IRQ_EN  0x4
#define INT_MERGE_EN_AUDDMA3_MSC_IRQ_EN_OFFSET  0x1
#define INT_MERGE_EN_AUDDMA3_MSC_IRQ_EN_MASK  0x2
#define INT_MERGE_EN_AUDDMA3_MSC_IRQ_EN  0x2
#define INT_MERGE_EN_AUDDMA0_MSC_IRQ_EN_OFFSET  0x0
#define INT_MERGE_EN_AUDDMA0_MSC_IRQ_EN_MASK  0x1
#define INT_MERGE_EN_AUDDMA0_MSC_IRQ_EN  0x1
#define INT_MERGE_MASK_ASIP_WDT_IRQ_MASK_OFFSET  0x17
#define INT_MERGE_MASK_ASIP_WDT_IRQ_MASK_MASK  0x800000
#define INT_MERGE_MASK_ASIP_WDT_IRQ_MASK  0x800000
#define INT_MERGE_MASK_IRQ_TIMER_WDT_RESET_MASK_OFFSET  0x16
#define INT_MERGE_MASK_IRQ_TIMER_WDT_RESET_MASK_MASK  0x400000
#define INT_MERGE_MASK_IRQ_TIMER_WDT_RESET_MASK  0x400000
#define INT_MERGE_MASK_ASIP_BUS_ERR_IRQ_MASK_OFFSET  0x15
#define INT_MERGE_MASK_ASIP_BUS_ERR_IRQ_MASK_MASK  0x200000
#define INT_MERGE_MASK_ASIP_BUS_ERR_IRQ_MASK  0x200000
#define INT_MERGE_MASK_ARMM1_AHB5_SYNC_DOWN_IRQ_MASK_OFFSET  0x14
#define INT_MERGE_MASK_ARMM1_AHB5_SYNC_DOWN_IRQ_MASK_MASK  0x100000
#define INT_MERGE_MASK_ARMM1_AHB5_SYNC_DOWN_IRQ_MASK  0x100000
#define INT_MERGE_MASK_ARMS1_AHB5_SYNC_UP_IRQ_MASK_OFFSET  0x13
#define INT_MERGE_MASK_ARMS1_AHB5_SYNC_UP_IRQ_MASK_MASK  0x80000
#define INT_MERGE_MASK_ARMS1_AHB5_SYNC_UP_IRQ_MASK  0x80000
#define INT_MERGE_MASK_QSPI_AHB5_SYNC_DOWN_IRQ_MASK_OFFSET  0x12
#define INT_MERGE_MASK_QSPI_AHB5_SYNC_DOWN_IRQ_MASK_MASK  0x40000
#define INT_MERGE_MASK_QSPI_AHB5_SYNC_DOWN_IRQ_MASK  0x40000
#define INT_MERGE_MASK_IRQ_I2CS_LIMIT_ADDRESS_MASK_OFFSET  0x11
#define INT_MERGE_MASK_IRQ_I2CS_LIMIT_ADDRESS_MASK_MASK  0x20000
#define INT_MERGE_MASK_IRQ_I2CS_LIMIT_ADDRESS_MASK  0x20000
#define INT_MERGE_MASK_IRQ_I2CS_ZERO_ADDRESS_MASK_OFFSET  0x10
#define INT_MERGE_MASK_IRQ_I2CS_ZERO_ADDRESS_MASK_MASK  0x10000
#define INT_MERGE_MASK_IRQ_I2CS_ZERO_ADDRESS_MASK  0x10000
#define INT_MERGE_MASK_MPC_DSPSMB_IRQ_MASK_OFFSET  0xe
#define INT_MERGE_MASK_MPC_DSPSMB_IRQ_MASK_MASK  0x4000
#define INT_MERGE_MASK_MPC_DSPSMB_IRQ_MASK  0x4000
#define INT_MERGE_MASK_MPC_PROM_IRQ_MASK_OFFSET  0xd
#define INT_MERGE_MASK_MPC_PROM_IRQ_MASK_MASK  0x2000
#define INT_MERGE_MASK_MPC_PROM_IRQ_MASK  0x2000
#define INT_MERGE_MASK_MPC_CACHE_IRQ_MASK_OFFSET  0xc
#define INT_MERGE_MASK_MPC_CACHE_IRQ_MASK_MASK  0x1000
#define INT_MERGE_MASK_MPC_CACHE_IRQ_MASK  0x1000
#define INT_MERGE_MASK_QSPI_MSC_IRQ_MASK_OFFSET  0xb
#define INT_MERGE_MASK_QSPI_MSC_IRQ_MASK_MASK  0x800
#define INT_MERGE_MASK_QSPI_MSC_IRQ_MASK  0x800
#define INT_MERGE_MASK_I2CS_MSC_IRQ_MASK_OFFSET  0xa
#define INT_MERGE_MASK_I2CS_MSC_IRQ_MASK_MASK  0x400
#define INT_MERGE_MASK_I2CS_MSC_IRQ_MASK  0x400
#define INT_MERGE_MASK_HIFI3M_MSC_IRQ_MASK_OFFSET  0x9
#define INT_MERGE_MASK_HIFI3M_MSC_IRQ_MASK_MASK  0x200
#define INT_MERGE_MASK_HIFI3M_MSC_IRQ_MASK  0x200
#define INT_MERGE_MASK_FDMA1_MSC_IRQ_MASK_OFFSET  0x8
#define INT_MERGE_MASK_FDMA1_MSC_IRQ_MASK_MASK  0x100
#define INT_MERGE_MASK_FDMA1_MSC_IRQ_MASK  0x100
#define INT_MERGE_MASK_FDMA0_MSC_IRQ_MASK_OFFSET  0x7
#define INT_MERGE_MASK_FDMA0_MSC_IRQ_MASK_MASK  0x80
#define INT_MERGE_MASK_FDMA0_MSC_IRQ_MASK  0x80
#define INT_MERGE_MASK_EARLINK_MSC_IRQ_MASK_OFFSET  0x6
#define INT_MERGE_MASK_EARLINK_MSC_IRQ_MASK_MASK  0x40
#define INT_MERGE_MASK_EARLINK_MSC_IRQ_MASK  0x40
#define INT_MERGE_MASK_LLEB_MSC_IRQ_MASK_OFFSET  0x5
#define INT_MERGE_MASK_LLEB_MSC_IRQ_MASK_MASK  0x20
#define INT_MERGE_MASK_LLEB_MSC_IRQ_MASK  0x20
#define INT_MERGE_MASK_LLEA_MSC_IRQ_MASK_OFFSET  0x4
#define INT_MERGE_MASK_LLEA_MSC_IRQ_MASK_MASK  0x10
#define INT_MERGE_MASK_LLEA_MSC_IRQ_MASK  0x10
#define INT_MERGE_MASK_CAPEB_MSC_IRQ_MASK_OFFSET  0x3
#define INT_MERGE_MASK_CAPEB_MSC_IRQ_MASK_MASK  0x8
#define INT_MERGE_MASK_CAPEB_MSC_IRQ_MASK  0x8
#define INT_MERGE_MASK_CAPEA_MSC_IRQ_MASK_OFFSET  0x2
#define INT_MERGE_MASK_CAPEA_MSC_IRQ_MASK_MASK  0x4
#define INT_MERGE_MASK_CAPEA_MSC_IRQ_MASK  0x4
#define INT_MERGE_MASK_AUDDMA3_MSC_IRQ_MASK_OFFSET  0x1
#define INT_MERGE_MASK_AUDDMA3_MSC_IRQ_MASK_MASK  0x2
#define INT_MERGE_MASK_AUDDMA3_MSC_IRQ_MASK  0x2
#define INT_MERGE_MASK_AUDDMA0_MSC_IRQ_MASK_OFFSET  0x0
#define INT_MERGE_MASK_AUDDMA0_MSC_IRQ_MASK_MASK  0x1
#define INT_MERGE_MASK_AUDDMA0_MSC_IRQ_MASK  0x1
#define INT_MERGE_BYP_ASIP_WDT_IRQ_BYP_OFFSET  0x17
#define INT_MERGE_BYP_ASIP_WDT_IRQ_BYP_MASK  0x800000
#define INT_MERGE_BYP_ASIP_WDT_IRQ_BYP  0x800000
#define INT_MERGE_BYP_IRQ_TIMER_WDT_RESET_BYP_OFFSET  0x16
#define INT_MERGE_BYP_IRQ_TIMER_WDT_RESET_BYP_MASK  0x400000
#define INT_MERGE_BYP_IRQ_TIMER_WDT_RESET_BYP  0x400000
#define INT_MERGE_BYP_ASIP_BUS_ERR_IRQ_BYP_OFFSET  0x15
#define INT_MERGE_BYP_ASIP_BUS_ERR_IRQ_BYP_MASK  0x200000
#define INT_MERGE_BYP_ASIP_BUS_ERR_IRQ_BYP  0x200000
#define INT_MERGE_BYP_ARMM1_AHB5_SYNC_DOWN_IRQ_BYP_OFFSET  0x14
#define INT_MERGE_BYP_ARMM1_AHB5_SYNC_DOWN_IRQ_BYP_MASK  0x100000
#define INT_MERGE_BYP_ARMM1_AHB5_SYNC_DOWN_IRQ_BYP  0x100000
#define INT_MERGE_BYP_ARMS1_AHB5_SYNC_UP_IRQ_BYP_OFFSET  0x13
#define INT_MERGE_BYP_ARMS1_AHB5_SYNC_UP_IRQ_BYP_MASK  0x80000
#define INT_MERGE_BYP_ARMS1_AHB5_SYNC_UP_IRQ_BYP  0x80000
#define INT_MERGE_BYP_QSPI_AHB5_SYNC_DOWN_IRQ_BYP_OFFSET  0x12
#define INT_MERGE_BYP_QSPI_AHB5_SYNC_DOWN_IRQ_BYP_MASK  0x40000
#define INT_MERGE_BYP_QSPI_AHB5_SYNC_DOWN_IRQ_BYP  0x40000
#define INT_MERGE_BYP_IRQ_I2CS_LIMIT_ADDRESS_BYP_OFFSET  0x11
#define INT_MERGE_BYP_IRQ_I2CS_LIMIT_ADDRESS_BYP_MASK  0x20000
#define INT_MERGE_BYP_IRQ_I2CS_LIMIT_ADDRESS_BYP  0x20000
#define INT_MERGE_BYP_IRQ_I2CS_ZERO_ADDRESS_BYP_OFFSET  0x10
#define INT_MERGE_BYP_IRQ_I2CS_ZERO_ADDRESS_BYP_MASK  0x10000
#define INT_MERGE_BYP_IRQ_I2CS_ZERO_ADDRESS_BYP  0x10000
#define INT_MERGE_BYP_MPC_DSPSMB_IRQ_BYP_OFFSET  0xe
#define INT_MERGE_BYP_MPC_DSPSMB_IRQ_BYP_MASK  0x4000
#define INT_MERGE_BYP_MPC_DSPSMB_IRQ_BYP  0x4000
#define INT_MERGE_BYP_MPC_PROM_IRQ_BYP_OFFSET  0xd
#define INT_MERGE_BYP_MPC_PROM_IRQ_BYP_MASK  0x2000
#define INT_MERGE_BYP_MPC_PROM_IRQ_BYP  0x2000
#define INT_MERGE_BYP_MPC_CACHE_IRQ_BYP_OFFSET  0xc
#define INT_MERGE_BYP_MPC_CACHE_IRQ_BYP_MASK  0x1000
#define INT_MERGE_BYP_MPC_CACHE_IRQ_BYP  0x1000
#define INT_MERGE_BYP_QSPI_MSC_IRQ_BYP_OFFSET  0xb
#define INT_MERGE_BYP_QSPI_MSC_IRQ_BYP_MASK  0x800
#define INT_MERGE_BYP_QSPI_MSC_IRQ_BYP  0x800
#define INT_MERGE_BYP_I2CS_MSC_IRQ_BYP_OFFSET  0xa
#define INT_MERGE_BYP_I2CS_MSC_IRQ_BYP_MASK  0x400
#define INT_MERGE_BYP_I2CS_MSC_IRQ_BYP  0x400
#define INT_MERGE_BYP_HIFI3M_MSC_IRQ_BYP_OFFSET  0x9
#define INT_MERGE_BYP_HIFI3M_MSC_IRQ_BYP_MASK  0x200
#define INT_MERGE_BYP_HIFI3M_MSC_IRQ_BYP  0x200
#define INT_MERGE_BYP_FDMA1_MSC_IRQ_BYP_OFFSET  0x8
#define INT_MERGE_BYP_FDMA1_MSC_IRQ_BYP_MASK  0x100
#define INT_MERGE_BYP_FDMA1_MSC_IRQ_BYP  0x100
#define INT_MERGE_BYP_FDMA0_MSC_IRQ_BYP_OFFSET  0x7
#define INT_MERGE_BYP_FDMA0_MSC_IRQ_BYP_MASK  0x80
#define INT_MERGE_BYP_FDMA0_MSC_IRQ_BYP  0x80
#define INT_MERGE_BYP_EARLINK_MSC_IRQ_BYP_OFFSET  0x6
#define INT_MERGE_BYP_EARLINK_MSC_IRQ_BYP_MASK  0x40
#define INT_MERGE_BYP_EARLINK_MSC_IRQ_BYP  0x40
#define INT_MERGE_BYP_LLEB_MSC_IRQ_BYP_OFFSET  0x5
#define INT_MERGE_BYP_LLEB_MSC_IRQ_BYP_MASK  0x20
#define INT_MERGE_BYP_LLEB_MSC_IRQ_BYP  0x20
#define INT_MERGE_BYP_LLEA_MSC_IRQ_BYP_OFFSET  0x4
#define INT_MERGE_BYP_LLEA_MSC_IRQ_BYP_MASK  0x10
#define INT_MERGE_BYP_LLEA_MSC_IRQ_BYP  0x10
#define INT_MERGE_BYP_CAPEB_MSC_IRQ_BYP_OFFSET  0x3
#define INT_MERGE_BYP_CAPEB_MSC_IRQ_BYP_MASK  0x8
#define INT_MERGE_BYP_CAPEB_MSC_IRQ_BYP  0x8
#define INT_MERGE_BYP_CAPEA_MSC_IRQ_BYP_OFFSET  0x2
#define INT_MERGE_BYP_CAPEA_MSC_IRQ_BYP_MASK  0x4
#define INT_MERGE_BYP_CAPEA_MSC_IRQ_BYP  0x4
#define INT_MERGE_BYP_AUDDMA3_MSC_IRQ_BYP_OFFSET  0x1
#define INT_MERGE_BYP_AUDDMA3_MSC_IRQ_BYP_MASK  0x2
#define INT_MERGE_BYP_AUDDMA3_MSC_IRQ_BYP  0x2
#define INT_MERGE_BYP_AUDDMA0_MSC_IRQ_BYP_OFFSET  0x0
#define INT_MERGE_BYP_AUDDMA0_MSC_IRQ_BYP_MASK  0x1
#define INT_MERGE_BYP_AUDDMA0_MSC_IRQ_BYP  0x1
#define INT_MERGE_ST_ASIP_WDT_IRQ_ST_OFFSET  0x17
#define INT_MERGE_ST_ASIP_WDT_IRQ_ST_MASK  0x800000
#define INT_MERGE_ST_ASIP_WDT_IRQ_ST  0x800000
#define INT_MERGE_ST_IRQ_TIMER_WDT_RESET_ST_OFFSET  0x16
#define INT_MERGE_ST_IRQ_TIMER_WDT_RESET_ST_MASK  0x400000
#define INT_MERGE_ST_IRQ_TIMER_WDT_RESET_ST  0x400000
#define INT_MERGE_ST_ASIP_BUS_ERR_IRQ_ST_OFFSET  0x15
#define INT_MERGE_ST_ASIP_BUS_ERR_IRQ_ST_MASK  0x200000
#define INT_MERGE_ST_ASIP_BUS_ERR_IRQ_ST  0x200000
#define INT_MERGE_ST_ARMM1_AHB5_SYNC_DOWN_IRQ_ST_OFFSET  0x14
#define INT_MERGE_ST_ARMM1_AHB5_SYNC_DOWN_IRQ_ST_MASK  0x100000
#define INT_MERGE_ST_ARMM1_AHB5_SYNC_DOWN_IRQ_ST  0x100000
#define INT_MERGE_ST_ARMS1_AHB5_SYNC_UP_IRQ_ST_OFFSET  0x13
#define INT_MERGE_ST_ARMS1_AHB5_SYNC_UP_IRQ_ST_MASK  0x80000
#define INT_MERGE_ST_ARMS1_AHB5_SYNC_UP_IRQ_ST  0x80000
#define INT_MERGE_ST_QSPI_AHB5_SYNC_DOWN_IRQ_ST_OFFSET  0x12
#define INT_MERGE_ST_QSPI_AHB5_SYNC_DOWN_IRQ_ST_MASK  0x40000
#define INT_MERGE_ST_QSPI_AHB5_SYNC_DOWN_IRQ_ST  0x40000
#define INT_MERGE_ST_IRQ_I2CS_LIMIT_ADDRESS_ST_OFFSET  0x11
#define INT_MERGE_ST_IRQ_I2CS_LIMIT_ADDRESS_ST_MASK  0x20000
#define INT_MERGE_ST_IRQ_I2CS_LIMIT_ADDRESS_ST  0x20000
#define INT_MERGE_ST_IRQ_I2CS_ZERO_ADDRESS_ST_OFFSET  0x10
#define INT_MERGE_ST_IRQ_I2CS_ZERO_ADDRESS_ST_MASK  0x10000
#define INT_MERGE_ST_IRQ_I2CS_ZERO_ADDRESS_ST  0x10000
#define INT_MERGE_ST_MPC_DSPSMB_IRQ_ST_OFFSET  0xe
#define INT_MERGE_ST_MPC_DSPSMB_IRQ_ST_MASK  0x4000
#define INT_MERGE_ST_MPC_DSPSMB_IRQ_ST  0x4000
#define INT_MERGE_ST_MPC_PROM_IRQ_ST_OFFSET  0xd
#define INT_MERGE_ST_MPC_PROM_IRQ_ST_MASK  0x2000
#define INT_MERGE_ST_MPC_PROM_IRQ_ST  0x2000
#define INT_MERGE_ST_MPC_CACHE_IRQ_ST_OFFSET  0xc
#define INT_MERGE_ST_MPC_CACHE_IRQ_ST_MASK  0x1000
#define INT_MERGE_ST_MPC_CACHE_IRQ_ST  0x1000
#define INT_MERGE_ST_QSPI_MSC_IRQ_ST_OFFSET  0xb
#define INT_MERGE_ST_QSPI_MSC_IRQ_ST_MASK  0x800
#define INT_MERGE_ST_QSPI_MSC_IRQ_ST  0x800
#define INT_MERGE_ST_I2CS_MSC_IRQ_ST_OFFSET  0xa
#define INT_MERGE_ST_I2CS_MSC_IRQ_ST_MASK  0x400
#define INT_MERGE_ST_I2CS_MSC_IRQ_ST  0x400
#define INT_MERGE_ST_HIFI3M_MSC_IRQ_ST_OFFSET  0x9
#define INT_MERGE_ST_HIFI3M_MSC_IRQ_ST_MASK  0x200
#define INT_MERGE_ST_HIFI3M_MSC_IRQ_ST  0x200
#define INT_MERGE_ST_FDMA1_MSC_IRQ_ST_OFFSET  0x8
#define INT_MERGE_ST_FDMA1_MSC_IRQ_ST_MASK  0x100
#define INT_MERGE_ST_FDMA1_MSC_IRQ_ST  0x100
#define INT_MERGE_ST_FDMA0_MSC_IRQ_ST_OFFSET  0x7
#define INT_MERGE_ST_FDMA0_MSC_IRQ_ST_MASK  0x80
#define INT_MERGE_ST_FDMA0_MSC_IRQ_ST  0x80
#define INT_MERGE_ST_EARLINK_MSC_IRQ_ST_OFFSET  0x6
#define INT_MERGE_ST_EARLINK_MSC_IRQ_ST_MASK  0x40
#define INT_MERGE_ST_EARLINK_MSC_IRQ_ST  0x40
#define INT_MERGE_ST_LLEB_MSC_IRQ_ST_OFFSET  0x5
#define INT_MERGE_ST_LLEB_MSC_IRQ_ST_MASK  0x20
#define INT_MERGE_ST_LLEB_MSC_IRQ_ST  0x20
#define INT_MERGE_ST_LLEA_MSC_IRQ_ST_OFFSET  0x4
#define INT_MERGE_ST_LLEA_MSC_IRQ_ST_MASK  0x10
#define INT_MERGE_ST_LLEA_MSC_IRQ_ST  0x10
#define INT_MERGE_ST_CAPEB_MSC_IRQ_ST_OFFSET  0x3
#define INT_MERGE_ST_CAPEB_MSC_IRQ_ST_MASK  0x8
#define INT_MERGE_ST_CAPEB_MSC_IRQ_ST  0x8
#define INT_MERGE_ST_CAPEA_MSC_IRQ_ST_OFFSET  0x2
#define INT_MERGE_ST_CAPEA_MSC_IRQ_ST_MASK  0x4
#define INT_MERGE_ST_CAPEA_MSC_IRQ_ST  0x4
#define INT_MERGE_ST_AUDDMA3_MSC_IRQ_ST_OFFSET  0x1
#define INT_MERGE_ST_AUDDMA3_MSC_IRQ_ST_MASK  0x2
#define INT_MERGE_ST_AUDDMA3_MSC_IRQ_ST  0x2
#define INT_MERGE_ST_AUDDMA0_MSC_IRQ_ST_OFFSET  0x0
#define INT_MERGE_ST_AUDDMA0_MSC_IRQ_ST_MASK  0x1
#define INT_MERGE_ST_AUDDMA0_MSC_IRQ_ST  0x1
#define INT_SOFTSET0_IRQ_ASIP_TIMER7_FORCE_OFFSET  0x1f
#define INT_SOFTSET0_IRQ_ASIP_TIMER7_FORCE_MASK  0x80000000
#define INT_SOFTSET0_IRQ_ASIP_TIMER7_FORCE  0x80000000
#define INT_SOFTSET0_IRQ_ASIP_TIMER6_FORCE_OFFSET  0x1e
#define INT_SOFTSET0_IRQ_ASIP_TIMER6_FORCE_MASK  0x40000000
#define INT_SOFTSET0_IRQ_ASIP_TIMER6_FORCE  0x40000000
#define INT_SOFTSET0_IRQ_DAC_RAMP_DONE_FORCE_OFFSET  0x14
#define INT_SOFTSET0_IRQ_DAC_RAMP_DONE_FORCE_MASK  0x100000
#define INT_SOFTSET0_IRQ_DAC_RAMP_DONE_FORCE  0x100000
#define INT_SOFTSET0_IRQ_CACHE_FORCE_OFFSET  0x13
#define INT_SOFTSET0_IRQ_CACHE_FORCE_MASK  0x80000
#define INT_SOFTSET0_IRQ_CACHE_FORCE  0x80000
#define INT_SOFTSET0_IRQ_I3C_FORCE_OFFSET  0x12
#define INT_SOFTSET0_IRQ_I3C_FORCE_MASK  0x40000
#define INT_SOFTSET0_IRQ_I3C_FORCE  0x40000
#define INT_SOFTSET0_IRQ_I2CS_MERGE_FORCE_OFFSET  0x11
#define INT_SOFTSET0_IRQ_I2CS_MERGE_FORCE_MASK  0x20000
#define INT_SOFTSET0_IRQ_I2CS_MERGE_FORCE  0x20000
#define INT_SOFTSET0_IRQ_I2CM_FORCE_OFFSET  0x10
#define INT_SOFTSET0_IRQ_I2CM_FORCE_MASK  0x10000
#define INT_SOFTSET0_IRQ_I2CM_FORCE  0x10000
#define INT_SOFTSET0_IRQ_GPIO_FORCE_OFFSET  0xf
#define INT_SOFTSET0_IRQ_GPIO_FORCE_MASK  0x8000
#define INT_SOFTSET0_IRQ_GPIO_FORCE  0x8000
#define INT_SOFTSET0_IRQ_SPIM_TX_FORCE_OFFSET  0xe
#define INT_SOFTSET0_IRQ_SPIM_TX_FORCE_MASK  0x4000
#define INT_SOFTSET0_IRQ_SPIM_TX_FORCE  0x4000
#define INT_SOFTSET0_IRQ_SPIM_RX_FORCE_OFFSET  0xd
#define INT_SOFTSET0_IRQ_SPIM_RX_FORCE_MASK  0x2000
#define INT_SOFTSET0_IRQ_SPIM_RX_FORCE  0x2000
#define INT_SOFTSET0_IRQ_AUDDMA3_FORCE_OFFSET  0xc
#define INT_SOFTSET0_IRQ_AUDDMA3_FORCE_MASK  0x1000
#define INT_SOFTSET0_IRQ_AUDDMA3_FORCE  0x1000
#define INT_SOFTSET0_IRQ_AUDDMA0_FORCE_OFFSET  0xb
#define INT_SOFTSET0_IRQ_AUDDMA0_FORCE_MASK  0x800
#define INT_SOFTSET0_IRQ_AUDDMA0_FORCE  0x800
#define INT_SOFTSET0_IRQ_FDMA1_FORCE_OFFSET  0xa
#define INT_SOFTSET0_IRQ_FDMA1_FORCE_MASK  0x400
#define INT_SOFTSET0_IRQ_FDMA1_FORCE  0x400
#define INT_SOFTSET0_IRQ_FDMA0_FORCE_OFFSET  0x9
#define INT_SOFTSET0_IRQ_FDMA0_FORCE_MASK  0x200
#define INT_SOFTSET0_IRQ_FDMA0_FORCE  0x200
#define INT_SOFTSET0_IRQ_BUSERR_MERGE_FORCE_OFFSET  0x8
#define INT_SOFTSET0_IRQ_BUSERR_MERGE_FORCE_MASK  0x100
#define INT_SOFTSET0_IRQ_BUSERR_MERGE_FORCE  0x100
#define INT_SOFTSET0_IRQ_HIFI3_SOFT_FORCE_OFFSET  0x7
#define INT_SOFTSET0_IRQ_HIFI3_SOFT_FORCE_MASK  0x80
#define INT_SOFTSET0_IRQ_HIFI3_SOFT_FORCE  0x80
#define INT_SOFTSET0_IRQ_ARM_SOFT_FORCE_OFFSET  0x6
#define INT_SOFTSET0_IRQ_ARM_SOFT_FORCE_MASK  0x40
#define INT_SOFTSET0_IRQ_ARM_SOFT_FORCE  0x40
#define INT_SOFTSET0_IRQ_CAPEB_SOFT_FORCE_OFFSET  0x5
#define INT_SOFTSET0_IRQ_CAPEB_SOFT_FORCE_MASK  0x20
#define INT_SOFTSET0_IRQ_CAPEB_SOFT_FORCE  0x20
#define INT_SOFTSET0_IRQ_CAPEA_SOFT_FORCE_OFFSET  0x4
#define INT_SOFTSET0_IRQ_CAPEA_SOFT_FORCE_MASK  0x10
#define INT_SOFTSET0_IRQ_CAPEA_SOFT_FORCE  0x10
#define INT_SOFTSET0_IRQ_LLEB_SOFT_FORCE_OFFSET  0x3
#define INT_SOFTSET0_IRQ_LLEB_SOFT_FORCE_MASK  0x8
#define INT_SOFTSET0_IRQ_LLEB_SOFT_FORCE  0x8
#define INT_SOFTSET0_IRQ_LLEA_SOFT_FORCE_OFFSET  0x2
#define INT_SOFTSET0_IRQ_LLEA_SOFT_FORCE_MASK  0x4
#define INT_SOFTSET0_IRQ_LLEA_SOFT_FORCE  0x4
#define INT_SOFTSET0_IRQ_PMU_FORCE_OFFSET  0x1
#define INT_SOFTSET0_IRQ_PMU_FORCE_MASK  0x2
#define INT_SOFTSET0_IRQ_PMU_FORCE  0x2
#define INT_SOFTSET0_IRQ_BATTERY_VDT_FORCE_OFFSET  0x0
#define INT_SOFTSET0_IRQ_BATTERY_VDT_FORCE_MASK  0x1
#define INT_SOFTSET0_IRQ_BATTERY_VDT_FORCE  0x1
#define INT_SOFTSET1_IRQ_TX_OC_STATUS_CORE_EN_OFFSET  0x1f
#define INT_SOFTSET1_IRQ_TX_OC_STATUS_CORE_EN_MASK  0x80000000
#define INT_SOFTSET1_IRQ_TX_OC_STATUS_CORE_EN  0x80000000
#define INT_SOFTSET1_IRQ_WDT_MERGE_FORCE_OFFSET  0x1e
#define INT_SOFTSET1_IRQ_WDT_MERGE_FORCE_MASK  0x40000000
#define INT_SOFTSET1_IRQ_WDT_MERGE_FORCE  0x40000000
#define INT_SOFTSET1_IRQ_UART_FORCE_OFFSET  0x1d
#define INT_SOFTSET1_IRQ_UART_FORCE_MASK  0x20000000
#define INT_SOFTSET1_IRQ_UART_FORCE  0x20000000
#define INT_SOFTSET1_IRQ_LOCK_FORCE_OFFSET  0x1c
#define INT_SOFTSET1_IRQ_LOCK_FORCE_MASK  0x10000000
#define INT_SOFTSET1_IRQ_LOCK_FORCE  0x10000000
#define INT_SOFTSET1_IRQ_HIFI3_WRAP_FORCE_OFFSET  0x1a
#define INT_SOFTSET1_IRQ_HIFI3_WRAP_FORCE_MASK  0x4000000
#define INT_SOFTSET1_IRQ_HIFI3_WRAP_FORCE  0x4000000
#define INT_SOFTSET1_IRQ_SEC_VIOLATION_MERGE_FORCE_OFFSET  0x19
#define INT_SOFTSET1_IRQ_SEC_VIOLATION_MERGE_FORCE_MASK  0x2000000
#define INT_SOFTSET1_IRQ_SEC_VIOLATION_MERGE_FORCE  0x2000000
#define INT_SOFTSET1_IRQ_MAILBOX_FORCE_OFFSET  0x13
#define INT_SOFTSET1_IRQ_MAILBOX_FORCE_MASK  0x1f80000
#define INT_SOFTSET1_IRQ_MAILBOX_FORCE  0x1f80000
#define INT_SOFTSET1_IRQ_SLP_TYPE_OUT_FORCE_OFFSET  0x12
#define INT_SOFTSET1_IRQ_SLP_TYPE_OUT_FORCE_MASK  0x40000
#define INT_SOFTSET1_IRQ_SLP_TYPE_OUT_FORCE  0x40000
#define INT_SOFTSET1_IRQ_SYNC_FORCE_OFFSET  0xe
#define INT_SOFTSET1_IRQ_SYNC_FORCE_MASK  0x3c000
#define INT_SOFTSET1_IRQ_SYNC_FORCE  0x3c000
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH0_FORCE_OFFSET  0xd
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH0_FORCE_MASK  0x2000
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH0_FORCE  0x2000
#define INT_SOFTSET1_IRQ_CLK_DETECTION_FORCE_OFFSET  0xc
#define INT_SOFTSET1_IRQ_CLK_DETECTION_FORCE_MASK  0x1000
#define INT_SOFTSET1_IRQ_CLK_DETECTION_FORCE  0x1000
#define INT_SOFTSET1_IRQ_VAD_DETECTION_FORCE_OFFSET  0xb
#define INT_SOFTSET1_IRQ_VAD_DETECTION_FORCE_MASK  0x800
#define INT_SOFTSET1_IRQ_VAD_DETECTION_FORCE  0x800
#define INT_SOFTSET1_IRQ_AES_FORCE_OFFSET  0xa
#define INT_SOFTSET1_IRQ_AES_FORCE_MASK  0x400
#define INT_SOFTSET1_IRQ_AES_FORCE  0x400
#define INT_SOFTSET1_IRQ_EARLINK_FORCE_OFFSET  0x9
#define INT_SOFTSET1_IRQ_EARLINK_FORCE_MASK  0x200
#define INT_SOFTSET1_IRQ_EARLINK_FORCE  0x200
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH1_FORCE_OFFSET  0x6
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH1_FORCE_MASK  0x40
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH1_FORCE  0x40
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH2_FORCE_OFFSET  0x5
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH2_FORCE_MASK  0x20
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH2_FORCE  0x20
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH3_FORCE_OFFSET  0x4
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH3_FORCE_MASK  0x10
#define INT_SOFTSET1_IRQ_LL_DECIMATION_CH3_FORCE  0x10
#define INT_SOFTSET1_IRQ_QSPI_FORCE_OFFSET  0x3
#define INT_SOFTSET1_IRQ_QSPI_FORCE_MASK  0x8
#define INT_SOFTSET1_IRQ_QSPI_FORCE  0x8
#define INT_SOFTSET1_IRQ_TIMER_SP0_FORCE_OFFSET  0x2
#define INT_SOFTSET1_IRQ_TIMER_SP0_FORCE_MASK  0x4
#define INT_SOFTSET1_IRQ_TIMER_SP0_FORCE  0x4
#define INT_SOFTSET1_IRQ_TIMER_GP1_FORCE_OFFSET  0x1
#define INT_SOFTSET1_IRQ_TIMER_GP1_FORCE_MASK  0x2
#define INT_SOFTSET1_IRQ_TIMER_GP1_FORCE  0x2
#define INT_SOFTSET1_IRQ_TIMER_GP0_FORCE_OFFSET  0x0
#define INT_SOFTSET1_IRQ_TIMER_GP0_FORCE_MASK  0x1
#define INT_SOFTSET1_IRQ_TIMER_GP0_FORCE  0x1
#define INT_NMI_MASK0_NMIIRQ_ASIP_TIMER7_MASK_OFFSET  0x1f
#define INT_NMI_MASK0_NMIIRQ_ASIP_TIMER7_MASK_MASK  0x80000000
#define INT_NMI_MASK0_NMIIRQ_ASIP_TIMER7_MASK  0x80000000
#define INT_NMI_MASK0_NMIIRQ_ASIP_TIMER6_MASK_OFFSET  0x1e
#define INT_NMI_MASK0_NMIIRQ_ASIP_TIMER6_MASK_MASK  0x40000000
#define INT_NMI_MASK0_NMIIRQ_ASIP_TIMER6_MASK  0x40000000
#define INT_NMI_MASK0_NMIIRQ_DAC_RAMP_DONE_MASK_OFFSET  0x14
#define INT_NMI_MASK0_NMIIRQ_DAC_RAMP_DONE_MASK_MASK  0x100000
#define INT_NMI_MASK0_NMIIRQ_DAC_RAMP_DONE_MASK  0x100000
#define INT_NMI_MASK0_NMIIRQ_CACHE_MASK_OFFSET  0x13
#define INT_NMI_MASK0_NMIIRQ_CACHE_MASK_MASK  0x80000
#define INT_NMI_MASK0_NMIIRQ_CACHE_MASK  0x80000
#define INT_NMI_MASK0_NMIIRQ_I3C_MASK_OFFSET  0x12
#define INT_NMI_MASK0_NMIIRQ_I3C_MASK_MASK  0x40000
#define INT_NMI_MASK0_NMIIRQ_I3C_MASK  0x40000
#define INT_NMI_MASK0_NMIIRQ_I2CS_MERGE_MASK_OFFSET  0x11
#define INT_NMI_MASK0_NMIIRQ_I2CS_MERGE_MASK_MASK  0x20000
#define INT_NMI_MASK0_NMIIRQ_I2CS_MERGE_MASK  0x20000
#define INT_NMI_MASK0_NMIIRQ_I2CM_MASK_OFFSET  0x10
#define INT_NMI_MASK0_NMIIRQ_I2CM_MASK_MASK  0x10000
#define INT_NMI_MASK0_NMIIRQ_I2CM_MASK  0x10000
#define INT_NMI_MASK0_NMIIRQ_GPIO_MASK_OFFSET  0xf
#define INT_NMI_MASK0_NMIIRQ_GPIO_MASK_MASK  0x8000
#define INT_NMI_MASK0_NMIIRQ_GPIO_MASK  0x8000
#define INT_NMI_MASK0_NMIIRQ_SPIM_TX_MASK_OFFSET  0xe
#define INT_NMI_MASK0_NMIIRQ_SPIM_TX_MASK_MASK  0x4000
#define INT_NMI_MASK0_NMIIRQ_SPIM_TX_MASK  0x4000
#define INT_NMI_MASK0_NMIIRQ_SPIM_RX_MASK_OFFSET  0xd
#define INT_NMI_MASK0_NMIIRQ_SPIM_RX_MASK_MASK  0x2000
#define INT_NMI_MASK0_NMIIRQ_SPIM_RX_MASK  0x2000
#define INT_NMI_MASK0_NMIIRQ_AUDDMA3_MASK_OFFSET  0xc
#define INT_NMI_MASK0_NMIIRQ_AUDDMA3_MASK_MASK  0x1000
#define INT_NMI_MASK0_NMIIRQ_AUDDMA3_MASK  0x1000
#define INT_NMI_MASK0_NMIIRQ_AUDDMA0_MASK_OFFSET  0xb
#define INT_NMI_MASK0_NMIIRQ_AUDDMA0_MASK_MASK  0x800
#define INT_NMI_MASK0_NMIIRQ_AUDDMA0_MASK  0x800
#define INT_NMI_MASK0_NMIIRQ_FDMA1_MASK_OFFSET  0xa
#define INT_NMI_MASK0_NMIIRQ_FDMA1_MASK_MASK  0x400
#define INT_NMI_MASK0_NMIIRQ_FDMA1_MASK  0x400
#define INT_NMI_MASK0_NMIIRQ_FDMA0_MASK_OFFSET  0x9
#define INT_NMI_MASK0_NMIIRQ_FDMA0_MASK_MASK  0x200
#define INT_NMI_MASK0_NMIIRQ_FDMA0_MASK  0x200
#define INT_NMI_MASK0_NMIIRQ_BUSERR_MERGE_MASK_OFFSET  0x8
#define INT_NMI_MASK0_NMIIRQ_BUSERR_MERGE_MASK_MASK  0x100
#define INT_NMI_MASK0_NMIIRQ_BUSERR_MERGE_MASK  0x100
#define INT_NMI_MASK0_NMIIRQ_HIFI3_SOFT_MASK_OFFSET  0x7
#define INT_NMI_MASK0_NMIIRQ_HIFI3_SOFT_MASK_MASK  0x80
#define INT_NMI_MASK0_NMIIRQ_HIFI3_SOFT_MASK  0x80
#define INT_NMI_MASK0_NMIIRQ_ARM_SOFT_MASK_OFFSET  0x6
#define INT_NMI_MASK0_NMIIRQ_ARM_SOFT_MASK_MASK  0x40
#define INT_NMI_MASK0_NMIIRQ_ARM_SOFT_MASK  0x40
#define INT_NMI_MASK0_NMIIRQ_CAPEB_SOFT_MASK_OFFSET  0x5
#define INT_NMI_MASK0_NMIIRQ_CAPEB_SOFT_MASK_MASK  0x20
#define INT_NMI_MASK0_NMIIRQ_CAPEB_SOFT_MASK  0x20
#define INT_NMI_MASK0_NMIIRQ_CAPEA_SOFT_MASK_OFFSET  0x4
#define INT_NMI_MASK0_NMIIRQ_CAPEA_SOFT_MASK_MASK  0x10
#define INT_NMI_MASK0_NMIIRQ_CAPEA_SOFT_MASK  0x10
#define INT_NMI_MASK0_NMIIRQ_LLEB_SOFT_MASK_OFFSET  0x3
#define INT_NMI_MASK0_NMIIRQ_LLEB_SOFT_MASK_MASK  0x8
#define INT_NMI_MASK0_NMIIRQ_LLEB_SOFT_MASK  0x8
#define INT_NMI_MASK0_NMIIRQ_LLEA_SOFT_MASK_OFFSET  0x2
#define INT_NMI_MASK0_NMIIRQ_LLEA_SOFT_MASK_MASK  0x4
#define INT_NMI_MASK0_NMIIRQ_LLEA_SOFT_MASK  0x4
#define INT_NMI_MASK0_NMIIRQ_PMU_MASK_OFFSET  0x1
#define INT_NMI_MASK0_NMIIRQ_PMU_MASK_MASK  0x2
#define INT_NMI_MASK0_NMIIRQ_PMU_MASK  0x2
#define INT_NMI_MASK0_NMIIRQ_BATTERY_VDT_MASK_OFFSET  0x0
#define INT_NMI_MASK0_NMIIRQ_BATTERY_VDT_MASK_MASK  0x1
#define INT_NMI_MASK0_NMIIRQ_BATTERY_VDT_MASK  0x1
#define INT_NMI_MASK1_NMIIRQ_TX_OC_STATUS_CORE_MASK_OFFSET  0x1f
#define INT_NMI_MASK1_NMIIRQ_TX_OC_STATUS_CORE_MASK_MASK  0x80000000
#define INT_NMI_MASK1_NMIIRQ_TX_OC_STATUS_CORE_MASK  0x80000000
#define INT_NMI_MASK1_NMIIRQ_WDT_MERGE_MASK_OFFSET  0x1e
#define INT_NMI_MASK1_NMIIRQ_WDT_MERGE_MASK_MASK  0x40000000
#define INT_NMI_MASK1_NMIIRQ_WDT_MERGE_MASK  0x40000000
#define INT_NMI_MASK1_NMIIRQ_UART_MASK_OFFSET  0x1d
#define INT_NMI_MASK1_NMIIRQ_UART_MASK_MASK  0x20000000
#define INT_NMI_MASK1_NMIIRQ_UART_MASK  0x20000000
#define INT_NMI_MASK1_NMIIRQ_LOCK_MASK_OFFSET  0x1c
#define INT_NMI_MASK1_NMIIRQ_LOCK_MASK_MASK  0x10000000
#define INT_NMI_MASK1_NMIIRQ_LOCK_MASK  0x10000000
#define INT_NMI_MASK1_NMIIRQ_HIFI3_WRAP_MASK_OFFSET  0x1a
#define INT_NMI_MASK1_NMIIRQ_HIFI3_WRAP_MASK_MASK  0x4000000
#define INT_NMI_MASK1_NMIIRQ_HIFI3_WRAP_MASK  0x4000000
#define INT_NMI_MASK1_NMIIRQ_SEC_VIOLATION_MERGE_MASK_OFFSET  0x19
#define INT_NMI_MASK1_NMIIRQ_SEC_VIOLATION_MERGE_MASK_MASK  0x2000000
#define INT_NMI_MASK1_NMIIRQ_SEC_VIOLATION_MERGE_MASK  0x2000000
#define INT_NMI_MASK1_NMIIRQ_MAILBOX_MASK_OFFSET  0x13
#define INT_NMI_MASK1_NMIIRQ_MAILBOX_MASK_MASK  0x1f80000
#define INT_NMI_MASK1_NMIIRQ_MAILBOX_MASK  0x1f80000
#define INT_NMI_MASK1_NMIIRQ_SLP_TYPE_OUT_MASK_OFFSET  0x12
#define INT_NMI_MASK1_NMIIRQ_SLP_TYPE_OUT_MASK_MASK  0x40000
#define INT_NMI_MASK1_NMIIRQ_SLP_TYPE_OUT_MASK  0x40000
#define INT_NMI_MASK1_NMIIRQ_SYNC_MASK_OFFSET  0xe
#define INT_NMI_MASK1_NMIIRQ_SYNC_MASK_MASK  0x3c000
#define INT_NMI_MASK1_NMIIRQ_SYNC_MASK  0x3c000
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH0_MASK_OFFSET  0xd
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH0_MASK_MASK  0x2000
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH0_MASK  0x2000
#define INT_NMI_MASK1_NMIIRQ_CLK_DETECTION_MASK_OFFSET  0xc
#define INT_NMI_MASK1_NMIIRQ_CLK_DETECTION_MASK_MASK  0x1000
#define INT_NMI_MASK1_NMIIRQ_CLK_DETECTION_MASK  0x1000
#define INT_NMI_MASK1_NMIIRQ_VAD_DETECTION_MASK_OFFSET  0xb
#define INT_NMI_MASK1_NMIIRQ_VAD_DETECTION_MASK_MASK  0x800
#define INT_NMI_MASK1_NMIIRQ_VAD_DETECTION_MASK  0x800
#define INT_NMI_MASK1_NMIIRQ_AES_MASK_OFFSET  0xa
#define INT_NMI_MASK1_NMIIRQ_AES_MASK_MASK  0x400
#define INT_NMI_MASK1_NMIIRQ_AES_MASK  0x400
#define INT_NMI_MASK1_NMIIRQ_EARLINK_MASK_OFFSET  0x9
#define INT_NMI_MASK1_NMIIRQ_EARLINK_MASK_MASK  0x200
#define INT_NMI_MASK1_NMIIRQ_EARLINK_MASK  0x200
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH1_MASK_OFFSET  0x6
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH1_MASK_MASK  0x40
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH1_MASK  0x40
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH2_MASK_OFFSET  0x5
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH2_MASK_MASK  0x20
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH2_MASK  0x20
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH3_MASK_OFFSET  0x4
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH3_MASK_MASK  0x10
#define INT_NMI_MASK1_NMIIRQ_LL_DECIMATION_CH3_MASK  0x10
#define INT_NMI_MASK1_NMIIRQ_QSPI_MASK_OFFSET  0x3
#define INT_NMI_MASK1_NMIIRQ_QSPI_MASK_MASK  0x8
#define INT_NMI_MASK1_NMIIRQ_QSPI_MASK  0x8
#define INT_NMI_MASK1_NMIIRQ_TIMER_SP0_MASK_OFFSET  0x2
#define INT_NMI_MASK1_NMIIRQ_TIMER_SP0_MASK_MASK  0x4
#define INT_NMI_MASK1_NMIIRQ_TIMER_SP0_MASK  0x4
#define INT_NMI_MASK1_NMIIRQ_TIMER_GP1_MASK_OFFSET  0x1
#define INT_NMI_MASK1_NMIIRQ_TIMER_GP1_MASK_MASK  0x2
#define INT_NMI_MASK1_NMIIRQ_TIMER_GP1_MASK  0x2
#define INT_NMI_MASK1_NMIIRQ_TIMER_GP0_MASK_OFFSET  0x0
#define INT_NMI_MASK1_NMIIRQ_TIMER_GP0_MASK_MASK  0x1
#define INT_NMI_MASK1_NMIIRQ_TIMER_GP0_MASK  0x1
#define INT_EXT_EN_MPC_PROM_IRQ_EXT_EN_OFFSET  0x1f
#define INT_EXT_EN_MPC_PROM_IRQ_EXT_EN_MASK  0x80000000
#define INT_EXT_EN_MPC_PROM_IRQ_EXT_EN  0x80000000
#define INT_EXT_EN_MPC_CACHE_IRQ_EXT_EN_OFFSET  0x1e
#define INT_EXT_EN_MPC_CACHE_IRQ_EXT_EN_MASK  0x40000000
#define INT_EXT_EN_MPC_CACHE_IRQ_EXT_EN  0x40000000
#define INT_EXT_EN_MPC_DSPSMB_IRQ_EXT_EN_OFFSET  0x1d
#define INT_EXT_EN_MPC_DSPSMB_IRQ_EXT_EN_MASK  0x20000000
#define INT_EXT_EN_MPC_DSPSMB_IRQ_EXT_EN  0x20000000
#define INT_EXT_EN_QSPI_MSC_IRQ_EXT_EN_OFFSET  0xb
#define INT_EXT_EN_QSPI_MSC_IRQ_EXT_EN_MASK  0x800
#define INT_EXT_EN_QSPI_MSC_IRQ_EXT_EN  0x800
#define INT_EXT_EN_I2CS_MSC_IRQ_EXT_EN_OFFSET  0xa
#define INT_EXT_EN_I2CS_MSC_IRQ_EXT_EN_MASK  0x400
#define INT_EXT_EN_I2CS_MSC_IRQ_EXT_EN  0x400
#define INT_EXT_EN_HIFI3M_MSC_IRQ_EXT_EN_OFFSET  0x9
#define INT_EXT_EN_HIFI3M_MSC_IRQ_EXT_EN_MASK  0x200
#define INT_EXT_EN_HIFI3M_MSC_IRQ_EXT_EN  0x200
#define INT_EXT_EN_FDMA1_MSC_IRQ_EXT_EN_OFFSET  0x8
#define INT_EXT_EN_FDMA1_MSC_IRQ_EXT_EN_MASK  0x100
#define INT_EXT_EN_FDMA1_MSC_IRQ_EXT_EN  0x100
#define INT_EXT_EN_FDMA0_MSC_IRQ_EXT_EN_OFFSET  0x7
#define INT_EXT_EN_FDMA0_MSC_IRQ_EXT_EN_MASK  0x80
#define INT_EXT_EN_FDMA0_MSC_IRQ_EXT_EN  0x80
#define INT_EXT_EN_EARLINK_MSC_IRQ_EXT_EN_OFFSET  0x6
#define INT_EXT_EN_EARLINK_MSC_IRQ_EXT_EN_MASK  0x40
#define INT_EXT_EN_EARLINK_MSC_IRQ_EXT_EN  0x40
#define INT_EXT_EN_LLEB_MSC_IRQ_EXT_EN_OFFSET  0x5
#define INT_EXT_EN_LLEB_MSC_IRQ_EXT_EN_MASK  0x20
#define INT_EXT_EN_LLEB_MSC_IRQ_EXT_EN  0x20
#define INT_EXT_EN_LLEA_MSC_IRQ_EXT_EN_OFFSET  0x4
#define INT_EXT_EN_LLEA_MSC_IRQ_EXT_EN_MASK  0x10
#define INT_EXT_EN_LLEA_MSC_IRQ_EXT_EN  0x10
#define INT_EXT_EN_CAPEB_MSC_IRQ_EXT_EN_OFFSET  0x3
#define INT_EXT_EN_CAPEB_MSC_IRQ_EXT_EN_MASK  0x8
#define INT_EXT_EN_CAPEB_MSC_IRQ_EXT_EN  0x8
#define INT_EXT_EN_CAPEA_MSC_IRQ_EXT_EN_OFFSET  0x2
#define INT_EXT_EN_CAPEA_MSC_IRQ_EXT_EN_MASK  0x4
#define INT_EXT_EN_CAPEA_MSC_IRQ_EXT_EN  0x4
#define INT_EXT_EN_AUDDMA3_MSC_IRQ_EXT_EN_OFFSET  0x1
#define INT_EXT_EN_AUDDMA3_MSC_IRQ_EXT_EN_MASK  0x2
#define INT_EXT_EN_AUDDMA3_MSC_IRQ_EXT_EN  0x2
#define INT_EXT_EN_AUDDMA0_MSC_IRQ_EXT_EN_OFFSET  0x0
#define INT_EXT_EN_AUDDMA0_MSC_IRQ_EXT_EN_MASK  0x1
#define INT_EXT_EN_AUDDMA0_MSC_IRQ_EXT_EN  0x1
#define INT_EXT_CLR_ARMM1_AHB5_SYNC_DOWN_IRQ_EXT_CLR_OFFSET  0x1f
#define INT_EXT_CLR_ARMM1_AHB5_SYNC_DOWN_IRQ_EXT_CLR_MASK  0x80000000
#define INT_EXT_CLR_ARMM1_AHB5_SYNC_DOWN_IRQ_EXT_CLR  0x80000000
#define INT_EXT_CLR_ARMS1_AHB5_SYNC_UP_IRQ_EXT_CLR_OFFSET  0x1e
#define INT_EXT_CLR_ARMS1_AHB5_SYNC_UP_IRQ_EXT_CLR_MASK  0x40000000
#define INT_EXT_CLR_ARMS1_AHB5_SYNC_UP_IRQ_EXT_CLR  0x40000000
#define INT_EXT_CLR_QSPI_AHB5_SYNC_DOWN_IRQ_EXT_CLR_OFFSET  0x1d
#define INT_EXT_CLR_QSPI_AHB5_SYNC_DOWN_IRQ_EXT_CLR_MASK  0x20000000
#define INT_EXT_CLR_QSPI_AHB5_SYNC_DOWN_IRQ_EXT_CLR  0x20000000
#define INT_EXT_CLR_QSPI_MSC_IRQ_EXT_CLR_OFFSET  0xb
#define INT_EXT_CLR_QSPI_MSC_IRQ_EXT_CLR_MASK  0x800
#define INT_EXT_CLR_QSPI_MSC_IRQ_EXT_CLR  0x800
#define INT_EXT_CLR_I2CS_MSC_IRQ_EXT_CLR_OFFSET  0xa
#define INT_EXT_CLR_I2CS_MSC_IRQ_EXT_CLR_MASK  0x400
#define INT_EXT_CLR_I2CS_MSC_IRQ_EXT_CLR  0x400
#define INT_EXT_CLR_HIFI3M_MSC_IRQ_EXT_CLR_OFFSET  0x9
#define INT_EXT_CLR_HIFI3M_MSC_IRQ_EXT_CLR_MASK  0x200
#define INT_EXT_CLR_HIFI3M_MSC_IRQ_EXT_CLR  0x200
#define INT_EXT_CLR_FDMA1_MSC_IRQ_EXT_CLR_OFFSET  0x8
#define INT_EXT_CLR_FDMA1_MSC_IRQ_EXT_CLR_MASK  0x100
#define INT_EXT_CLR_FDMA1_MSC_IRQ_EXT_CLR  0x100
#define INT_EXT_CLR_FDMA0_MSC_IRQ_EXT_CLR_OFFSET  0x7
#define INT_EXT_CLR_FDMA0_MSC_IRQ_EXT_CLR_MASK  0x80
#define INT_EXT_CLR_FDMA0_MSC_IRQ_EXT_CLR  0x80
#define INT_EXT_CLR_EARLINK_MSC_IRQ_EXT_CLR_OFFSET  0x6
#define INT_EXT_CLR_EARLINK_MSC_IRQ_EXT_CLR_MASK  0x40
#define INT_EXT_CLR_EARLINK_MSC_IRQ_EXT_CLR  0x40
#define INT_EXT_CLR_LLEB_MSC_IRQ_EXT_CLR_OFFSET  0x5
#define INT_EXT_CLR_LLEB_MSC_IRQ_EXT_CLR_MASK  0x20
#define INT_EXT_CLR_LLEB_MSC_IRQ_EXT_CLR  0x20
#define INT_EXT_CLR_LLEA_MSC_IRQ_EXT_CLR_OFFSET  0x4
#define INT_EXT_CLR_LLEA_MSC_IRQ_EXT_CLR_MASK  0x10
#define INT_EXT_CLR_LLEA_MSC_IRQ_EXT_CLR  0x10
#define INT_EXT_CLR_CAPEB_MSC_IRQ_EXT_CLR_OFFSET  0x3
#define INT_EXT_CLR_CAPEB_MSC_IRQ_EXT_CLR_MASK  0x8
#define INT_EXT_CLR_CAPEB_MSC_IRQ_EXT_CLR  0x8
#define INT_EXT_CLR_CAPEA_MSC_IRQ_EXT_CLR_OFFSET  0x2
#define INT_EXT_CLR_CAPEA_MSC_IRQ_EXT_CLR_MASK  0x4
#define INT_EXT_CLR_CAPEA_MSC_IRQ_EXT_CLR  0x4
#define INT_EXT_CLR_AUDDMA3_MSC_IRQ_EXT_CLR_OFFSET  0x1
#define INT_EXT_CLR_AUDDMA3_MSC_IRQ_EXT_CLR_MASK  0x2
#define INT_EXT_CLR_AUDDMA3_MSC_IRQ_EXT_CLR  0x2
#define INT_EXT_CLR_AUDDMA0_MSC_IRQ_EXT_CLR_OFFSET  0x0
#define INT_EXT_CLR_AUDDMA0_MSC_IRQ_EXT_CLR_MASK  0x1
#define INT_EXT_CLR_AUDDMA0_MSC_IRQ_EXT_CLR  0x1
#define DMA0_CHANNEL_ENABLE_DMA_2_EN_OFFSET  0xb
#define DMA0_CHANNEL_ENABLE_DMA_2_EN_MASK  0x800
#define DMA0_CHANNEL_ENABLE_DMA_2_EN  0x800
#define DMA0_CHANNEL_ENABLE_DMA_0_EN_OFFSET  0xa
#define DMA0_CHANNEL_ENABLE_DMA_0_EN_MASK  0x400
#define DMA0_CHANNEL_ENABLE_DMA_0_EN  0x400
#define DMA0_CHANNEL_ENABLE_DMA_15_EN_OFFSET  0x7
#define DMA0_CHANNEL_ENABLE_DMA_15_EN_MASK  0x80
#define DMA0_CHANNEL_ENABLE_DMA_15_EN  0x80
#define DMA0_CHANNEL_ENABLE_DMA_13_EN_OFFSET  0x6
#define DMA0_CHANNEL_ENABLE_DMA_13_EN_MASK  0x40
#define DMA0_CHANNEL_ENABLE_DMA_13_EN  0x40
#define DMA0_CHANNEL_ENABLE_DMA_11_EN_OFFSET  0x5
#define DMA0_CHANNEL_ENABLE_DMA_11_EN_MASK  0x20
#define DMA0_CHANNEL_ENABLE_DMA_11_EN  0x20
#define DMA0_CHANNEL_ENABLE_DMA_9_EN_OFFSET  0x4
#define DMA0_CHANNEL_ENABLE_DMA_9_EN_MASK  0x10
#define DMA0_CHANNEL_ENABLE_DMA_9_EN  0x10
#define DMA0_CHANNEL_ENABLE_DMA_7_EN_OFFSET  0x3
#define DMA0_CHANNEL_ENABLE_DMA_7_EN_MASK  0x8
#define DMA0_CHANNEL_ENABLE_DMA_7_EN  0x8
#define DMA0_CHANNEL_ENABLE_DMA_5_EN_OFFSET  0x2
#define DMA0_CHANNEL_ENABLE_DMA_5_EN_MASK  0x4
#define DMA0_CHANNEL_ENABLE_DMA_5_EN  0x4
#define DMA0_CHANNEL_ENABLE_DMA_3_EN_OFFSET  0x1
#define DMA0_CHANNEL_ENABLE_DMA_3_EN_MASK  0x2
#define DMA0_CHANNEL_ENABLE_DMA_3_EN  0x2
#define DMA0_CHANNEL_ENABLE_DMA_1_EN_OFFSET  0x0
#define DMA0_CHANNEL_ENABLE_DMA_1_EN_MASK  0x1
#define DMA0_CHANNEL_ENABLE_DMA_1_EN  0x1
#define DMA0_INTERRUPT_STATUS_DMA_2_INT_STATUS_CLR_OFFSET  0xb
#define DMA0_INTERRUPT_STATUS_DMA_2_INT_STATUS_CLR_MASK  0x800
#define DMA0_INTERRUPT_STATUS_DMA_2_INT_STATUS_CLR  0x800
#define DMA0_INTERRUPT_STATUS_DMA_0_INT_STATUS_CLR_OFFSET  0xa
#define DMA0_INTERRUPT_STATUS_DMA_0_INT_STATUS_CLR_MASK  0x400
#define DMA0_INTERRUPT_STATUS_DMA_0_INT_STATUS_CLR  0x400
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP7_STA_CLR_OFFSET  0x7
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP7_STA_CLR_MASK  0x80
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP7_STA_CLR  0x80
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP6_STA_CLR_OFFSET  0x6
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP6_STA_CLR_MASK  0x40
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP6_STA_CLR  0x40
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP5_STA_CLR_OFFSET  0x5
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP5_STA_CLR_MASK  0x20
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP5_STA_CLR  0x20
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP4_STA_CLR_OFFSET  0x4
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP4_STA_CLR_MASK  0x10
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP4_STA_CLR  0x10
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP3_STA_CLR_OFFSET  0x3
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP3_STA_CLR_MASK  0x8
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP3_STA_CLR  0x8
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP2_STA_CLR_OFFSET  0x2
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP2_STA_CLR_MASK  0x4
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP2_STA_CLR  0x4
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP1_STA_CLR_OFFSET  0x1
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP1_STA_CLR_MASK  0x2
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP1_STA_CLR  0x2
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP0_STA_CLR_OFFSET  0x0
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP0_STA_CLR_MASK  0x1
#define DMA0_INTERRUPT_STATUS_IPATH_INT_GRP0_STA_CLR  0x1
#define DMA0_START_ADDRESS_CH0_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH0_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH0_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH0_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH0_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH0_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH0_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH0_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH0_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH0_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH0_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH0_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH0_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH0_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH0_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH0_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH0_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH0_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH0_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH0_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH0_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH0_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH0_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH0_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH1_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH1_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH1_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH1_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH1_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH1_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH1_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH1_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH1_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH1_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH1_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH1_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH1_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH1_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH1_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH1_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH1_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH1_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH1_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH1_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH1_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH1_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH1_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH1_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH2_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH2_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH2_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH2_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH2_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH2_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH2_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH2_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH2_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH2_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH2_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH2_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH2_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH2_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH2_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH2_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH2_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH2_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH2_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH2_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH2_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH2_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH2_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH2_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH3_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH3_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH3_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH3_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH3_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH3_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH3_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH3_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH3_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH3_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH3_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH3_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH3_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH3_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH3_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH3_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH3_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH3_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH3_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH3_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH3_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH3_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH3_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH3_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH5_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH5_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH5_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH5_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH5_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH5_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH5_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH5_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH5_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH5_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH5_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH5_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH5_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH5_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH5_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH5_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH5_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH5_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH5_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH5_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH5_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH5_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH5_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH5_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH7_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH7_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH7_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH7_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH7_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH7_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH7_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH7_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH7_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH7_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH7_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH7_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH7_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH7_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH7_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH7_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH7_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH7_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH7_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH7_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH7_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH7_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH7_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH7_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH9_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH9_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH9_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH9_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH9_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH9_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH9_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH9_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH9_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH9_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH9_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH9_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH9_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH9_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH9_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH9_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH9_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH9_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH9_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH9_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH9_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH9_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH9_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH9_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH11_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH11_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH11_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH11_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH11_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH11_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH11_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH11_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH11_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH11_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH11_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH11_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH11_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH11_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH11_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH11_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH11_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH11_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH11_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH11_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH11_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH11_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH11_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH11_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH13_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH13_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH13_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH13_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH13_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH13_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH13_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH13_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH13_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH13_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH13_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH13_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH13_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH13_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH13_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH13_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH13_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH13_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH13_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH13_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH13_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH13_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH13_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH13_BUFFER_SIZE  0x7fff
#define DMA0_START_ADDRESS_CH15_START_ADDRESS_OFFSET  0x0
#define DMA0_START_ADDRESS_CH15_START_ADDRESS_MASK  0xffffffff
#define DMA0_START_ADDRESS_CH15_START_ADDRESS  0xffffffff
#define DMA0_CONTROL_CH15_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA0_CONTROL_CH15_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA0_CONTROL_CH15_BLOCK_INTERRUPT  0x40000000
#define DMA0_CONTROL_CH15_BURST_SIZE_OFFSET  0x1d
#define DMA0_CONTROL_CH15_BURST_SIZE_MASK  0x20000000
#define DMA0_CONTROL_CH15_BURST_SIZE  0x20000000
#define DMA0_CONTROL_CH15_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA0_CONTROL_CH15_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA0_CONTROL_CH15_ADDRESS_DIRECTION  0x10000000
#define DMA0_CONTROL_CH15_STEP_OFST_OFFSET  0x19
#define DMA0_CONTROL_CH15_STEP_OFST_MASK  0xe000000
#define DMA0_CONTROL_CH15_STEP_OFST  0xe000000
#define DMA0_CONTROL_CH15_S_CNT_OFFSET  0x12
#define DMA0_CONTROL_CH15_S_CNT_MASK  0x1fc0000
#define DMA0_CONTROL_CH15_S_CNT  0x1fc0000
#define DMA0_CONTROL_CH15_SAMP_SIZE_OFFSET  0xf
#define DMA0_CONTROL_CH15_SAMP_SIZE_MASK  0x38000
#define DMA0_CONTROL_CH15_SAMP_SIZE  0x38000
#define DMA0_CONTROL_CH15_BUFFER_SIZE_OFFSET  0x0
#define DMA0_CONTROL_CH15_BUFFER_SIZE_MASK  0x7fff
#define DMA0_CONTROL_CH15_BUFFER_SIZE  0x7fff
#define DMA0_INTERRUPT_ENABLE_DMA_2_IRQ_EN_OFFSET  0x11
#define DMA0_INTERRUPT_ENABLE_DMA_2_IRQ_EN_MASK  0x20000
#define DMA0_INTERRUPT_ENABLE_DMA_2_IRQ_EN  0x20000
#define DMA0_INTERRUPT_ENABLE_DMA_0_IRQ_EN_OFFSET  0x10
#define DMA0_INTERRUPT_ENABLE_DMA_0_IRQ_EN_MASK  0x10000
#define DMA0_INTERRUPT_ENABLE_DMA_0_IRQ_EN  0x10000
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP7_EN_OFFSET  0x7
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP7_EN_MASK  0x80
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP7_EN  0x80
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP6_EN_OFFSET  0x6
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP6_EN_MASK  0x40
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP6_EN  0x40
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP5_EN_OFFSET  0x5
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP5_EN_MASK  0x20
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP5_EN  0x20
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP4_EN_OFFSET  0x4
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP4_EN_MASK  0x10
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP4_EN  0x10
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP3_EN_OFFSET  0x3
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP3_EN_MASK  0x8
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP3_EN  0x8
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP2_EN_OFFSET  0x2
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP2_EN_MASK  0x4
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP2_EN  0x4
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP1_EN_OFFSET  0x1
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP1_EN_MASK  0x2
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP1_EN  0x2
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP0_EN_OFFSET  0x0
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP0_EN_MASK  0x1
#define DMA0_INTERRUPT_ENABLE_IPTH_IRQ_GRP0_EN  0x1
#define DMA0_INTERRUPT_PARING_DMA_0_2_PAIR_OFFSET  0x0
#define DMA0_INTERRUPT_PARING_DMA_0_2_PAIR_MASK  0x1
#define DMA0_INTERRUPT_PARING_DMA_0_2_PAIR  0x1
#define DMA0_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP1_OFFSET  0x17
#define DMA0_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP1_MASK  0x800000
#define DMA0_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP1  0x800000
#define DMA0_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP1_OFFSET  0x16
#define DMA0_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP1_MASK  0x400000
#define DMA0_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP1  0x400000
#define DMA0_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP1_OFFSET  0x15
#define DMA0_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP1_MASK  0x200000
#define DMA0_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP1  0x200000
#define DMA0_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP1_OFFSET  0x14
#define DMA0_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP1_MASK  0x100000
#define DMA0_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP1  0x100000
#define DMA0_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP1_OFFSET  0x13
#define DMA0_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP1_MASK  0x80000
#define DMA0_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP1  0x80000
#define DMA0_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP1_OFFSET  0x12
#define DMA0_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP1_MASK  0x40000
#define DMA0_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP1  0x40000
#define DMA0_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP1_OFFSET  0x11
#define DMA0_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP1_MASK  0x20000
#define DMA0_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP1  0x20000
#define DMA0_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP1_OFFSET  0x10
#define DMA0_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP1_MASK  0x10000
#define DMA0_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP1  0x10000
#define DMA0_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP0_OFFSET  0x7
#define DMA0_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP0_MASK  0x80
#define DMA0_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP0  0x80
#define DMA0_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP0_OFFSET  0x6
#define DMA0_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP0_MASK  0x40
#define DMA0_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP0  0x40
#define DMA0_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP0_OFFSET  0x5
#define DMA0_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP0_MASK  0x20
#define DMA0_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP0  0x20
#define DMA0_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP0_OFFSET  0x4
#define DMA0_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP0_MASK  0x10
#define DMA0_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP0  0x10
#define DMA0_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP0_OFFSET  0x3
#define DMA0_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP0_MASK  0x8
#define DMA0_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP0  0x8
#define DMA0_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP0_OFFSET  0x2
#define DMA0_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP0_MASK  0x4
#define DMA0_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP0  0x4
#define DMA0_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP0_OFFSET  0x1
#define DMA0_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP0_MASK  0x2
#define DMA0_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP0  0x2
#define DMA0_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP0_OFFSET  0x0
#define DMA0_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP0_MASK  0x1
#define DMA0_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP0  0x1
#define DMA0_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP3_OFFSET  0x17
#define DMA0_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP3_MASK  0x800000
#define DMA0_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP3  0x800000
#define DMA0_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP3_OFFSET  0x16
#define DMA0_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP3_MASK  0x400000
#define DMA0_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP3  0x400000
#define DMA0_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP3_OFFSET  0x15
#define DMA0_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP3_MASK  0x200000
#define DMA0_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP3  0x200000
#define DMA0_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP3_OFFSET  0x14
#define DMA0_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP3_MASK  0x100000
#define DMA0_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP3  0x100000
#define DMA0_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP3_OFFSET  0x13
#define DMA0_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP3_MASK  0x80000
#define DMA0_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP3  0x80000
#define DMA0_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP3_OFFSET  0x12
#define DMA0_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP3_MASK  0x40000
#define DMA0_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP3  0x40000
#define DMA0_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP3_OFFSET  0x11
#define DMA0_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP3_MASK  0x20000
#define DMA0_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP3  0x20000
#define DMA0_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP3_OFFSET  0x10
#define DMA0_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP3_MASK  0x10000
#define DMA0_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP3  0x10000
#define DMA0_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP2_OFFSET  0x7
#define DMA0_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP2_MASK  0x80
#define DMA0_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP2  0x80
#define DMA0_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP2_OFFSET  0x6
#define DMA0_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP2_MASK  0x40
#define DMA0_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP2  0x40
#define DMA0_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP2_OFFSET  0x5
#define DMA0_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP2_MASK  0x20
#define DMA0_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP2  0x20
#define DMA0_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP2_OFFSET  0x4
#define DMA0_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP2_MASK  0x10
#define DMA0_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP2  0x10
#define DMA0_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP2_OFFSET  0x3
#define DMA0_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP2_MASK  0x8
#define DMA0_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP2  0x8
#define DMA0_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP2_OFFSET  0x2
#define DMA0_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP2_MASK  0x4
#define DMA0_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP2  0x4
#define DMA0_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP2_OFFSET  0x1
#define DMA0_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP2_MASK  0x2
#define DMA0_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP2  0x2
#define DMA0_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP2_OFFSET  0x0
#define DMA0_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP2_MASK  0x1
#define DMA0_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP2  0x1
#define DMA0_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP5_OFFSET  0x17
#define DMA0_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP5_MASK  0x800000
#define DMA0_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP5  0x800000
#define DMA0_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP5_OFFSET  0x16
#define DMA0_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP5_MASK  0x400000
#define DMA0_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP5  0x400000
#define DMA0_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP5_OFFSET  0x15
#define DMA0_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP5_MASK  0x200000
#define DMA0_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP5  0x200000
#define DMA0_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP5_OFFSET  0x14
#define DMA0_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP5_MASK  0x100000
#define DMA0_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP5  0x100000
#define DMA0_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP5_OFFSET  0x13
#define DMA0_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP5_MASK  0x80000
#define DMA0_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP5  0x80000
#define DMA0_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP5_OFFSET  0x12
#define DMA0_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP5_MASK  0x40000
#define DMA0_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP5  0x40000
#define DMA0_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP5_OFFSET  0x11
#define DMA0_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP5_MASK  0x20000
#define DMA0_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP5  0x20000
#define DMA0_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP5_OFFSET  0x10
#define DMA0_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP5_MASK  0x10000
#define DMA0_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP5  0x10000
#define DMA0_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP4_OFFSET  0x7
#define DMA0_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP4_MASK  0x80
#define DMA0_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP4  0x80
#define DMA0_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP4_OFFSET  0x6
#define DMA0_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP4_MASK  0x40
#define DMA0_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP4  0x40
#define DMA0_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP4_OFFSET  0x5
#define DMA0_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP4_MASK  0x20
#define DMA0_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP4  0x20
#define DMA0_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP4_OFFSET  0x4
#define DMA0_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP4_MASK  0x10
#define DMA0_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP4  0x10
#define DMA0_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP4_OFFSET  0x3
#define DMA0_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP4_MASK  0x8
#define DMA0_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP4  0x8
#define DMA0_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP4_OFFSET  0x2
#define DMA0_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP4_MASK  0x4
#define DMA0_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP4  0x4
#define DMA0_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP4_OFFSET  0x1
#define DMA0_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP4_MASK  0x2
#define DMA0_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP4  0x2
#define DMA0_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP4_OFFSET  0x0
#define DMA0_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP4_MASK  0x1
#define DMA0_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP4  0x1
#define DMA0_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP7_OFFSET  0x17
#define DMA0_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP7_MASK  0x800000
#define DMA0_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP7  0x800000
#define DMA0_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP7_OFFSET  0x16
#define DMA0_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP7_MASK  0x400000
#define DMA0_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP7  0x400000
#define DMA0_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP7_OFFSET  0x15
#define DMA0_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP7_MASK  0x200000
#define DMA0_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP7  0x200000
#define DMA0_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP7_OFFSET  0x14
#define DMA0_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP7_MASK  0x100000
#define DMA0_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP7  0x100000
#define DMA0_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP7_OFFSET  0x13
#define DMA0_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP7_MASK  0x80000
#define DMA0_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP7  0x80000
#define DMA0_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP7_OFFSET  0x12
#define DMA0_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP7_MASK  0x40000
#define DMA0_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP7  0x40000
#define DMA0_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP7_OFFSET  0x11
#define DMA0_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP7_MASK  0x20000
#define DMA0_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP7  0x20000
#define DMA0_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP7_OFFSET  0x10
#define DMA0_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP7_MASK  0x10000
#define DMA0_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP7  0x10000
#define DMA0_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP6_OFFSET  0x7
#define DMA0_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP6_MASK  0x80
#define DMA0_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP6  0x80
#define DMA0_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP6_OFFSET  0x6
#define DMA0_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP6_MASK  0x40
#define DMA0_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP6  0x40
#define DMA0_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP6_OFFSET  0x5
#define DMA0_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP6_MASK  0x20
#define DMA0_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP6  0x20
#define DMA0_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP6_OFFSET  0x4
#define DMA0_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP6_MASK  0x10
#define DMA0_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP6  0x10
#define DMA0_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP6_OFFSET  0x3
#define DMA0_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP6_MASK  0x8
#define DMA0_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP6  0x8
#define DMA0_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP6_OFFSET  0x2
#define DMA0_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP6_MASK  0x4
#define DMA0_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP6  0x4
#define DMA0_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP6_OFFSET  0x1
#define DMA0_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP6_MASK  0x2
#define DMA0_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP6  0x2
#define DMA0_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP6_OFFSET  0x0
#define DMA0_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP6_MASK  0x1
#define DMA0_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP6  0x1
#define DMA0_CHANNEL_ASSIGNMENTS02_CHANNEL_2_OFFSET  0x5
#define DMA0_CHANNEL_ASSIGNMENTS02_CHANNEL_2_MASK  0x3e0
#define DMA0_CHANNEL_ASSIGNMENTS02_CHANNEL_2  0x3e0
#define DMA0_CHANNEL_ASSIGNMENTS02_CHANNEL_0_OFFSET  0x0
#define DMA0_CHANNEL_ASSIGNMENTS02_CHANNEL_0_MASK  0x1f
#define DMA0_CHANNEL_ASSIGNMENTS02_CHANNEL_0  0x1f
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_11_OFFSET  0x19
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_11_MASK  0x3e000000
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_11  0x3e000000
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_9_OFFSET  0x14
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_9_MASK  0x1f00000
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_9  0x1f00000
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_7_OFFSET  0xf
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_7_MASK  0xf8000
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_7  0xf8000
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_5_OFFSET  0xa
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_5_MASK  0x7c00
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_5  0x7c00
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_3_OFFSET  0x5
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_3_MASK  0x3e0
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_3  0x3e0
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_1_OFFSET  0x0
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_1_MASK  0x1f
#define DMA0_CHANNEL_ASSIGNMENT_1357911_CHANNEL_1  0x1f
#define DMA0_CHANNEL_ASSIGNMENT_1315_CHANNEL_15_OFFSET  0x5
#define DMA0_CHANNEL_ASSIGNMENT_1315_CHANNEL_15_MASK  0x3e0
#define DMA0_CHANNEL_ASSIGNMENT_1315_CHANNEL_15  0x3e0
#define DMA0_CHANNEL_ASSIGNMENT_1315_CHANNEL_13_OFFSET  0x0
#define DMA0_CHANNEL_ASSIGNMENT_1315_CHANNEL_13_MASK  0x1f
#define DMA0_CHANNEL_ASSIGNMENT_1315_CHANNEL_13  0x1f
#define DMA0_CONTROL_EXT_CH0_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH0_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH0_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH1_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH1_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH1_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH2_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH2_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH2_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH3_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH3_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH3_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH5_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH5_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH5_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH7_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH7_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH7_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH9_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH9_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH9_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH11_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH11_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH11_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH13_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH13_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH13_BUFFER_SIZE_EXT  0x7
#define DMA0_CONTROL_EXT_CH15_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA0_CONTROL_EXT_CH15_BUFFER_SIZE_EXT_MASK  0x7
#define DMA0_CONTROL_EXT_CH15_BUFFER_SIZE_EXT  0x7
#define DMA3_CHANNEL_ENABLE_DMA_18_EN_OFFSET  0x13
#define DMA3_CHANNEL_ENABLE_DMA_18_EN_MASK  0x80000
#define DMA3_CHANNEL_ENABLE_DMA_18_EN  0x80000
#define DMA3_CHANNEL_ENABLE_DMA_16_EN_OFFSET  0x12
#define DMA3_CHANNEL_ENABLE_DMA_16_EN_MASK  0x40000
#define DMA3_CHANNEL_ENABLE_DMA_16_EN  0x40000
#define DMA3_CHANNEL_ENABLE_DMA_14_EN_OFFSET  0x11
#define DMA3_CHANNEL_ENABLE_DMA_14_EN_MASK  0x20000
#define DMA3_CHANNEL_ENABLE_DMA_14_EN  0x20000
#define DMA3_CHANNEL_ENABLE_DMA_12_EN_OFFSET  0x10
#define DMA3_CHANNEL_ENABLE_DMA_12_EN_MASK  0x10000
#define DMA3_CHANNEL_ENABLE_DMA_12_EN  0x10000
#define DMA3_CHANNEL_ENABLE_DMA_10_EN_OFFSET  0xf
#define DMA3_CHANNEL_ENABLE_DMA_10_EN_MASK  0x8000
#define DMA3_CHANNEL_ENABLE_DMA_10_EN  0x8000
#define DMA3_CHANNEL_ENABLE_DMA_8_EN_OFFSET  0xe
#define DMA3_CHANNEL_ENABLE_DMA_8_EN_MASK  0x4000
#define DMA3_CHANNEL_ENABLE_DMA_8_EN  0x4000
#define DMA3_CHANNEL_ENABLE_DMA_6_EN_OFFSET  0xd
#define DMA3_CHANNEL_ENABLE_DMA_6_EN_MASK  0x2000
#define DMA3_CHANNEL_ENABLE_DMA_6_EN  0x2000
#define DMA3_CHANNEL_ENABLE_DMA_4_EN_OFFSET  0xc
#define DMA3_CHANNEL_ENABLE_DMA_4_EN_MASK  0x1000
#define DMA3_CHANNEL_ENABLE_DMA_4_EN  0x1000
#define DMA3_CHANNEL_ENABLE_DMA_2_EN_OFFSET  0xb
#define DMA3_CHANNEL_ENABLE_DMA_2_EN_MASK  0x800
#define DMA3_CHANNEL_ENABLE_DMA_2_EN  0x800
#define DMA3_CHANNEL_ENABLE_DMA_0_EN_OFFSET  0xa
#define DMA3_CHANNEL_ENABLE_DMA_0_EN_MASK  0x400
#define DMA3_CHANNEL_ENABLE_DMA_0_EN  0x400
#define DMA3_CHANNEL_ENABLE_DMA_19_EN_OFFSET  0x9
#define DMA3_CHANNEL_ENABLE_DMA_19_EN_MASK  0x200
#define DMA3_CHANNEL_ENABLE_DMA_19_EN  0x200
#define DMA3_CHANNEL_ENABLE_DMA_17_EN_OFFSET  0x8
#define DMA3_CHANNEL_ENABLE_DMA_17_EN_MASK  0x100
#define DMA3_CHANNEL_ENABLE_DMA_17_EN  0x100
#define DMA3_CHANNEL_ENABLE_DMA_15_EN_OFFSET  0x7
#define DMA3_CHANNEL_ENABLE_DMA_15_EN_MASK  0x80
#define DMA3_CHANNEL_ENABLE_DMA_15_EN  0x80
#define DMA3_CHANNEL_ENABLE_DMA_13_EN_OFFSET  0x6
#define DMA3_CHANNEL_ENABLE_DMA_13_EN_MASK  0x40
#define DMA3_CHANNEL_ENABLE_DMA_13_EN  0x40
#define DMA3_CHANNEL_ENABLE_DMA_11_EN_OFFSET  0x5
#define DMA3_CHANNEL_ENABLE_DMA_11_EN_MASK  0x20
#define DMA3_CHANNEL_ENABLE_DMA_11_EN  0x20
#define DMA3_CHANNEL_ENABLE_DMA_9_EN_OFFSET  0x4
#define DMA3_CHANNEL_ENABLE_DMA_9_EN_MASK  0x10
#define DMA3_CHANNEL_ENABLE_DMA_9_EN  0x10
#define DMA3_CHANNEL_ENABLE_DMA_7_EN_OFFSET  0x3
#define DMA3_CHANNEL_ENABLE_DMA_7_EN_MASK  0x8
#define DMA3_CHANNEL_ENABLE_DMA_7_EN  0x8
#define DMA3_CHANNEL_ENABLE_DMA_5_EN_OFFSET  0x2
#define DMA3_CHANNEL_ENABLE_DMA_5_EN_MASK  0x4
#define DMA3_CHANNEL_ENABLE_DMA_5_EN  0x4
#define DMA3_CHANNEL_ENABLE_DMA_3_EN_OFFSET  0x1
#define DMA3_CHANNEL_ENABLE_DMA_3_EN_MASK  0x2
#define DMA3_CHANNEL_ENABLE_DMA_3_EN  0x2
#define DMA3_CHANNEL_ENABLE_DMA_1_EN_OFFSET  0x0
#define DMA3_CHANNEL_ENABLE_DMA_1_EN_MASK  0x1
#define DMA3_CHANNEL_ENABLE_DMA_1_EN  0x1
#define DMA3_INTERRUPT_STATUS_DMA_18_INT_STATUS_CLR_OFFSET  0x13
#define DMA3_INTERRUPT_STATUS_DMA_18_INT_STATUS_CLR_MASK  0x80000
#define DMA3_INTERRUPT_STATUS_DMA_18_INT_STATUS_CLR  0x80000
#define DMA3_INTERRUPT_STATUS_DMA_16_INT_STATUS_CLR_OFFSET  0x12
#define DMA3_INTERRUPT_STATUS_DMA_16_INT_STATUS_CLR_MASK  0x40000
#define DMA3_INTERRUPT_STATUS_DMA_16_INT_STATUS_CLR  0x40000
#define DMA3_INTERRUPT_STATUS_DMA_14_INT_STATUS_CLR_OFFSET  0x11
#define DMA3_INTERRUPT_STATUS_DMA_14_INT_STATUS_CLR_MASK  0x20000
#define DMA3_INTERRUPT_STATUS_DMA_14_INT_STATUS_CLR  0x20000
#define DMA3_INTERRUPT_STATUS_DMA_12_INT_STATUS_CLR_OFFSET  0x10
#define DMA3_INTERRUPT_STATUS_DMA_12_INT_STATUS_CLR_MASK  0x10000
#define DMA3_INTERRUPT_STATUS_DMA_12_INT_STATUS_CLR  0x10000
#define DMA3_INTERRUPT_STATUS_DMA_10_INT_STATUS_CLR_OFFSET  0xf
#define DMA3_INTERRUPT_STATUS_DMA_10_INT_STATUS_CLR_MASK  0x8000
#define DMA3_INTERRUPT_STATUS_DMA_10_INT_STATUS_CLR  0x8000
#define DMA3_INTERRUPT_STATUS_DMA_8_INT_STATUS_CLR_OFFSET  0xe
#define DMA3_INTERRUPT_STATUS_DMA_8_INT_STATUS_CLR_MASK  0x4000
#define DMA3_INTERRUPT_STATUS_DMA_8_INT_STATUS_CLR  0x4000
#define DMA3_INTERRUPT_STATUS_DMA_6_INT_STATUS_CLR_OFFSET  0xd
#define DMA3_INTERRUPT_STATUS_DMA_6_INT_STATUS_CLR_MASK  0x2000
#define DMA3_INTERRUPT_STATUS_DMA_6_INT_STATUS_CLR  0x2000
#define DMA3_INTERRUPT_STATUS_DMA_4_INT_STATUS_CLR_OFFSET  0xc
#define DMA3_INTERRUPT_STATUS_DMA_4_INT_STATUS_CLR_MASK  0x1000
#define DMA3_INTERRUPT_STATUS_DMA_4_INT_STATUS_CLR  0x1000
#define DMA3_INTERRUPT_STATUS_DMA_2_INT_STATUS_CLR_OFFSET  0xb
#define DMA3_INTERRUPT_STATUS_DMA_2_INT_STATUS_CLR_MASK  0x800
#define DMA3_INTERRUPT_STATUS_DMA_2_INT_STATUS_CLR  0x800
#define DMA3_INTERRUPT_STATUS_DMA_0_INT_STATUS_CLR_OFFSET  0xa
#define DMA3_INTERRUPT_STATUS_DMA_0_INT_STATUS_CLR_MASK  0x400
#define DMA3_INTERRUPT_STATUS_DMA_0_INT_STATUS_CLR  0x400
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP9_STA_CLR_OFFSET  0x9
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP9_STA_CLR_MASK  0x200
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP9_STA_CLR  0x200
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP8_STA_CLR_OFFSET  0x8
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP8_STA_CLR_MASK  0x100
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP8_STA_CLR  0x100
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP7_STA_CLR_OFFSET  0x7
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP7_STA_CLR_MASK  0x80
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP7_STA_CLR  0x80
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP6_STA_CLR_OFFSET  0x6
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP6_STA_CLR_MASK  0x40
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP6_STA_CLR  0x40
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP5_STA_CLR_OFFSET  0x5
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP5_STA_CLR_MASK  0x20
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP5_STA_CLR  0x20
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP4_STA_CLR_OFFSET  0x4
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP4_STA_CLR_MASK  0x10
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP4_STA_CLR  0x10
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP3_STA_CLR_OFFSET  0x3
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP3_STA_CLR_MASK  0x8
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP3_STA_CLR  0x8
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP2_STA_CLR_OFFSET  0x2
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP2_STA_CLR_MASK  0x4
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP2_STA_CLR  0x4
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP1_STA_CLR_OFFSET  0x1
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP1_STA_CLR_MASK  0x2
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP1_STA_CLR  0x2
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP0_STA_CLR_OFFSET  0x0
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP0_STA_CLR_MASK  0x1
#define DMA3_INTERRUPT_STATUS_IPATH_INT_GRP0_STA_CLR  0x1
#define DMA3_START_ADDRESS_CH0_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH0_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH0_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH0_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH0_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH0_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH0_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH0_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH0_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH0_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH0_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH0_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH0_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH0_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH0_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH0_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH0_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH0_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH0_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH0_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH0_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH0_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH0_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH0_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH1_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH1_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH1_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH1_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH1_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH1_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH1_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH1_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH1_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH1_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH1_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH1_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH1_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH1_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH1_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH1_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH1_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH1_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH1_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH1_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH1_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH1_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH1_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH1_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH2_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH2_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH2_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH2_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH2_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH2_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH2_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH2_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH2_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH2_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH2_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH2_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH2_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH2_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH2_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH2_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH2_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH2_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH2_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH2_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH2_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH2_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH2_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH2_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH3_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH3_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH3_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH3_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH3_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH3_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH3_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH3_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH3_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH3_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH3_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH3_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH3_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH3_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH3_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH3_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH3_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH3_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH3_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH3_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH3_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH3_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH3_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH3_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH4_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH4_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH4_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH4_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH4_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH4_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH4_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH4_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH4_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH4_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH4_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH4_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH4_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH4_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH4_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH4_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH4_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH4_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH4_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH4_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH4_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH4_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH4_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH4_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH5_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH5_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH5_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH5_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH5_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH5_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH5_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH5_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH5_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH5_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH5_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH5_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH5_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH5_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH5_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH5_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH5_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH5_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH5_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH5_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH5_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH5_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH5_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH5_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH6_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH6_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH6_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH6_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH6_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH6_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH6_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH6_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH6_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH6_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH6_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH6_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH6_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH6_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH6_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH6_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH6_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH6_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH6_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH6_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH6_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH6_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH6_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH6_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH7_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH7_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH7_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH7_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH7_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH7_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH7_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH7_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH7_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH7_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH7_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH7_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH7_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH7_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH7_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH7_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH7_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH7_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH7_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH7_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH7_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH7_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH7_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH7_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH8_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH8_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH8_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH8_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH8_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH8_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH8_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH8_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH8_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH8_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH8_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH8_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH8_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH8_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH8_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH8_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH8_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH8_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH8_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH8_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH8_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH8_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH8_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH8_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH9_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH9_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH9_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH9_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH9_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH9_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH9_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH9_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH9_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH9_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH9_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH9_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH9_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH9_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH9_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH9_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH9_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH9_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH9_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH9_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH9_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH9_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH9_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH9_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH10_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH10_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH10_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH10_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH10_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH10_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH10_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH10_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH10_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH10_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH10_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH10_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH10_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH10_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH10_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH10_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH10_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH10_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH10_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH10_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH10_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH10_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH10_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH10_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH11_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH11_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH11_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH11_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH11_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH11_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH11_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH11_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH11_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH11_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH11_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH11_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH11_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH11_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH11_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH11_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH11_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH11_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH11_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH11_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH11_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH11_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH11_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH11_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH12_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH12_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH12_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH12_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH12_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH12_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH12_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH12_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH12_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH12_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH12_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH12_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH12_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH12_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH12_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH12_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH12_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH12_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH12_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH12_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH12_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH12_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH12_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH12_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH13_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH13_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH13_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH13_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH13_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH13_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH13_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH13_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH13_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH13_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH13_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH13_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH13_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH13_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH13_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH13_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH13_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH13_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH13_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH13_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH13_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH13_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH13_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH13_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH14_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH14_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH14_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH14_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH14_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH14_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH14_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH14_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH14_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH14_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH14_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH14_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH14_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH14_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH14_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH14_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH14_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH14_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH14_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH14_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH14_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH14_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH14_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH14_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH15_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH15_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH15_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH15_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH15_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH15_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH15_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH15_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH15_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH15_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH15_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH15_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH15_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH15_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH15_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH15_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH15_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH15_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH15_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH15_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH15_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH15_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH15_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH15_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH16_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH16_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH16_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH16_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH16_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH16_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH16_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH16_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH16_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH16_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH16_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH16_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH16_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH16_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH16_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH16_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH16_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH16_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH16_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH16_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH16_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH16_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH16_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH16_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH17_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH17_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH17_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH17_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH17_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH17_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH17_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH17_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH17_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH17_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH17_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH17_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH17_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH17_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH17_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH17_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH17_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH17_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH17_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH17_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH17_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH17_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH17_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH17_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH18_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH18_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH18_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH18_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH18_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH18_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH18_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH18_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH18_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH18_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH18_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH18_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH18_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH18_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH18_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH18_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH18_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH18_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH18_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH18_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH18_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH18_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH18_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH18_BUFFER_SIZE  0x7fff
#define DMA3_START_ADDRESS_CH19_START_ADDRESS_OFFSET  0x0
#define DMA3_START_ADDRESS_CH19_START_ADDRESS_MASK  0xffffffff
#define DMA3_START_ADDRESS_CH19_START_ADDRESS  0xffffffff
#define DMA3_CONTROL_CH19_BLOCK_INTERRUPT_OFFSET  0x1e
#define DMA3_CONTROL_CH19_BLOCK_INTERRUPT_MASK  0x40000000
#define DMA3_CONTROL_CH19_BLOCK_INTERRUPT  0x40000000
#define DMA3_CONTROL_CH19_BURST_SIZE_OFFSET  0x1d
#define DMA3_CONTROL_CH19_BURST_SIZE_MASK  0x20000000
#define DMA3_CONTROL_CH19_BURST_SIZE  0x20000000
#define DMA3_CONTROL_CH19_ADDRESS_DIRECTION_OFFSET  0x1c
#define DMA3_CONTROL_CH19_ADDRESS_DIRECTION_MASK  0x10000000
#define DMA3_CONTROL_CH19_ADDRESS_DIRECTION  0x10000000
#define DMA3_CONTROL_CH19_STEP_OFST_OFFSET  0x19
#define DMA3_CONTROL_CH19_STEP_OFST_MASK  0xe000000
#define DMA3_CONTROL_CH19_STEP_OFST  0xe000000
#define DMA3_CONTROL_CH19_S_CNT_OFFSET  0x12
#define DMA3_CONTROL_CH19_S_CNT_MASK  0x1fc0000
#define DMA3_CONTROL_CH19_S_CNT  0x1fc0000
#define DMA3_CONTROL_CH19_SAMP_SIZE_OFFSET  0xf
#define DMA3_CONTROL_CH19_SAMP_SIZE_MASK  0x38000
#define DMA3_CONTROL_CH19_SAMP_SIZE  0x38000
#define DMA3_CONTROL_CH19_BUFFER_SIZE_OFFSET  0x0
#define DMA3_CONTROL_CH19_BUFFER_SIZE_MASK  0x7fff
#define DMA3_CONTROL_CH19_BUFFER_SIZE  0x7fff
#define DMA3_INTERRUPT_ENABLE_DMA_18_IRQ_EN_OFFSET  0x19
#define DMA3_INTERRUPT_ENABLE_DMA_18_IRQ_EN_MASK  0x2000000
#define DMA3_INTERRUPT_ENABLE_DMA_18_IRQ_EN  0x2000000
#define DMA3_INTERRUPT_ENABLE_DMA_16_IRQ_EN_OFFSET  0x18
#define DMA3_INTERRUPT_ENABLE_DMA_16_IRQ_EN_MASK  0x1000000
#define DMA3_INTERRUPT_ENABLE_DMA_16_IRQ_EN  0x1000000
#define DMA3_INTERRUPT_ENABLE_DMA_14_IRQ_EN_OFFSET  0x17
#define DMA3_INTERRUPT_ENABLE_DMA_14_IRQ_EN_MASK  0x800000
#define DMA3_INTERRUPT_ENABLE_DMA_14_IRQ_EN  0x800000
#define DMA3_INTERRUPT_ENABLE_DMA_12_IRQ_EN_OFFSET  0x16
#define DMA3_INTERRUPT_ENABLE_DMA_12_IRQ_EN_MASK  0x400000
#define DMA3_INTERRUPT_ENABLE_DMA_12_IRQ_EN  0x400000
#define DMA3_INTERRUPT_ENABLE_DMA_10_IRQ_EN_OFFSET  0x15
#define DMA3_INTERRUPT_ENABLE_DMA_10_IRQ_EN_MASK  0x200000
#define DMA3_INTERRUPT_ENABLE_DMA_10_IRQ_EN  0x200000
#define DMA3_INTERRUPT_ENABLE_DMA_8_IRQ_EN_OFFSET  0x14
#define DMA3_INTERRUPT_ENABLE_DMA_8_IRQ_EN_MASK  0x100000
#define DMA3_INTERRUPT_ENABLE_DMA_8_IRQ_EN  0x100000
#define DMA3_INTERRUPT_ENABLE_DMA_6_IRQ_EN_OFFSET  0x13
#define DMA3_INTERRUPT_ENABLE_DMA_6_IRQ_EN_MASK  0x80000
#define DMA3_INTERRUPT_ENABLE_DMA_6_IRQ_EN  0x80000
#define DMA3_INTERRUPT_ENABLE_DMA_4_IRQ_EN_OFFSET  0x12
#define DMA3_INTERRUPT_ENABLE_DMA_4_IRQ_EN_MASK  0x40000
#define DMA3_INTERRUPT_ENABLE_DMA_4_IRQ_EN  0x40000
#define DMA3_INTERRUPT_ENABLE_DMA_2_IRQ_EN_OFFSET  0x11
#define DMA3_INTERRUPT_ENABLE_DMA_2_IRQ_EN_MASK  0x20000
#define DMA3_INTERRUPT_ENABLE_DMA_2_IRQ_EN  0x20000
#define DMA3_INTERRUPT_ENABLE_DMA_0_IRQ_EN_OFFSET  0x10
#define DMA3_INTERRUPT_ENABLE_DMA_0_IRQ_EN_MASK  0x10000
#define DMA3_INTERRUPT_ENABLE_DMA_0_IRQ_EN  0x10000
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP11_EN_OFFSET  0x9
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP11_EN_MASK  0x200
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP11_EN  0x200
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP9_EN_OFFSET  0x8
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP9_EN_MASK  0x100
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP9_EN  0x100
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP7_EN_OFFSET  0x7
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP7_EN_MASK  0x80
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP7_EN  0x80
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP6_EN_OFFSET  0x6
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP6_EN_MASK  0x40
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP6_EN  0x40
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP5_EN_OFFSET  0x5
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP5_EN_MASK  0x20
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP5_EN  0x20
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP4_EN_OFFSET  0x4
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP4_EN_MASK  0x10
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP4_EN  0x10
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP3_EN_OFFSET  0x3
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP3_EN_MASK  0x8
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP3_EN  0x8
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP2_EN_OFFSET  0x2
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP2_EN_MASK  0x4
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP2_EN  0x4
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP1_EN_OFFSET  0x1
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP1_EN_MASK  0x2
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP1_EN  0x2
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP0_EN_OFFSET  0x0
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP0_EN_MASK  0x1
#define DMA3_INTERRUPT_ENABLE_IPTH_IRQ_GRP0_EN  0x1
#define DMA3_INTERRUPT_PARING_DMA_16_18_PAIR_OFFSET  0x4
#define DMA3_INTERRUPT_PARING_DMA_16_18_PAIR_MASK  0x10
#define DMA3_INTERRUPT_PARING_DMA_16_18_PAIR  0x10
#define DMA3_INTERRUPT_PARING_DMA_12_14_PAIR_OFFSET  0x3
#define DMA3_INTERRUPT_PARING_DMA_12_14_PAIR_MASK  0x8
#define DMA3_INTERRUPT_PARING_DMA_12_14_PAIR  0x8
#define DMA3_INTERRUPT_PARING_DMA_8_10_PAIR_OFFSET  0x2
#define DMA3_INTERRUPT_PARING_DMA_8_10_PAIR_MASK  0x4
#define DMA3_INTERRUPT_PARING_DMA_8_10_PAIR  0x4
#define DMA3_INTERRUPT_PARING_DMA_4_6_PAIR_OFFSET  0x1
#define DMA3_INTERRUPT_PARING_DMA_4_6_PAIR_MASK  0x2
#define DMA3_INTERRUPT_PARING_DMA_4_6_PAIR  0x2
#define DMA3_INTERRUPT_PARING_DMA_0_2_PAIR_OFFSET  0x0
#define DMA3_INTERRUPT_PARING_DMA_0_2_PAIR_MASK  0x1
#define DMA3_INTERRUPT_PARING_DMA_0_2_PAIR  0x1
#define DMA3_INTERRUPPT_GROUPING01_DMA_19_SEL_GRP1_OFFSET  0x19
#define DMA3_INTERRUPPT_GROUPING01_DMA_19_SEL_GRP1_MASK  0x2000000
#define DMA3_INTERRUPPT_GROUPING01_DMA_19_SEL_GRP1  0x2000000
#define DMA3_INTERRUPPT_GROUPING01_DMA_17_SEL_GRP1_OFFSET  0x18
#define DMA3_INTERRUPPT_GROUPING01_DMA_17_SEL_GRP1_MASK  0x1000000
#define DMA3_INTERRUPPT_GROUPING01_DMA_17_SEL_GRP1  0x1000000
#define DMA3_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP1_OFFSET  0x17
#define DMA3_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP1_MASK  0x800000
#define DMA3_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP1  0x800000
#define DMA3_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP1_OFFSET  0x16
#define DMA3_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP1_MASK  0x400000
#define DMA3_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP1  0x400000
#define DMA3_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP1_OFFSET  0x15
#define DMA3_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP1_MASK  0x200000
#define DMA3_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP1  0x200000
#define DMA3_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP1_OFFSET  0x14
#define DMA3_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP1_MASK  0x100000
#define DMA3_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP1  0x100000
#define DMA3_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP1_OFFSET  0x13
#define DMA3_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP1_MASK  0x80000
#define DMA3_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP1  0x80000
#define DMA3_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP1_OFFSET  0x12
#define DMA3_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP1_MASK  0x40000
#define DMA3_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP1  0x40000
#define DMA3_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP1_OFFSET  0x11
#define DMA3_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP1_MASK  0x20000
#define DMA3_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP1  0x20000
#define DMA3_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP1_OFFSET  0x10
#define DMA3_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP1_MASK  0x10000
#define DMA3_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP1  0x10000
#define DMA3_INTERRUPPT_GROUPING01_DMA_19_SEL_GRP0_OFFSET  0x9
#define DMA3_INTERRUPPT_GROUPING01_DMA_19_SEL_GRP0_MASK  0x200
#define DMA3_INTERRUPPT_GROUPING01_DMA_19_SEL_GRP0  0x200
#define DMA3_INTERRUPPT_GROUPING01_DMA_17_SEL_GRP0_OFFSET  0x8
#define DMA3_INTERRUPPT_GROUPING01_DMA_17_SEL_GRP0_MASK  0x100
#define DMA3_INTERRUPPT_GROUPING01_DMA_17_SEL_GRP0  0x100
#define DMA3_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP0_OFFSET  0x7
#define DMA3_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP0_MASK  0x80
#define DMA3_INTERRUPPT_GROUPING01_DMA_15_SEL_GRP0  0x80
#define DMA3_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP0_OFFSET  0x6
#define DMA3_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP0_MASK  0x40
#define DMA3_INTERRUPPT_GROUPING01_DMA_13_SEL_GRP0  0x40
#define DMA3_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP0_OFFSET  0x5
#define DMA3_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP0_MASK  0x20
#define DMA3_INTERRUPPT_GROUPING01_DMA_11_SEL_GRP0  0x20
#define DMA3_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP0_OFFSET  0x4
#define DMA3_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP0_MASK  0x10
#define DMA3_INTERRUPPT_GROUPING01_DMA_9_SEL_GRP0  0x10
#define DMA3_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP0_OFFSET  0x3
#define DMA3_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP0_MASK  0x8
#define DMA3_INTERRUPPT_GROUPING01_DMA_7_SEL_GRP0  0x8
#define DMA3_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP0_OFFSET  0x2
#define DMA3_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP0_MASK  0x4
#define DMA3_INTERRUPPT_GROUPING01_DMA_5_SEL_GRP0  0x4
#define DMA3_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP0_OFFSET  0x1
#define DMA3_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP0_MASK  0x2
#define DMA3_INTERRUPPT_GROUPING01_DMA_3_SEL_GRP0  0x2
#define DMA3_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP0_OFFSET  0x0
#define DMA3_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP0_MASK  0x1
#define DMA3_INTERRUPPT_GROUPING01_DMA_1_SEL_GRP0  0x1
#define DMA3_INTERRUPPT_GROUPING23_DMA_19_SEL_GRP3_OFFSET  0x19
#define DMA3_INTERRUPPT_GROUPING23_DMA_19_SEL_GRP3_MASK  0x2000000
#define DMA3_INTERRUPPT_GROUPING23_DMA_19_SEL_GRP3  0x2000000
#define DMA3_INTERRUPPT_GROUPING23_DMA_17_SEL_GRP3_OFFSET  0x18
#define DMA3_INTERRUPPT_GROUPING23_DMA_17_SEL_GRP3_MASK  0x1000000
#define DMA3_INTERRUPPT_GROUPING23_DMA_17_SEL_GRP3  0x1000000
#define DMA3_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP3_OFFSET  0x17
#define DMA3_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP3_MASK  0x800000
#define DMA3_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP3  0x800000
#define DMA3_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP3_OFFSET  0x16
#define DMA3_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP3_MASK  0x400000
#define DMA3_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP3  0x400000
#define DMA3_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP3_OFFSET  0x15
#define DMA3_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP3_MASK  0x200000
#define DMA3_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP3  0x200000
#define DMA3_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP3_OFFSET  0x14
#define DMA3_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP3_MASK  0x100000
#define DMA3_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP3  0x100000
#define DMA3_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP3_OFFSET  0x13
#define DMA3_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP3_MASK  0x80000
#define DMA3_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP3  0x80000
#define DMA3_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP3_OFFSET  0x12
#define DMA3_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP3_MASK  0x40000
#define DMA3_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP3  0x40000
#define DMA3_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP3_OFFSET  0x11
#define DMA3_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP3_MASK  0x20000
#define DMA3_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP3  0x20000
#define DMA3_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP3_OFFSET  0x10
#define DMA3_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP3_MASK  0x10000
#define DMA3_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP3  0x10000
#define DMA3_INTERRUPPT_GROUPING23_DMA_19_SEL_GRP2_OFFSET  0x9
#define DMA3_INTERRUPPT_GROUPING23_DMA_19_SEL_GRP2_MASK  0x200
#define DMA3_INTERRUPPT_GROUPING23_DMA_19_SEL_GRP2  0x200
#define DMA3_INTERRUPPT_GROUPING23_DMA_17_SEL_GRP2_OFFSET  0x8
#define DMA3_INTERRUPPT_GROUPING23_DMA_17_SEL_GRP2_MASK  0x100
#define DMA3_INTERRUPPT_GROUPING23_DMA_17_SEL_GRP2  0x100
#define DMA3_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP2_OFFSET  0x7
#define DMA3_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP2_MASK  0x80
#define DMA3_INTERRUPPT_GROUPING23_DMA_15_SEL_GRP2  0x80
#define DMA3_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP2_OFFSET  0x6
#define DMA3_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP2_MASK  0x40
#define DMA3_INTERRUPPT_GROUPING23_DMA_13_SEL_GRP2  0x40
#define DMA3_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP2_OFFSET  0x5
#define DMA3_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP2_MASK  0x20
#define DMA3_INTERRUPPT_GROUPING23_DMA_11_SEL_GRP2  0x20
#define DMA3_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP2_OFFSET  0x4
#define DMA3_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP2_MASK  0x10
#define DMA3_INTERRUPPT_GROUPING23_DMA_9_SEL_GRP2  0x10
#define DMA3_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP2_OFFSET  0x3
#define DMA3_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP2_MASK  0x8
#define DMA3_INTERRUPPT_GROUPING23_DMA_7_SEL_GRP2  0x8
#define DMA3_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP2_OFFSET  0x2
#define DMA3_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP2_MASK  0x4
#define DMA3_INTERRUPPT_GROUPING23_DMA_5_SEL_GRP2  0x4
#define DMA3_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP2_OFFSET  0x1
#define DMA3_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP2_MASK  0x2
#define DMA3_INTERRUPPT_GROUPING23_DMA_3_SEL_GRP2  0x2
#define DMA3_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP2_OFFSET  0x0
#define DMA3_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP2_MASK  0x1
#define DMA3_INTERRUPPT_GROUPING23_DMA_1_SEL_GRP2  0x1
#define DMA3_INTERRUPPT_GROUPING45_DMA_19_SEL_GRP5_OFFSET  0x19
#define DMA3_INTERRUPPT_GROUPING45_DMA_19_SEL_GRP5_MASK  0x2000000
#define DMA3_INTERRUPPT_GROUPING45_DMA_19_SEL_GRP5  0x2000000
#define DMA3_INTERRUPPT_GROUPING45_DMA_17_SEL_GRP5_OFFSET  0x18
#define DMA3_INTERRUPPT_GROUPING45_DMA_17_SEL_GRP5_MASK  0x1000000
#define DMA3_INTERRUPPT_GROUPING45_DMA_17_SEL_GRP5  0x1000000
#define DMA3_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP5_OFFSET  0x17
#define DMA3_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP5_MASK  0x800000
#define DMA3_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP5  0x800000
#define DMA3_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP5_OFFSET  0x16
#define DMA3_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP5_MASK  0x400000
#define DMA3_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP5  0x400000
#define DMA3_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP5_OFFSET  0x15
#define DMA3_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP5_MASK  0x200000
#define DMA3_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP5  0x200000
#define DMA3_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP5_OFFSET  0x14
#define DMA3_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP5_MASK  0x100000
#define DMA3_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP5  0x100000
#define DMA3_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP5_OFFSET  0x13
#define DMA3_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP5_MASK  0x80000
#define DMA3_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP5  0x80000
#define DMA3_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP5_OFFSET  0x12
#define DMA3_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP5_MASK  0x40000
#define DMA3_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP5  0x40000
#define DMA3_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP5_OFFSET  0x11
#define DMA3_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP5_MASK  0x20000
#define DMA3_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP5  0x20000
#define DMA3_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP5_OFFSET  0x10
#define DMA3_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP5_MASK  0x10000
#define DMA3_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP5  0x10000
#define DMA3_INTERRUPPT_GROUPING45_DMA_19_SEL_GRP4_OFFSET  0x9
#define DMA3_INTERRUPPT_GROUPING45_DMA_19_SEL_GRP4_MASK  0x200
#define DMA3_INTERRUPPT_GROUPING45_DMA_19_SEL_GRP4  0x200
#define DMA3_INTERRUPPT_GROUPING45_DMA_17_SEL_GRP4_OFFSET  0x8
#define DMA3_INTERRUPPT_GROUPING45_DMA_17_SEL_GRP4_MASK  0x100
#define DMA3_INTERRUPPT_GROUPING45_DMA_17_SEL_GRP4  0x100
#define DMA3_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP4_OFFSET  0x7
#define DMA3_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP4_MASK  0x80
#define DMA3_INTERRUPPT_GROUPING45_DMA_15_SEL_GRP4  0x80
#define DMA3_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP4_OFFSET  0x6
#define DMA3_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP4_MASK  0x40
#define DMA3_INTERRUPPT_GROUPING45_DMA_13_SEL_GRP4  0x40
#define DMA3_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP4_OFFSET  0x5
#define DMA3_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP4_MASK  0x20
#define DMA3_INTERRUPPT_GROUPING45_DMA_11_SEL_GRP4  0x20
#define DMA3_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP4_OFFSET  0x4
#define DMA3_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP4_MASK  0x10
#define DMA3_INTERRUPPT_GROUPING45_DMA_9_SEL_GRP4  0x10
#define DMA3_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP4_OFFSET  0x3
#define DMA3_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP4_MASK  0x8
#define DMA3_INTERRUPPT_GROUPING45_DMA_7_SEL_GRP4  0x8
#define DMA3_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP4_OFFSET  0x2
#define DMA3_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP4_MASK  0x4
#define DMA3_INTERRUPPT_GROUPING45_DMA_5_SEL_GRP4  0x4
#define DMA3_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP4_OFFSET  0x1
#define DMA3_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP4_MASK  0x2
#define DMA3_INTERRUPPT_GROUPING45_DMA_3_SEL_GRP4  0x2
#define DMA3_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP4_OFFSET  0x0
#define DMA3_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP4_MASK  0x1
#define DMA3_INTERRUPPT_GROUPING45_DMA_1_SEL_GRP4  0x1
#define DMA3_INTERRUPPT_GROUPING67_DMA_19_SEL_GRP7_OFFSET  0x19
#define DMA3_INTERRUPPT_GROUPING67_DMA_19_SEL_GRP7_MASK  0x2000000
#define DMA3_INTERRUPPT_GROUPING67_DMA_19_SEL_GRP7  0x2000000
#define DMA3_INTERRUPPT_GROUPING67_DMA_17_SEL_GRP7_OFFSET  0x18
#define DMA3_INTERRUPPT_GROUPING67_DMA_17_SEL_GRP7_MASK  0x1000000
#define DMA3_INTERRUPPT_GROUPING67_DMA_17_SEL_GRP7  0x1000000
#define DMA3_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP7_OFFSET  0x17
#define DMA3_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP7_MASK  0x800000
#define DMA3_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP7  0x800000
#define DMA3_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP7_OFFSET  0x16
#define DMA3_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP7_MASK  0x400000
#define DMA3_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP7  0x400000
#define DMA3_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP7_OFFSET  0x15
#define DMA3_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP7_MASK  0x200000
#define DMA3_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP7  0x200000
#define DMA3_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP7_OFFSET  0x14
#define DMA3_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP7_MASK  0x100000
#define DMA3_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP7  0x100000
#define DMA3_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP7_OFFSET  0x13
#define DMA3_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP7_MASK  0x80000
#define DMA3_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP7  0x80000
#define DMA3_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP7_OFFSET  0x12
#define DMA3_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP7_MASK  0x40000
#define DMA3_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP7  0x40000
#define DMA3_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP7_OFFSET  0x11
#define DMA3_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP7_MASK  0x20000
#define DMA3_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP7  0x20000
#define DMA3_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP7_OFFSET  0x10
#define DMA3_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP7_MASK  0x10000
#define DMA3_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP7  0x10000
#define DMA3_INTERRUPPT_GROUPING67_DMA_19_SEL_GRP6_OFFSET  0x9
#define DMA3_INTERRUPPT_GROUPING67_DMA_19_SEL_GRP6_MASK  0x200
#define DMA3_INTERRUPPT_GROUPING67_DMA_19_SEL_GRP6  0x200
#define DMA3_INTERRUPPT_GROUPING67_DMA_17_SEL_GRP6_OFFSET  0x8
#define DMA3_INTERRUPPT_GROUPING67_DMA_17_SEL_GRP6_MASK  0x100
#define DMA3_INTERRUPPT_GROUPING67_DMA_17_SEL_GRP6  0x100
#define DMA3_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP6_OFFSET  0x7
#define DMA3_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP6_MASK  0x80
#define DMA3_INTERRUPPT_GROUPING67_DMA_15_SEL_GRP6  0x80
#define DMA3_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP6_OFFSET  0x6
#define DMA3_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP6_MASK  0x40
#define DMA3_INTERRUPPT_GROUPING67_DMA_13_SEL_GRP6  0x40
#define DMA3_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP6_OFFSET  0x5
#define DMA3_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP6_MASK  0x20
#define DMA3_INTERRUPPT_GROUPING67_DMA_11_SEL_GRP6  0x20
#define DMA3_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP6_OFFSET  0x4
#define DMA3_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP6_MASK  0x10
#define DMA3_INTERRUPPT_GROUPING67_DMA_9_SEL_GRP6  0x10
#define DMA3_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP6_OFFSET  0x3
#define DMA3_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP6_MASK  0x8
#define DMA3_INTERRUPPT_GROUPING67_DMA_7_SEL_GRP6  0x8
#define DMA3_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP6_OFFSET  0x2
#define DMA3_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP6_MASK  0x4
#define DMA3_INTERRUPPT_GROUPING67_DMA_5_SEL_GRP6  0x4
#define DMA3_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP6_OFFSET  0x1
#define DMA3_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP6_MASK  0x2
#define DMA3_INTERRUPPT_GROUPING67_DMA_3_SEL_GRP6  0x2
#define DMA3_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP6_OFFSET  0x0
#define DMA3_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP6_MASK  0x1
#define DMA3_INTERRUPPT_GROUPING67_DMA_1_SEL_GRP6  0x1
#define DMA3_INTERRUPPT_GROUPING89_DMA_19_SEL_GRP9_OFFSET  0x19
#define DMA3_INTERRUPPT_GROUPING89_DMA_19_SEL_GRP9_MASK  0x2000000
#define DMA3_INTERRUPPT_GROUPING89_DMA_19_SEL_GRP9  0x2000000
#define DMA3_INTERRUPPT_GROUPING89_DMA_17_SEL_GRP9_OFFSET  0x18
#define DMA3_INTERRUPPT_GROUPING89_DMA_17_SEL_GRP9_MASK  0x1000000
#define DMA3_INTERRUPPT_GROUPING89_DMA_17_SEL_GRP9  0x1000000
#define DMA3_INTERRUPPT_GROUPING89_DMA_15_SEL_GRP9_OFFSET  0x17
#define DMA3_INTERRUPPT_GROUPING89_DMA_15_SEL_GRP9_MASK  0x800000
#define DMA3_INTERRUPPT_GROUPING89_DMA_15_SEL_GRP9  0x800000
#define DMA3_INTERRUPPT_GROUPING89_DMA_13_SEL_GRP9_OFFSET  0x16
#define DMA3_INTERRUPPT_GROUPING89_DMA_13_SEL_GRP9_MASK  0x400000
#define DMA3_INTERRUPPT_GROUPING89_DMA_13_SEL_GRP9  0x400000
#define DMA3_INTERRUPPT_GROUPING89_DMA_11_SEL_GRP9_OFFSET  0x15
#define DMA3_INTERRUPPT_GROUPING89_DMA_11_SEL_GRP9_MASK  0x200000
#define DMA3_INTERRUPPT_GROUPING89_DMA_11_SEL_GRP9  0x200000
#define DMA3_INTERRUPPT_GROUPING89_DMA_9_SEL_GRP9_OFFSET  0x14
#define DMA3_INTERRUPPT_GROUPING89_DMA_9_SEL_GRP9_MASK  0x100000
#define DMA3_INTERRUPPT_GROUPING89_DMA_9_SEL_GRP9  0x100000
#define DMA3_INTERRUPPT_GROUPING89_DMA_7_SEL_GRP9_OFFSET  0x13
#define DMA3_INTERRUPPT_GROUPING89_DMA_7_SEL_GRP9_MASK  0x80000
#define DMA3_INTERRUPPT_GROUPING89_DMA_7_SEL_GRP9  0x80000
#define DMA3_INTERRUPPT_GROUPING89_DMA_5_SEL_GRP9_OFFSET  0x12
#define DMA3_INTERRUPPT_GROUPING89_DMA_5_SEL_GRP9_MASK  0x40000
#define DMA3_INTERRUPPT_GROUPING89_DMA_5_SEL_GRP9  0x40000
#define DMA3_INTERRUPPT_GROUPING89_DMA_3_SEL_GRP9_OFFSET  0x11
#define DMA3_INTERRUPPT_GROUPING89_DMA_3_SEL_GRP9_MASK  0x20000
#define DMA3_INTERRUPPT_GROUPING89_DMA_3_SEL_GRP9  0x20000
#define DMA3_INTERRUPPT_GROUPING89_DMA_1_SEL_GRP9_OFFSET  0x10
#define DMA3_INTERRUPPT_GROUPING89_DMA_1_SEL_GRP9_MASK  0x10000
#define DMA3_INTERRUPPT_GROUPING89_DMA_1_SEL_GRP9  0x10000
#define DMA3_INTERRUPPT_GROUPING89_DMA_19_SEL_GRP8_OFFSET  0x9
#define DMA3_INTERRUPPT_GROUPING89_DMA_19_SEL_GRP8_MASK  0x200
#define DMA3_INTERRUPPT_GROUPING89_DMA_19_SEL_GRP8  0x200
#define DMA3_INTERRUPPT_GROUPING89_DMA_17_SEL_GRP8_OFFSET  0x8
#define DMA3_INTERRUPPT_GROUPING89_DMA_17_SEL_GRP8_MASK  0x100
#define DMA3_INTERRUPPT_GROUPING89_DMA_17_SEL_GRP8  0x100
#define DMA3_INTERRUPPT_GROUPING89_DMA_15_SEL_GRP8_OFFSET  0x7
#define DMA3_INTERRUPPT_GROUPING89_DMA_15_SEL_GRP8_MASK  0x80
#define DMA3_INTERRUPPT_GROUPING89_DMA_15_SEL_GRP8  0x80
#define DMA3_INTERRUPPT_GROUPING89_DMA_13_SEL_GRP8_OFFSET  0x6
#define DMA3_INTERRUPPT_GROUPING89_DMA_13_SEL_GRP8_MASK  0x40
#define DMA3_INTERRUPPT_GROUPING89_DMA_13_SEL_GRP8  0x40
#define DMA3_INTERRUPPT_GROUPING89_DMA_11_SEL_GRP8_OFFSET  0x5
#define DMA3_INTERRUPPT_GROUPING89_DMA_11_SEL_GRP8_MASK  0x20
#define DMA3_INTERRUPPT_GROUPING89_DMA_11_SEL_GRP8  0x20
#define DMA3_INTERRUPPT_GROUPING89_DMA_9_SEL_GRP8_OFFSET  0x4
#define DMA3_INTERRUPPT_GROUPING89_DMA_9_SEL_GRP8_MASK  0x10
#define DMA3_INTERRUPPT_GROUPING89_DMA_9_SEL_GRP8  0x10
#define DMA3_INTERRUPPT_GROUPING89_DMA_7_SEL_GRP8_OFFSET  0x3
#define DMA3_INTERRUPPT_GROUPING89_DMA_7_SEL_GRP8_MASK  0x8
#define DMA3_INTERRUPPT_GROUPING89_DMA_7_SEL_GRP8  0x8
#define DMA3_INTERRUPPT_GROUPING89_DMA_5_SEL_GRP8_OFFSET  0x2
#define DMA3_INTERRUPPT_GROUPING89_DMA_5_SEL_GRP8_MASK  0x4
#define DMA3_INTERRUPPT_GROUPING89_DMA_5_SEL_GRP8  0x4
#define DMA3_INTERRUPPT_GROUPING89_DMA_3_SEL_GRP8_OFFSET  0x1
#define DMA3_INTERRUPPT_GROUPING89_DMA_3_SEL_GRP8_MASK  0x2
#define DMA3_INTERRUPPT_GROUPING89_DMA_3_SEL_GRP8  0x2
#define DMA3_INTERRUPPT_GROUPING89_DMA_1_SEL_GRP8_OFFSET  0x0
#define DMA3_INTERRUPPT_GROUPING89_DMA_1_SEL_GRP8_MASK  0x1
#define DMA3_INTERRUPPT_GROUPING89_DMA_1_SEL_GRP8  0x1
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_10_OFFSET  0x19
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_10_MASK  0x3e000000
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_10  0x3e000000
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_8_OFFSET  0x14
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_8_MASK  0x1f00000
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_8  0x1f00000
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_6_OFFSET  0xf
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_6_MASK  0xf8000
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_6  0xf8000
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_4_OFFSET  0xa
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_4_MASK  0x7c00
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_4  0x7c00
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_2_OFFSET  0x5
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_2_MASK  0x3e0
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_2  0x3e0
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_0_OFFSET  0x0
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_0_MASK  0x1f
#define DMA3_CHANNEL_ASSIGNMENTS0246810_CHANNEL_0  0x1f
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_18_OFFSET  0xf
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_18_MASK  0xf8000
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_18  0xf8000
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_16_OFFSET  0xa
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_16_MASK  0x7c00
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_16  0x7c00
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_14_OFFSET  0x5
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_14_MASK  0x3e0
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_14  0x3e0
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_12_OFFSET  0x0
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_12_MASK  0x1f
#define DMA3_CHANNEL_ASSIGNMENTS12141618_CHANNEL_12  0x1f
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_11_OFFSET  0x19
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_11_MASK  0x3e000000
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_11  0x3e000000
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_9_OFFSET  0x14
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_9_MASK  0x1f00000
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_9  0x1f00000
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_7_OFFSET  0xf
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_7_MASK  0xf8000
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_7  0xf8000
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_5_OFFSET  0xa
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_5_MASK  0x7c00
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_5  0x7c00
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_3_OFFSET  0x5
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_3_MASK  0x3e0
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_3  0x3e0
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_1_OFFSET  0x0
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_1_MASK  0x1f
#define DMA3_CHANNEL_ASSIGNMENT_1357911_CHANNEL_1  0x1f
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_19_OFFSET  0xf
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_19_MASK  0xf8000
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_19  0xf8000
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_17_OFFSET  0xa
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_17_MASK  0x7c00
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_17  0x7c00
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_15_OFFSET  0x5
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_15_MASK  0x3e0
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_15  0x3e0
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_13_OFFSET  0x0
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_13_MASK  0x1f
#define DMA3_CHANNEL_ASSIGNMENT_13151719_CHANNEL_13  0x1f
#define DMA3_CONTROL_EXT_CH0_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH0_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH0_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH1_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH1_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH1_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH2_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH2_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH2_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH3_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH3_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH3_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH4_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH4_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH4_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH5_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH5_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH5_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH6_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH6_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH6_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH7_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH7_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH7_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH8_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH8_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH8_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH9_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH9_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH9_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH10_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH10_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH10_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH11_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH11_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH11_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH12_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH12_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH12_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH13_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH13_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH13_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH14_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH14_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH14_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH15_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH15_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH15_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH16_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH16_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH16_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH17_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH17_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH17_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH18_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH18_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH18_BUFFER_SIZE_EXT  0x7
#define DMA3_CONTROL_EXT_CH19_BUFFER_SIZE_EXT_OFFSET  0x0
#define DMA3_CONTROL_EXT_CH19_BUFFER_SIZE_EXT_MASK  0x7
#define DMA3_CONTROL_EXT_CH19_BUFFER_SIZE_EXT  0x7
#define DMA_ADDR_STATUS_SELECT_DMA3_CHANNEL_SEL_OFFSET  0x8
#define DMA_ADDR_STATUS_SELECT_DMA3_CHANNEL_SEL_MASK  0x1f00
#define DMA_ADDR_STATUS_SELECT_DMA3_CHANNEL_SEL  0x1f00
#define DMA_ADDR_STATUS_SELECT_DMA0_CHANNEL_SEL_OFFSET  0x0
#define DMA_ADDR_STATUS_SELECT_DMA0_CHANNEL_SEL_MASK  0x1f
#define DMA_ADDR_STATUS_SELECT_DMA0_CHANNEL_SEL  0x1f
#define DMA_ADDRESS_UPDT_STA_DMA3_ADDR_UPDT_OFFSET  0x1
#define DMA_ADDRESS_UPDT_STA_DMA3_ADDR_UPDT_MASK  0x2
#define DMA_ADDRESS_UPDT_STA_DMA3_ADDR_UPDT  0x2
#define DMA_ADDRESS_UPDT_STA_DMA0_ADDR_UPDT_OFFSET  0x0
#define DMA_ADDRESS_UPDT_STA_DMA0_ADDR_UPDT_MASK  0x1
#define DMA_ADDRESS_UPDT_STA_DMA0_ADDR_UPDT  0x1
#define DMA0_ADDRESS_STATUS_CURRENT_ADDRESS_OFFSET  0x0
#define DMA0_ADDRESS_STATUS_CURRENT_ADDRESS_MASK  0xffffffff
#define DMA0_ADDRESS_STATUS_CURRENT_ADDRESS  0xffffffff
#define DMA3_ADDRESS_STATUS_CURRENT_ADDRESS_OFFSET  0x0
#define DMA3_ADDRESS_STATUS_CURRENT_ADDRESS_MASK  0xffffffff
#define DMA3_ADDRESS_STATUS_CURRENT_ADDRESS  0xffffffff
#define DMA0_FIFO_STATUS_FIFO_UNDERRUN_CH2_OFFSET  0x11
#define DMA0_FIFO_STATUS_FIFO_UNDERRUN_CH2_MASK  0x20000
#define DMA0_FIFO_STATUS_FIFO_UNDERRUN_CH2  0x20000
#define DMA0_FIFO_STATUS_FIFO_UNDERRUN_CH0_OFFSET  0x10
#define DMA0_FIFO_STATUS_FIFO_UNDERRUN_CH0_MASK  0x10000
#define DMA0_FIFO_STATUS_FIFO_UNDERRUN_CH0  0x10000
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH15_OFFSET  0x7
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH15_MASK  0x80
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH15  0x80
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH13_OFFSET  0x6
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH13_MASK  0x40
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH13  0x40
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH11_OFFSET  0x5
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH11_MASK  0x20
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH11  0x20
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH9_OFFSET  0x4
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH9_MASK  0x10
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH9  0x10
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH7_OFFSET  0x3
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH7_MASK  0x8
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH7  0x8
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH5_OFFSET  0x2
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH5_MASK  0x4
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH5  0x4
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH3_OFFSET  0x1
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH3_MASK  0x2
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH3  0x2
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH1_OFFSET  0x0
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH1_MASK  0x1
#define DMA0_FIFO_STATUS_FIFO_OVERRUN_CH1  0x1
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH18_OFFSET  0x19
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH18_MASK  0x2000000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH18  0x2000000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH16_OFFSET  0x18
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH16_MASK  0x1000000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH16  0x1000000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH14_OFFSET  0x17
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH14_MASK  0x800000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH14  0x800000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH12_OFFSET  0x16
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH12_MASK  0x400000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH12  0x400000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH10_OFFSET  0x15
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH10_MASK  0x200000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH10  0x200000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH8_OFFSET  0x14
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH8_MASK  0x100000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH8  0x100000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH6_OFFSET  0x13
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH6_MASK  0x80000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH6  0x80000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH4_OFFSET  0x12
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH4_MASK  0x40000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH4  0x40000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH2_OFFSET  0x11
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH2_MASK  0x20000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH2  0x20000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH0_OFFSET  0x10
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH0_MASK  0x10000
#define DMA3_FIFO_STATUS_FIFO_UNDERRUN_CH0  0x10000
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH19_OFFSET  0x9
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH19_MASK  0x200
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH19  0x200
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH17_OFFSET  0x8
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH17_MASK  0x100
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH17  0x100
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH15_OFFSET  0x7
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH15_MASK  0x80
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH15  0x80
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH13_OFFSET  0x6
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH13_MASK  0x40
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH13  0x40
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH11_OFFSET  0x5
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH11_MASK  0x20
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH11  0x20
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH9_OFFSET  0x4
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH9_MASK  0x10
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH9  0x10
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH7_OFFSET  0x3
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH7_MASK  0x8
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH7  0x8
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH5_OFFSET  0x2
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH5_MASK  0x4
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH5  0x4
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH3_OFFSET  0x1
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH3_MASK  0x2
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH3  0x2
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH1_OFFSET  0x0
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH1_MASK  0x1
#define DMA3_FIFO_STATUS_FIFO_OVERRUN_CH1  0x1
#define OTP_FUSE0_CTRL_STA_DIN_OFFSET  0x4
#define OTP_FUSE0_CTRL_STA_DIN_MASK  0x10
#define OTP_FUSE0_CTRL_STA_DIN  0x10
#define OTP_FUSE0_CTRL_STA_SCLK_OFFSET  0x2
#define OTP_FUSE0_CTRL_STA_SCLK_MASK  0x4
#define OTP_FUSE0_CTRL_STA_SCLK  0x4
#define OTP_FUSE0_CTRL_STA_PGM_OFFSET  0x1
#define OTP_FUSE0_CTRL_STA_PGM_MASK  0x2
#define OTP_FUSE0_CTRL_STA_PGM  0x2
#define OTP_FUSE0_CTRL_STA_CSB_OFFSET  0x0
#define OTP_FUSE0_CTRL_STA_CSB_MASK  0x1
#define OTP_FUSE0_CTRL_STA_CSB  0x1
#define OTP_FUSE0_STATUS_SET_DIN_OFFSET  0x4
#define OTP_FUSE0_STATUS_SET_DIN_MASK  0x10
#define OTP_FUSE0_STATUS_SET_DIN  0x10
#define OTP_FUSE0_STATUS_SET_SCLK_OFFSET  0x2
#define OTP_FUSE0_STATUS_SET_SCLK_MASK  0x4
#define OTP_FUSE0_STATUS_SET_SCLK  0x4
#define OTP_FUSE0_STATUS_SET_PGM_OFFSET  0x1
#define OTP_FUSE0_STATUS_SET_PGM_MASK  0x2
#define OTP_FUSE0_STATUS_SET_PGM  0x2
#define OTP_FUSE0_STATUS_SET_CSB_OFFSET  0x0
#define OTP_FUSE0_STATUS_SET_CSB_MASK  0x1
#define OTP_FUSE0_STATUS_SET_CSB  0x1
#define OTP_FUSE0_STATUS_CLR_DIN_OFFSET  0x4
#define OTP_FUSE0_STATUS_CLR_DIN_MASK  0x10
#define OTP_FUSE0_STATUS_CLR_DIN  0x10
#define OTP_FUSE0_STATUS_CLR_SCLK_OFFSET  0x2
#define OTP_FUSE0_STATUS_CLR_SCLK_MASK  0x4
#define OTP_FUSE0_STATUS_CLR_SCLK  0x4
#define OTP_FUSE0_STATUS_CLR_PGM_OFFSET  0x1
#define OTP_FUSE0_STATUS_CLR_PGM_MASK  0x2
#define OTP_FUSE0_STATUS_CLR_PGM  0x2
#define OTP_FUSE0_STATUS_CLR_CSB_OFFSET  0x0
#define OTP_FUSE0_STATUS_CLR_CSB_MASK  0x1
#define OTP_FUSE0_STATUS_CLR_CSB  0x1
#define OTP_FUSE0_SERAL_DATA_OUTPUT_SDOUT_OFFSET  0x0
#define OTP_FUSE0_SERAL_DATA_OUTPUT_SDOUT_MASK  0x1
#define OTP_FUSE0_SERAL_DATA_OUTPUT_SDOUT  0x1
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_0_PDOUT  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_1_PDOUT  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_2_PDOUT  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_3_PDOUT  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_4_PDOUT  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_5_PDOUT  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_6_PDOUT  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_PDOUT_OFFSET  0x0
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_PDOUT_MASK  0xffffffff
#define OTP_FUSE0_PARALLEL_DATA_OUTPUT_7_PDOUT  0xffffffff
#define CACHE_DATA_RAM0_CFG_TEST1_OFFSET  0xe
#define CACHE_DATA_RAM0_CFG_TEST1_MASK  0x4000
#define CACHE_DATA_RAM0_CFG_TEST1  0x4000
#define CACHE_DATA_RAM0_CFG_RA_OFFSET  0xc
#define CACHE_DATA_RAM0_CFG_RA_MASK  0x3000
#define CACHE_DATA_RAM0_CFG_RA  0x3000
#define CACHE_DATA_RAM0_CFG_LS_OFFSET  0xb
#define CACHE_DATA_RAM0_CFG_LS_MASK  0x800
#define CACHE_DATA_RAM0_CFG_LS  0x800
#define CACHE_DATA_RAM0_CFG_WA_OFFSET  0x8
#define CACHE_DATA_RAM0_CFG_WA_MASK  0x700
#define CACHE_DATA_RAM0_CFG_WA  0x700
#define CACHE_DATA_RAM0_CFG_WPLUSE_OFFSET  0x5
#define CACHE_DATA_RAM0_CFG_WPLUSE_MASK  0xe0
#define CACHE_DATA_RAM0_CFG_WPLUSE  0xe0
#define CACHE_DATA_RAM0_CFG_RME_OFFSET  0x4
#define CACHE_DATA_RAM0_CFG_RME_MASK  0x10
#define CACHE_DATA_RAM0_CFG_RME  0x10
#define CACHE_DATA_RAM0_CFG_RM_OFFSET  0x0
#define CACHE_DATA_RAM0_CFG_RM_MASK  0xf
#define CACHE_DATA_RAM0_CFG_RM  0xf
#define CACHE_DATA_RAM1_CFG_TEST1_OFFSET  0xe
#define CACHE_DATA_RAM1_CFG_TEST1_MASK  0x4000
#define CACHE_DATA_RAM1_CFG_TEST1  0x4000
#define CACHE_DATA_RAM1_CFG_RA_OFFSET  0xc
#define CACHE_DATA_RAM1_CFG_RA_MASK  0x3000
#define CACHE_DATA_RAM1_CFG_RA  0x3000
#define CACHE_DATA_RAM1_CFG_LS_OFFSET  0xb
#define CACHE_DATA_RAM1_CFG_LS_MASK  0x800
#define CACHE_DATA_RAM1_CFG_LS  0x800
#define CACHE_DATA_RAM1_CFG_WA_OFFSET  0x8
#define CACHE_DATA_RAM1_CFG_WA_MASK  0x700
#define CACHE_DATA_RAM1_CFG_WA  0x700
#define CACHE_DATA_RAM1_CFG_WPLUSE_OFFSET  0x5
#define CACHE_DATA_RAM1_CFG_WPLUSE_MASK  0xe0
#define CACHE_DATA_RAM1_CFG_WPLUSE  0xe0
#define CACHE_DATA_RAM1_CFG_RME_OFFSET  0x4
#define CACHE_DATA_RAM1_CFG_RME_MASK  0x10
#define CACHE_DATA_RAM1_CFG_RME  0x10
#define CACHE_DATA_RAM1_CFG_RM_OFFSET  0x0
#define CACHE_DATA_RAM1_CFG_RM_MASK  0xf
#define CACHE_DATA_RAM1_CFG_RM  0xf
#define CACHE_USER_CFG_FUN_CLK_GATE_OFFSET  0x1
#define CACHE_USER_CFG_FUN_CLK_GATE_MASK  0x2
#define CACHE_USER_CFG_FUN_CLK_GATE  0x2
#define CACHE_USER_CFG_BYPASS_OFFSET  0x0
#define CACHE_USER_CFG_BYPASS_MASK  0x1
#define CACHE_USER_CFG_BYPASS  0x1
#define RA_PWM_CTRL_1_PWM4_OFFSET  0x18
#define RA_PWM_CTRL_1_PWM4_MASK  0xff000000
#define RA_PWM_CTRL_1_PWM4  0xff000000
#define RA_PWM_CTRL_1_PWM3_OFFSET  0x10
#define RA_PWM_CTRL_1_PWM3_MASK  0xff0000
#define RA_PWM_CTRL_1_PWM3  0xff0000
#define RA_PWM_CTRL_1_PWM2_OFFSET  0x8
#define RA_PWM_CTRL_1_PWM2_MASK  0xff00
#define RA_PWM_CTRL_1_PWM2  0xff00
#define RA_PWM_CTRL_1_PWM1_OFFSET  0x0
#define RA_PWM_CTRL_1_PWM1_MASK  0xff
#define RA_PWM_CTRL_1_PWM1  0xff
#define RA_PWM_CTRL_2_PWM3_OUT_INVERT_OFFSET  0x1a
#define RA_PWM_CTRL_2_PWM3_OUT_INVERT_MASK  0x4000000
#define RA_PWM_CTRL_2_PWM3_OUT_INVERT  0x4000000
#define RA_PWM_CTRL_2_PWM2_OUT_INVERT_OFFSET  0x19
#define RA_PWM_CTRL_2_PWM2_OUT_INVERT_MASK  0x2000000
#define RA_PWM_CTRL_2_PWM2_OUT_INVERT  0x2000000
#define RA_PWM_CTRL_2_PWM1_OUT_INVERT_OFFSET  0x18
#define RA_PWM_CTRL_2_PWM1_OUT_INVERT_MASK  0x1000000
#define RA_PWM_CTRL_2_PWM1_OUT_INVERT  0x1000000
#define RA_PWM_CTRL_2_PWM3_CNTRL_OFFSET  0x14
#define RA_PWM_CTRL_2_PWM3_CNTRL_MASK  0x300000
#define RA_PWM_CTRL_2_PWM3_CNTRL  0x300000
#define RA_PWM_CTRL_2_PWM2_CNTRL_OFFSET  0x12
#define RA_PWM_CTRL_2_PWM2_CNTRL_MASK  0xc0000
#define RA_PWM_CTRL_2_PWM2_CNTRL  0xc0000
#define RA_PWM_CTRL_2_PWM1_CNTRL_OFFSET  0x10
#define RA_PWM_CTRL_2_PWM1_CNTRL_MASK  0x30000
#define RA_PWM_CTRL_2_PWM1_CNTRL  0x30000
#define RA_PWM_CTRL_2_DMBLNK_OFFSET  0xb
#define RA_PWM_CTRL_2_DMBLNK_MASK  0x800
#define RA_PWM_CTRL_2_DMBLNK  0x800
#define RA_PWM_CTRL_2_PWM3_EN_OFFSET  0xa
#define RA_PWM_CTRL_2_PWM3_EN_MASK  0x400
#define RA_PWM_CTRL_2_PWM3_EN  0x400
#define RA_PWM_CTRL_2_PWM2_EN_OFFSET  0x9
#define RA_PWM_CTRL_2_PWM2_EN_MASK  0x200
#define RA_PWM_CTRL_2_PWM2_EN  0x200
#define RA_PWM_CTRL_2_PWM1_EN_OFFSET  0x8
#define RA_PWM_CTRL_2_PWM1_EN_MASK  0x100
#define RA_PWM_CTRL_2_PWM1_EN  0x100
#define RA_PWM_CTRL_2_PWM5_OFFSET  0x0
#define RA_PWM_CTRL_2_PWM5_MASK  0xff
#define RA_PWM_CTRL_2_PWM5  0xff
#define MAILBOX_CFG_FIFO0_FIFO_FULL_ENTRY_THRESHOLD_OFFSET  0x8
#define MAILBOX_CFG_FIFO0_FIFO_FULL_ENTRY_THRESHOLD_MASK  0xf00
#define MAILBOX_CFG_FIFO0_FIFO_FULL_ENTRY_THRESHOLD  0xf00
#define MAILBOX_CFG_FIFO0_INT_EN_OFFSET  0x7
#define MAILBOX_CFG_FIFO0_INT_EN_MASK  0x80
#define MAILBOX_CFG_FIFO0_INT_EN  0x80
#define MAILBOX_CFG_FIFO0_FIFO_DBG_OFFSET  0x2
#define MAILBOX_CFG_FIFO0_FIFO_DBG_MASK  0x4
#define MAILBOX_CFG_FIFO0_FIFO_DBG  0x4
#define MAILBOX_CFG_FIFO0_OVERFLOW_CLR_OFFSET  0x1
#define MAILBOX_CFG_FIFO0_OVERFLOW_CLR_MASK  0x2
#define MAILBOX_CFG_FIFO0_OVERFLOW_CLR  0x2
#define MAILBOX_CFG_FIFO0_FIFO_ENABLE_OFFSET  0x0
#define MAILBOX_CFG_FIFO0_FIFO_ENABLE_MASK  0x1
#define MAILBOX_CFG_FIFO0_FIFO_ENABLE  0x1
#define MAILBOX_STATUS_FIFO0_INT_STATUS_OFFSET  0x10
#define MAILBOX_STATUS_FIFO0_INT_STATUS_MASK  0x10000
#define MAILBOX_STATUS_FIFO0_INT_STATUS  0x10000
#define MAILBOX_STATUS_FIFO0_OVERFLOW_OFFSET  0xc
#define MAILBOX_STATUS_FIFO0_OVERFLOW_MASK  0x1000
#define MAILBOX_STATUS_FIFO0_OVERFLOW  0x1000
#define MAILBOX_STATUS_FIFO0_MASTER_ID_OFFSET  0x8
#define MAILBOX_STATUS_FIFO0_MASTER_ID_MASK  0xf00
#define MAILBOX_STATUS_FIFO0_MASTER_ID  0xf00
#define MAILBOX_STATUS_FIFO0_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_STATUS_FIFO0_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_STATUS_FIFO0_FIFO_FULL_ENTRY  0xff
#define MAILBOX_DBG_MSG_FIFO0_UNDERFLOW_OFFSET  0x15
#define MAILBOX_DBG_MSG_FIFO0_UNDERFLOW_MASK  0x200000
#define MAILBOX_DBG_MSG_FIFO0_UNDERFLOW  0x200000
#define MAILBOX_DBG_MSG_FIFO0_OVERFLOW_OFFSET  0x14
#define MAILBOX_DBG_MSG_FIFO0_OVERFLOW_MASK  0x100000
#define MAILBOX_DBG_MSG_FIFO0_OVERFLOW  0x100000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_AEMPTY_OFFSET  0x13
#define MAILBOX_DBG_MSG_FIFO0_FIFO_AEMPTY_MASK  0x80000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_AEMPTY  0x80000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_EMPTY_OFFSET  0x12
#define MAILBOX_DBG_MSG_FIFO0_FIFO_EMPTY_MASK  0x40000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_EMPTY  0x40000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_AFULL_OFFSET  0x11
#define MAILBOX_DBG_MSG_FIFO0_FIFO_AFULL_MASK  0x20000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_AFULL  0x20000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_FULL_OFFSET  0x10
#define MAILBOX_DBG_MSG_FIFO0_FIFO_FULL_MASK  0x10000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_FULL  0x10000
#define MAILBOX_DBG_MSG_FIFO0_FIFO_EMPTY_ENTRY_OFFSET  0x8
#define MAILBOX_DBG_MSG_FIFO0_FIFO_EMPTY_ENTRY_MASK  0xff00
#define MAILBOX_DBG_MSG_FIFO0_FIFO_EMPTY_ENTRY  0xff00
#define MAILBOX_DBG_MSG_FIFO0_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_DBG_MSG_FIFO0_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_DBG_MSG_FIFO0_FIFO_FULL_ENTRY  0xff
#define MAILBOX_FIFO_XFER_FIFO0_FIFO_XFER_OFFSET  0x0
#define MAILBOX_FIFO_XFER_FIFO0_FIFO_XFER_MASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO0_FIFO_XFER  0xffffffff
#define MAILBOX_CFG_FIFO1_FIFO_FULL_ENTRY_THRESHOLD_OFFSET  0x8
#define MAILBOX_CFG_FIFO1_FIFO_FULL_ENTRY_THRESHOLD_MASK  0xf00
#define MAILBOX_CFG_FIFO1_FIFO_FULL_ENTRY_THRESHOLD  0xf00
#define MAILBOX_CFG_FIFO1_INT_EN_OFFSET  0x7
#define MAILBOX_CFG_FIFO1_INT_EN_MASK  0x80
#define MAILBOX_CFG_FIFO1_INT_EN  0x80
#define MAILBOX_CFG_FIFO1_FIFO_DBG_OFFSET  0x2
#define MAILBOX_CFG_FIFO1_FIFO_DBG_MASK  0x4
#define MAILBOX_CFG_FIFO1_FIFO_DBG  0x4
#define MAILBOX_CFG_FIFO1_OVERFLOW_CLR_OFFSET  0x1
#define MAILBOX_CFG_FIFO1_OVERFLOW_CLR_MASK  0x2
#define MAILBOX_CFG_FIFO1_OVERFLOW_CLR  0x2
#define MAILBOX_CFG_FIFO1_FIFO_ENABLE_OFFSET  0x0
#define MAILBOX_CFG_FIFO1_FIFO_ENABLE_MASK  0x1
#define MAILBOX_CFG_FIFO1_FIFO_ENABLE  0x1
#define MAILBOX_STATUS_FIFO1_INT_STATUS_OFFSET  0x10
#define MAILBOX_STATUS_FIFO1_INT_STATUS_MASK  0x10000
#define MAILBOX_STATUS_FIFO1_INT_STATUS  0x10000
#define MAILBOX_STATUS_FIFO1_OVERFLOW_OFFSET  0xc
#define MAILBOX_STATUS_FIFO1_OVERFLOW_MASK  0x1000
#define MAILBOX_STATUS_FIFO1_OVERFLOW  0x1000
#define MAILBOX_STATUS_FIFO1_MASTER_ID_OFFSET  0x8
#define MAILBOX_STATUS_FIFO1_MASTER_ID_MASK  0xf00
#define MAILBOX_STATUS_FIFO1_MASTER_ID  0xf00
#define MAILBOX_STATUS_FIFO1_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_STATUS_FIFO1_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_STATUS_FIFO1_FIFO_FULL_ENTRY  0xff
#define MAILBOX_DBG_MSG_FIFO1_UNDERFLOW_OFFSET  0x15
#define MAILBOX_DBG_MSG_FIFO1_UNDERFLOW_MASK  0x200000
#define MAILBOX_DBG_MSG_FIFO1_UNDERFLOW  0x200000
#define MAILBOX_DBG_MSG_FIFO1_OVERFLOW_OFFSET  0x14
#define MAILBOX_DBG_MSG_FIFO1_OVERFLOW_MASK  0x100000
#define MAILBOX_DBG_MSG_FIFO1_OVERFLOW  0x100000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_AEMPTY_OFFSET  0x13
#define MAILBOX_DBG_MSG_FIFO1_FIFO_AEMPTY_MASK  0x80000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_AEMPTY  0x80000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_EMPTY_OFFSET  0x12
#define MAILBOX_DBG_MSG_FIFO1_FIFO_EMPTY_MASK  0x40000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_EMPTY  0x40000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_AFULL_OFFSET  0x11
#define MAILBOX_DBG_MSG_FIFO1_FIFO_AFULL_MASK  0x20000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_AFULL  0x20000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_FULL_OFFSET  0x10
#define MAILBOX_DBG_MSG_FIFO1_FIFO_FULL_MASK  0x10000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_FULL  0x10000
#define MAILBOX_DBG_MSG_FIFO1_FIFO_EMPTY_ENTRY_OFFSET  0x8
#define MAILBOX_DBG_MSG_FIFO1_FIFO_EMPTY_ENTRY_MASK  0xff00
#define MAILBOX_DBG_MSG_FIFO1_FIFO_EMPTY_ENTRY  0xff00
#define MAILBOX_DBG_MSG_FIFO1_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_DBG_MSG_FIFO1_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_DBG_MSG_FIFO1_FIFO_FULL_ENTRY  0xff
#define MAILBOX_FIFO_XFER_FIFO1_FIFO_XFER_OFFSET  0x0
#define MAILBOX_FIFO_XFER_FIFO1_FIFO_XFER_MASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO1_FIFO_XFER  0xffffffff
#define MAILBOX_CFG_FIFO2_FIFO_FULL_ENTRY_THRESHOLD_OFFSET  0x8
#define MAILBOX_CFG_FIFO2_FIFO_FULL_ENTRY_THRESHOLD_MASK  0xf00
#define MAILBOX_CFG_FIFO2_FIFO_FULL_ENTRY_THRESHOLD  0xf00
#define MAILBOX_CFG_FIFO2_INT_EN_OFFSET  0x7
#define MAILBOX_CFG_FIFO2_INT_EN_MASK  0x80
#define MAILBOX_CFG_FIFO2_INT_EN  0x80
#define MAILBOX_CFG_FIFO2_FIFO_DBG_OFFSET  0x2
#define MAILBOX_CFG_FIFO2_FIFO_DBG_MASK  0x4
#define MAILBOX_CFG_FIFO2_FIFO_DBG  0x4
#define MAILBOX_CFG_FIFO2_OVERFLOW_CLR_OFFSET  0x1
#define MAILBOX_CFG_FIFO2_OVERFLOW_CLR_MASK  0x2
#define MAILBOX_CFG_FIFO2_OVERFLOW_CLR  0x2
#define MAILBOX_CFG_FIFO2_FIFO_ENABLE_OFFSET  0x0
#define MAILBOX_CFG_FIFO2_FIFO_ENABLE_MASK  0x1
#define MAILBOX_CFG_FIFO2_FIFO_ENABLE  0x1
#define MAILBOX_STATUS_FIFO2_INT_STATUS_OFFSET  0x10
#define MAILBOX_STATUS_FIFO2_INT_STATUS_MASK  0x10000
#define MAILBOX_STATUS_FIFO2_INT_STATUS  0x10000
#define MAILBOX_STATUS_FIFO2_OVERFLOW_OFFSET  0xc
#define MAILBOX_STATUS_FIFO2_OVERFLOW_MASK  0x1000
#define MAILBOX_STATUS_FIFO2_OVERFLOW  0x1000
#define MAILBOX_STATUS_FIFO2_MASTER_ID_OFFSET  0x8
#define MAILBOX_STATUS_FIFO2_MASTER_ID_MASK  0xf00
#define MAILBOX_STATUS_FIFO2_MASTER_ID  0xf00
#define MAILBOX_STATUS_FIFO2_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_STATUS_FIFO2_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_STATUS_FIFO2_FIFO_FULL_ENTRY  0xff
#define MAILBOX_DBG_MSG_FIFO2_UNDERFLOW_OFFSET  0x15
#define MAILBOX_DBG_MSG_FIFO2_UNDERFLOW_MASK  0x200000
#define MAILBOX_DBG_MSG_FIFO2_UNDERFLOW  0x200000
#define MAILBOX_DBG_MSG_FIFO2_OVERFLOW_OFFSET  0x14
#define MAILBOX_DBG_MSG_FIFO2_OVERFLOW_MASK  0x100000
#define MAILBOX_DBG_MSG_FIFO2_OVERFLOW  0x100000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_AEMPTY_OFFSET  0x13
#define MAILBOX_DBG_MSG_FIFO2_FIFO_AEMPTY_MASK  0x80000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_AEMPTY  0x80000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_EMPTY_OFFSET  0x12
#define MAILBOX_DBG_MSG_FIFO2_FIFO_EMPTY_MASK  0x40000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_EMPTY  0x40000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_AFULL_OFFSET  0x11
#define MAILBOX_DBG_MSG_FIFO2_FIFO_AFULL_MASK  0x20000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_AFULL  0x20000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_FULL_OFFSET  0x10
#define MAILBOX_DBG_MSG_FIFO2_FIFO_FULL_MASK  0x10000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_FULL  0x10000
#define MAILBOX_DBG_MSG_FIFO2_FIFO_EMPTY_ENTRY_OFFSET  0x8
#define MAILBOX_DBG_MSG_FIFO2_FIFO_EMPTY_ENTRY_MASK  0xff00
#define MAILBOX_DBG_MSG_FIFO2_FIFO_EMPTY_ENTRY  0xff00
#define MAILBOX_DBG_MSG_FIFO2_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_DBG_MSG_FIFO2_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_DBG_MSG_FIFO2_FIFO_FULL_ENTRY  0xff
#define MAILBOX_FIFO_XFER_FIFO2_FIFO_XFER_OFFSET  0x0
#define MAILBOX_FIFO_XFER_FIFO2_FIFO_XFER_MASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO2_FIFO_XFER  0xffffffff
#define MAILBOX_CFG_FIFO3_FIFO_FULL_ENTRY_THRESHOLD_OFFSET  0x8
#define MAILBOX_CFG_FIFO3_FIFO_FULL_ENTRY_THRESHOLD_MASK  0xf00
#define MAILBOX_CFG_FIFO3_FIFO_FULL_ENTRY_THRESHOLD  0xf00
#define MAILBOX_CFG_FIFO3_INT_EN_OFFSET  0x7
#define MAILBOX_CFG_FIFO3_INT_EN_MASK  0x80
#define MAILBOX_CFG_FIFO3_INT_EN  0x80
#define MAILBOX_CFG_FIFO3_FIFO_DBG_OFFSET  0x2
#define MAILBOX_CFG_FIFO3_FIFO_DBG_MASK  0x4
#define MAILBOX_CFG_FIFO3_FIFO_DBG  0x4
#define MAILBOX_CFG_FIFO3_OVERFLOW_CLR_OFFSET  0x1
#define MAILBOX_CFG_FIFO3_OVERFLOW_CLR_MASK  0x2
#define MAILBOX_CFG_FIFO3_OVERFLOW_CLR  0x2
#define MAILBOX_CFG_FIFO3_FIFO_ENABLE_OFFSET  0x0
#define MAILBOX_CFG_FIFO3_FIFO_ENABLE_MASK  0x1
#define MAILBOX_CFG_FIFO3_FIFO_ENABLE  0x1
#define MAILBOX_STATUS_FIFO3_INT_STATUS_OFFSET  0x10
#define MAILBOX_STATUS_FIFO3_INT_STATUS_MASK  0x10000
#define MAILBOX_STATUS_FIFO3_INT_STATUS  0x10000
#define MAILBOX_STATUS_FIFO3_OVERFLOW_OFFSET  0xc
#define MAILBOX_STATUS_FIFO3_OVERFLOW_MASK  0x1000
#define MAILBOX_STATUS_FIFO3_OVERFLOW  0x1000
#define MAILBOX_STATUS_FIFO3_MASTER_ID_OFFSET  0x8
#define MAILBOX_STATUS_FIFO3_MASTER_ID_MASK  0xf00
#define MAILBOX_STATUS_FIFO3_MASTER_ID  0xf00
#define MAILBOX_STATUS_FIFO3_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_STATUS_FIFO3_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_STATUS_FIFO3_FIFO_FULL_ENTRY  0xff
#define MAILBOX_DBG_MSG_FIFO3_UNDERFLOW_OFFSET  0x15
#define MAILBOX_DBG_MSG_FIFO3_UNDERFLOW_MASK  0x200000
#define MAILBOX_DBG_MSG_FIFO3_UNDERFLOW  0x200000
#define MAILBOX_DBG_MSG_FIFO3_OVERFLOW_OFFSET  0x14
#define MAILBOX_DBG_MSG_FIFO3_OVERFLOW_MASK  0x100000
#define MAILBOX_DBG_MSG_FIFO3_OVERFLOW  0x100000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_AEMPTY_OFFSET  0x13
#define MAILBOX_DBG_MSG_FIFO3_FIFO_AEMPTY_MASK  0x80000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_AEMPTY  0x80000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_EMPTY_OFFSET  0x12
#define MAILBOX_DBG_MSG_FIFO3_FIFO_EMPTY_MASK  0x40000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_EMPTY  0x40000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_AFULL_OFFSET  0x11
#define MAILBOX_DBG_MSG_FIFO3_FIFO_AFULL_MASK  0x20000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_AFULL  0x20000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_FULL_OFFSET  0x10
#define MAILBOX_DBG_MSG_FIFO3_FIFO_FULL_MASK  0x10000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_FULL  0x10000
#define MAILBOX_DBG_MSG_FIFO3_FIFO_EMPTY_ENTRY_OFFSET  0x8
#define MAILBOX_DBG_MSG_FIFO3_FIFO_EMPTY_ENTRY_MASK  0xff00
#define MAILBOX_DBG_MSG_FIFO3_FIFO_EMPTY_ENTRY  0xff00
#define MAILBOX_DBG_MSG_FIFO3_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_DBG_MSG_FIFO3_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_DBG_MSG_FIFO3_FIFO_FULL_ENTRY  0xff
#define MAILBOX_FIFO_XFER_FIFO3_FIFO_XFER_OFFSET  0x0
#define MAILBOX_FIFO_XFER_FIFO3_FIFO_XFER_MASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO3_FIFO_XFER  0xffffffff
#define MAILBOX_CFG_FIFO4_FIFO_FULL_ENTRY_THRESHOLD_OFFSET  0x8
#define MAILBOX_CFG_FIFO4_FIFO_FULL_ENTRY_THRESHOLD_MASK  0xf00
#define MAILBOX_CFG_FIFO4_FIFO_FULL_ENTRY_THRESHOLD  0xf00
#define MAILBOX_CFG_FIFO4_INT_EN_OFFSET  0x7
#define MAILBOX_CFG_FIFO4_INT_EN_MASK  0x80
#define MAILBOX_CFG_FIFO4_INT_EN  0x80
#define MAILBOX_CFG_FIFO4_FIFO_DBG_OFFSET  0x2
#define MAILBOX_CFG_FIFO4_FIFO_DBG_MASK  0x4
#define MAILBOX_CFG_FIFO4_FIFO_DBG  0x4
#define MAILBOX_CFG_FIFO4_OVERFLOW_CLR_OFFSET  0x1
#define MAILBOX_CFG_FIFO4_OVERFLOW_CLR_MASK  0x2
#define MAILBOX_CFG_FIFO4_OVERFLOW_CLR  0x2
#define MAILBOX_CFG_FIFO4_FIFO_ENABLE_OFFSET  0x0
#define MAILBOX_CFG_FIFO4_FIFO_ENABLE_MASK  0x1
#define MAILBOX_CFG_FIFO4_FIFO_ENABLE  0x1
#define MAILBOX_STATUS_FIFO4_INT_STATUS_OFFSET  0x10
#define MAILBOX_STATUS_FIFO4_INT_STATUS_MASK  0x10000
#define MAILBOX_STATUS_FIFO4_INT_STATUS  0x10000
#define MAILBOX_STATUS_FIFO4_OVERFLOW_OFFSET  0xc
#define MAILBOX_STATUS_FIFO4_OVERFLOW_MASK  0x1000
#define MAILBOX_STATUS_FIFO4_OVERFLOW  0x1000
#define MAILBOX_STATUS_FIFO4_MASTER_ID_OFFSET  0x8
#define MAILBOX_STATUS_FIFO4_MASTER_ID_MASK  0xf00
#define MAILBOX_STATUS_FIFO4_MASTER_ID  0xf00
#define MAILBOX_STATUS_FIFO4_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_STATUS_FIFO4_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_STATUS_FIFO4_FIFO_FULL_ENTRY  0xff
#define MAILBOX_DBG_MSG_FIFO4_UNDERFLOW_OFFSET  0x15
#define MAILBOX_DBG_MSG_FIFO4_UNDERFLOW_MASK  0x200000
#define MAILBOX_DBG_MSG_FIFO4_UNDERFLOW  0x200000
#define MAILBOX_DBG_MSG_FIFO4_OVERFLOW_OFFSET  0x14
#define MAILBOX_DBG_MSG_FIFO4_OVERFLOW_MASK  0x100000
#define MAILBOX_DBG_MSG_FIFO4_OVERFLOW  0x100000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_AEMPTY_OFFSET  0x13
#define MAILBOX_DBG_MSG_FIFO4_FIFO_AEMPTY_MASK  0x80000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_AEMPTY  0x80000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_EMPTY_OFFSET  0x12
#define MAILBOX_DBG_MSG_FIFO4_FIFO_EMPTY_MASK  0x40000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_EMPTY  0x40000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_AFULL_OFFSET  0x11
#define MAILBOX_DBG_MSG_FIFO4_FIFO_AFULL_MASK  0x20000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_AFULL  0x20000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_FULL_OFFSET  0x10
#define MAILBOX_DBG_MSG_FIFO4_FIFO_FULL_MASK  0x10000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_FULL  0x10000
#define MAILBOX_DBG_MSG_FIFO4_FIFO_EMPTY_ENTRY_OFFSET  0x8
#define MAILBOX_DBG_MSG_FIFO4_FIFO_EMPTY_ENTRY_MASK  0xff00
#define MAILBOX_DBG_MSG_FIFO4_FIFO_EMPTY_ENTRY  0xff00
#define MAILBOX_DBG_MSG_FIFO4_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_DBG_MSG_FIFO4_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_DBG_MSG_FIFO4_FIFO_FULL_ENTRY  0xff
#define MAILBOX_FIFO_XFER_FIFO4_FIFO_XFER_OFFSET  0x0
#define MAILBOX_FIFO_XFER_FIFO4_FIFO_XFER_MASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO4_FIFO_XFER  0xffffffff
#define MAILBOX_CFG_FIFO5_FIFO_FULL_ENTRY_THRESHOLD_OFFSET  0x8
#define MAILBOX_CFG_FIFO5_FIFO_FULL_ENTRY_THRESHOLD_MASK  0xf00
#define MAILBOX_CFG_FIFO5_FIFO_FULL_ENTRY_THRESHOLD  0xf00
#define MAILBOX_CFG_FIFO5_INT_EN_OFFSET  0x7
#define MAILBOX_CFG_FIFO5_INT_EN_MASK  0x80
#define MAILBOX_CFG_FIFO5_INT_EN  0x80
#define MAILBOX_CFG_FIFO5_FIFO_DBG_OFFSET  0x2
#define MAILBOX_CFG_FIFO5_FIFO_DBG_MASK  0x4
#define MAILBOX_CFG_FIFO5_FIFO_DBG  0x4
#define MAILBOX_CFG_FIFO5_OVERFLOW_CLR_OFFSET  0x1
#define MAILBOX_CFG_FIFO5_OVERFLOW_CLR_MASK  0x2
#define MAILBOX_CFG_FIFO5_OVERFLOW_CLR  0x2
#define MAILBOX_CFG_FIFO5_FIFO_ENABLE_OFFSET  0x0
#define MAILBOX_CFG_FIFO5_FIFO_ENABLE_MASK  0x1
#define MAILBOX_CFG_FIFO5_FIFO_ENABLE  0x1
#define MAILBOX_STATUS_FIFO5_INT_STATUS_OFFSET  0x10
#define MAILBOX_STATUS_FIFO5_INT_STATUS_MASK  0x10000
#define MAILBOX_STATUS_FIFO5_INT_STATUS  0x10000
#define MAILBOX_STATUS_FIFO5_OVERFLOW_OFFSET  0xc
#define MAILBOX_STATUS_FIFO5_OVERFLOW_MASK  0x1000
#define MAILBOX_STATUS_FIFO5_OVERFLOW  0x1000
#define MAILBOX_STATUS_FIFO5_MASTER_ID_OFFSET  0x8
#define MAILBOX_STATUS_FIFO5_MASTER_ID_MASK  0xf00
#define MAILBOX_STATUS_FIFO5_MASTER_ID  0xf00
#define MAILBOX_STATUS_FIFO5_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_STATUS_FIFO5_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_STATUS_FIFO5_FIFO_FULL_ENTRY  0xff
#define MAILBOX_DBG_MSG_FIFO5_UNDERFLOW_OFFSET  0x15
#define MAILBOX_DBG_MSG_FIFO5_UNDERFLOW_MASK  0x200000
#define MAILBOX_DBG_MSG_FIFO5_UNDERFLOW  0x200000
#define MAILBOX_DBG_MSG_FIFO5_OVERFLOW_OFFSET  0x14
#define MAILBOX_DBG_MSG_FIFO5_OVERFLOW_MASK  0x100000
#define MAILBOX_DBG_MSG_FIFO5_OVERFLOW  0x100000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_AEMPTY_OFFSET  0x13
#define MAILBOX_DBG_MSG_FIFO5_FIFO_AEMPTY_MASK  0x80000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_AEMPTY  0x80000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_EMPTY_OFFSET  0x12
#define MAILBOX_DBG_MSG_FIFO5_FIFO_EMPTY_MASK  0x40000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_EMPTY  0x40000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_AFULL_OFFSET  0x11
#define MAILBOX_DBG_MSG_FIFO5_FIFO_AFULL_MASK  0x20000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_AFULL  0x20000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_FULL_OFFSET  0x10
#define MAILBOX_DBG_MSG_FIFO5_FIFO_FULL_MASK  0x10000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_FULL  0x10000
#define MAILBOX_DBG_MSG_FIFO5_FIFO_EMPTY_ENTRY_OFFSET  0x8
#define MAILBOX_DBG_MSG_FIFO5_FIFO_EMPTY_ENTRY_MASK  0xff00
#define MAILBOX_DBG_MSG_FIFO5_FIFO_EMPTY_ENTRY  0xff00
#define MAILBOX_DBG_MSG_FIFO5_FIFO_FULL_ENTRY_OFFSET  0x0
#define MAILBOX_DBG_MSG_FIFO5_FIFO_FULL_ENTRY_MASK  0xff
#define MAILBOX_DBG_MSG_FIFO5_FIFO_FULL_ENTRY  0xff
#define MAILBOX_FIFO_XFER_FIFO5_FIFO_XFER_OFFSET  0x0
#define MAILBOX_FIFO_XFER_FIFO5_FIFO_XFER_MASK  0xffffffff
#define MAILBOX_FIFO_XFER_FIFO5_FIFO_XFER  0xffffffff
#define FLASHMPC_CTRL_SEC_CFG_LOCK_OFFSET  0x1f
#define FLASHMPC_CTRL_SEC_CFG_LOCK_MASK  0x80000000
#define FLASHMPC_CTRL_SEC_CFG_LOCK  0x80000000
#define FLASHMPC_CTRL_BLK_IDX_AUTOINC_EN_OFFSET  0x8
#define FLASHMPC_CTRL_BLK_IDX_AUTOINC_EN_MASK  0x100
#define FLASHMPC_CTRL_BLK_IDX_AUTOINC_EN  0x100
#define FLASHMPC_CTRL_GATE_ACK_OFFSET  0x7
#define FLASHMPC_CTRL_GATE_ACK_MASK  0x80
#define FLASHMPC_CTRL_GATE_ACK  0x80
#define FLASHMPC_CTRL_GATE_REQ_OFFSET  0x6
#define FLASHMPC_CTRL_GATE_REQ_MASK  0x40
#define FLASHMPC_CTRL_GATE_REQ  0x40
#define FLASHMPC_CTRL_CFG_SEC_RESP_OFFSET  0x4
#define FLASHMPC_CTRL_CFG_SEC_RESP_MASK  0x10
#define FLASHMPC_CTRL_CFG_SEC_RESP  0x10
#define FLASHMPC_BLK_MAX_BLK_MAX_OFFSET  0x0
#define FLASHMPC_BLK_MAX_BLK_MAX_MASK  0xffffffff
#define FLASHMPC_BLK_MAX_BLK_MAX  0xffffffff
#define FLASHMPC_BLK_CFG_LUT_INIT_DONE_OFFSET  0x1f
#define FLASHMPC_BLK_CFG_LUT_INIT_DONE_MASK  0x80000000
#define FLASHMPC_BLK_CFG_LUT_INIT_DONE  0x80000000
#define FLASHMPC_BLK_CFG_BLK_SIZE_OFFSET  0x0
#define FLASHMPC_BLK_CFG_BLK_SIZE_MASK  0xf
#define FLASHMPC_BLK_CFG_BLK_SIZE  0xf
#define FLASHMPC_BLK_IDX_BLK_IDX_OFFSET  0x0
#define FLASHMPC_BLK_IDX_BLK_IDX_MASK  0x1
#define FLASHMPC_BLK_IDX_BLK_IDX  0x1
#define FLASHMPC_BLK_LUT_BLK_LUT_OFFSET  0x0
#define FLASHMPC_BLK_LUT_BLK_LUT_MASK  0xffffffff
#define FLASHMPC_BLK_LUT_BLK_LUT  0xffffffff
#define FLASHMPC_INT_STAT_INT_STAT_OFFSET  0x0
#define FLASHMPC_INT_STAT_INT_STAT_MASK  0x1
#define FLASHMPC_INT_STAT_INT_STAT  0x1
#define FLASHMPC_INT_CLEAR_INT_CLEAR_OFFSET  0x0
#define FLASHMPC_INT_CLEAR_INT_CLEAR_MASK  0x1
#define FLASHMPC_INT_CLEAR_INT_CLEAR  0x1
#define FLASHMPC_INT_EN_INT_EN_OFFSET  0x0
#define FLASHMPC_INT_EN_INT_EN_MASK  0x1
#define FLASHMPC_INT_EN_INT_EN  0x1
#define FLASHMPC_INT_INFO1_INT_INFO1_OFFSET  0x0
#define FLASHMPC_INT_INFO1_INT_INFO1_MASK  0xffffffff
#define FLASHMPC_INT_INFO1_INT_INFO1  0xffffffff
#define FLASHMPC_INT_INFO2_SEC_INFO_CFG_NS_OFFSET  0x11
#define FLASHMPC_INT_INFO2_SEC_INFO_CFG_NS_MASK  0x20000
#define FLASHMPC_INT_INFO2_SEC_INFO_CFG_NS  0x20000
#define FLASHMPC_INT_INFO2_SEC_INFO_HNONSEC_OFFSET  0x10
#define FLASHMPC_INT_INFO2_SEC_INFO_HNONSEC_MASK  0x10000
#define FLASHMPC_INT_INFO2_SEC_INFO_HNONSEC  0x10000
#define FLASHMPC_INT_INFO2_SEC_INFO_HMASTER_OFFSET  0x0
#define FLASHMPC_INT_INFO2_SEC_INFO_HMASTER_MASK  0xffff
#define FLASHMPC_INT_INFO2_SEC_INFO_HMASTER  0xffff
#define FLASHMPC_INT_SET_INT_SET_OFFSET  0x0
#define FLASHMPC_INT_SET_INT_SET_MASK  0x1
#define FLASHMPC_INT_SET_INT_SET  0x1
#define FLASHMPC_PID4_BLOCK_COUNT_OFFSET  0x4
#define FLASHMPC_PID4_BLOCK_COUNT_MASK  0xf0
#define FLASHMPC_PID4_BLOCK_COUNT  0xf0
#define FLASHMPC_PID4_JEP106_C_CODE_OFFSET  0x0
#define FLASHMPC_PID4_JEP106_C_CODE_MASK  0xf
#define FLASHMPC_PID4_JEP106_C_CODE  0xf
#define FLASHMPC_PID5_PID5_OFFSET  0x0
#define FLASHMPC_PID5_PID5_MASK  0xffffffff
#define FLASHMPC_PID5_PID5  0xffffffff
#define FLASHMPC_PID6_PID6_OFFSET  0x0
#define FLASHMPC_PID6_PID6_MASK  0xffffffff
#define FLASHMPC_PID6_PID6  0xffffffff
#define FLASHMPC_PID7_PID7_OFFSET  0x0
#define FLASHMPC_PID7_PID7_MASK  0xffffffff
#define FLASHMPC_PID7_PID7  0xffffffff
#define FLASHMPC_PID0_PID0_OFFSET  0x0
#define FLASHMPC_PID0_PID0_MASK  0xffffffff
#define FLASHMPC_PID0_PID0  0xffffffff
#define FLASHMPC_PID1_JEP106_ID_3_0_OFFSET  0x4
#define FLASHMPC_PID1_JEP106_ID_3_0_MASK  0xf0
#define FLASHMPC_PID1_JEP106_ID_3_0  0xf0
#define FLASHMPC_PID1_PART_NUM_OFFSET  0x0
#define FLASHMPC_PID1_PART_NUM_MASK  0xf
#define FLASHMPC_PID1_PART_NUM  0xf
#define FLASHMPC_PID2_REVISION_OFFSET  0x4
#define FLASHMPC_PID2_REVISION_MASK  0xf0
#define FLASHMPC_PID2_REVISION  0xf0
#define FLASHMPC_PID2_JEDEC_USED_OFFSET  0x3
#define FLASHMPC_PID2_JEDEC_USED_MASK  0x8
#define FLASHMPC_PID2_JEDEC_USED  0x8
#define FLASHMPC_PID2_JEP106_ID_6_4_OFFSET  0x0
#define FLASHMPC_PID2_JEP106_ID_6_4_MASK  0x7
#define FLASHMPC_PID2_JEP106_ID_6_4  0x7
#define FLASHMPC_PID3_ECO_REVISION_OFFSET  0x4
#define FLASHMPC_PID3_ECO_REVISION_MASK  0xf0
#define FLASHMPC_PID3_ECO_REVISION  0xf0
#define FLASHMPC_PID3_CUSTOMER_NUM_OFFSET  0x0
#define FLASHMPC_PID3_CUSTOMER_NUM_MASK  0xf
#define FLASHMPC_PID3_CUSTOMER_NUM  0xf
#define FLASHMPC_CID0_CID0_OFFSET  0x0
#define FLASHMPC_CID0_CID0_MASK  0xffffffff
#define FLASHMPC_CID0_CID0  0xffffffff
#define FLASHMPC_CID1_CID1_OFFSET  0x0
#define FLASHMPC_CID1_CID1_MASK  0xffffffff
#define FLASHMPC_CID1_CID1  0xffffffff
#define FLASHMPC_CID2_CID2_OFFSET  0x0
#define FLASHMPC_CID2_CID2_MASK  0xffffffff
#define FLASHMPC_CID2_CID2  0xffffffff
#define FLASHMPC_CID3_CID3_OFFSET  0x0
#define FLASHMPC_CID3_CID3_MASK  0xffffffff
#define FLASHMPC_CID3_CID3  0xffffffff
#define ROMMPC_CTRL_SEC_CFG_LOCK_OFFSET  0x1f
#define ROMMPC_CTRL_SEC_CFG_LOCK_MASK  0x80000000
#define ROMMPC_CTRL_SEC_CFG_LOCK  0x80000000
#define ROMMPC_CTRL_BLK_IDX_AUTOINC_EN_OFFSET  0x8
#define ROMMPC_CTRL_BLK_IDX_AUTOINC_EN_MASK  0x100
#define ROMMPC_CTRL_BLK_IDX_AUTOINC_EN  0x100
#define ROMMPC_CTRL_GATE_ACK_OFFSET  0x7
#define ROMMPC_CTRL_GATE_ACK_MASK  0x80
#define ROMMPC_CTRL_GATE_ACK  0x80
#define ROMMPC_CTRL_GATE_REQ_OFFSET  0x6
#define ROMMPC_CTRL_GATE_REQ_MASK  0x40
#define ROMMPC_CTRL_GATE_REQ  0x40
#define ROMMPC_CTRL_CFG_SEC_RESP_OFFSET  0x4
#define ROMMPC_CTRL_CFG_SEC_RESP_MASK  0x10
#define ROMMPC_CTRL_CFG_SEC_RESP  0x10
#define ROMMPC_BLK_MAX_BLK_MAX_OFFSET  0x0
#define ROMMPC_BLK_MAX_BLK_MAX_MASK  0xffffffff
#define ROMMPC_BLK_MAX_BLK_MAX  0xffffffff
#define ROMMPC_BLK_CFG_LUT_INIT_DONE_OFFSET  0x1f
#define ROMMPC_BLK_CFG_LUT_INIT_DONE_MASK  0x80000000
#define ROMMPC_BLK_CFG_LUT_INIT_DONE  0x80000000
#define ROMMPC_BLK_CFG_BLK_SIZE_OFFSET  0x0
#define ROMMPC_BLK_CFG_BLK_SIZE_MASK  0xf
#define ROMMPC_BLK_CFG_BLK_SIZE  0xf
#define ROMMPC_BLK_IDX_BLK_IDX_OFFSET  0x0
#define ROMMPC_BLK_IDX_BLK_IDX_MASK  0x1
#define ROMMPC_BLK_IDX_BLK_IDX  0x1
#define ROMMPC_BLK_LUT_BLK_LUT_OFFSET  0x0
#define ROMMPC_BLK_LUT_BLK_LUT_MASK  0xffffffff
#define ROMMPC_BLK_LUT_BLK_LUT  0xffffffff
#define ROMMPC_INT_STAT_INT_STAT_OFFSET  0x0
#define ROMMPC_INT_STAT_INT_STAT_MASK  0x1
#define ROMMPC_INT_STAT_INT_STAT  0x1
#define ROMMPC_INT_CLEAR_INT_CLEAR_OFFSET  0x0
#define ROMMPC_INT_CLEAR_INT_CLEAR_MASK  0x1
#define ROMMPC_INT_CLEAR_INT_CLEAR  0x1
#define ROMMPC_INT_EN_INT_EN_OFFSET  0x0
#define ROMMPC_INT_EN_INT_EN_MASK  0x1
#define ROMMPC_INT_EN_INT_EN  0x1
#define ROMMPC_INT_INFO1_INT_INFO1_OFFSET  0x0
#define ROMMPC_INT_INFO1_INT_INFO1_MASK  0xffffffff
#define ROMMPC_INT_INFO1_INT_INFO1  0xffffffff
#define ROMMPC_INT_INFO2_SEC_INFO_CFG_NS_OFFSET  0x11
#define ROMMPC_INT_INFO2_SEC_INFO_CFG_NS_MASK  0x20000
#define ROMMPC_INT_INFO2_SEC_INFO_CFG_NS  0x20000
#define ROMMPC_INT_INFO2_SEC_INFO_HNONSEC_OFFSET  0x10
#define ROMMPC_INT_INFO2_SEC_INFO_HNONSEC_MASK  0x10000
#define ROMMPC_INT_INFO2_SEC_INFO_HNONSEC  0x10000
#define ROMMPC_INT_INFO2_SEC_INFO_HMASTER_OFFSET  0x0
#define ROMMPC_INT_INFO2_SEC_INFO_HMASTER_MASK  0xffff
#define ROMMPC_INT_INFO2_SEC_INFO_HMASTER  0xffff
#define ROMMPC_INT_SET_INT_SET_OFFSET  0x0
#define ROMMPC_INT_SET_INT_SET_MASK  0x1
#define ROMMPC_INT_SET_INT_SET  0x1
#define ROMMPC_PID4_BLOCK_COUNT_OFFSET  0x4
#define ROMMPC_PID4_BLOCK_COUNT_MASK  0xf0
#define ROMMPC_PID4_BLOCK_COUNT  0xf0
#define ROMMPC_PID4_JEP106_C_CODE_OFFSET  0x0
#define ROMMPC_PID4_JEP106_C_CODE_MASK  0xf
#define ROMMPC_PID4_JEP106_C_CODE  0xf
#define ROMMPC_PID5_PID5_OFFSET  0x0
#define ROMMPC_PID5_PID5_MASK  0xffffffff
#define ROMMPC_PID5_PID5  0xffffffff
#define ROMMPC_PID6_PID6_OFFSET  0x0
#define ROMMPC_PID6_PID6_MASK  0xffffffff
#define ROMMPC_PID6_PID6  0xffffffff
#define ROMMPC_PID7_PID7_OFFSET  0x0
#define ROMMPC_PID7_PID7_MASK  0xffffffff
#define ROMMPC_PID7_PID7  0xffffffff
#define ROMMPC_PID0_PID0_OFFSET  0x0
#define ROMMPC_PID0_PID0_MASK  0xffffffff
#define ROMMPC_PID0_PID0  0xffffffff
#define ROMMPC_PID1_JEP106_ID_3_0_OFFSET  0x4
#define ROMMPC_PID1_JEP106_ID_3_0_MASK  0xf0
#define ROMMPC_PID1_JEP106_ID_3_0  0xf0
#define ROMMPC_PID1_PART_NUM_OFFSET  0x0
#define ROMMPC_PID1_PART_NUM_MASK  0xf
#define ROMMPC_PID1_PART_NUM  0xf
#define ROMMPC_PID2_REVISION_OFFSET  0x4
#define ROMMPC_PID2_REVISION_MASK  0xf0
#define ROMMPC_PID2_REVISION  0xf0
#define ROMMPC_PID2_JEDEC_USED_OFFSET  0x3
#define ROMMPC_PID2_JEDEC_USED_MASK  0x8
#define ROMMPC_PID2_JEDEC_USED  0x8
#define ROMMPC_PID2_JEP106_ID_6_4_OFFSET  0x0
#define ROMMPC_PID2_JEP106_ID_6_4_MASK  0x7
#define ROMMPC_PID2_JEP106_ID_6_4  0x7
#define ROMMPC_PID3_ECO_REVISION_OFFSET  0x4
#define ROMMPC_PID3_ECO_REVISION_MASK  0xf0
#define ROMMPC_PID3_ECO_REVISION  0xf0
#define ROMMPC_PID3_CUSTOMER_NUM_OFFSET  0x0
#define ROMMPC_PID3_CUSTOMER_NUM_MASK  0xf
#define ROMMPC_PID3_CUSTOMER_NUM  0xf
#define ROMMPC_CID0_CID0_OFFSET  0x0
#define ROMMPC_CID0_CID0_MASK  0xffffffff
#define ROMMPC_CID0_CID0  0xffffffff
#define ROMMPC_CID1_CID1_OFFSET  0x0
#define ROMMPC_CID1_CID1_MASK  0xffffffff
#define ROMMPC_CID1_CID1  0xffffffff
#define ROMMPC_CID2_CID2_OFFSET  0x0
#define ROMMPC_CID2_CID2_MASK  0xffffffff
#define ROMMPC_CID2_CID2  0xffffffff
#define ROMMPC_CID3_CID3_OFFSET  0x0
#define ROMMPC_CID3_CID3_MASK  0xffffffff
#define ROMMPC_CID3_CID3  0xffffffff
#define DSPMPC_CTRL_SEC_CFG_LOCK_OFFSET  0x1f
#define DSPMPC_CTRL_SEC_CFG_LOCK_MASK  0x80000000
#define DSPMPC_CTRL_SEC_CFG_LOCK  0x80000000
#define DSPMPC_CTRL_BLK_IDX_AUTOINC_EN_OFFSET  0x8
#define DSPMPC_CTRL_BLK_IDX_AUTOINC_EN_MASK  0x100
#define DSPMPC_CTRL_BLK_IDX_AUTOINC_EN  0x100
#define DSPMPC_CTRL_GATE_ACK_OFFSET  0x7
#define DSPMPC_CTRL_GATE_ACK_MASK  0x80
#define DSPMPC_CTRL_GATE_ACK  0x80
#define DSPMPC_CTRL_GATE_REQ_OFFSET  0x6
#define DSPMPC_CTRL_GATE_REQ_MASK  0x40
#define DSPMPC_CTRL_GATE_REQ  0x40
#define DSPMPC_CTRL_CFG_SEC_RESP_OFFSET  0x4
#define DSPMPC_CTRL_CFG_SEC_RESP_MASK  0x10
#define DSPMPC_CTRL_CFG_SEC_RESP  0x10
#define DSPMPC_BLK_MAX_BLK_MAX_OFFSET  0x0
#define DSPMPC_BLK_MAX_BLK_MAX_MASK  0xffffffff
#define DSPMPC_BLK_MAX_BLK_MAX  0xffffffff
#define DSPMPC_BLK_CFG_LUT_INIT_DONE_OFFSET  0x1f
#define DSPMPC_BLK_CFG_LUT_INIT_DONE_MASK  0x80000000
#define DSPMPC_BLK_CFG_LUT_INIT_DONE  0x80000000
#define DSPMPC_BLK_CFG_BLK_SIZE_OFFSET  0x0
#define DSPMPC_BLK_CFG_BLK_SIZE_MASK  0xf
#define DSPMPC_BLK_CFG_BLK_SIZE  0xf
#define DSPMPC_BLK_IDX_BLK_IDX_OFFSET  0x0
#define DSPMPC_BLK_IDX_BLK_IDX_MASK  0x7
#define DSPMPC_BLK_IDX_BLK_IDX  0x7
#define DSPMPC_BLK_LUT_BLK_LUT_OFFSET  0x0
#define DSPMPC_BLK_LUT_BLK_LUT_MASK  0xffffffff
#define DSPMPC_BLK_LUT_BLK_LUT  0xffffffff
#define DSPMPC_INT_STAT_INT_STAT_OFFSET  0x0
#define DSPMPC_INT_STAT_INT_STAT_MASK  0x1
#define DSPMPC_INT_STAT_INT_STAT  0x1
#define DSPMPC_INT_CLEAR_INT_CLEAR_OFFSET  0x0
#define DSPMPC_INT_CLEAR_INT_CLEAR_MASK  0x1
#define DSPMPC_INT_CLEAR_INT_CLEAR  0x1
#define DSPMPC_INT_EN_INT_EN_OFFSET  0x0
#define DSPMPC_INT_EN_INT_EN_MASK  0x1
#define DSPMPC_INT_EN_INT_EN  0x1
#define DSPMPC_INT_INFO1_INT_INFO1_OFFSET  0x0
#define DSPMPC_INT_INFO1_INT_INFO1_MASK  0xffffffff
#define DSPMPC_INT_INFO1_INT_INFO1  0xffffffff
#define DSPMPC_INT_INFO2_SEC_INFO_CFG_NS_OFFSET  0x11
#define DSPMPC_INT_INFO2_SEC_INFO_CFG_NS_MASK  0x20000
#define DSPMPC_INT_INFO2_SEC_INFO_CFG_NS  0x20000
#define DSPMPC_INT_INFO2_SEC_INFO_HNONSEC_OFFSET  0x10
#define DSPMPC_INT_INFO2_SEC_INFO_HNONSEC_MASK  0x10000
#define DSPMPC_INT_INFO2_SEC_INFO_HNONSEC  0x10000
#define DSPMPC_INT_INFO2_SEC_INFO_HMASTER_OFFSET  0x0
#define DSPMPC_INT_INFO2_SEC_INFO_HMASTER_MASK  0xffff
#define DSPMPC_INT_INFO2_SEC_INFO_HMASTER  0xffff
#define DSPMPC_INT_SET_INT_SET_OFFSET  0x0
#define DSPMPC_INT_SET_INT_SET_MASK  0x1
#define DSPMPC_INT_SET_INT_SET  0x1
#define DSPMPC_PID4_BLOCK_COUNT_OFFSET  0x4
#define DSPMPC_PID4_BLOCK_COUNT_MASK  0xf0
#define DSPMPC_PID4_BLOCK_COUNT  0xf0
#define DSPMPC_PID4_JEP106_C_CODE_OFFSET  0x0
#define DSPMPC_PID4_JEP106_C_CODE_MASK  0xf
#define DSPMPC_PID4_JEP106_C_CODE  0xf
#define DSPMPC_PID5_PID5_OFFSET  0x0
#define DSPMPC_PID5_PID5_MASK  0xffffffff
#define DSPMPC_PID5_PID5  0xffffffff
#define DSPMPC_PID6_PID6_OFFSET  0x0
#define DSPMPC_PID6_PID6_MASK  0xffffffff
#define DSPMPC_PID6_PID6  0xffffffff
#define DSPMPC_PID7_PID7_OFFSET  0x0
#define DSPMPC_PID7_PID7_MASK  0xffffffff
#define DSPMPC_PID7_PID7  0xffffffff
#define DSPMPC_PID0_PID0_OFFSET  0x0
#define DSPMPC_PID0_PID0_MASK  0xffffffff
#define DSPMPC_PID0_PID0  0xffffffff
#define DSPMPC_PID1_JEP106_ID_3_0_OFFSET  0x4
#define DSPMPC_PID1_JEP106_ID_3_0_MASK  0xf0
#define DSPMPC_PID1_JEP106_ID_3_0  0xf0
#define DSPMPC_PID1_PART_NUM_OFFSET  0x0
#define DSPMPC_PID1_PART_NUM_MASK  0xf
#define DSPMPC_PID1_PART_NUM  0xf
#define DSPMPC_PID2_REVISION_OFFSET  0x4
#define DSPMPC_PID2_REVISION_MASK  0xf0
#define DSPMPC_PID2_REVISION  0xf0
#define DSPMPC_PID2_JEDEC_USED_OFFSET  0x3
#define DSPMPC_PID2_JEDEC_USED_MASK  0x8
#define DSPMPC_PID2_JEDEC_USED  0x8
#define DSPMPC_PID2_JEP106_ID_6_4_OFFSET  0x0
#define DSPMPC_PID2_JEP106_ID_6_4_MASK  0x7
#define DSPMPC_PID2_JEP106_ID_6_4  0x7
#define DSPMPC_PID3_ECO_REVISION_OFFSET  0x4
#define DSPMPC_PID3_ECO_REVISION_MASK  0xf0
#define DSPMPC_PID3_ECO_REVISION  0xf0
#define DSPMPC_PID3_CUSTOMER_NUM_OFFSET  0x0
#define DSPMPC_PID3_CUSTOMER_NUM_MASK  0xf
#define DSPMPC_PID3_CUSTOMER_NUM  0xf
#define DSPMPC_CID0_CID0_OFFSET  0x0
#define DSPMPC_CID0_CID0_MASK  0xffffffff
#define DSPMPC_CID0_CID0  0xffffffff
#define DSPMPC_CID1_CID1_OFFSET  0x0
#define DSPMPC_CID1_CID1_MASK  0xffffffff
#define DSPMPC_CID1_CID1  0xffffffff
#define DSPMPC_CID2_CID2_OFFSET  0x0
#define DSPMPC_CID2_CID2_MASK  0xffffffff
#define DSPMPC_CID2_CID2  0xffffffff
#define DSPMPC_CID3_CID3_OFFSET  0x0
#define DSPMPC_CID3_CID3_MASK  0xffffffff
#define DSPMPC_CID3_CID3  0xffffffff
#define DSP_REGION0_DSP_REGION0_OFFSET  0x5
#define DSP_REGION0_DSP_REGION0_MASK  0xffffffe0
#define DSP_REGION0_DSP_REGION0  0xffffffe0
#define DSP_REGION1_DSP_REGION1_OFFSET  0x5
#define DSP_REGION1_DSP_REGION1_MASK  0xffffffe0
#define DSP_REGION1_DSP_REGION1  0xffffffe0
#define DSP_REGION2_DSP_REGION2_OFFSET  0x5
#define DSP_REGION2_DSP_REGION2_MASK  0xffffffe0
#define DSP_REGION2_DSP_REGION2  0xffffffe0
#define DSP_REGION3_DSP_REGION3_OFFSET  0x5
#define DSP_REGION3_DSP_REGION3_MASK  0xffffffe0
#define DSP_REGION3_DSP_REGION3  0xffffffe0
#define DSP_REGION4_DSP_REGION4_OFFSET  0x5
#define DSP_REGION4_DSP_REGION4_MASK  0xffffffe0
#define DSP_REGION4_DSP_REGION4  0xffffffe0
#define DSP_REGION5_DSP_REGION5_OFFSET  0x5
#define DSP_REGION5_DSP_REGION5_MASK  0xffffffe0
#define DSP_REGION5_DSP_REGION5  0xffffffe0
#define DSP_REGION6_DSP_REGION6_OFFSET  0x5
#define DSP_REGION6_DSP_REGION6_MASK  0xffffffe0
#define DSP_REGION6_DSP_REGION6  0xffffffe0
#define DSP_REGION7_DSP_REGION7_OFFSET  0x5
#define DSP_REGION7_DSP_REGION7_MASK  0xffffffe0
#define DSP_REGION7_DSP_REGION7  0xffffffe0
#define HIFI3M_REGION0_HIFI3M_REGION0_OFFSET  0x5
#define HIFI3M_REGION0_HIFI3M_REGION0_MASK  0xffffffe0
#define HIFI3M_REGION0_HIFI3M_REGION0  0xffffffe0
#define HIFI3M_REGION1_HIFI3M_REGION1_OFFSET  0x5
#define HIFI3M_REGION1_HIFI3M_REGION1_MASK  0xffffffe0
#define HIFI3M_REGION1_HIFI3M_REGION1  0xffffffe0
#define HIFI3M_REGION2_HIFI3M_REGION2_OFFSET  0x5
#define HIFI3M_REGION2_HIFI3M_REGION2_MASK  0xffffffe0
#define HIFI3M_REGION2_HIFI3M_REGION2  0xffffffe0
#define HIFI3M_REGION3_HIFI3M_REGION3_OFFSET  0x5
#define HIFI3M_REGION3_HIFI3M_REGION3_MASK  0xffffffe0
#define HIFI3M_REGION3_HIFI3M_REGION3  0xffffffe0
#define I2CS_REGION0_I2CS_REGION0_OFFSET  0x5
#define I2CS_REGION0_I2CS_REGION0_MASK  0xffffffe0
#define I2CS_REGION0_I2CS_REGION0  0xffffffe0
#define I2CS_REGION1_I2CS_REGION1_OFFSET  0x5
#define I2CS_REGION1_I2CS_REGION1_MASK  0xffffffe0
#define I2CS_REGION1_I2CS_REGION1  0xffffffe0
#define I2CS_REGION2_I2CS_REGION2_OFFSET  0x5
#define I2CS_REGION2_I2CS_REGION2_MASK  0xffffffe0
#define I2CS_REGION2_I2CS_REGION2  0xffffffe0
#define I2CS_REGION3_I2CS_REGION3_OFFSET  0x5
#define I2CS_REGION3_I2CS_REGION3_MASK  0xffffffe0
#define I2CS_REGION3_I2CS_REGION3  0xffffffe0
#define EARLINK_REGION0_EARLINK_REGION0_OFFSET  0x5
#define EARLINK_REGION0_EARLINK_REGION0_MASK  0xffffffe0
#define EARLINK_REGION0_EARLINK_REGION0  0xffffffe0
#define EARLINK_REGION1_EARLINK_REGION1_OFFSET  0x5
#define EARLINK_REGION1_EARLINK_REGION1_MASK  0xffffffe0
#define EARLINK_REGION1_EARLINK_REGION1  0xffffffe0
#define EARLINK_REGION2_EARLINK_REGION2_OFFSET  0x5
#define EARLINK_REGION2_EARLINK_REGION2_MASK  0xffffffe0
#define EARLINK_REGION2_EARLINK_REGION2  0xffffffe0
#define EARLINK_REGION3_EARLINK_REGION3_OFFSET  0x5
#define EARLINK_REGION3_EARLINK_REGION3_MASK  0xffffffe0
#define EARLINK_REGION3_EARLINK_REGION3  0xffffffe0
#define FDMA0_REGION0_FDMA0_REGION0_OFFSET  0x5
#define FDMA0_REGION0_FDMA0_REGION0_MASK  0xffffffe0
#define FDMA0_REGION0_FDMA0_REGION0  0xffffffe0
#define FDMA0_REGION1_FDMA0_REGION1_OFFSET  0x5
#define FDMA0_REGION1_FDMA0_REGION1_MASK  0xffffffe0
#define FDMA0_REGION1_FDMA0_REGION1  0xffffffe0
#define FDMA0_REGION2_FDMA0_REGION2_OFFSET  0x5
#define FDMA0_REGION2_FDMA0_REGION2_MASK  0xffffffe0
#define FDMA0_REGION2_FDMA0_REGION2  0xffffffe0
#define FDMA0_REGION3_FDMA0_REGION3_OFFSET  0x5
#define FDMA0_REGION3_FDMA0_REGION3_MASK  0xffffffe0
#define FDMA0_REGION3_FDMA0_REGION3  0xffffffe0
#define FDMA1_REGION0_FDMA1_REGION0_OFFSET  0x5
#define FDMA1_REGION0_FDMA1_REGION0_MASK  0xffffffe0
#define FDMA1_REGION0_FDMA1_REGION0  0xffffffe0
#define FDMA1_REGION1_FDMA1_REGION1_OFFSET  0x5
#define FDMA1_REGION1_FDMA1_REGION1_MASK  0xffffffe0
#define FDMA1_REGION1_FDMA1_REGION1  0xffffffe0
#define FDMA1_REGION2_FDMA1_REGION2_OFFSET  0x5
#define FDMA1_REGION2_FDMA1_REGION2_MASK  0xffffffe0
#define FDMA1_REGION2_FDMA1_REGION2  0xffffffe0
#define FDMA1_REGION3_FDMA1_REGION3_OFFSET  0x5
#define FDMA1_REGION3_FDMA1_REGION3_MASK  0xffffffe0
#define FDMA1_REGION3_FDMA1_REGION3  0xffffffe0
#define ADMA0_REGION0_ADMA0_REGION0_OFFSET  0x5
#define ADMA0_REGION0_ADMA0_REGION0_MASK  0xffffffe0
#define ADMA0_REGION0_ADMA0_REGION0  0xffffffe0
#define ADMA0_REGION1_ADMA0_REGION1_OFFSET  0x5
#define ADMA0_REGION1_ADMA0_REGION1_MASK  0xffffffe0
#define ADMA0_REGION1_ADMA0_REGION1  0xffffffe0
#define ADMA0_REGION2_ADMA0_REGION2_OFFSET  0x5
#define ADMA0_REGION2_ADMA0_REGION2_MASK  0xffffffe0
#define ADMA0_REGION2_ADMA0_REGION2  0xffffffe0
#define ADMA0_REGION3_ADMA0_REGION3_OFFSET  0x5
#define ADMA0_REGION3_ADMA0_REGION3_MASK  0xffffffe0
#define ADMA0_REGION3_ADMA0_REGION3  0xffffffe0
#define ADMA1_REGION0_ADMA1_REGION0_OFFSET  0x5
#define ADMA1_REGION0_ADMA1_REGION0_MASK  0xffffffe0
#define ADMA1_REGION0_ADMA1_REGION0  0xffffffe0
#define ADMA1_REGION1_ADMA1_REGION1_OFFSET  0x5
#define ADMA1_REGION1_ADMA1_REGION1_MASK  0xffffffe0
#define ADMA1_REGION1_ADMA1_REGION1  0xffffffe0
#define ADMA1_REGION2_ADMA1_REGION2_OFFSET  0x5
#define ADMA1_REGION2_ADMA1_REGION2_MASK  0xffffffe0
#define ADMA1_REGION2_ADMA1_REGION2  0xffffffe0
#define ADMA1_REGION3_ADMA1_REGION3_OFFSET  0x5
#define ADMA1_REGION3_ADMA1_REGION3_MASK  0xffffffe0
#define ADMA1_REGION3_ADMA1_REGION3  0xffffffe0
#define QSPI_REGION0_QSPI_REGION0_OFFSET  0x5
#define QSPI_REGION0_QSPI_REGION0_MASK  0xffffffe0
#define QSPI_REGION0_QSPI_REGION0  0xffffffe0
#define QSPI_REGION1_QSPI_REGION1_OFFSET  0x5
#define QSPI_REGION1_QSPI_REGION1_MASK  0xffffffe0
#define QSPI_REGION1_QSPI_REGION1  0xffffffe0
#define QSPI_REGION2_QSPI_REGION2_OFFSET  0x5
#define QSPI_REGION2_QSPI_REGION2_MASK  0xffffffe0
#define QSPI_REGION2_QSPI_REGION2  0xffffffe0
#define QSPI_REGION3_QSPI_REGION3_OFFSET  0x5
#define QSPI_REGION3_QSPI_REGION3_MASK  0xffffffe0
#define QSPI_REGION3_QSPI_REGION3  0xffffffe0
#define CFG_SEC_RESP_QSPI_CFG_SEC_RESP_OFFSET  0xb
#define CFG_SEC_RESP_QSPI_CFG_SEC_RESP_MASK  0x800
#define CFG_SEC_RESP_QSPI_CFG_SEC_RESP  0x800
#define CFG_SEC_RESP_I2CS_CFG_SEC_RESP_OFFSET  0xa
#define CFG_SEC_RESP_I2CS_CFG_SEC_RESP_MASK  0x400
#define CFG_SEC_RESP_I2CS_CFG_SEC_RESP  0x400
#define CFG_SEC_RESP_FDMA1_CFG_SEC_RESP_OFFSET  0x9
#define CFG_SEC_RESP_FDMA1_CFG_SEC_RESP_MASK  0x200
#define CFG_SEC_RESP_FDMA1_CFG_SEC_RESP  0x200
#define CFG_SEC_RESP_FDMA0_CFG_SEC_RESP_OFFSET  0x8
#define CFG_SEC_RESP_FDMA0_CFG_SEC_RESP_MASK  0x100
#define CFG_SEC_RESP_FDMA0_CFG_SEC_RESP  0x100
#define CFG_SEC_RESP_EARLINK_CFG_SEC_RESP_OFFSET  0x7
#define CFG_SEC_RESP_EARLINK_CFG_SEC_RESP_MASK  0x80
#define CFG_SEC_RESP_EARLINK_CFG_SEC_RESP  0x80
#define CFG_SEC_RESP_ADMA1_CFG_SEC_RESP_OFFSET  0x6
#define CFG_SEC_RESP_ADMA1_CFG_SEC_RESP_MASK  0x40
#define CFG_SEC_RESP_ADMA1_CFG_SEC_RESP  0x40
#define CFG_SEC_RESP_ADMA0_CFG_SEC_RESP_OFFSET  0x5
#define CFG_SEC_RESP_ADMA0_CFG_SEC_RESP_MASK  0x20
#define CFG_SEC_RESP_ADMA0_CFG_SEC_RESP  0x20
#define CFG_SEC_RESP_CAPEB_CFG_SEC_RESP_OFFSET  0x4
#define CFG_SEC_RESP_CAPEB_CFG_SEC_RESP_MASK  0x10
#define CFG_SEC_RESP_CAPEB_CFG_SEC_RESP  0x10
#define CFG_SEC_RESP_CAPEA_CFG_SEC_RESP_OFFSET  0x3
#define CFG_SEC_RESP_CAPEA_CFG_SEC_RESP_MASK  0x8
#define CFG_SEC_RESP_CAPEA_CFG_SEC_RESP  0x8
#define CFG_SEC_RESP_LLEB_CFG_SEC_RESP_OFFSET  0x2
#define CFG_SEC_RESP_LLEB_CFG_SEC_RESP_MASK  0x4
#define CFG_SEC_RESP_LLEB_CFG_SEC_RESP  0x4
#define CFG_SEC_RESP_LLEA_CFG_SEC_RESP_OFFSET  0x1
#define CFG_SEC_RESP_LLEA_CFG_SEC_RESP_MASK  0x2
#define CFG_SEC_RESP_LLEA_CFG_SEC_RESP  0x2
#define CFG_SEC_RESP_HIFI3_CFG_SEC_RESP_OFFSET  0x0
#define CFG_SEC_RESP_HIFI3_CFG_SEC_RESP_MASK  0x1
#define CFG_SEC_RESP_HIFI3_CFG_SEC_RESP  0x1
#define SEC_WRREG_CTRL0_SEC0_SCRATCH_OFFSET  0x2
#define SEC_WRREG_CTRL0_SEC0_SCRATCH_MASK  0xfffffffc
#define SEC_WRREG_CTRL0_SEC0_SCRATCH  0xfffffffc
#define SEC_WRREG_CTRL0_MPC_ROM_CFG_INIT_VALUE_OFFSET  0x1
#define SEC_WRREG_CTRL0_MPC_ROM_CFG_INIT_VALUE_MASK  0x2
#define SEC_WRREG_CTRL0_MPC_ROM_CFG_INIT_VALUE  0x2
#define SEC_WRREG_CTRL0_MPC_FLASH_CFG_INIT_VALUE_OFFSET  0x0
#define SEC_WRREG_CTRL0_MPC_FLASH_CFG_INIT_VALUE_MASK  0x1
#define SEC_WRREG_CTRL0_MPC_FLASH_CFG_INIT_VALUE  0x1
#define SEC_WRREG_CTRL1_SEC1_SCRATCH_OFFSET  0x0
#define SEC_WRREG_CTRL1_SEC1_SCRATCH_MASK  0xffffffff
#define SEC_WRREG_CTRL1_SEC1_SCRATCH  0xffffffff
#define SEC_WRREG_CTRL2_SEC2_SCRATCH_OFFSET  0x1
#define SEC_WRREG_CTRL2_SEC2_SCRATCH_MASK  0xfffffffe
#define SEC_WRREG_CTRL2_SEC2_SCRATCH  0xfffffffe
#define SEC_WRREG_CTRL2_MPC_DSPMEM_CFG_INIT_VALUE_OFFSET  0x0
#define SEC_WRREG_CTRL2_MPC_DSPMEM_CFG_INIT_VALUE_MASK  0x1
#define SEC_WRREG_CTRL2_MPC_DSPMEM_CFG_INIT_VALUE  0x1
#define SEC_WRREG_CTRL3_SEC3_SCRATCH_OFFSET  0x0
#define SEC_WRREG_CTRL3_SEC3_SCRATCH_MASK  0xffffffff
#define SEC_WRREG_CTRL3_SEC3_SCRATCH  0xffffffff
#define AHB_BUS_PROFILING_CTRL_AHB_IF_SEL_OFFSET  0x2
#define AHB_BUS_PROFILING_CTRL_AHB_IF_SEL_MASK  0x3c
#define AHB_BUS_PROFILING_CTRL_AHB_IF_SEL  0x3c
#define AHB_BUS_PROFILING_CTRL_MON_ST_OFFSET  0x1
#define AHB_BUS_PROFILING_CTRL_MON_ST_MASK  0x2
#define AHB_BUS_PROFILING_CTRL_MON_ST  0x2
#define AHB_BUS_PROFILING_CTRL_PRF_EN_OFFSET  0x0
#define AHB_BUS_PROFILING_CTRL_PRF_EN_MASK  0x1
#define AHB_BUS_PROFILING_CTRL_PRF_EN  0x1
#define AHB_BUS_TOTAL_CYC_CNT_TOTAL_CYC_CNT_OFFSET  0x0
#define AHB_BUS_TOTAL_CYC_CNT_TOTAL_CYC_CNT_MASK  0xffffffff
#define AHB_BUS_TOTAL_CYC_CNT_TOTAL_CYC_CNT  0xffffffff
#define AHB_BUS_RREQ_CNT_RREQ_CNT_OFFSET  0x0
#define AHB_BUS_RREQ_CNT_RREQ_CNT_MASK  0xffffffff
#define AHB_BUS_RREQ_CNT_RREQ_CNT  0xffffffff
#define AHB_BUS_WREQ_CNT_WREQ_CNT_OFFSET  0x0
#define AHB_BUS_WREQ_CNT_WREQ_CNT_MASK  0xffffffff
#define AHB_BUS_WREQ_CNT_WREQ_CNT  0xffffffff
#define AHB_BUS_RSTL_CYC_CNT_RSTL_CYC_CNT_OFFSET  0x0
#define AHB_BUS_RSTL_CYC_CNT_RSTL_CYC_CNT_MASK  0xffffffff
#define AHB_BUS_RSTL_CYC_CNT_RSTL_CYC_CNT  0xffffffff
#define AHB_BUS_WSTL_CYC_CNT_WSTL_CYC_CNT_OFFSET  0x0
#define AHB_BUS_WSTL_CYC_CNT_WSTL_CYC_CNT_MASK  0xffffffff
#define AHB_BUS_WSTL_CYC_CNT_WSTL_CYC_CNT  0xffffffff
#define AHB_BUS_RTR_CNT_RTR_CNT_OFFSET  0x0
#define AHB_BUS_RTR_CNT_RTR_CNT_MASK  0xffffffff
#define AHB_BUS_RTR_CNT_RTR_CNT  0xffffffff
#define AHB_BUS_WTR_CNT_WTR_CNT_OFFSET  0x0
#define AHB_BUS_WTR_CNT_WTR_CNT_MASK  0xffffffff
#define AHB_BUS_WTR_CNT_WTR_CNT  0xffffffff
#define AHB_BUS_RDAT_BYTES_CNT_RDAT_BYTES_CNT_OFFSET  0x0
#define AHB_BUS_RDAT_BYTES_CNT_RDAT_BYTES_CNT_MASK  0xffffffff
#define AHB_BUS_RDAT_BYTES_CNT_RDAT_BYTES_CNT  0xffffffff
#define AHB_BUS_WDAT_BYTES_CNT_WDAT_BYTES_CNT_OFFSET  0x0
#define AHB_BUS_WDAT_BYTES_CNT_WDAT_BYTES_CNT_MASK  0xffffffff
#define AHB_BUS_WDAT_BYTES_CNT_WDAT_BYTES_CNT  0xffffffff
#define AHB_BUS_BREQ_CYC_CNT_BREQ_CYC_CNT_OFFSET  0x0
#define AHB_BUS_BREQ_CYC_CNT_BREQ_CYC_CNT_MASK  0xffffffff
#define AHB_BUS_BREQ_CYC_CNT_BREQ_CYC_CNT  0xffffffff
#define AHB_BUS_BGRA_CYC_CNT_BGRA_CYC_CNT_OFFSET  0x0
#define AHB_BUS_BGRA_CYC_CNT_BGRA_CYC_CNT_MASK  0xffffffff
#define AHB_BUS_BGRA_CYC_CNT_BGRA_CYC_CNT  0xffffffff
#define SSE200_M0_PROFILING_CTRL_MON_ST_OFFSET  0x1
#define SSE200_M0_PROFILING_CTRL_MON_ST_MASK  0x2
#define SSE200_M0_PROFILING_CTRL_MON_ST  0x2
#define SSE200_M0_PROFILING_CTRL_PRF_EN_OFFSET  0x0
#define SSE200_M0_PROFILING_CTRL_PRF_EN_MASK  0x1
#define SSE200_M0_PROFILING_CTRL_PRF_EN  0x1
#define SSE200_M0_TOTAL_CYC_CNT_TOTAL_CYC_CNT_OFFSET  0x0
#define SSE200_M0_TOTAL_CYC_CNT_TOTAL_CYC_CNT_MASK  0xffffffff
#define SSE200_M0_TOTAL_CYC_CNT_TOTAL_CYC_CNT  0xffffffff
#define SSE200_M0_RREQ_CNT_RREQ_CNT_OFFSET  0x0
#define SSE200_M0_RREQ_CNT_RREQ_CNT_MASK  0xffffffff
#define SSE200_M0_RREQ_CNT_RREQ_CNT  0xffffffff
#define SSE200_M0_WREQ_CNT_WREQ_CNT_OFFSET  0x0
#define SSE200_M0_WREQ_CNT_WREQ_CNT_MASK  0xffffffff
#define SSE200_M0_WREQ_CNT_WREQ_CNT  0xffffffff
#define SSE200_M0_RSTL_CYC_CNT_RSTL_CYC_CNT_OFFSET  0x0
#define SSE200_M0_RSTL_CYC_CNT_RSTL_CYC_CNT_MASK  0xffffffff
#define SSE200_M0_RSTL_CYC_CNT_RSTL_CYC_CNT  0xffffffff
#define SSE200_M0_WSTL_CYC_CNT_WSTL_CYC_CNT_OFFSET  0x0
#define SSE200_M0_WSTL_CYC_CNT_WSTL_CYC_CNT_MASK  0xffffffff
#define SSE200_M0_WSTL_CYC_CNT_WSTL_CYC_CNT  0xffffffff
#define SSE200_M0_RTR_CNT_RTR_CNT_OFFSET  0x0
#define SSE200_M0_RTR_CNT_RTR_CNT_MASK  0xffffffff
#define SSE200_M0_RTR_CNT_RTR_CNT  0xffffffff
#define SSE200_M0_WTR_CNT_WTR_CNT_OFFSET  0x0
#define SSE200_M0_WTR_CNT_WTR_CNT_MASK  0xffffffff
#define SSE200_M0_WTR_CNT_WTR_CNT  0xffffffff
#define SSE200_M0_RDAT_BYTES_CNT_RDAT_BYTES_CNT_OFFSET  0x0
#define SSE200_M0_RDAT_BYTES_CNT_RDAT_BYTES_CNT_MASK  0xffffffff
#define SSE200_M0_RDAT_BYTES_CNT_RDAT_BYTES_CNT  0xffffffff
#define SSE200_M0_WDAT_BYTES_CNT_WDAT_BYTES_CNT_OFFSET  0x0
#define SSE200_M0_WDAT_BYTES_CNT_WDAT_BYTES_CNT_MASK  0xffffffff
#define SSE200_M0_WDAT_BYTES_CNT_WDAT_BYTES_CNT  0xffffffff
#define SSE200_S0_PROFILING_CTRL_MON_ST_OFFSET  0x1
#define SSE200_S0_PROFILING_CTRL_MON_ST_MASK  0x2
#define SSE200_S0_PROFILING_CTRL_MON_ST  0x2
#define SSE200_S0_PROFILING_CTRL_PRF_EN_OFFSET  0x0
#define SSE200_S0_PROFILING_CTRL_PRF_EN_MASK  0x1
#define SSE200_S0_PROFILING_CTRL_PRF_EN  0x1
#define SSE200_S0_TOTAL_CYC_CNT_TOTAL_CYC_CNT_OFFSET  0x0
#define SSE200_S0_TOTAL_CYC_CNT_TOTAL_CYC_CNT_MASK  0xffffffff
#define SSE200_S0_TOTAL_CYC_CNT_TOTAL_CYC_CNT  0xffffffff
#define SSE200_S0_RREQ_CNT_RREQ_CNT_OFFSET  0x0
#define SSE200_S0_RREQ_CNT_RREQ_CNT_MASK  0xffffffff
#define SSE200_S0_RREQ_CNT_RREQ_CNT  0xffffffff
#define SSE200_S0_WREQ_CNT_WREQ_CNT_OFFSET  0x0
#define SSE200_S0_WREQ_CNT_WREQ_CNT_MASK  0xffffffff
#define SSE200_S0_WREQ_CNT_WREQ_CNT  0xffffffff
#define SSE200_S0_RSTL_CYC_CNT_RSTL_CYC_CNT_OFFSET  0x0
#define SSE200_S0_RSTL_CYC_CNT_RSTL_CYC_CNT_MASK  0xffffffff
#define SSE200_S0_RSTL_CYC_CNT_RSTL_CYC_CNT  0xffffffff
#define SSE200_S0_WSTL_CYC_CNT_WSTL_CYC_CNT_OFFSET  0x0
#define SSE200_S0_WSTL_CYC_CNT_WSTL_CYC_CNT_MASK  0xffffffff
#define SSE200_S0_WSTL_CYC_CNT_WSTL_CYC_CNT  0xffffffff
#define SSE200_S0_RTR_CNT_RTR_CNT_OFFSET  0x0
#define SSE200_S0_RTR_CNT_RTR_CNT_MASK  0xffffffff
#define SSE200_S0_RTR_CNT_RTR_CNT  0xffffffff
#define SSE200_S0_WTR_CNT_WTR_CNT_OFFSET  0x0
#define SSE200_S0_WTR_CNT_WTR_CNT_MASK  0xffffffff
#define SSE200_S0_WTR_CNT_WTR_CNT  0xffffffff
#define SSE200_S0_RDAT_BYTES_CNT_RDAT_BYTES_CNT_OFFSET  0x0
#define SSE200_S0_RDAT_BYTES_CNT_RDAT_BYTES_CNT_MASK  0xffffffff
#define SSE200_S0_RDAT_BYTES_CNT_RDAT_BYTES_CNT  0xffffffff
#define SSE200_S0_WDAT_BYTES_CNT_WDAT_BYTES_CNT_OFFSET  0x0
#define SSE200_S0_WDAT_BYTES_CNT_WDAT_BYTES_CNT_MASK  0xffffffff
#define SSE200_S0_WDAT_BYTES_CNT_WDAT_BYTES_CNT  0xffffffff
#define ASIP_PROFILING_CTR_LLEB_SLP_MON_ST_OFFSET  0x17
#define ASIP_PROFILING_CTR_LLEB_SLP_MON_ST_MASK  0x800000
#define ASIP_PROFILING_CTR_LLEB_SLP_MON_ST  0x800000
#define ASIP_PROFILING_CTR_LLEA_SLP_MON_ST_OFFSET  0x16
#define ASIP_PROFILING_CTR_LLEA_SLP_MON_ST_MASK  0x400000
#define ASIP_PROFILING_CTR_LLEA_SLP_MON_ST  0x400000
#define ASIP_PROFILING_CTR_CAPEB_SLP_MON_ST_OFFSET  0x15
#define ASIP_PROFILING_CTR_CAPEB_SLP_MON_ST_MASK  0x200000
#define ASIP_PROFILING_CTR_CAPEB_SLP_MON_ST  0x200000
#define ASIP_PROFILING_CTR_CAPEA_SLP_MON_ST_OFFSET  0x14
#define ASIP_PROFILING_CTR_CAPEA_SLP_MON_ST_MASK  0x100000
#define ASIP_PROFILING_CTR_CAPEA_SLP_MON_ST  0x100000
#define ASIP_PROFILING_CTR_SLV_BANK_SEL_OFFSET  0x10
#define ASIP_PROFILING_CTR_SLV_BANK_SEL_MASK  0x70000
#define ASIP_PROFILING_CTR_SLV_BANK_SEL  0x70000
#define ASIP_PROFILING_CTR_SLV_SEL_OFFSET  0xc
#define ASIP_PROFILING_CTR_SLV_SEL_MASK  0x7000
#define ASIP_PROFILING_CTR_SLV_SEL  0x7000
#define ASIP_PROFILING_CTR_ASIP_BUS_SEL_OFFSET  0x8
#define ASIP_PROFILING_CTR_ASIP_BUS_SEL_MASK  0x700
#define ASIP_PROFILING_CTR_ASIP_BUS_SEL  0x700
#define ASIP_PROFILING_CTR_MST_SEL_OFFSET  0x4
#define ASIP_PROFILING_CTR_MST_SEL_MASK  0x30
#define ASIP_PROFILING_CTR_MST_SEL  0x30
#define ASIP_PROFILING_CTR_SLV_MON_ST_OFFSET  0x2
#define ASIP_PROFILING_CTR_SLV_MON_ST_MASK  0x4
#define ASIP_PROFILING_CTR_SLV_MON_ST  0x4
#define ASIP_PROFILING_CTR_MST_MON_ST_OFFSET  0x1
#define ASIP_PROFILING_CTR_MST_MON_ST_MASK  0x2
#define ASIP_PROFILING_CTR_MST_MON_ST  0x2
#define ASIP_PROFILING_CTR_PRF_EN_OFFSET  0x0
#define ASIP_PROFILING_CTR_PRF_EN_MASK  0x1
#define ASIP_PROFILING_CTR_PRF_EN  0x1
#define ASIP_MST_TOTAL_CYC_CNT_TOTAL_CYC_CNT_OFFSET  0x0
#define ASIP_MST_TOTAL_CYC_CNT_TOTAL_CYC_CNT_MASK  0xffffffff
#define ASIP_MST_TOTAL_CYC_CNT_TOTAL_CYC_CNT  0xffffffff
#define ASIP_MST_WREQ_CNT_WREQ_CNT_OFFSET  0x0
#define ASIP_MST_WREQ_CNT_WREQ_CNT_MASK  0xffffffff
#define ASIP_MST_WREQ_CNT_WREQ_CNT  0xffffffff
#define ASIP_MST_RREQ_CNT_RREQ_CNT_OFFSET  0x0
#define ASIP_MST_RREQ_CNT_RREQ_CNT_MASK  0xffffffff
#define ASIP_MST_RREQ_CNT_RREQ_CNT  0xffffffff
#define ASIP_MST_WSTL_CYC_CNT_WSTL_CYC_CNT_OFFSET  0x0
#define ASIP_MST_WSTL_CYC_CNT_WSTL_CYC_CNT_MASK  0xffffffff
#define ASIP_MST_WSTL_CYC_CNT_WSTL_CYC_CNT  0xffffffff
#define ASIP_MST_RSTL_CYC_CNT_RSTL_CYC_CNT_OFFSET  0x0
#define ASIP_MST_RSTL_CYC_CNT_RSTL_CYC_CNT_MASK  0xffffffff
#define ASIP_MST_RSTL_CYC_CNT_RSTL_CYC_CNT  0xffffffff
#define CAPE_A_SLP_CNT_SLP_CNT_OFFSET  0x0
#define CAPE_A_SLP_CNT_SLP_CNT_MASK  0xffffffff
#define CAPE_A_SLP_CNT_SLP_CNT  0xffffffff
#define CAPE_B_SLP_CNT_SLP_CNT_OFFSET  0x0
#define CAPE_B_SLP_CNT_SLP_CNT_MASK  0xffffffff
#define CAPE_B_SLP_CNT_SLP_CNT  0xffffffff
#define LLE_A_SLP_CNT_SLP_CNT_OFFSET  0x0
#define LLE_A_SLP_CNT_SLP_CNT_MASK  0xffffffff
#define LLE_A_SLP_CNT_SLP_CNT  0xffffffff
#define LLE_B_SLP_CNT_SLP_CNT_OFFSET  0x0
#define LLE_B_SLP_CNT_SLP_CNT_MASK  0xffffffff
#define LLE_B_SLP_CNT_SLP_CNT  0xffffffff
#define ASIP_SLV_TOTAL_CYC_CNT_TOTAL_CYC_CNT_OFFSET  0x0
#define ASIP_SLV_TOTAL_CYC_CNT_TOTAL_CYC_CNT_MASK  0xffffffff
#define ASIP_SLV_TOTAL_CYC_CNT_TOTAL_CYC_CNT  0xffffffff
#define ASIP_SLV_WREQ_CNT_WREQ_CNT_OFFSET  0x0
#define ASIP_SLV_WREQ_CNT_WREQ_CNT_MASK  0xffffffff
#define ASIP_SLV_WREQ_CNT_WREQ_CNT  0xffffffff
#define ASIP_SLV_RREQ_CNT_RREQ_CNT_OFFSET  0x0
#define ASIP_SLV_RREQ_CNT_RREQ_CNT_MASK  0xffffffff
#define ASIP_SLV_RREQ_CNT_RREQ_CNT  0xffffffff
#define ASIP_SLV_WBLK_CYC_CNT_WBLK_CYC_CNT_OFFSET  0x0
#define ASIP_SLV_WBLK_CYC_CNT_WBLK_CYC_CNT_MASK  0xffffffff
#define ASIP_SLV_WBLK_CYC_CNT_WBLK_CYC_CNT  0xffffffff
#define ASIP_SLV_RBLK_CYC_CNT_RBLK_CYC_CNT_OFFSET  0x0
#define ASIP_SLV_RBLK_CYC_CNT_RBLK_CYC_CNT_MASK  0xffffffff
#define ASIP_SLV_RBLK_CYC_CNT_RBLK_CYC_CNT  0xffffffff
#define SHARE_MEM_PROFILER_CTR_BANK_SEL_OFFSET  0x4
#define SHARE_MEM_PROFILER_CTR_BANK_SEL_MASK  0xf0
#define SHARE_MEM_PROFILER_CTR_BANK_SEL  0xf0
#define SHARE_MEM_PROFILER_CTR_MON_ST_OFFSET  0x1
#define SHARE_MEM_PROFILER_CTR_MON_ST_MASK  0x2
#define SHARE_MEM_PROFILER_CTR_MON_ST  0x2
#define SHARE_MEM_PROFILER_CTR_PRF_EN_OFFSET  0x0
#define SHARE_MEM_PROFILER_CTR_PRF_EN_MASK  0x1
#define SHARE_MEM_PROFILER_CTR_PRF_EN  0x1
#define SHARE_MEM_TOTAL_CYC_CNT_TOTAL_CYC_CNT_OFFSET  0x0
#define SHARE_MEM_TOTAL_CYC_CNT_TOTAL_CYC_CNT_MASK  0xffffffff
#define SHARE_MEM_TOTAL_CYC_CNT_TOTAL_CYC_CNT  0xffffffff
#define SHARE_MEM_RREQ_CNT_RREQ_CNT_OFFSET  0x0
#define SHARE_MEM_RREQ_CNT_RREQ_CNT_MASK  0xffffffff
#define SHARE_MEM_RREQ_CNT_RREQ_CNT  0xffffffff
#define SHARE_MEM_WREQ_CNT_WREQ_CNT_OFFSET  0x0
#define SHARE_MEM_WREQ_CNT_WREQ_CNT_MASK  0xffffffff
#define SHARE_MEM_WREQ_CNT_WREQ_CNT  0xffffffff
#define SHARE_MEM_RBLK_CYC_CNT_RBLK_CYC_CNT_OFFSET  0x0
#define SHARE_MEM_RBLK_CYC_CNT_RBLK_CYC_CNT_MASK  0xffffffff
#define SHARE_MEM_RBLK_CYC_CNT_RBLK_CYC_CNT  0xffffffff
#define SHARE_MEM_WBLK_CYC_CNT_WBLK_CYC_CNT_OFFSET  0x0
#define SHARE_MEM_WBLK_CYC_CNT_WBLK_CYC_CNT_MASK  0xffffffff
#define SHARE_MEM_WBLK_CYC_CNT_WBLK_CYC_CNT  0xffffffff
#define SM_ARB_CTRL_SRAM15_ARB_OFFSET  0x11
#define SM_ARB_CTRL_SRAM15_ARB_MASK  0x20000
#define SM_ARB_CTRL_SRAM15_ARB  0x20000
#define SM_ARB_CTRL_SRAM14_ARB_OFFSET  0x10
#define SM_ARB_CTRL_SRAM14_ARB_MASK  0x10000
#define SM_ARB_CTRL_SRAM14_ARB  0x10000
#define SM_ARB_CTRL_SRAM13_ARB_OFFSET  0xf
#define SM_ARB_CTRL_SRAM13_ARB_MASK  0x8000
#define SM_ARB_CTRL_SRAM13_ARB  0x8000
#define SM_ARB_CTRL_SRAM12_ARB_OFFSET  0xe
#define SM_ARB_CTRL_SRAM12_ARB_MASK  0x4000
#define SM_ARB_CTRL_SRAM12_ARB  0x4000
#define SM_ARB_CTRL_SRAM11_ARB_OFFSET  0xd
#define SM_ARB_CTRL_SRAM11_ARB_MASK  0x2000
#define SM_ARB_CTRL_SRAM11_ARB  0x2000
#define SM_ARB_CTRL_SRAM10_ARB_OFFSET  0xc
#define SM_ARB_CTRL_SRAM10_ARB_MASK  0x1000
#define SM_ARB_CTRL_SRAM10_ARB  0x1000
#define SM_ARB_CTRL_SRAM9_ARB_OFFSET  0xb
#define SM_ARB_CTRL_SRAM9_ARB_MASK  0x800
#define SM_ARB_CTRL_SRAM9_ARB  0x800
#define SM_ARB_CTRL_SRAM8_ARB_OFFSET  0xa
#define SM_ARB_CTRL_SRAM8_ARB_MASK  0x400
#define SM_ARB_CTRL_SRAM8_ARB  0x400
#define SM_ARB_CTRL_SRAM7_ARB_OFFSET  0x9
#define SM_ARB_CTRL_SRAM7_ARB_MASK  0x200
#define SM_ARB_CTRL_SRAM7_ARB  0x200
#define SM_ARB_CTRL_SRAM6_ARB_OFFSET  0x8
#define SM_ARB_CTRL_SRAM6_ARB_MASK  0x100
#define SM_ARB_CTRL_SRAM6_ARB  0x100
#define SM_ARB_CTRL_SRAM5_ARB_OFFSET  0x7
#define SM_ARB_CTRL_SRAM5_ARB_MASK  0x80
#define SM_ARB_CTRL_SRAM5_ARB  0x80
#define SM_ARB_CTRL_SRAM4_ARB_OFFSET  0x6
#define SM_ARB_CTRL_SRAM4_ARB_MASK  0x40
#define SM_ARB_CTRL_SRAM4_ARB  0x40
#define SM_ARB_CTRL_SRAM3_ARB_OFFSET  0x5
#define SM_ARB_CTRL_SRAM3_ARB_MASK  0x20
#define SM_ARB_CTRL_SRAM3_ARB  0x20
#define SM_ARB_CTRL_SRAM2_ARB_OFFSET  0x4
#define SM_ARB_CTRL_SRAM2_ARB_MASK  0x10
#define SM_ARB_CTRL_SRAM2_ARB  0x10
#define SM_ARB_CTRL_SRAM1_ARB_OFFSET  0x3
#define SM_ARB_CTRL_SRAM1_ARB_MASK  0x8
#define SM_ARB_CTRL_SRAM1_ARB  0x8
#define SM_ARB_CTRL_SRAM0_ARB_OFFSET  0x2
#define SM_ARB_CTRL_SRAM0_ARB_MASK  0x4
#define SM_ARB_CTRL_SRAM0_ARB  0x4
#define SM_ARB_CTRL_BBWR_ARB_OFFSET  0x1
#define SM_ARB_CTRL_BBWR_ARB_MASK  0x2
#define SM_ARB_CTRL_BBWR_ARB  0x2
#define SM_ARB_CTRL_BBRD_ARB_OFFSET  0x0
#define SM_ARB_CTRL_BBRD_ARB_MASK  0x1
#define SM_ARB_CTRL_BBRD_ARB  0x1
#define SM_BBRD_ARB_PRI_PRI7_SEL_OFFSET  0x1c
#define SM_BBRD_ARB_PRI_PRI7_SEL_MASK  0xf0000000
#define SM_BBRD_ARB_PRI_PRI7_SEL  0xf0000000
#define SM_BBRD_ARB_PRI_PRI6_SEL_OFFSET  0x18
#define SM_BBRD_ARB_PRI_PRI6_SEL_MASK  0xf000000
#define SM_BBRD_ARB_PRI_PRI6_SEL  0xf000000
#define SM_BBRD_ARB_PRI_PRI5_SEL_OFFSET  0x14
#define SM_BBRD_ARB_PRI_PRI5_SEL_MASK  0xf00000
#define SM_BBRD_ARB_PRI_PRI5_SEL  0xf00000
#define SM_BBRD_ARB_PRI_PRI4_SEL_OFFSET  0x10
#define SM_BBRD_ARB_PRI_PRI4_SEL_MASK  0xf0000
#define SM_BBRD_ARB_PRI_PRI4_SEL  0xf0000
#define SM_BBRD_ARB_PRI_PRI3_SEL_OFFSET  0xc
#define SM_BBRD_ARB_PRI_PRI3_SEL_MASK  0xf000
#define SM_BBRD_ARB_PRI_PRI3_SEL  0xf000
#define SM_BBRD_ARB_PRI_PRI2_SEL_OFFSET  0x8
#define SM_BBRD_ARB_PRI_PRI2_SEL_MASK  0xf00
#define SM_BBRD_ARB_PRI_PRI2_SEL  0xf00
#define SM_BBRD_ARB_PRI_PRI1_SEL_OFFSET  0x4
#define SM_BBRD_ARB_PRI_PRI1_SEL_MASK  0xf0
#define SM_BBRD_ARB_PRI_PRI1_SEL  0xf0
#define SM_BBRD_ARB_PRI_PRI0_SEL_OFFSET  0x0
#define SM_BBRD_ARB_PRI_PRI0_SEL_MASK  0xf
#define SM_BBRD_ARB_PRI_PRI0_SEL  0xf
#define SM_BBWR_ARB_PRI_PRI7_SEL_OFFSET  0x1c
#define SM_BBWR_ARB_PRI_PRI7_SEL_MASK  0xf0000000
#define SM_BBWR_ARB_PRI_PRI7_SEL  0xf0000000
#define SM_BBWR_ARB_PRI_PRI6_SEL_OFFSET  0x18
#define SM_BBWR_ARB_PRI_PRI6_SEL_MASK  0xf000000
#define SM_BBWR_ARB_PRI_PRI6_SEL  0xf000000
#define SM_BBWR_ARB_PRI_PRI5_SEL_OFFSET  0x14
#define SM_BBWR_ARB_PRI_PRI5_SEL_MASK  0xf00000
#define SM_BBWR_ARB_PRI_PRI5_SEL  0xf00000
#define SM_BBWR_ARB_PRI_PRI4_SEL_OFFSET  0x10
#define SM_BBWR_ARB_PRI_PRI4_SEL_MASK  0xf0000
#define SM_BBWR_ARB_PRI_PRI4_SEL  0xf0000
#define SM_BBWR_ARB_PRI_PRI3_SEL_OFFSET  0xc
#define SM_BBWR_ARB_PRI_PRI3_SEL_MASK  0xf000
#define SM_BBWR_ARB_PRI_PRI3_SEL  0xf000
#define SM_BBWR_ARB_PRI_PRI2_SEL_OFFSET  0x8
#define SM_BBWR_ARB_PRI_PRI2_SEL_MASK  0xf00
#define SM_BBWR_ARB_PRI_PRI2_SEL  0xf00
#define SM_BBWR_ARB_PRI_PRI1_SEL_OFFSET  0x4
#define SM_BBWR_ARB_PRI_PRI1_SEL_MASK  0xf0
#define SM_BBWR_ARB_PRI_PRI1_SEL  0xf0
#define SM_BBWR_ARB_PRI_PRI0_SEL_OFFSET  0x0
#define SM_BBWR_ARB_PRI_PRI0_SEL_MASK  0xf
#define SM_BBWR_ARB_PRI_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM0_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM0_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM0_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM0_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM0_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM0_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM0_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM0_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM0_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM0_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM0_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM0_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM0_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM0_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM0_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM0_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM0_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM0_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM1_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM1_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM1_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM1_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM1_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM1_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM1_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM1_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM1_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM1_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM1_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM1_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM1_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM1_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM1_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM1_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM1_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM1_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM2_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM2_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM2_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM2_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM2_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM2_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM2_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM2_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM2_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM2_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM2_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM2_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM2_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM2_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM2_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM2_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM2_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM2_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM3_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM3_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM3_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM3_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM3_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM3_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM3_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM3_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM3_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM3_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM3_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM3_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM3_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM3_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM3_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM3_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM3_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM3_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM4_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM4_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM4_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM4_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM4_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM4_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM4_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM4_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM4_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM4_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM4_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM4_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM4_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM4_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM4_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM4_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM4_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM4_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM5_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM5_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM5_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM5_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM5_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM5_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM5_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM5_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM5_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM5_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM5_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM5_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM5_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM5_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM5_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM5_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM5_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM5_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM6_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM6_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM6_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM6_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM6_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM6_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM6_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM6_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM6_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM6_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM6_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM6_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM6_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM6_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM6_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM6_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM6_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM6_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM7_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM7_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM7_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM7_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM7_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM7_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM7_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM7_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM7_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM7_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM7_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM7_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM7_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM7_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM7_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM7_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM7_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM7_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM8_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM8_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM8_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM8_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM8_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM8_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM8_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM8_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM8_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM8_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM8_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM8_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM8_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM8_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM8_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM8_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM8_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM8_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM9_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM9_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM9_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM9_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM9_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM9_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM9_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM9_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM9_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM9_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM9_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM9_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM9_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM9_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM9_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM9_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM9_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM9_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM10_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM10_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM10_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM10_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM10_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM10_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM10_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM10_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM10_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM10_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM10_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM10_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM10_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM10_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM10_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM10_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM10_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM10_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM11_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM11_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM11_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM11_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM11_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM11_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM11_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM11_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM11_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM11_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM11_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM11_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM11_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM11_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM11_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM11_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM11_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM11_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM12_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM12_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM12_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM12_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM12_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM12_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM12_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM12_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM12_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM12_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM12_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM12_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM12_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM12_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM12_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM12_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM12_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM12_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM13_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM13_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM13_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM13_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM13_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM13_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM13_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM13_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM13_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM13_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM13_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM13_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM13_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM13_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM13_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM13_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM13_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM13_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM14_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM14_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM14_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM14_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM14_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM14_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM14_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM14_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM14_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM14_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM14_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM14_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM14_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM14_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM14_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM14_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM14_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM14_PRI0_SEL  0xf
#define SM_SRAM_ARB_PRI_SRAM15_PRI5_SEL_OFFSET  0x14
#define SM_SRAM_ARB_PRI_SRAM15_PRI5_SEL_MASK  0xf00000
#define SM_SRAM_ARB_PRI_SRAM15_PRI5_SEL  0xf00000
#define SM_SRAM_ARB_PRI_SRAM15_PRI4_SEL_OFFSET  0x10
#define SM_SRAM_ARB_PRI_SRAM15_PRI4_SEL_MASK  0xf0000
#define SM_SRAM_ARB_PRI_SRAM15_PRI4_SEL  0xf0000
#define SM_SRAM_ARB_PRI_SRAM15_PRI3_SEL_OFFSET  0xc
#define SM_SRAM_ARB_PRI_SRAM15_PRI3_SEL_MASK  0xf000
#define SM_SRAM_ARB_PRI_SRAM15_PRI3_SEL  0xf000
#define SM_SRAM_ARB_PRI_SRAM15_PRI2_SEL_OFFSET  0x8
#define SM_SRAM_ARB_PRI_SRAM15_PRI2_SEL_MASK  0xf00
#define SM_SRAM_ARB_PRI_SRAM15_PRI2_SEL  0xf00
#define SM_SRAM_ARB_PRI_SRAM15_PRI1_SEL_OFFSET  0x4
#define SM_SRAM_ARB_PRI_SRAM15_PRI1_SEL_MASK  0xf0
#define SM_SRAM_ARB_PRI_SRAM15_PRI1_SEL  0xf0
#define SM_SRAM_ARB_PRI_SRAM15_PRI0_SEL_OFFSET  0x0
#define SM_SRAM_ARB_PRI_SRAM15_PRI0_SEL_MASK  0xf
#define SM_SRAM_ARB_PRI_SRAM15_PRI0_SEL  0xf
#define SM_CLKG_CTRL_SRAM15_CLKG_OFFSET  0xf
#define SM_CLKG_CTRL_SRAM15_CLKG_MASK  0x8000
#define SM_CLKG_CTRL_SRAM15_CLKG  0x8000
#define SM_CLKG_CTRL_SRAM14_CLKG_OFFSET  0xe
#define SM_CLKG_CTRL_SRAM14_CLKG_MASK  0x4000
#define SM_CLKG_CTRL_SRAM14_CLKG  0x4000
#define SM_CLKG_CTRL_SRAM13_CLKG_OFFSET  0xd
#define SM_CLKG_CTRL_SRAM13_CLKG_MASK  0x2000
#define SM_CLKG_CTRL_SRAM13_CLKG  0x2000
#define SM_CLKG_CTRL_SRAM12_CLKG_OFFSET  0xc
#define SM_CLKG_CTRL_SRAM12_CLKG_MASK  0x1000
#define SM_CLKG_CTRL_SRAM12_CLKG  0x1000
#define SM_CLKG_CTRL_SRAM11_CLKG_OFFSET  0xb
#define SM_CLKG_CTRL_SRAM11_CLKG_MASK  0x800
#define SM_CLKG_CTRL_SRAM11_CLKG  0x800
#define SM_CLKG_CTRL_SRAM10_CLKG_OFFSET  0xa
#define SM_CLKG_CTRL_SRAM10_CLKG_MASK  0x400
#define SM_CLKG_CTRL_SRAM10_CLKG  0x400
#define SM_CLKG_CTRL_SRAM9_CLKG_OFFSET  0x9
#define SM_CLKG_CTRL_SRAM9_CLKG_MASK  0x200
#define SM_CLKG_CTRL_SRAM9_CLKG  0x200
#define SM_CLKG_CTRL_SRAM8_CLKG_OFFSET  0x8
#define SM_CLKG_CTRL_SRAM8_CLKG_MASK  0x100
#define SM_CLKG_CTRL_SRAM8_CLKG  0x100
#define SM_CLKG_CTRL_SRAM7_CLKG_OFFSET  0x7
#define SM_CLKG_CTRL_SRAM7_CLKG_MASK  0x80
#define SM_CLKG_CTRL_SRAM7_CLKG  0x80
#define SM_CLKG_CTRL_SRAM6_CLKG_OFFSET  0x6
#define SM_CLKG_CTRL_SRAM6_CLKG_MASK  0x40
#define SM_CLKG_CTRL_SRAM6_CLKG  0x40
#define SM_CLKG_CTRL_SRAM5_CLKG_OFFSET  0x5
#define SM_CLKG_CTRL_SRAM5_CLKG_MASK  0x20
#define SM_CLKG_CTRL_SRAM5_CLKG  0x20
#define SM_CLKG_CTRL_SRAM4_CLKG_OFFSET  0x4
#define SM_CLKG_CTRL_SRAM4_CLKG_MASK  0x10
#define SM_CLKG_CTRL_SRAM4_CLKG  0x10
#define SM_CLKG_CTRL_SRAM3_CLKG_OFFSET  0x3
#define SM_CLKG_CTRL_SRAM3_CLKG_MASK  0x8
#define SM_CLKG_CTRL_SRAM3_CLKG  0x8
#define SM_CLKG_CTRL_SRAM2_CLKG_OFFSET  0x2
#define SM_CLKG_CTRL_SRAM2_CLKG_MASK  0x4
#define SM_CLKG_CTRL_SRAM2_CLKG  0x4
#define SM_CLKG_CTRL_SRAM1_CLKG_OFFSET  0x1
#define SM_CLKG_CTRL_SRAM1_CLKG_MASK  0x2
#define SM_CLKG_CTRL_SRAM1_CLKG  0x2
#define SM_CLKG_CTRL_SRAM0_CLKG_OFFSET  0x0
#define SM_CLKG_CTRL_SRAM0_CLKG_MASK  0x1
#define SM_CLKG_CTRL_SRAM0_CLKG  0x1
#define SM_SRST_CTRL_SRST_OFFSET  0x0
#define SM_SRST_CTRL_SRST_MASK  0x1
#define SM_SRST_CTRL_SRST  0x1
#define SM_DBG0_SRAM15_ARB_PRI_CFG_ERR_OFFSET  0x11
#define SM_DBG0_SRAM15_ARB_PRI_CFG_ERR_MASK  0x20000
#define SM_DBG0_SRAM15_ARB_PRI_CFG_ERR  0x20000
#define SM_DBG0_SRAM14_ARB_PRI_CFG_ERR_OFFSET  0x10
#define SM_DBG0_SRAM14_ARB_PRI_CFG_ERR_MASK  0x10000
#define SM_DBG0_SRAM14_ARB_PRI_CFG_ERR  0x10000
#define SM_DBG0_SRAM13_ARB_PRI_CFG_ERR_OFFSET  0xf
#define SM_DBG0_SRAM13_ARB_PRI_CFG_ERR_MASK  0x8000
#define SM_DBG0_SRAM13_ARB_PRI_CFG_ERR  0x8000
#define SM_DBG0_SRAM12_ARB_PRI_CFG_ERR_OFFSET  0xe
#define SM_DBG0_SRAM12_ARB_PRI_CFG_ERR_MASK  0x4000
#define SM_DBG0_SRAM12_ARB_PRI_CFG_ERR  0x4000
#define SM_DBG0_SRAM11_ARB_PRI_CFG_ERR_OFFSET  0xd
#define SM_DBG0_SRAM11_ARB_PRI_CFG_ERR_MASK  0x2000
#define SM_DBG0_SRAM11_ARB_PRI_CFG_ERR  0x2000
#define SM_DBG0_SRAM10_ARB_PRI_CFG_ERR_OFFSET  0xc
#define SM_DBG0_SRAM10_ARB_PRI_CFG_ERR_MASK  0x1000
#define SM_DBG0_SRAM10_ARB_PRI_CFG_ERR  0x1000
#define SM_DBG0_SRAM9_ARB_PRI_CFG_ERR_OFFSET  0xb
#define SM_DBG0_SRAM9_ARB_PRI_CFG_ERR_MASK  0x800
#define SM_DBG0_SRAM9_ARB_PRI_CFG_ERR  0x800
#define SM_DBG0_SRAM8_ARB_PRI_CFG_ERR_OFFSET  0xa
#define SM_DBG0_SRAM8_ARB_PRI_CFG_ERR_MASK  0x400
#define SM_DBG0_SRAM8_ARB_PRI_CFG_ERR  0x400
#define SM_DBG0_SRAM7_ARB_PRI_CFG_ERR_OFFSET  0x9
#define SM_DBG0_SRAM7_ARB_PRI_CFG_ERR_MASK  0x200
#define SM_DBG0_SRAM7_ARB_PRI_CFG_ERR  0x200
#define SM_DBG0_SRAM6_ARB_PRI_CFG_ERR_OFFSET  0x8
#define SM_DBG0_SRAM6_ARB_PRI_CFG_ERR_MASK  0x100
#define SM_DBG0_SRAM6_ARB_PRI_CFG_ERR  0x100
#define SM_DBG0_SRAM5_ARB_PRI_CFG_ERR_OFFSET  0x7
#define SM_DBG0_SRAM5_ARB_PRI_CFG_ERR_MASK  0x80
#define SM_DBG0_SRAM5_ARB_PRI_CFG_ERR  0x80
#define SM_DBG0_SRAM4_ARB_PRI_CFG_ERR_OFFSET  0x6
#define SM_DBG0_SRAM4_ARB_PRI_CFG_ERR_MASK  0x40
#define SM_DBG0_SRAM4_ARB_PRI_CFG_ERR  0x40
#define SM_DBG0_SRAM3_ARB_PRI_CFG_ERR_OFFSET  0x5
#define SM_DBG0_SRAM3_ARB_PRI_CFG_ERR_MASK  0x20
#define SM_DBG0_SRAM3_ARB_PRI_CFG_ERR  0x20
#define SM_DBG0_SRAM2_ARB_PRI_CFG_ERR_OFFSET  0x4
#define SM_DBG0_SRAM2_ARB_PRI_CFG_ERR_MASK  0x10
#define SM_DBG0_SRAM2_ARB_PRI_CFG_ERR  0x10
#define SM_DBG0_SRAM1_ARB_PRI_CFG_ERR_OFFSET  0x3
#define SM_DBG0_SRAM1_ARB_PRI_CFG_ERR_MASK  0x8
#define SM_DBG0_SRAM1_ARB_PRI_CFG_ERR  0x8
#define SM_DBG0_SRAM0_ARB_PRI_CFG_ERR_OFFSET  0x2
#define SM_DBG0_SRAM0_ARB_PRI_CFG_ERR_MASK  0x4
#define SM_DBG0_SRAM0_ARB_PRI_CFG_ERR  0x4
#define SM_DBG0_BBWR_ARB_PRI_CFG_ERR_OFFSET  0x1
#define SM_DBG0_BBWR_ARB_PRI_CFG_ERR_MASK  0x2
#define SM_DBG0_BBWR_ARB_PRI_CFG_ERR  0x2
#define SM_DBG0_BBRD_ARB_PRI_CFG_ERR_OFFSET  0x0
#define SM_DBG0_BBRD_ARB_PRI_CFG_ERR_MASK  0x1
#define SM_DBG0_BBRD_ARB_PRI_CFG_ERR  0x1
#define SM_SRAM_TIM_CTRL_TEST1_OFFSET  0xe
#define SM_SRAM_TIM_CTRL_TEST1_MASK  0x4000
#define SM_SRAM_TIM_CTRL_TEST1  0x4000
#define SM_SRAM_TIM_CTRL_RA_OFFSET  0xc
#define SM_SRAM_TIM_CTRL_RA_MASK  0x3000
#define SM_SRAM_TIM_CTRL_RA  0x3000
#define SM_SRAM_TIM_CTRL_LS_OFFSET  0xb
#define SM_SRAM_TIM_CTRL_LS_MASK  0x800
#define SM_SRAM_TIM_CTRL_LS  0x800
#define SM_SRAM_TIM_CTRL_WA_OFFSET  0x8
#define SM_SRAM_TIM_CTRL_WA_MASK  0x700
#define SM_SRAM_TIM_CTRL_WA  0x700
#define SM_SRAM_TIM_CTRL_WPULSE_OFFSET  0x5
#define SM_SRAM_TIM_CTRL_WPULSE_MASK  0xe0
#define SM_SRAM_TIM_CTRL_WPULSE  0xe0
#define SM_SRAM_TIM_CTRL_RME_OFFSET  0x4
#define SM_SRAM_TIM_CTRL_RME_MASK  0x10
#define SM_SRAM_TIM_CTRL_RME  0x10
#define SM_SRAM_TIM_CTRL_RM_OFFSET  0x0
#define SM_SRAM_TIM_CTRL_RM_MASK  0xf
#define SM_SRAM_TIM_CTRL_RM  0xf
#define WRREG_CTRL0_ALWAYSON_RSVD0_OFFSET  0x0
#define WRREG_CTRL0_ALWAYSON_RSVD0_MASK  0xffffffff
#define WRREG_CTRL0_ALWAYSON_RSVD0  0xffffffff
#define WRREG_CTRL1_ALWAYSON_RSVD1_OFFSET  0x0
#define WRREG_CTRL1_ALWAYSON_RSVD1_MASK  0xffffffff
#define WRREG_CTRL1_ALWAYSON_RSVD1  0xffffffff
#define WRREG_CTRL2_ALWAYSON_RSVD2_OFFSET  0x0
#define WRREG_CTRL2_ALWAYSON_RSVD2_MASK  0xffffffff
#define WRREG_CTRL2_ALWAYSON_RSVD2  0xffffffff
#define WRREG_CTRL3_ALWAYSON_RSVD3_OFFSET  0x0
#define WRREG_CTRL3_ALWAYSON_RSVD3_MASK  0xffffffff
#define WRREG_CTRL3_ALWAYSON_RSVD3  0xffffffff
#define WRREG_CTRL4_TO_TISBYPASSIN_OFFSET  0x18
#define WRREG_CTRL4_TO_TISBYPASSIN_MASK  0xff000000
#define WRREG_CTRL4_TO_TISBYPASSIN  0xff000000
#define WRREG_CTRL4_TO_TINIDENSEL_OFFSET  0x10
#define WRREG_CTRL4_TO_TINIDENSEL_MASK  0xff0000
#define WRREG_CTRL4_TO_TINIDENSEL  0xff0000
#define WRREG_CTRL4_TO_TODBGENSEL_OFFSET  0xc
#define WRREG_CTRL4_TO_TODBGENSEL_MASK  0xf000
#define WRREG_CTRL4_TO_TODBGENSEL  0xf000
#define WRREG_CTRL4_TO_TIHSBYPASS7TO4_OFFSET  0x8
#define WRREG_CTRL4_TO_TIHSBYPASS7TO4_MASK  0xf00
#define WRREG_CTRL4_TO_TIHSBYPASS7TO4  0xf00
#define WRREG_CTRL4_TO_TISBYPASSACK_OFFSET  0x4
#define WRREG_CTRL4_TO_TISBYPASSACK_MASK  0xf0
#define WRREG_CTRL4_TO_TISBYPASSACK  0xf0
#define WRREG_CTRL4_TO_LOCKNSMPU1_OFFSET  0x2
#define WRREG_CTRL4_TO_LOCKNSMPU1_MASK  0x4
#define WRREG_CTRL4_TO_LOCKNSMPU1  0x4
#define WRREG_CTRL4_TO_LOCKNSVTOR1_OFFSET  0x1
#define WRREG_CTRL4_TO_LOCKNSVTOR1_MASK  0x2
#define WRREG_CTRL4_TO_LOCKNSVTOR1  0x2
#define WRREG_CTRL4_TO_SYSSYNCHCLAMPREADY_OFFSET  0x0
#define WRREG_CTRL4_TO_SYSSYNCHCLAMPREADY_MASK  0x1
#define WRREG_CTRL4_TO_SYSSYNCHCLAMPREADY  0x1
#define WRREG_CTRL5_TAHITI_DIG_RSVD1_OFFSET  0x0
#define WRREG_CTRL5_TAHITI_DIG_RSVD1_MASK  0xffffffff
#define WRREG_CTRL5_TAHITI_DIG_RSVD1  0xffffffff
#define WRREG_CTRL6_TAHITI_DIG_RSVD2_OFFSET  0x0
#define WRREG_CTRL6_TAHITI_DIG_RSVD2_MASK  0xffffffff
#define WRREG_CTRL6_TAHITI_DIG_RSVD2  0xffffffff
#define WRREG_CTRL7_TAHITI_DIG_RSVD3_OFFSET  0x0
#define WRREG_CTRL7_TAHITI_DIG_RSVD3_MASK  0xffffffff
#define WRREG_CTRL7_TAHITI_DIG_RSVD3  0xffffffff
#define I3C_CTRL_TO_I3C_SLV_TEST_MODE_OFFSET  0x13
#define I3C_CTRL_TO_I3C_SLV_TEST_MODE_MASK  0x80000
#define I3C_CTRL_TO_I3C_SLV_TEST_MODE  0x80000
#define I3C_CTRL_TO_I3C_MODE_I2C_OFFSET  0x12
#define I3C_CTRL_TO_I3C_MODE_I2C_MASK  0x40000
#define I3C_CTRL_TO_I3C_MODE_I2C  0x40000
#define I3C_CTRL_TO_I3C_ACT_MODE_OFFSET  0x10
#define I3C_CTRL_TO_I3C_ACT_MODE_MASK  0x30000
#define I3C_CTRL_TO_I3C_ACT_MODE  0x30000
#define I3C_CTRL_TO_I3C_PENDING_INT_OFFSET  0xc
#define I3C_CTRL_TO_I3C_PENDING_INT_MASK  0xf000
#define I3C_CTRL_TO_I3C_PENDING_INT  0xf000
#define I3C_CTRL_TO_I3C_STATIC_ADDR_EN_OFFSET  0xb
#define I3C_CTRL_TO_I3C_STATIC_ADDR_EN_MASK  0x800
#define I3C_CTRL_TO_I3C_STATIC_ADDR_EN  0x800
#define I3C_CTRL_TO_I3C_STATIC_ADDR_OFFSET  0x4
#define I3C_CTRL_TO_I3C_STATIC_ADDR_MASK  0x7f0
#define I3C_CTRL_TO_I3C_STATIC_ADDR  0x7f0
#define I3C_CTRL_TO_I3C_INST_ID_OFFSET  0x0
#define I3C_CTRL_TO_I3C_INST_ID_MASK  0xf
#define I3C_CTRL_TO_I3C_INST_ID  0xf
#define DMACH_CTRL_ADMA_CHNL_SEL_OFFSET  0x1f
#define DMACH_CTRL_ADMA_CHNL_SEL_MASK  0x80000000
#define DMACH_CTRL_ADMA_CHNL_SEL  0x80000000
#define DMACH_CTRL_TWS_MODE_OFFSET  0x1e
#define DMACH_CTRL_TWS_MODE_MASK  0x40000000
#define DMACH_CTRL_TWS_MODE  0x40000000
#define DMACH_CTRL_DAC_FIFO_START_THRD_OFFSET  0x18
#define DMACH_CTRL_DAC_FIFO_START_THRD_MASK  0x1f000000
#define DMACH_CTRL_DAC_FIFO_START_THRD  0x1f000000
#define DMACH_CTRL_ELK_TX_PORT7_SRC_SEL_OFFSET  0x14
#define DMACH_CTRL_ELK_TX_PORT7_SRC_SEL_MASK  0x700000
#define DMACH_CTRL_ELK_TX_PORT7_SRC_SEL  0x700000
#define DMACH_CTRL_ELK_TX_PORT6_SRC_SEL_OFFSET  0x10
#define DMACH_CTRL_ELK_TX_PORT6_SRC_SEL_MASK  0x70000
#define DMACH_CTRL_ELK_TX_PORT6_SRC_SEL  0x70000
#define DMACH_CTRL_ELK_TX_PORT5_SRC_SEL_OFFSET  0xc
#define DMACH_CTRL_ELK_TX_PORT5_SRC_SEL_MASK  0x7000
#define DMACH_CTRL_ELK_TX_PORT5_SRC_SEL  0x7000
#define DMACH_CTRL_ELK_TX_PORT4_SRC_SEL_OFFSET  0x8
#define DMACH_CTRL_ELK_TX_PORT4_SRC_SEL_MASK  0x700
#define DMACH_CTRL_ELK_TX_PORT4_SRC_SEL  0x700
#define DMACH_CTRL_DAC1_SRC_SEL_OFFSET  0x4
#define DMACH_CTRL_DAC1_SRC_SEL_MASK  0x70
#define DMACH_CTRL_DAC1_SRC_SEL  0x70
#define DMACH_CTRL_DAC0_SRC_SEL_OFFSET  0x0
#define DMACH_CTRL_DAC0_SRC_SEL_MASK  0x7
#define DMACH_CTRL_DAC0_SRC_SEL  0x7
#define I3C_SRAM_TIM_CTRL_TEST1_OFFSET  0xe
#define I3C_SRAM_TIM_CTRL_TEST1_MASK  0x4000
#define I3C_SRAM_TIM_CTRL_TEST1  0x4000
#define I3C_SRAM_TIM_CTRL_RA_OFFSET  0xc
#define I3C_SRAM_TIM_CTRL_RA_MASK  0x3000
#define I3C_SRAM_TIM_CTRL_RA  0x3000
#define I3C_SRAM_TIM_CTRL_LS_OFFSET  0xb
#define I3C_SRAM_TIM_CTRL_LS_MASK  0x800
#define I3C_SRAM_TIM_CTRL_LS  0x800
#define I3C_SRAM_TIM_CTRL_WA_OFFSET  0x8
#define I3C_SRAM_TIM_CTRL_WA_MASK  0x700
#define I3C_SRAM_TIM_CTRL_WA  0x700
#define I3C_SRAM_TIM_CTRL_WPULSE_OFFSET  0x5
#define I3C_SRAM_TIM_CTRL_WPULSE_MASK  0xe0
#define I3C_SRAM_TIM_CTRL_WPULSE  0xe0
#define I3C_SRAM_TIM_CTRL_RME_OFFSET  0x4
#define I3C_SRAM_TIM_CTRL_RME_MASK  0x10
#define I3C_SRAM_TIM_CTRL_RME  0x10
#define I3C_SRAM_TIM_CTRL_RM_OFFSET  0x0
#define I3C_SRAM_TIM_CTRL_RM_MASK  0xf
#define I3C_SRAM_TIM_CTRL_RM  0xf
#define I3C_DBGL_I3C_DBGL_OFFSET  0x0
#define I3C_DBGL_I3C_DBGL_MASK  0xffffffff
#define I3C_DBGL_I3C_DBGL  0xffffffff
#define I3C_DBGH_I3C_DBGH_OFFSET  0x0
#define I3C_DBGH_I3C_DBGH_MASK  0xffff
#define I3C_DBGH_I3C_DBGH  0xffff
#define APB_ST_APB_ST_OFFSET  0x0
#define APB_ST_APB_ST_MASK  0x1
#define APB_ST_APB_ST  0x1
#define RO_REG00_RO_TAHITI_DIG_RSVD00_OFFSET  0x7
#define RO_REG00_RO_TAHITI_DIG_RSVD00_MASK  0xffffff80
#define RO_REG00_RO_TAHITI_DIG_RSVD00  0xffffff80
#define RO_REG00_FROM_SECRESPCFG_OFFSET  0x6
#define RO_REG00_FROM_SECRESPCFG_MASK  0x40
#define RO_REG00_FROM_SECRESPCFG  0x40
#define RO_REG00_FROM_SYSSYNCHCLAMPRETOFFHIGH_OFFSET  0x5
#define RO_REG00_FROM_SYSSYNCHCLAMPRETOFFHIGH_MASK  0x20
#define RO_REG00_FROM_SYSSYNCHCLAMPRETOFFHIGH  0x20
#define RO_REG00_FROM_SYSSYNCHCLAMPRETOFFLOW_OFFSET  0x4
#define RO_REG00_FROM_SYSSYNCHCLAMPRETOFFLOW_MASK  0x10
#define RO_REG00_FROM_SYSSYNCHCLAMPRETOFFLOW  0x10
#define RO_REG00_FROM_SYSSYNCHCLAMPOFFHIGH_OFFSET  0x3
#define RO_REG00_FROM_SYSSYNCHCLAMPOFFHIGH_MASK  0x8
#define RO_REG00_FROM_SYSSYNCHCLAMPOFFHIGH  0x8
#define RO_REG00_FROM_SYSSYNCHCLAMPOFFLOW_OFFSET  0x2
#define RO_REG00_FROM_SYSSYNCHCLAMPOFFLOW_MASK  0x4
#define RO_REG00_FROM_SYSSYNCHCLAMPOFFLOW  0x4
#define RO_REG00_FROM_CPU0TRCENA_OFFSET  0x1
#define RO_REG00_FROM_CPU0TRCENA_MASK  0x2
#define RO_REG00_FROM_CPU0TRCENA  0x2
#define RO_REG00_FROM_CPU1TRCENA_OFFSET  0x0
#define RO_REG00_FROM_CPU1TRCENA_MASK  0x1
#define RO_REG00_FROM_CPU1TRCENA  0x1
#define RO_REG01_RO_TAHITI_DIG_RSVD01_OFFSET  0x0
#define RO_REG01_RO_TAHITI_DIG_RSVD01_MASK  0xffffffff
#define RO_REG01_RO_TAHITI_DIG_RSVD01  0xffffffff
#define RO_REG02_RO_TAHITI_DIG_RSVD01_OFFSET  0x0
#define RO_REG02_RO_TAHITI_DIG_RSVD01_MASK  0xffffffff
#define RO_REG02_RO_TAHITI_DIG_RSVD01  0xffffffff
#define RO_REG03_RO_TAHITI_DIG_RSVD03_OFFSET  0x0
#define RO_REG03_RO_TAHITI_DIG_RSVD03_MASK  0xffffffff
#define RO_REG03_RO_TAHITI_DIG_RSVD03  0xffffffff
#define RO_REG10_RO_TAHITI_DIG_RSVD10_OFFSET  0x4
#define RO_REG10_RO_TAHITI_DIG_RSVD10_MASK  0xfffffff0
#define RO_REG10_RO_TAHITI_DIG_RSVD10  0xfffffff0
#define RO_REG10_BOND_OPTION_OFFSET  0x0
#define RO_REG10_BOND_OPTION_MASK  0xf
#define RO_REG10_BOND_OPTION  0xf
#define RO_REG11_TAHITI_VERSION_ID_OFFSET  0x0
#define RO_REG11_TAHITI_VERSION_ID_MASK  0xffffffff
#define RO_REG11_TAHITI_VERSION_ID  0xffffffff
#define RO_REG12_TAHITI_DEVICE_ID_OFFSET  0x0
#define RO_REG12_TAHITI_DEVICE_ID_MASK  0xffffffff
#define RO_REG12_TAHITI_DEVICE_ID  0xffffffff
#define RO_REG13_RO_TAHITI_DIG_RSVD13_OFFSET  0x0
#define RO_REG13_RO_TAHITI_DIG_RSVD13_MASK  0xffffffff
#define RO_REG13_RO_TAHITI_DIG_RSVD13  0xffffffff
#define ISP_CTRL0_ISP_HEND_OFFSET  0x10
#define ISP_CTRL0_ISP_HEND_MASK  0xffff0000
#define ISP_CTRL0_ISP_HEND  0xffff0000
#define ISP_CTRL0_ISP_HSTART_OFFSET  0x0
#define ISP_CTRL0_ISP_HSTART_MASK  0xffff
#define ISP_CTRL0_ISP_HSTART  0xffff
#define ISP_CTRL1_ISP_VEND_OFFSET  0x10
#define ISP_CTRL1_ISP_VEND_MASK  0xffff0000
#define ISP_CTRL1_ISP_VEND  0xffff0000
#define ISP_CTRL1_ISP_VSTART_OFFSET  0x0
#define ISP_CTRL1_ISP_VSTART_MASK  0xffff
#define ISP_CTRL1_ISP_VSTART  0xffff
#define ISP_CTRL2_ISP_EOB_ENABLE_OFFSET  0xe
#define ISP_CTRL2_ISP_EOB_ENABLE_MASK  0x4000
#define ISP_CTRL2_ISP_EOB_ENABLE  0x4000
#define ISP_CTRL2_ISP_BYTE_ORDER_OFFSET  0xd
#define ISP_CTRL2_ISP_BYTE_ORDER_MASK  0x2000
#define ISP_CTRL2_ISP_BYTE_ORDER  0x2000
#define ISP_CTRL2_ISP_NIBBLE_ORDER_OFFSET  0xb
#define ISP_CTRL2_ISP_NIBBLE_ORDER_MASK  0x1800
#define ISP_CTRL2_ISP_NIBBLE_ORDER  0x1800
#define ISP_CTRL2_ISP_OR_I2S_OFFSET  0xa
#define ISP_CTRL2_ISP_OR_I2S_MASK  0x400
#define ISP_CTRL2_ISP_OR_I2S  0x400
#define ISP_CTRL2_ISP_FLUSH_SFT_OFFSET  0x9
#define ISP_CTRL2_ISP_FLUSH_SFT_MASK  0x200
#define ISP_CTRL2_ISP_FLUSH_SFT  0x200
#define ISP_CTRL2_ISP_FLUSH_FIFO_OFFSET  0x8
#define ISP_CTRL2_ISP_FLUSH_FIFO_MASK  0x100
#define ISP_CTRL2_ISP_FLUSH_FIFO  0x100
#define ISP_CTRL2_ISP_ENABLE_OFFSET  0x7
#define ISP_CTRL2_ISP_ENABLE_MASK  0x80
#define ISP_CTRL2_ISP_ENABLE  0x80
#define ISP_CTRL2_ISP_INV_HSYNC_HDE_OFFSET  0x6
#define ISP_CTRL2_ISP_INV_HSYNC_HDE_MASK  0x40
#define ISP_CTRL2_ISP_INV_HSYNC_HDE  0x40
#define ISP_CTRL2_ISP_INV_VSYNC_VDE_OFFSET  0x5
#define ISP_CTRL2_ISP_INV_VSYNC_VDE_MASK  0x20
#define ISP_CTRL2_ISP_INV_VSYNC_VDE  0x20
#define ISP_CTRL2_ISP_BIT_ORDER_OFFSET  0x4
#define ISP_CTRL2_ISP_BIT_ORDER_MASK  0x10
#define ISP_CTRL2_ISP_BIT_ORDER  0x10
#define ISP_CTRL2_ISP_BITWIDTH_OFFSET  0x2
#define ISP_CTRL2_ISP_BITWIDTH_MASK  0xc
#define ISP_CTRL2_ISP_BITWIDTH  0xc
#define ISP_CTRL2_ISP_MODE_OFFSET  0x0
#define ISP_CTRL2_ISP_MODE_MASK  0x3
#define ISP_CTRL2_ISP_MODE  0x3
#define ISP_STATE_ISP_FRAME_END_OFFSET  0x1b
#define ISP_STATE_ISP_FRAME_END_MASK  0x8000000
#define ISP_STATE_ISP_FRAME_END  0x8000000
#define ISP_STATE_ISP_RX_FIFO_FULL_OFFSET  0x1a
#define ISP_STATE_ISP_RX_FIFO_FULL_MASK  0x4000000
#define ISP_STATE_ISP_RX_FIFO_FULL  0x4000000
#define ISP_STATE_ISP_RX_FIFO_EMP_OFFSET  0x19
#define ISP_STATE_ISP_RX_FIFO_EMP_MASK  0x2000000
#define ISP_STATE_ISP_RX_FIFO_EMP  0x2000000
#define ISP_STATE_ISP_SHIFTER_FULL_OFFSET  0x18
#define ISP_STATE_ISP_SHIFTER_FULL_MASK  0x1000000
#define ISP_STATE_ISP_SHIFTER_FULL  0x1000000
#define ISP_STATE_ISP_SHIFTER_EMP_OFFSET  0x17
#define ISP_STATE_ISP_SHIFTER_EMP_MASK  0x800000
#define ISP_STATE_ISP_SHIFTER_EMP  0x800000
#define ISP_STATE_ISP_DATFLUSH_OFFSET  0x16
#define ISP_STATE_ISP_DATFLUSH_MASK  0x400000
#define ISP_STATE_ISP_DATFLUSH  0x400000
#define ISP_STATE_ISP_BITSCNT_OFFSET  0x10
#define ISP_STATE_ISP_BITSCNT_MASK  0x3f0000
#define ISP_STATE_ISP_BITSCNT  0x3f0000
#define ISP_STATE_ISP_FRAME_NUM_OFFSET  0x0
#define ISP_STATE_ISP_FRAME_NUM_MASK  0xffff
#define ISP_STATE_ISP_FRAME_NUM  0xffff
#define SYNC_CMD_CMD_OFFSET  0x0
#define SYNC_CMD_CMD_MASK  0x7
#define SYNC_CMD_CMD  0x7
#define SYNC_DATA_DATA_OFFSET  0x0
#define SYNC_DATA_DATA_MASK  0xffffffff
#define SYNC_DATA_DATA  0xffffffff
#define SYNC_FREE_CNT_SNAPSHOOT_FREE_CNT_SNAPSHOOT_OFFSET  0x0
#define SYNC_FREE_CNT_SNAPSHOOT_FREE_CNT_SNAPSHOOT_MASK  0xffffffff
#define SYNC_FREE_CNT_SNAPSHOOT_FREE_CNT_SNAPSHOOT  0xffffffff
#define SYNC_DLY_DLY_OFFSET  0x0
#define SYNC_DLY_DLY_MASK  0xffffffff
#define SYNC_DLY_DLY  0xffffffff
#define SYNC_FORCE_EVENT_SET_CPU_FORE_EVENT_SET_OFFSET  0x1c
#define SYNC_FORCE_EVENT_SET_CPU_FORE_EVENT_SET_MASK  0xf0000000
#define SYNC_FORCE_EVENT_SET_CPU_FORE_EVENT_SET  0xf0000000
#define SYNC_FORCE_EVENT_SET_I2S1_FORE_EVENT_SET_OFFSET  0x1b
#define SYNC_FORCE_EVENT_SET_I2S1_FORE_EVENT_SET_MASK  0x8000000
#define SYNC_FORCE_EVENT_SET_I2S1_FORE_EVENT_SET  0x8000000
#define SYNC_FORCE_EVENT_SET_I2S0_FORE_EVENT_SET_OFFSET  0x1a
#define SYNC_FORCE_EVENT_SET_I2S0_FORE_EVENT_SET_MASK  0x4000000
#define SYNC_FORCE_EVENT_SET_I2S0_FORE_EVENT_SET  0x4000000
#define SYNC_FORCE_EVENT_SET_ADMA_FORE_EVENT_SET_OFFSET  0xe
#define SYNC_FORCE_EVENT_SET_ADMA_FORE_EVENT_SET_MASK  0x3ffc000
#define SYNC_FORCE_EVENT_SET_ADMA_FORE_EVENT_SET  0x3ffc000
#define SYNC_FORCE_EVENT_SET_LLR1_FORE_EVENT_SET_OFFSET  0xd
#define SYNC_FORCE_EVENT_SET_LLR1_FORE_EVENT_SET_MASK  0x2000
#define SYNC_FORCE_EVENT_SET_LLR1_FORE_EVENT_SET  0x2000
#define SYNC_FORCE_EVENT_SET_LLR0_FORE_EVENT_SET_OFFSET  0xc
#define SYNC_FORCE_EVENT_SET_LLR0_FORE_EVENT_SET_MASK  0x1000
#define SYNC_FORCE_EVENT_SET_LLR0_FORE_EVENT_SET  0x1000
#define SYNC_FORCE_EVENT_SET_ADCLL_FORE_EVENT_SET_OFFSET  0x7
#define SYNC_FORCE_EVENT_SET_ADCLL_FORE_EVENT_SET_MASK  0xf80
#define SYNC_FORCE_EVENT_SET_ADCLL_FORE_EVENT_SET  0xf80
#define SYNC_FORCE_EVENT_SET_ADCLP_FORE_EVENT_SET_OFFSET  0x2
#define SYNC_FORCE_EVENT_SET_ADCLP_FORE_EVENT_SET_MASK  0x7c
#define SYNC_FORCE_EVENT_SET_ADCLP_FORE_EVENT_SET  0x7c
#define SYNC_FORCE_EVENT_SET_DAC_CLK_FORE_EVENT_SET_OFFSET  0x1
#define SYNC_FORCE_EVENT_SET_DAC_CLK_FORE_EVENT_SET_MASK  0x2
#define SYNC_FORCE_EVENT_SET_DAC_CLK_FORE_EVENT_SET  0x2
#define SYNC_FORCE_EVENT_SET_DAC_FORE_EVENT_SET_OFFSET  0x0
#define SYNC_FORCE_EVENT_SET_DAC_FORE_EVENT_SET_MASK  0x1
#define SYNC_FORCE_EVENT_SET_DAC_FORE_EVENT_SET  0x1
#define SYNC_EVENT_PULSE_CPU_EVENT_PULSE_OFFSET  0x1c
#define SYNC_EVENT_PULSE_CPU_EVENT_PULSE_MASK  0xf0000000
#define SYNC_EVENT_PULSE_CPU_EVENT_PULSE  0xf0000000
#define SYNC_EVENT_PULSE_I2S1_EVENT_PULSE_OFFSET  0x1b
#define SYNC_EVENT_PULSE_I2S1_EVENT_PULSE_MASK  0x8000000
#define SYNC_EVENT_PULSE_I2S1_EVENT_PULSE  0x8000000
#define SYNC_EVENT_PULSE_I2S0_EVENT_PULSE_OFFSET  0x1a
#define SYNC_EVENT_PULSE_I2S0_EVENT_PULSE_MASK  0x4000000
#define SYNC_EVENT_PULSE_I2S0_EVENT_PULSE  0x4000000
#define SYNC_EVENT_PULSE_ADMA_EVENT_PULSE_OFFSET  0xe
#define SYNC_EVENT_PULSE_ADMA_EVENT_PULSE_MASK  0x3ffc000
#define SYNC_EVENT_PULSE_ADMA_EVENT_PULSE  0x3ffc000
#define SYNC_EVENT_PULSE_LLR1_EVENT_PULSE_OFFSET  0xd
#define SYNC_EVENT_PULSE_LLR1_EVENT_PULSE_MASK  0x2000
#define SYNC_EVENT_PULSE_LLR1_EVENT_PULSE  0x2000
#define SYNC_EVENT_PULSE_LLR0_EVENT_PULSE_OFFSET  0xc
#define SYNC_EVENT_PULSE_LLR0_EVENT_PULSE_MASK  0x1000
#define SYNC_EVENT_PULSE_LLR0_EVENT_PULSE  0x1000
#define SYNC_EVENT_PULSE_ADCLL_EVENT_PULSE_OFFSET  0x7
#define SYNC_EVENT_PULSE_ADCLL_EVENT_PULSE_MASK  0xf80
#define SYNC_EVENT_PULSE_ADCLL_EVENT_PULSE  0xf80
#define SYNC_EVENT_PULSE_ADCLP_EVENT_PULSE_OFFSET  0x2
#define SYNC_EVENT_PULSE_ADCLP_EVENT_PULSE_MASK  0x7c
#define SYNC_EVENT_PULSE_ADCLP_EVENT_PULSE  0x7c
#define SYNC_EVENT_PULSE_DAC_CLK_EVENT_PULSE_OFFSET  0x1
#define SYNC_EVENT_PULSE_DAC_CLK_EVENT_PULSE_MASK  0x2
#define SYNC_EVENT_PULSE_DAC_CLK_EVENT_PULSE  0x2
#define SYNC_EVENT_PULSE_DAC_EVENT_PULSE_OFFSET  0x0
#define SYNC_EVENT_PULSE_DAC_EVENT_PULSE_MASK  0x1
#define SYNC_EVENT_PULSE_DAC_EVENT_PULSE  0x1
#define SYNC_EVENT_CDC_CPU_EVENT_CDC_OFFSET  0x1c
#define SYNC_EVENT_CDC_CPU_EVENT_CDC_MASK  0xf0000000
#define SYNC_EVENT_CDC_CPU_EVENT_CDC  0xf0000000
#define SYNC_EVENT_CDC_I2S1_EVENT_CDC_OFFSET  0x1b
#define SYNC_EVENT_CDC_I2S1_EVENT_CDC_MASK  0x8000000
#define SYNC_EVENT_CDC_I2S1_EVENT_CDC  0x8000000
#define SYNC_EVENT_CDC_I2S0_EVENT_CDC_OFFSET  0x1a
#define SYNC_EVENT_CDC_I2S0_EVENT_CDC_MASK  0x4000000
#define SYNC_EVENT_CDC_I2S0_EVENT_CDC  0x4000000
#define SYNC_EVENT_CDC_ADMA_EVENT_CDC_OFFSET  0xe
#define SYNC_EVENT_CDC_ADMA_EVENT_CDC_MASK  0x3ffc000
#define SYNC_EVENT_CDC_ADMA_EVENT_CDC  0x3ffc000
#define SYNC_EVENT_CDC_LLR1_EVENT_CDC_OFFSET  0xd
#define SYNC_EVENT_CDC_LLR1_EVENT_CDC_MASK  0x2000
#define SYNC_EVENT_CDC_LLR1_EVENT_CDC  0x2000
#define SYNC_EVENT_CDC_LLR0_EVENT_CDC_OFFSET  0xc
#define SYNC_EVENT_CDC_LLR0_EVENT_CDC_MASK  0x1000
#define SYNC_EVENT_CDC_LLR0_EVENT_CDC  0x1000
#define SYNC_EVENT_CDC_ADCLL_EVENT_CDC_OFFSET  0x7
#define SYNC_EVENT_CDC_ADCLL_EVENT_CDC_MASK  0xf80
#define SYNC_EVENT_CDC_ADCLL_EVENT_CDC  0xf80
#define SYNC_EVENT_CDC_ADCLP_EVENT_CDC_OFFSET  0x2
#define SYNC_EVENT_CDC_ADCLP_EVENT_CDC_MASK  0x7c
#define SYNC_EVENT_CDC_ADCLP_EVENT_CDC  0x7c
#define SYNC_EVENT_CDC_DAC_CLK_EVENT_CDC_OFFSET  0x1
#define SYNC_EVENT_CDC_DAC_CLK_EVENT_CDC_MASK  0x2
#define SYNC_EVENT_CDC_DAC_CLK_EVENT_CDC  0x2
#define SYNC_EVENT_CDC_DAC_EVENT_CDC_OFFSET  0x0
#define SYNC_EVENT_CDC_DAC_EVENT_CDC_MASK  0x1
#define SYNC_EVENT_CDC_DAC_EVENT_CDC  0x1
#define SYNC_CMP_MASK_CMP5_MASK_OFFSET  0x5
#define SYNC_CMP_MASK_CMP5_MASK_MASK  0x20
#define SYNC_CMP_MASK_CMP5_MASK  0x20
#define SYNC_CMP_MASK_CMP4_MASK_OFFSET  0x4
#define SYNC_CMP_MASK_CMP4_MASK_MASK  0x10
#define SYNC_CMP_MASK_CMP4_MASK  0x10
#define SYNC_CMP_MASK_CMP3_MASK_OFFSET  0x3
#define SYNC_CMP_MASK_CMP3_MASK_MASK  0x8
#define SYNC_CMP_MASK_CMP3_MASK  0x8
#define SYNC_CMP_MASK_CMP2_MASK_OFFSET  0x2
#define SYNC_CMP_MASK_CMP2_MASK_MASK  0x4
#define SYNC_CMP_MASK_CMP2_MASK  0x4
#define SYNC_CMP_MASK_CMP1_MASK_OFFSET  0x1
#define SYNC_CMP_MASK_CMP1_MASK_MASK  0x2
#define SYNC_CMP_MASK_CMP1_MASK  0x2
#define SYNC_CMP_MASK_CMP0_MASK_OFFSET  0x0
#define SYNC_CMP_MASK_CMP0_MASK_MASK  0x1
#define SYNC_CMP_MASK_CMP0_MASK  0x1
#define SYNC_CMP_0_CMP_OFFSET  0x0
#define SYNC_CMP_0_CMP_MASK  0xffffffff
#define SYNC_CMP_0_CMP  0xffffffff
#define SYNC_CMP_1_CMP_OFFSET  0x0
#define SYNC_CMP_1_CMP_MASK  0xffffffff
#define SYNC_CMP_1_CMP  0xffffffff
#define SYNC_CMP_2_CMP_OFFSET  0x0
#define SYNC_CMP_2_CMP_MASK  0xffffffff
#define SYNC_CMP_2_CMP  0xffffffff
#define SYNC_CMP_3_CMP_OFFSET  0x0
#define SYNC_CMP_3_CMP_MASK  0xffffffff
#define SYNC_CMP_3_CMP  0xffffffff
#define SYNC_CMP_4_CMP_OFFSET  0x0
#define SYNC_CMP_4_CMP_MASK  0xffffffff
#define SYNC_CMP_4_CMP  0xffffffff
#define SYNC_CMP_5_CMP_OFFSET  0x0
#define SYNC_CMP_5_CMP_MASK  0xffffffff
#define SYNC_CMP_5_CMP  0xffffffff
#define SYNC_EVENT_EN_0_CPU_EVENT_EN_OFFSET  0x1c
#define SYNC_EVENT_EN_0_CPU_EVENT_EN_MASK  0xf0000000
#define SYNC_EVENT_EN_0_CPU_EVENT_EN  0xf0000000
#define SYNC_EVENT_EN_0_I2S1_EVENT_EN_OFFSET  0x1b
#define SYNC_EVENT_EN_0_I2S1_EVENT_EN_MASK  0x8000000
#define SYNC_EVENT_EN_0_I2S1_EVENT_EN  0x8000000
#define SYNC_EVENT_EN_0_I2S0_EVENT_EN_OFFSET  0x1a
#define SYNC_EVENT_EN_0_I2S0_EVENT_EN_MASK  0x4000000
#define SYNC_EVENT_EN_0_I2S0_EVENT_EN  0x4000000
#define SYNC_EVENT_EN_0_ADMA_EVENT_EN_OFFSET  0xe
#define SYNC_EVENT_EN_0_ADMA_EVENT_EN_MASK  0x3ffc000
#define SYNC_EVENT_EN_0_ADMA_EVENT_EN  0x3ffc000
#define SYNC_EVENT_EN_0_LLR1_EVENT_EN_OFFSET  0xd
#define SYNC_EVENT_EN_0_LLR1_EVENT_EN_MASK  0x2000
#define SYNC_EVENT_EN_0_LLR1_EVENT_EN  0x2000
#define SYNC_EVENT_EN_0_LLR0_EVENT_EN_OFFSET  0xc
#define SYNC_EVENT_EN_0_LLR0_EVENT_EN_MASK  0x1000
#define SYNC_EVENT_EN_0_LLR0_EVENT_EN  0x1000
#define SYNC_EVENT_EN_0_ADCLL_EVENT_EN_OFFSET  0x7
#define SYNC_EVENT_EN_0_ADCLL_EVENT_EN_MASK  0xf80
#define SYNC_EVENT_EN_0_ADCLL_EVENT_EN  0xf80
#define SYNC_EVENT_EN_0_ADCLP_EVENT_EN_OFFSET  0x2
#define SYNC_EVENT_EN_0_ADCLP_EVENT_EN_MASK  0x7c
#define SYNC_EVENT_EN_0_ADCLP_EVENT_EN  0x7c
#define SYNC_EVENT_EN_0_DAC_CLK_EVENT_EN_OFFSET  0x1
#define SYNC_EVENT_EN_0_DAC_CLK_EVENT_EN_MASK  0x2
#define SYNC_EVENT_EN_0_DAC_CLK_EVENT_EN  0x2
#define SYNC_EVENT_EN_0_DAC_EVENT_EN_OFFSET  0x0
#define SYNC_EVENT_EN_0_DAC_EVENT_EN_MASK  0x1
#define SYNC_EVENT_EN_0_DAC_EVENT_EN  0x1
#define SYNC_EVENT_EN_1_CPU_EVENT_EN_OFFSET  0x1c
#define SYNC_EVENT_EN_1_CPU_EVENT_EN_MASK  0xf0000000
#define SYNC_EVENT_EN_1_CPU_EVENT_EN  0xf0000000
#define SYNC_EVENT_EN_1_I2S1_EVENT_EN_OFFSET  0x1b
#define SYNC_EVENT_EN_1_I2S1_EVENT_EN_MASK  0x8000000
#define SYNC_EVENT_EN_1_I2S1_EVENT_EN  0x8000000
#define SYNC_EVENT_EN_1_I2S0_EVENT_EN_OFFSET  0x1a
#define SYNC_EVENT_EN_1_I2S0_EVENT_EN_MASK  0x4000000
#define SYNC_EVENT_EN_1_I2S0_EVENT_EN  0x4000000
#define SYNC_EVENT_EN_1_ADMA_EVENT_EN_OFFSET  0xe
#define SYNC_EVENT_EN_1_ADMA_EVENT_EN_MASK  0x3ffc000
#define SYNC_EVENT_EN_1_ADMA_EVENT_EN  0x3ffc000
#define SYNC_EVENT_EN_1_LLR1_EVENT_EN_OFFSET  0xd
#define SYNC_EVENT_EN_1_LLR1_EVENT_EN_MASK  0x2000
#define SYNC_EVENT_EN_1_LLR1_EVENT_EN  0x2000
#define SYNC_EVENT_EN_1_LLR0_EVENT_EN_OFFSET  0xc
#define SYNC_EVENT_EN_1_LLR0_EVENT_EN_MASK  0x1000
#define SYNC_EVENT_EN_1_LLR0_EVENT_EN  0x1000
#define SYNC_EVENT_EN_1_ADCLL_EVENT_EN_OFFSET  0x7
#define SYNC_EVENT_EN_1_ADCLL_EVENT_EN_MASK  0xf80
#define SYNC_EVENT_EN_1_ADCLL_EVENT_EN  0xf80
#define SYNC_EVENT_EN_1_ADCLP_EVENT_EN_OFFSET  0x2
#define SYNC_EVENT_EN_1_ADCLP_EVENT_EN_MASK  0x7c
#define SYNC_EVENT_EN_1_ADCLP_EVENT_EN  0x7c
#define SYNC_EVENT_EN_1_DAC_CLK_EVENT_EN_OFFSET  0x1
#define SYNC_EVENT_EN_1_DAC_CLK_EVENT_EN_MASK  0x2
#define SYNC_EVENT_EN_1_DAC_CLK_EVENT_EN  0x2
#define SYNC_EVENT_EN_1_DAC_EVENT_EN_OFFSET  0x0
#define SYNC_EVENT_EN_1_DAC_EVENT_EN_MASK  0x1
#define SYNC_EVENT_EN_1_DAC_EVENT_EN  0x1
#define SYNC_EVENT_EN_2_CPU_EVENT_EN_OFFSET  0x1c
#define SYNC_EVENT_EN_2_CPU_EVENT_EN_MASK  0xf0000000
#define SYNC_EVENT_EN_2_CPU_EVENT_EN  0xf0000000
#define SYNC_EVENT_EN_2_I2S1_EVENT_EN_OFFSET  0x1b
#define SYNC_EVENT_EN_2_I2S1_EVENT_EN_MASK  0x8000000
#define SYNC_EVENT_EN_2_I2S1_EVENT_EN  0x8000000
#define SYNC_EVENT_EN_2_I2S0_EVENT_EN_OFFSET  0x1a
#define SYNC_EVENT_EN_2_I2S0_EVENT_EN_MASK  0x4000000
#define SYNC_EVENT_EN_2_I2S0_EVENT_EN  0x4000000
#define SYNC_EVENT_EN_2_ADMA_EVENT_EN_OFFSET  0xe
#define SYNC_EVENT_EN_2_ADMA_EVENT_EN_MASK  0x3ffc000
#define SYNC_EVENT_EN_2_ADMA_EVENT_EN  0x3ffc000
#define SYNC_EVENT_EN_2_LLR1_EVENT_EN_OFFSET  0xd
#define SYNC_EVENT_EN_2_LLR1_EVENT_EN_MASK  0x2000
#define SYNC_EVENT_EN_2_LLR1_EVENT_EN  0x2000
#define SYNC_EVENT_EN_2_LLR0_EVENT_EN_OFFSET  0xc
#define SYNC_EVENT_EN_2_LLR0_EVENT_EN_MASK  0x1000
#define SYNC_EVENT_EN_2_LLR0_EVENT_EN  0x1000
#define SYNC_EVENT_EN_2_ADCLL_EVENT_EN_OFFSET  0x7
#define SYNC_EVENT_EN_2_ADCLL_EVENT_EN_MASK  0xf80
#define SYNC_EVENT_EN_2_ADCLL_EVENT_EN  0xf80
#define SYNC_EVENT_EN_2_ADCLP_EVENT_EN_OFFSET  0x2
#define SYNC_EVENT_EN_2_ADCLP_EVENT_EN_MASK  0x7c
#define SYNC_EVENT_EN_2_ADCLP_EVENT_EN  0x7c
#define SYNC_EVENT_EN_2_DAC_CLK_EVENT_EN_OFFSET  0x1
#define SYNC_EVENT_EN_2_DAC_CLK_EVENT_EN_MASK  0x2
#define SYNC_EVENT_EN_2_DAC_CLK_EVENT_EN  0x2
#define SYNC_EVENT_EN_2_DAC_EVENT_EN_OFFSET  0x0
#define SYNC_EVENT_EN_2_DAC_EVENT_EN_MASK  0x1
#define SYNC_EVENT_EN_2_DAC_EVENT_EN  0x1
#define SYNC_EVENT_EN_3_CPU_EVENT_EN_OFFSET  0x1c
#define SYNC_EVENT_EN_3_CPU_EVENT_EN_MASK  0xf0000000
#define SYNC_EVENT_EN_3_CPU_EVENT_EN  0xf0000000
#define SYNC_EVENT_EN_3_I2S1_EVENT_EN_OFFSET  0x1b
#define SYNC_EVENT_EN_3_I2S1_EVENT_EN_MASK  0x8000000
#define SYNC_EVENT_EN_3_I2S1_EVENT_EN  0x8000000
#define SYNC_EVENT_EN_3_I2S0_EVENT_EN_OFFSET  0x1a
#define SYNC_EVENT_EN_3_I2S0_EVENT_EN_MASK  0x4000000
#define SYNC_EVENT_EN_3_I2S0_EVENT_EN  0x4000000
#define SYNC_EVENT_EN_3_ADMA_EVENT_EN_OFFSET  0xe
#define SYNC_EVENT_EN_3_ADMA_EVENT_EN_MASK  0x3ffc000
#define SYNC_EVENT_EN_3_ADMA_EVENT_EN  0x3ffc000
#define SYNC_EVENT_EN_3_LLR1_EVENT_EN_OFFSET  0xd
#define SYNC_EVENT_EN_3_LLR1_EVENT_EN_MASK  0x2000
#define SYNC_EVENT_EN_3_LLR1_EVENT_EN  0x2000
#define SYNC_EVENT_EN_3_LLR0_EVENT_EN_OFFSET  0xc
#define SYNC_EVENT_EN_3_LLR0_EVENT_EN_MASK  0x1000
#define SYNC_EVENT_EN_3_LLR0_EVENT_EN  0x1000
#define SYNC_EVENT_EN_3_ADCLL_EVENT_EN_OFFSET  0x7
#define SYNC_EVENT_EN_3_ADCLL_EVENT_EN_MASK  0xf80
#define SYNC_EVENT_EN_3_ADCLL_EVENT_EN  0xf80
#define SYNC_EVENT_EN_3_ADCLP_EVENT_EN_OFFSET  0x2
#define SYNC_EVENT_EN_3_ADCLP_EVENT_EN_MASK  0x7c
#define SYNC_EVENT_EN_3_ADCLP_EVENT_EN  0x7c
#define SYNC_EVENT_EN_3_DAC_CLK_EVENT_EN_OFFSET  0x1
#define SYNC_EVENT_EN_3_DAC_CLK_EVENT_EN_MASK  0x2
#define SYNC_EVENT_EN_3_DAC_CLK_EVENT_EN  0x2
#define SYNC_EVENT_EN_3_DAC_EVENT_EN_OFFSET  0x0
#define SYNC_EVENT_EN_3_DAC_EVENT_EN_MASK  0x1
#define SYNC_EVENT_EN_3_DAC_EVENT_EN  0x1
#define SYNC_EVENT_EN_4_CPU_EVENT_EN_OFFSET  0x1c
#define SYNC_EVENT_EN_4_CPU_EVENT_EN_MASK  0xf0000000
#define SYNC_EVENT_EN_4_CPU_EVENT_EN  0xf0000000
#define SYNC_EVENT_EN_4_I2S1_EVENT_EN_OFFSET  0x1b
#define SYNC_EVENT_EN_4_I2S1_EVENT_EN_MASK  0x8000000
#define SYNC_EVENT_EN_4_I2S1_EVENT_EN  0x8000000
#define SYNC_EVENT_EN_4_I2S0_EVENT_EN_OFFSET  0x1a
#define SYNC_EVENT_EN_4_I2S0_EVENT_EN_MASK  0x4000000
#define SYNC_EVENT_EN_4_I2S0_EVENT_EN  0x4000000
#define SYNC_EVENT_EN_4_ADMA_EVENT_EN_OFFSET  0xe
#define SYNC_EVENT_EN_4_ADMA_EVENT_EN_MASK  0x3ffc000
#define SYNC_EVENT_EN_4_ADMA_EVENT_EN  0x3ffc000
#define SYNC_EVENT_EN_4_LLR1_EVENT_EN_OFFSET  0xd
#define SYNC_EVENT_EN_4_LLR1_EVENT_EN_MASK  0x2000
#define SYNC_EVENT_EN_4_LLR1_EVENT_EN  0x2000
#define SYNC_EVENT_EN_4_LLR0_EVENT_EN_OFFSET  0xc
#define SYNC_EVENT_EN_4_LLR0_EVENT_EN_MASK  0x1000
#define SYNC_EVENT_EN_4_LLR0_EVENT_EN  0x1000
#define SYNC_EVENT_EN_4_ADCLL_EVENT_EN_OFFSET  0x7
#define SYNC_EVENT_EN_4_ADCLL_EVENT_EN_MASK  0xf80
#define SYNC_EVENT_EN_4_ADCLL_EVENT_EN  0xf80
#define SYNC_EVENT_EN_4_ADCLP_EVENT_EN_OFFSET  0x2
#define SYNC_EVENT_EN_4_ADCLP_EVENT_EN_MASK  0x7c
#define SYNC_EVENT_EN_4_ADCLP_EVENT_EN  0x7c
#define SYNC_EVENT_EN_4_DAC_CLK_EVENT_EN_OFFSET  0x1
#define SYNC_EVENT_EN_4_DAC_CLK_EVENT_EN_MASK  0x2
#define SYNC_EVENT_EN_4_DAC_CLK_EVENT_EN  0x2
#define SYNC_EVENT_EN_4_DAC_EVENT_EN_OFFSET  0x0
#define SYNC_EVENT_EN_4_DAC_EVENT_EN_MASK  0x1
#define SYNC_EVENT_EN_4_DAC_EVENT_EN  0x1
#define SYNC_EVENT_EN_5_CPU_EVENT_EN_OFFSET  0x1c
#define SYNC_EVENT_EN_5_CPU_EVENT_EN_MASK  0xf0000000
#define SYNC_EVENT_EN_5_CPU_EVENT_EN  0xf0000000
#define SYNC_EVENT_EN_5_I2S1_EVENT_EN_OFFSET  0x1b
#define SYNC_EVENT_EN_5_I2S1_EVENT_EN_MASK  0x8000000
#define SYNC_EVENT_EN_5_I2S1_EVENT_EN  0x8000000
#define SYNC_EVENT_EN_5_I2S0_EVENT_EN_OFFSET  0x1a
#define SYNC_EVENT_EN_5_I2S0_EVENT_EN_MASK  0x4000000
#define SYNC_EVENT_EN_5_I2S0_EVENT_EN  0x4000000
#define SYNC_EVENT_EN_5_ADMA_EVENT_EN_OFFSET  0xe
#define SYNC_EVENT_EN_5_ADMA_EVENT_EN_MASK  0x3ffc000
#define SYNC_EVENT_EN_5_ADMA_EVENT_EN  0x3ffc000
#define SYNC_EVENT_EN_5_LLR1_EVENT_EN_OFFSET  0xd
#define SYNC_EVENT_EN_5_LLR1_EVENT_EN_MASK  0x2000
#define SYNC_EVENT_EN_5_LLR1_EVENT_EN  0x2000
#define SYNC_EVENT_EN_5_LLR0_EVENT_EN_OFFSET  0xc
#define SYNC_EVENT_EN_5_LLR0_EVENT_EN_MASK  0x1000
#define SYNC_EVENT_EN_5_LLR0_EVENT_EN  0x1000
#define SYNC_EVENT_EN_5_ADCLL_EVENT_EN_OFFSET  0x7
#define SYNC_EVENT_EN_5_ADCLL_EVENT_EN_MASK  0xf80
#define SYNC_EVENT_EN_5_ADCLL_EVENT_EN  0xf80
#define SYNC_EVENT_EN_5_ADCLP_EVENT_EN_OFFSET  0x2
#define SYNC_EVENT_EN_5_ADCLP_EVENT_EN_MASK  0x7c
#define SYNC_EVENT_EN_5_ADCLP_EVENT_EN  0x7c
#define SYNC_EVENT_EN_5_DAC_CLK_EVENT_EN_OFFSET  0x1
#define SYNC_EVENT_EN_5_DAC_CLK_EVENT_EN_MASK  0x2
#define SYNC_EVENT_EN_5_DAC_CLK_EVENT_EN  0x2
#define SYNC_EVENT_EN_5_DAC_EVENT_EN_OFFSET  0x0
#define SYNC_EVENT_EN_5_DAC_EVENT_EN_MASK  0x1
#define SYNC_EVENT_EN_5_DAC_EVENT_EN  0x1
#define SYNC_CMP_MATCH_FLG_CMP5_MATCH_FLG_OFFSET  0x5
#define SYNC_CMP_MATCH_FLG_CMP5_MATCH_FLG_MASK  0x20
#define SYNC_CMP_MATCH_FLG_CMP5_MATCH_FLG  0x20
#define SYNC_CMP_MATCH_FLG_CMP4_MATCH_FLG_OFFSET  0x4
#define SYNC_CMP_MATCH_FLG_CMP4_MATCH_FLG_MASK  0x10
#define SYNC_CMP_MATCH_FLG_CMP4_MATCH_FLG  0x10
#define SYNC_CMP_MATCH_FLG_CMP3_MATCH_FLG_OFFSET  0x3
#define SYNC_CMP_MATCH_FLG_CMP3_MATCH_FLG_MASK  0x8
#define SYNC_CMP_MATCH_FLG_CMP3_MATCH_FLG  0x8
#define SYNC_CMP_MATCH_FLG_CMP2_MATCH_FLG_OFFSET  0x2
#define SYNC_CMP_MATCH_FLG_CMP2_MATCH_FLG_MASK  0x4
#define SYNC_CMP_MATCH_FLG_CMP2_MATCH_FLG  0x4
#define SYNC_CMP_MATCH_FLG_CMP1_MATCH_FLG_OFFSET  0x1
#define SYNC_CMP_MATCH_FLG_CMP1_MATCH_FLG_MASK  0x2
#define SYNC_CMP_MATCH_FLG_CMP1_MATCH_FLG  0x2
#define SYNC_CMP_MATCH_FLG_CMP0_MATCH_FLG_OFFSET  0x0
#define SYNC_CMP_MATCH_FLG_CMP0_MATCH_FLG_MASK  0x1
#define SYNC_CMP_MATCH_FLG_CMP0_MATCH_FLG  0x1
#define SYNC_CLR_EVENT_FLG_CPU_CLR_EVENT_FLG_OFFSET  0x1c
#define SYNC_CLR_EVENT_FLG_CPU_CLR_EVENT_FLG_MASK  0xf0000000
#define SYNC_CLR_EVENT_FLG_CPU_CLR_EVENT_FLG  0xf0000000
#define SYNC_CLR_EVENT_FLG_I2S1_CLR_EVENT_FLG_OFFSET  0x1b
#define SYNC_CLR_EVENT_FLG_I2S1_CLR_EVENT_FLG_MASK  0x8000000
#define SYNC_CLR_EVENT_FLG_I2S1_CLR_EVENT_FLG  0x8000000
#define SYNC_CLR_EVENT_FLG_I2S0_CLR_EVENT_FLG_OFFSET  0x1a
#define SYNC_CLR_EVENT_FLG_I2S0_CLR_EVENT_FLG_MASK  0x4000000
#define SYNC_CLR_EVENT_FLG_I2S0_CLR_EVENT_FLG  0x4000000
#define SYNC_CLR_EVENT_FLG_ADMA_CLR_EVENT_FLG_OFFSET  0xe
#define SYNC_CLR_EVENT_FLG_ADMA_CLR_EVENT_FLG_MASK  0x3ffc000
#define SYNC_CLR_EVENT_FLG_ADMA_CLR_EVENT_FLG  0x3ffc000
#define SYNC_CLR_EVENT_FLG_LLR1_CLR_EVENT_FLG_OFFSET  0xd
#define SYNC_CLR_EVENT_FLG_LLR1_CLR_EVENT_FLG_MASK  0x2000
#define SYNC_CLR_EVENT_FLG_LLR1_CLR_EVENT_FLG  0x2000
#define SYNC_CLR_EVENT_FLG_LLR0_CLR_EVENT_FLG_OFFSET  0xc
#define SYNC_CLR_EVENT_FLG_LLR0_CLR_EVENT_FLG_MASK  0x1000
#define SYNC_CLR_EVENT_FLG_LLR0_CLR_EVENT_FLG  0x1000
#define SYNC_CLR_EVENT_FLG_ADCLL_CLR_EVENT_FLG_OFFSET  0x7
#define SYNC_CLR_EVENT_FLG_ADCLL_CLR_EVENT_FLG_MASK  0xf80
#define SYNC_CLR_EVENT_FLG_ADCLL_CLR_EVENT_FLG  0xf80
#define SYNC_CLR_EVENT_FLG_ADCLP_CLR_EVENT_FLG_OFFSET  0x2
#define SYNC_CLR_EVENT_FLG_ADCLP_CLR_EVENT_FLG_MASK  0x7c
#define SYNC_CLR_EVENT_FLG_ADCLP_CLR_EVENT_FLG  0x7c
#define SYNC_CLR_EVENT_FLG_DAC_CLK_CLR_EVENT_FLG_OFFSET  0x1
#define SYNC_CLR_EVENT_FLG_DAC_CLK_CLR_EVENT_FLG_MASK  0x2
#define SYNC_CLR_EVENT_FLG_DAC_CLK_CLR_EVENT_FLG  0x2
#define SYNC_CLR_EVENT_FLG_DAC_CLR_EVENT_FLG_OFFSET  0x0
#define SYNC_CLR_EVENT_FLG_DAC_CLR_EVENT_FLG_MASK  0x1
#define SYNC_CLR_EVENT_FLG_DAC_CLR_EVENT_FLG  0x1
#define SYNC_EVENT_FLG_CPU_EVENT_FLG_OFFSET  0x1c
#define SYNC_EVENT_FLG_CPU_EVENT_FLG_MASK  0xf0000000
#define SYNC_EVENT_FLG_CPU_EVENT_FLG  0xf0000000
#define SYNC_EVENT_FLG_I2S1_EVENT_FLG_OFFSET  0x1b
#define SYNC_EVENT_FLG_I2S1_EVENT_FLG_MASK  0x8000000
#define SYNC_EVENT_FLG_I2S1_EVENT_FLG  0x8000000
#define SYNC_EVENT_FLG_I2S0_EVENT_FLG_OFFSET  0x1a
#define SYNC_EVENT_FLG_I2S0_EVENT_FLG_MASK  0x4000000
#define SYNC_EVENT_FLG_I2S0_EVENT_FLG  0x4000000
#define SYNC_EVENT_FLG_ADMA_EVENT_FLG_OFFSET  0xe
#define SYNC_EVENT_FLG_ADMA_EVENT_FLG_MASK  0x3ffc000
#define SYNC_EVENT_FLG_ADMA_EVENT_FLG  0x3ffc000
#define SYNC_EVENT_FLG_LLR1_EVENT_FLG_OFFSET  0xd
#define SYNC_EVENT_FLG_LLR1_EVENT_FLG_MASK  0x2000
#define SYNC_EVENT_FLG_LLR1_EVENT_FLG  0x2000
#define SYNC_EVENT_FLG_LLR0_EVENT_FLG_OFFSET  0xc
#define SYNC_EVENT_FLG_LLR0_EVENT_FLG_MASK  0x1000
#define SYNC_EVENT_FLG_LLR0_EVENT_FLG  0x1000
#define SYNC_EVENT_FLG_ADCLL_EVENT_FLG_OFFSET  0x7
#define SYNC_EVENT_FLG_ADCLL_EVENT_FLG_MASK  0xf80
#define SYNC_EVENT_FLG_ADCLL_EVENT_FLG  0xf80
#define SYNC_EVENT_FLG_ADCLP_EVENT_FLG_OFFSET  0x2
#define SYNC_EVENT_FLG_ADCLP_EVENT_FLG_MASK  0x7c
#define SYNC_EVENT_FLG_ADCLP_EVENT_FLG  0x7c
#define SYNC_EVENT_FLG_DAC_CLK_EVENT_FLG_OFFSET  0x1
#define SYNC_EVENT_FLG_DAC_CLK_EVENT_FLG_MASK  0x2
#define SYNC_EVENT_FLG_DAC_CLK_EVENT_FLG  0x2
#define SYNC_EVENT_FLG_DAC_EVENT_FLG_OFFSET  0x0
#define SYNC_EVENT_FLG_DAC_EVENT_FLG_MASK  0x1
#define SYNC_EVENT_FLG_DAC_EVENT_FLG  0x1
#define SYNC_CNT_FREE_SYNC_CNT_OFFSET  0x0
#define SYNC_CNT_FREE_SYNC_CNT_MASK  0xffffffff
#define SYNC_CNT_FREE_SYNC_CNT  0xffffffff


#endif /* _TAHITI_REGISTER_SPEC_B0_ASIP_H_ */
