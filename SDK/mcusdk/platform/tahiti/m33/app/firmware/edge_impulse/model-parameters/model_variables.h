/* Generated by Edge Impulse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef _EI_CLASSIFIER_MODEL_VARIABLES_H_
#define _EI_CLASSIFIER_MODEL_VARIABLES_H_

#include <stdint.h>
#include "model_metadata.h"
#include "edge-impulse-sdk/classifier/ei_model_types.h"
#include "edge-impulse-sdk/classifier/inferencing_engines/engines.h"
#include "edge-impulse-sdk/classifier/postprocessing/ei_postprocessing_common.h"

const char* ei_classifier_inferencing_categories[] = { "chair", "computer", "cup_mug", "pen", "person" };

uint8_t ei_dsp_config_22_axes[] = { 0 };
const uint8_t ei_dsp_config_22_axes_size = 1;
ei_dsp_config_image_t ei_dsp_config_22 = {
    22, // uint32_t blockId
    1, // int implementationVersion
    1, // int length of axes
    "RGB" // select channels
};

const uint8_t ei_dsp_blocks_size = 1;
ei_model_dsp_t ei_dsp_blocks[ei_dsp_blocks_size] = {
    { // DSP block 22
        22,
        12288,
        &extract_image_features,
        (void*)&ei_dsp_config_22,
        ei_dsp_config_22_axes,
        ei_dsp_config_22_axes_size
    }
};

const ei_config_tensaiflow_graph_t ei_config_tflite_graph_23 = {
    .implementation_version = 1,
    .input_datatype = EI_CLASSIFIER_DATATYPE_INT8,
    .input_quantized =  1,
    .input_scale = 0.003921568859368563,
    .input_zeropoint = -128,
    .output_datatype = EI_CLASSIFIER_DATATYPE_INT8,
    .output_quantized = 1,
    .output_scale = 0.00390625,
    .output_zeropoint = -128,
    .output_features_count = 5
};

const uint8_t ei_output_tensors_indices_23[1] = { 0 };
const uint8_t ei_output_tensors_size_23 = 1;
const ei_learning_block_config_tflite_graph_t ei_learning_block_config_23 = {
    .implementation_version = 1,
    .block_id = 23,
    .output_tensors_indices = ei_output_tensors_indices_23,
    .output_tensors_size = ei_output_tensors_size_23,
    .quantized = 1,
    .compiled = 0,
    .graph_config = (void*)&ei_config_tflite_graph_23
};

const uint8_t ei_learning_blocks_size = 1;
const uint32_t ei_learning_block_23_inputs[1] = { 22 };
const uint8_t ei_learning_block_23_inputs_size = 1;
const ei_learning_block_t ei_learning_blocks[ei_learning_blocks_size] = {
    {
        23,
        &run_nn_inference,
        (void*)&ei_learning_block_config_23,
        EI_CLASSIFIER_IMAGE_SCALING_NONE,
        ei_learning_block_23_inputs,
        ei_learning_block_23_inputs_size,
    },
};

const ei_fill_result_classification_i8_config_t ei_fill_result_classification_i8_config_23 = {
    .zero_point = -128,
    .scale = 0.00390625
};

const size_t ei_postprocessing_blocks_size = 1;
const ei_postprocessing_block_t ei_postprocessing_blocks[ei_postprocessing_blocks_size] = {
    {
        .block_id = 23,
        .type = EI_CLASSIFIER_MODE_CLASSIFICATION,
        .init_fn = NULL,
        .deinit_fn = NULL,
        .postprocess_fn = &process_classification_i8,
        .display_fn = NULL,
        .config = NULL,
        .input_block_id = 23
    },
};

const ei_impulse_t impulse_142_2 = {
    .project_id = 142,
    .project_owner = "Edge Impulse Profiling",
    .project_name = "Demo: Image Recognition",
    .impulse_id = 1,
    .impulse_name = "",
    .deploy_version = 2,

    .nn_input_frame_size = 12288,
    .raw_sample_count = 4096,
    .raw_samples_per_frame = 1,
    .dsp_input_frame_size = 4096 * 1,
    .input_width = 64,
    .input_height = 64,
    .input_frames = 1,
    .interval_ms = 1,
    .frequency = 0,

    .dsp_blocks_size = ei_dsp_blocks_size,
    .dsp_blocks = ei_dsp_blocks,

    .learning_blocks_size = ei_learning_blocks_size,
    .learning_blocks = ei_learning_blocks,

    .postprocessing_blocks_size = ei_postprocessing_blocks_size,
    .postprocessing_blocks = ei_postprocessing_blocks,

    .inferencing_engine = EI_CLASSIFIER_TENSAIFLOW,

    .sensor = EI_CLASSIFIER_SENSOR_CAMERA,
    .fusion_string = "image",
    .slice_size = (4096/4),
    .slices_per_model_window = 4,

    .has_anomaly = EI_ANOMALY_TYPE_UNKNOWN,
    .label_count = 5,
    .categories = ei_classifier_inferencing_categories
};

ei_impulse_handle_t impulse_handle = ei_impulse_handle_t( &impulse_142_2 );
ei_impulse_handle_t& ei_default_impulse = impulse_handle;

#endif // _EI_CLASSIFIER_MODEL_METADATA_H_
